{"version":3,"sources":["webpack:///webpack/bootstrap 7ce7ecce38bea82d3618","webpack:///external \"util\"","webpack:///./~/pg-promise/lib/utils/index.js","webpack:///external \"events\"","webpack:///external \"os\"","webpack:///./~/pg-promise/lib/formatting.js","webpack:///external \"path\"","webpack:///external \"stream\"","webpack:///external \"fs\"","webpack:///./~/mysql/lib/protocol/packets/index.js","webpack:///./~/pg-promise/lib/array.js","webpack:///./~/mysql/lib/protocol/sequences/Sequence.js","webpack:///./~/mysql/~/readable-stream/lib/_stream_duplex.js","webpack:///./~/core-util-is/lib/util.js","webpack:///./~/inherits/inherits.js","webpack:///./~/pg-promise/lib/events.js","webpack:///./~/pg-promise/lib/helpers/columnSet.js","webpack:///./~/pg-promise/lib/queryFile.js","webpack:///./~/pg-promise/~/pg/lib/defaults.js","webpack:///./~/es5-ext/object/primitive-set.js","webpack:///./~/es5-ext/object/valid-value.js","webpack:///./~/manakin/lib/index.js","webpack:///./~/mysql/lib/Connection.js","webpack:///./~/mysql/lib/protocol/constants/client.js","webpack:///./~/pg-promise/lib/errors/index.js","webpack:///./~/pg-promise/lib/errors/queryFile.js","webpack:///./~/pg-promise/lib/helpers/tableName.js","webpack:///./~/pg-types/index.js","webpack:///./~/spex/lib/utils/static.js","webpack:///external \"assert\"","webpack:///external \"buffer\"","webpack:///./~/es5-ext/array/from/index.js","webpack:///./~/es5-ext/object/normalize-options.js","webpack:///./~/mysql/lib/ConnectionConfig.js","webpack:///./~/mysql/lib/protocol/constants/types.js","webpack:///./~/pg-minify/lib/index.js","webpack:///./~/pg-promise/lib/result.js","webpack:///./~/pg-promise/~/pg/lib/utils.js","webpack:///external \"crypto\"","webpack:///external \"url\"","webpack:///./~/bindings","webpack:///./~/es5-ext/object/assign/index.js","webpack:///./~/es5-ext/object/is-callable.js","webpack:///./~/es5-ext/object/valid-callable.js","webpack:///./~/es5-ext/string/#/contains/index.js","webpack:///./~/es6-template-strings/compile.js","webpack:///./~/es6-template-strings/resolve-to-string.js","webpack:///./~/esniff/lib/ws-eol.js","webpack:///./~/mysql/index.js","webpack:///./~/mysql/lib/Pool.js","webpack:///./~/mysql/lib/PoolConfig.js","webpack:///./~/mysql/lib/PoolSelector.js","webpack:///./~/mysql/lib/protocol/Auth.js","webpack:///./~/mysql/lib/protocol/SqlString.js","webpack:///./~/mysql/lib/protocol/constants/charsets.js","webpack:///./~/mysql/lib/protocol/packets/Field.js","webpack:///./~/mysql/lib/protocol/sequences/Query.js","webpack:///./~/mysql/~/readable-stream/lib/_stream_readable.js","webpack:///./~/mysql/~/readable-stream/lib/_stream_transform.js","webpack:///./~/mysql/~/readable-stream/lib/_stream_writable.js","webpack:///./~/pg-minify/lib/error.js","webpack:///./~/pg-native/~/pg-types/lib/arrayParser.js","webpack:///./~/pg-promise/lib/adapter.js","webpack:///./~/pg-promise/lib/helpers/column.js","webpack:///./~/pg-promise/lib/index.js","webpack:///./~/pg-promise/lib/query.js","webpack:///./~/pg-promise/lib/special.js","webpack:///./~/pg-promise/lib/txMode.js","webpack:///./~/pg-promise/lib/types/index.js","webpack:///./~/pg-promise/lib/utils","webpack:///./~/pg-promise/~/pg/lib/connection-parameters.js","webpack:///./~/pg-promise/~/pg/lib/connection.js","webpack:///./~/pg-promise/~/pg/lib/native/index.js","webpack:///./~/pg-promise/~/pg/lib/type-overrides.js","webpack:///./~/pg-promise/package.json","webpack:///./~/pg-types/lib/arrayParser.js","webpack:///./~/postgres-array/index.js","webpack:///./~/spex/lib/errors/batch.js","webpack:///./~/spex/lib/errors/page.js","webpack:///./~/spex/lib/errors/sequence.js","webpack:///./~/string_decoder/index.js","webpack:///external \"net\"","webpack:///external \"tls\"","webpack:///./src/configService.ts","webpack:///./src/cycle.ts","webpack:///./~/commander/index.js","webpack:///./dbconfig.json","webpack:///./~/ap/index.js","webpack:///./src/db.ts","webpack:///./src/db/types/connMysql.ts","webpack:///./src/db/types/connPgSQL.ts","webpack:///./src/replace.ts","webpack:///./~/bignumber.js/bignumber.js","webpack:///./~/bindings/bindings.js","webpack:///./~/buffer-writer/index.js","webpack:///./~/d/index.js","webpack:///./~/es5-ext/array/from/is-implemented.js","webpack:///./~/es5-ext/array/from/shim.js","webpack:///./~/es5-ext/function/is-arguments.js","webpack:///./~/es5-ext/function/is-function.js","webpack:///./~/es5-ext/function/noop.js","webpack:///./~/es5-ext/math/sign/index.js","webpack:///./~/es5-ext/math/sign/is-implemented.js","webpack:///./~/es5-ext/math/sign/shim.js","webpack:///./~/es5-ext/number/to-integer.js","webpack:///./~/es5-ext/number/to-pos-integer.js","webpack:///./~/es5-ext/object/assign/is-implemented.js","webpack:///./~/es5-ext/object/assign/shim.js","webpack:///./~/es5-ext/object/keys/index.js","webpack:///./~/es5-ext/object/keys/is-implemented.js","webpack:///./~/es5-ext/object/keys/shim.js","webpack:///./~/es5-ext/string/#/contains/is-implemented.js","webpack:///./~/es5-ext/string/#/contains/shim.js","webpack:///./~/es5-ext/string/is-string.js","webpack:///./~/es6-symbol/index.js","webpack:///./~/es6-symbol/is-implemented.js","webpack:///./~/es6-symbol/is-symbol.js","webpack:///./~/es6-symbol/polyfill.js","webpack:///./~/es6-symbol/validate-symbol.js","webpack:///./~/es6-template-strings/index.js","webpack:///./~/es6-template-strings/passthru.js","webpack:///./~/es6-template-strings/resolve.js","webpack:///./~/esniff/index.js","webpack:///./~/esniff/is-var-name-valid.js","webpack:///./~/esniff/lib/ws-inline.js","webpack:///./~/esniff/lib/ws.js","webpack:///./~/esniff/~/d/index.js","webpack:///./~/generic-pool/lib/generic-pool.js","webpack:///./~/graceful-readlink/index.js","webpack:///./~/inherits/inherits_browser.js","webpack:///./~/libpq/index.js","webpack:///./~/manakin/lib/writer.js","webpack:///./~/mkdirp/index.js","webpack:///./~/mysql/lib/PoolCluster.js","webpack:///./~/mysql/lib/PoolConnection.js","webpack:///./~/mysql/lib/PoolNamespace.js","webpack:///./~/mysql/lib/protocol/BufferList.js","webpack:///./~/mysql/lib/protocol/PacketHeader.js","webpack:///./~/mysql/lib/protocol/PacketWriter.js","webpack:///./~/mysql/lib/protocol/Parser.js","webpack:///./~/mysql/lib/protocol/Protocol.js","webpack:///./~/mysql/lib/protocol/ResultSet.js","webpack:///./~/mysql/lib/protocol/constants/errors.js","webpack:///./~/mysql/lib/protocol/constants/server_status.js","webpack:///./~/mysql/lib/protocol/constants/ssl_profiles.js","webpack:///./~/mysql/lib/protocol/packets/ClientAuthenticationPacket.js","webpack:///./~/mysql/lib/protocol/packets/ComChangeUserPacket.js","webpack:///./~/mysql/lib/protocol/packets/ComPingPacket.js","webpack:///./~/mysql/lib/protocol/packets/ComQueryPacket.js","webpack:///./~/mysql/lib/protocol/packets/ComQuitPacket.js","webpack:///./~/mysql/lib/protocol/packets/ComStatisticsPacket.js","webpack:///./~/mysql/lib/protocol/packets/EmptyPacket.js","webpack:///./~/mysql/lib/protocol/packets/EofPacket.js","webpack:///./~/mysql/lib/protocol/packets/ErrorPacket.js","webpack:///./~/mysql/lib/protocol/packets/FieldPacket.js","webpack:///./~/mysql/lib/protocol/packets/HandshakeInitializationPacket.js","webpack:///./~/mysql/lib/protocol/packets/LocalDataFilePacket.js","webpack:///./~/mysql/lib/protocol/packets/OkPacket.js","webpack:///./~/mysql/lib/protocol/packets/OldPasswordPacket.js","webpack:///./~/mysql/lib/protocol/packets/ResultSetHeaderPacket.js","webpack:///./~/mysql/lib/protocol/packets/RowDataPacket.js","webpack:///./~/mysql/lib/protocol/packets/SSLRequestPacket.js","webpack:///./~/mysql/lib/protocol/packets/StatisticsPacket.js","webpack:///./~/mysql/lib/protocol/packets/UseOldPasswordPacket.js","webpack:///./~/mysql/lib/protocol/sequences/ChangeUser.js","webpack:///./~/mysql/lib/protocol/sequences/Handshake.js","webpack:///./~/mysql/lib/protocol/sequences/Ping.js","webpack:///./~/mysql/lib/protocol/sequences/Quit.js","webpack:///./~/mysql/lib/protocol/sequences/Statistics.js","webpack:///./~/mysql/lib/protocol/sequences/index.js","webpack:///./~/mysql/~/isarray/index.js","webpack:///./~/mysql/~/readable-stream/lib/_stream_passthrough.js","webpack:///./~/mysql/~/readable-stream/readable.js","webpack:///./~/packet-reader/index.js","webpack:///./~/pg-connection-string/index.js","webpack:///./~/pg-minify/lib/parser.js","webpack:///./~/pg-native/index.js","webpack:///./~/pg-native/lib/copy-stream.js","webpack:///./~/pg-native/~/pg-types/index.js","webpack:///./~/pg-native/~/pg-types/lib/binaryParsers.js","webpack:///./~/pg-native/~/pg-types/lib/textParsers.js","webpack:///./~/pg-native/package.json","webpack:///./~/pg-promise/lib/async.js","webpack:///./~/pg-promise/lib/cnContext.js","webpack:///./~/pg-promise/lib/connect.js","webpack:///./~/pg-promise/lib/database.js","webpack:///./~/pg-promise/lib/errors/paramQuery.js","webpack:///./~/pg-promise/lib/errors/prepared.js","webpack:///./~/pg-promise/lib/errors/queryResult.js","webpack:///./~/pg-promise/lib/helpers/index.js","webpack:///./~/pg-promise/lib/helpers/methods/concat.js","webpack:///./~/pg-promise/lib/helpers/methods/insert.js","webpack:///./~/pg-promise/lib/helpers/methods/sets.js","webpack:///./~/pg-promise/lib/helpers/methods/update.js","webpack:///./~/pg-promise/lib/helpers/methods/values.js","webpack:///./~/pg-promise/lib/main.js","webpack:///./~/pg-promise/lib/promise.js","webpack:///./~/pg-promise/lib/stream.js","webpack:///./~/pg-promise/lib/task.js","webpack:///./~/pg-promise/lib/types/parameterized.js","webpack:///./~/pg-promise/lib/types/prepared.js","webpack:///./~/pg-promise/lib/utils/public.js","webpack:///./~/pg-promise/~/pg/lib/client.js","webpack:///./~/pg-promise/~/pg/lib/index.js","webpack:///./~/pg-promise/~/pg/lib/native/query.js","webpack:///./~/pg-promise/~/pg/lib/native/result.js","webpack:///./~/pg-promise/~/pg/lib/pool.js","webpack:///./~/pg-promise/~/pg/lib/query.js","webpack:///./~/pg-promise/~/pg/lib/result.js","webpack:///./~/pg-promise/~/pg/package.json","webpack:///./~/pg-promise/~/pgpass/lib/helper.js","webpack:///./~/pg-promise/~/pgpass/lib/index.js","webpack:///./~/pg-promise/~/semver/semver.js","webpack:///./~/pg-types/lib/binaryParsers.js","webpack:///./~/pg-types/lib/textParsers.js","webpack:///./~/postgres-bytea/index.js","webpack:///./~/postgres-date/index.js","webpack:///./~/postgres-interval/index.js","webpack:///./~/spex/lib/adapter.js","webpack:///./~/spex/lib/errors/index.js","webpack:///./~/spex/lib/ext/batch.js","webpack:///./~/spex/lib/ext/page.js","webpack:///./~/spex/lib/ext/sequence.js","webpack:///./~/spex/lib/ext/stream/index.js","webpack:///./~/spex/lib/ext/stream/read.js","webpack:///./~/spex/lib/index.js","webpack:///./~/spex/lib/utils/index.js","webpack:///./~/split/index.js","webpack:///./~/sqlstring/index.js","webpack:///./~/sqlstring/lib/SqlString.js","webpack:///./~/through/index.js","webpack:///(webpack)/buildin/module.js","webpack:///./~/xtend/mutable.js","webpack:///external \"child_process\"","webpack:///external \"dns\"","webpack:///external \"string_decoder\"","webpack:///external \"timers\"","webpack:///./src/index.ts"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AChEA,iC;;;;;;;ACAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,EAAE;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;;;;;;ACxKA,mC;;;;;;ACAA,+B;;;;;;;ACAA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B,4GAA4G;AAC1I;AACA,0DAA0D,UAAU;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA,4CAA4C,IAAI;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,SAAS;AACvB,IAAI,2BAA2B;AAC/B;AACA,cAAc,SAAS;AACvB,IAAI,2BAA2B;AAC/B;AACA,cAAc,SAAS;AACvB,IAAI,+BAA+B;AACnC;AACA,cAAc,SAAS;AACvB,IAAI,+BAA+B;AACnC;AACA,cAAc,SAAS;AACvB,IAAI,6BAA6B;AACjC;AACA,cAAc,SAAS;AACvB,IAAI,2BAA2B;AAC/B;AACA,cAAc,SAAS;AACvB,IAAI,2BAA2B;AAC/B;AACA,cAAc,SAAS;AACvB,IAAI,+BAA+B;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,eAAe;AAC9B;AACA;AACA;AACA,sBAAsB,mCAAmC;AACzD;AACA,eAAe,QAAQ;AACvB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,6BAA6B;AAC5C;AACA;AACA;AACA;AACA,qEAAqE,mCAAmC;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,2BAA2B;AAC/E;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,MAAM,WAAW,IAAI,IAAI,IAAI;AAChE;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,eAAe;AAC9B;AACA;AACA,oEAAoE,mCAAmC;AACvG;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,eAAe;AAC9B;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qBAAqB;AACpC;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qCAAqC;AACzD;AACA,wDAAwD;AACxD,0BAA0B,gBAAgB;AAC1C;AACA,UAAU,2BAA2B;AACrC;AACA;AACA;AACA,wEAAwE,mCAAmC;AAC3G;AACA;AACA;AACA,4EAA4E,mCAAmC;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oBAAoB;AACnC;AACA;AACA;AACA;AACA,eAAe,mBAAmB;AAClC;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;ACxsBA,iC;;;;;;ACAA,mC;;;;;;ACAA,+B;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA,KAAK;AACL,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA,KAAK;AACL,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA,KAAK;AACL,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA,KAAK;AACL,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC7FA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B,uCAAuC;;AAEpE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AC/HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;;;;;AC1GA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;;;;;;;;ACNA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,uBAAuB,kBAAkB,aAAa;AAClG;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA,gBAAgB;AAChB,8EAA8E,eAAe;AAC7F;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF;AACnF,wBAAwB,aAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,uBAAuB;AAC/F,SAAS,aAAa;AACtB;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA,gBAAgB,6EAA6E,eAAe;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA,iFAAiF,wBAAwB;AACzG,QAAQ,4BAA4B,GAAG,wBAAwB,GAAG,sBAAsB,MAAM,8BAA8B;AAC5H;AACA,eAAe,cAAc;AAC7B;AACA,2BAA2B,wBAAwB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,8EAA8E,eAAe;AAC7F;AACA,eAAe,cAAc;AAC7B;AACA,2GAA2G;AAC3G,YAAY,4BAA4B;AACxC;AACA,eAAe,gBAAgB;AAC/B;AACA,uGAAuG;AACvG;AACA;AACA,gBAAgB;AAChB;AACA,kCAAkC,wBAAwB,GAAG,4BAA4B,MAAM,wBAAwB;AACvH;AACA;AACA,sEAAsE,wBAAwB;AAC9F;AACA,QAAQ,wBAAwB,MAAM,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,+CAA+C,eAAe;AAC9D;AACA,+CAA+C,sBAAsB,MAAM,8BAA8B;AACzG,QAAQ,wBAAwB,GAAG,4BAA4B,MAAM,wBAAwB;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA,iEAAiE,wBAAwB;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,iBAAiB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AChfA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4BAA4B;AACvC;AACA;AACA;AACA;AACA;AACA,0BAA0B,4BAA4B,mBAAmB,wCAAwC;AACjH;AACA;AACA,wHAAwH,4BAA4B;AACpJ,yBAAyB,uCAAuC,4BAA4B;AAC5F,kEAAkE,2BAA2B;AAC7F;AACA,kDAAkD,mCAAmC;AACrF;AACA,WAAW,OAAO;AAClB;AACA,WAAW,0BAA0B,cAAc;AACnD;AACA;AACA,2CAA2C,kCAAkC,gBAAgB,kCAAkC;AAC/H;AACA,8CAA8C,4BAA4B,MAAM,4BAA4B;AAC5G;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,IAAI,wCAAwC;AAC5C,IAAI,oCAAoC;AACxC,IAAI,oCAAoC;AACxC,IAAI,4CAA4C;AAChD,IAAI,sCAAsC;AAC1C,IAAI,oCAAoC;AACxC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C,gDAAgD;AAChD;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA,OAAO,QAAQ,sCAAsC;AACrD;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,qGAAqG,4BAA4B,MAAM;AACvI;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,iBAAiB,4BAA4B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,6BAA6B;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,6BAA6B;AACpE;AACA,cAAc,IAAI,GAAG,MAAM,UAAU;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,kCAAkC;AACxD;AACA;AACA;AACA,eAAe,uCAAuC;AACtD,+EAA+E,kCAAkC;AACjH,iCAAiC;AACjC;AACA;AACA,iBAAiB;AACjB,YAAY,kCAAkC;AAC9C;AACA;AACA,QAAQ,4BAA4B;AACpC,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,2DAA2D,kBAAkB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,kBAAkB;AACjF;;AAEA;AACA;AACA;AACA,sBAAsB,kCAAkC;AACxD;AACA;AACA;AACA,eAAe,uCAAuC;AACtD,+EAA+E,kCAAkC;AACjH,iCAAiC;AACjC;AACA;AACA;AACA,QAAQ,4BAA4B;AACpC,QAAQ;AACR;AACA,iBAAiB;AACjB,YAAY,kCAAkC;AAC9C;AACA;AACA;AACA;AACA;AACA,iEAAiE,kBAAkB;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT,oCAAoC,kBAAkB;AACtD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,wBAAwB;AACxB;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;ACvjBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8GAA8G;AAC9G,QAAQ,yBAAyB;AACjC;AACA,2EAA2E,2CAA2C;AACtH;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,mDAAmD,wBAAwB;AAC3E;AACA,aAAa;AACb;AACA;AACA,IAAI,2CAA2C;AAC/C,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD,uCAAuC,aAAa;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,uBAAuB;AAC/D;AACA;AACA,oDAAoD,cAAc;AAClE;AACA;AACA,wCAAwC,uBAAuB;AAC/D;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,sBAAsB,4BAA4B;AAClD;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,+CAA+C,2CAA2C;AAC1F;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,gDAAgD;AAChD;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,sDAAsD,gBAAgB;AACtE;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,eAAe;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,mBAAmB;AACjC;AACA,iFAAiF,kCAAkC;AACnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtUA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oFAAgF,YAAY,EAAE;AAC9F,CAAC;;;;;;;;AC3DD;;AAEA;;AAEA;AACA;AACA,0CAA0C,kBAAkB,EAAE;AAC9D;AACA;;;;;;;;ACRA;;AAEA;AACA;AACA;AACA;;;;;;;;ACLA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;;AAED;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,sCAAsC,sCAAsC;AAC5E;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AC9cA;AACA,qCAAqC;AACrC,qCAAqC;AACrC,qCAAqC;AACrC,qCAAqC;AACrC,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;AACtC,uCAAuC;AACvC,uCAAuC;AACvC,uCAAuC;AACvC,wCAAwC;AACxC,wCAAwC;AACxC,wCAAwC;AACxC,wCAAwC;AACxC,yCAAyC;AACzC,yCAAyC;;AAEzC,wCAAwC;AACxC,yCAAyC;AACzC,yCAAyC;;AAEzC,oCAAoC;;AAEpC;AACA;;;;;;;;ACzBA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,SAAS;AACvB,IAAI,2DAA2D;AAC/D;AACA,wDAAwD,wBAAwB;AAChF;AACA,cAAc,SAAS;AACvB,IAAI,6DAA6D;AACjE;AACA,wDAAwD,yBAAyB;AACjF;AACA,cAAc,SAAS;AACvB,IAAI,2CAA2C;AAC/C;AACA,wDAAwD,gBAAgB;AACxE;AACA,cAAc,SAAS;AACvB,IAAI,+CAA+C;AACnD;AACA;AACA;AACA,cAAc,4BAA4B;AAC1C,qCAAqC,+CAA+C;AACpF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC/CA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI,2CAA2C,gCAAgC,aAAa;AAC5F;AACA,+CAA+C,gBAAgB;AAC/D;AACA,cAAc,OAAO;AACrB,aAAa,2BAA2B;AACxC;AACA,cAAc,OAAO;AACrB,aAAa,2BAA2B;AACxC;AACA,cAAc,OAAO;AACrB,aAAa,2BAA2B;AACxC;AACA,cAAc,OAAO;AACrB,4CAA4C,gBAAgB;AAC5D;AACA,cAAc,OAAO;AACrB,wCAAwC,gBAAgB;AACxD;AACA,cAAc,gBAAgB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;AC9FA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uCAAuC,gBAAgB,UAAU,EAAE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B;AACA,WAAW,OAAO;AAClB;AACA;AACA,kCAAkC,gBAAgB;AAClD;AACA,cAAc,OAAO;AACrB;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;AChHA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;;;;;;;AC5CD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC3DA,mC;;;;;;ACAA,mC;;;;;;;ACAA;;AAEA;AACA;AACA;;;;;;;;ACJA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;;;;;;AChiBAAiB,kBAAkB;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;ACxMA;AACA;AACA,2BAA2B;AAC3B,2BAA2B;AAC3B,2BAA2B;AAC3B,2BAA2B;AAC3B,2BAA2B;AAC3B,2BAA2B;AAC3B,2BAA2B;AAC3B,2BAA2B;AAC3B,2BAA2B;AAC3B,2BAA2B;AAC3B,2BAA2B;AAC3B,2BAA2B;AAC3B,2BAA2B;AAC3B,2BAA2B;AAC3B,2BAA2B;AAC3B,2BAA2B;AAC3B,2BAA2B;AAC3B,2BAA2B;AAC3B,2BAA2B;AAC3B,2BAA2B;AAC3B,2BAA2B;AAC3B,2BAA2B;AAC3B,2BAA2B;AAC3B,2BAA2B;AAC3B,2BAA2B;AAC3B,2BAA2B;AAC3B,2BAA2B;AAC3B,2BAA2B;AAC3B,2BAA2B;AAC3B,2BAA2B;AAC3B,2BAA2B;;;;;;;;AChC3B;;AAEA;AACA;;AAEA;AACA;;AAEA;;;;;;;;ACRA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,2BAA2B;AACzD,sBAAsB,yBAAyB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,qBAAqB,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;AClCA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,2CAA2C,eAAe;AAC1D;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;;;;;ACrIA,mC;;;;;;ACAA,gC;;;;;;ACAA;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA;;;;;;;;ACNA;;AAEA;AACA;AACA;;;;;;;;ACJA;;AAEA;;AAEA,iCAAiC,kCAAkC;;;;;;;;ACJnE;;AAEA;AACA;AACA;AACA;;;;;;;;ACLA;;AAEA;AACA;AACA;;;;;;;;ACJA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,YAAY,YAAY;AACxB;AACA;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA,EAAE;AACF,sCAAsC;AACtC,EAAE;AACF,sCAAsC;AACtC;AACA,WAAW;AACX;AACA;AACA;;;;;;;;AC9EA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;ACPA;;AAEA;AACA;;AAEA;;;;;;;ACLA;;AAEA;AACA;AACA,WAAW,cAAc;AACzB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,qCAAqC;AAC9D;;AAEA;AACA;AACA,WAAW,cAAc;AACzB,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,+BAA+B;AAClD;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,YAAY,MAAM;AAClB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,EAAE;AACb,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,EAAE;AACb,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,OAAO;AAClB,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACpJA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,2CAA2C,4CAA4C;;AAEvF;AACA;;AAEA,wBAAwB,oCAAoC;AAC5D;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,oCAAoC;AAC/D,GAAG;AACH;AACA,qBAAqB,oCAAoC;AACzD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpSA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;AC9BA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AC9BA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA,iBAAiB,OAAO;AACxB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACvJA;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACrQA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA,gCAAgC;AAChC,GAAG;;AAEH;AACA,6BAA6B;AAC7B,GAAG;;AAEH;AACA,sBAAsB;AACtB,GAAG;;AAEH;AACA,mCAAmC;AACnC,GAAG;;AAEH;AACA;;;;;;;ACvNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC,gBAAgB;AACtD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA;;AAEA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA;AACA;;;;;;;ACt7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,YAAY;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;AChNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,yBAAyB;AAC5C;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,GAAG;AACH;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC5dA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,KAAK,6DAA6D;AAClE,KAAK,sDAAsD;AAC3D,KAAK,2DAA2D;AAChE,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,6BAA6B,iCAAiC;AAC9D,0CAA0C,uDAAuD;AACjG;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,0BAA0B,oEAAoE;AAC9F,8BAA8B;AAC9B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,uBAAuB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;AChGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;ACxDA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mGAAmG,kCAAkC;AACrI;AACA;AACA;AACA,WAAW,4BAA4B;AACvC;AACA;AACA;AACA;AACA,IAAI,kCAAkC;AACtC;AACA;AACA,kFAAkF,mCAAmC;AACrH;AACA,2BAA2B,wCAAwC;AACnE;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,gDAAgD,kCAAkC;AAClF;AACA,cAAc,OAAO;AACrB;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA,oBAAoB,4BAA4B,MAAM,wBAAwB,sBAAsB,4BAA4B;AAChI,IAAI,4BAA4B;AAChC;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,cAAc,eAAe;AAC7B;AACA;AACA,cAAc,eAAe;AAC7B;AACA;AACA,oBAAoB,4BAA4B,4BAA4B,wBAAwB;AACpG,IAAI,4BAA4B,MAAM,4BAA4B;AAClE;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA,sBAAsB,oDAAoD;AAC1E;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kEAAkE,4BAA4B;AAC9F;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,gDAAgD,kCAAkC;AAClF;AACA,cAAc,OAAO;AACrB;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA,oBAAoB,4BAA4B,MAAM,wBAAwB,sBAAsB,4BAA4B;AAChI,IAAI,4BAA4B;AAChC;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,cAAc,eAAe;AAC7B;AACA;AACA,cAAc,eAAe;AAC7B;AACA;AACA,oBAAoB,4BAA4B,4BAA4B,wBAAwB;AACpG,IAAI,4BAA4B,MAAM,4BAA4B;AAClE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6DAA6D,wCAAwC;AACrG;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6DAA6D,wCAAwC;AACrG;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;;;;;;;;AChZA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;;;;;;;ACbA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iDAAiD;;AAEjD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA,uCAAuC;AACvC,aAAa;AACb;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,kCAAkC;AAClC,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,sCAAsC;AACtC,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;ACpOA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;ACjBA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,mCAAmC,aAAa;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,6CAA6C,8BAA8B,UAAU,EAAE;AACvF;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,aAAa;AAChD;AACA,WAAW,sBAAsB;AACjC;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,SAAS;AACvB,IAAI,6CAA6C;AACjD;AACA,cAAc,sBAAsB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AClLA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;ACvBA;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA;;;;;;;ACNA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;;;;;;AC5FA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B,cAAc;AAC3C;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,SAAS;AACzB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA,gBAAgB,SAAS;AACzB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,uBAAuB;AACvoBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oBAAoB;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,eAAe;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;;;;;;;AC9nBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,IAAI,eAAe;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,oCAAoC;AACpC,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AChMA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,kBAAkB;AAClB;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,E;;;;;;AC9HA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACVA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,gCAAgC;AACrC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;ACpFA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uDAAuD,YAAY,cAAc;AACjF;AACA;AACA,cAAc,OAAO;AACrB,aAAa,2BAA2B;AACxC;AACA,cAAc,OAAO;AACrB,aAAa,2BAA2B;AACxC;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,aAAa,2BAA2B;AACxC;AACA,cAAc,MAAM;AACpB,sBAAsB,0BAA0B;AAChD;AACA;AACA;AACA,iCAAiC,YAAY;AAC7C;AACA,6EAA6E,YAAY;AACzF;AACA,eAAe;AACf;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,2BAA2B;AAC3B,uFAAuF;AACvF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,wBAAwB;AACxB;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;ACpKA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uDAAuD,WAAW,cAAc;AAChF;AACA;AACA,cAAc,OAAO;AACrB,aAAa,2BAA2B;AACxC;AACA,cAAc,OAAO;AACrB,aAAa,2BAA2B;AACxC;AACA,cAAc,OAAO;AACrB,aAAa,2BAA2B;AACxC;AACA,eAAe;AACf;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW;AACf,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,aAAa;AACb;AACA;;AAEA;;AAEA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB;AACxB;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;ACpIA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uDAAuD,eAAe,cAAc;AACpF;AACA;AACA,cAAc,OAAO;AACrB,aAAa,2BAA2B;AACxC;AACA,cAAc,OAAO;AACrB,aAAa,2BAA2B;AACxC;AACA,cAAc,OAAO;AACrB,aAAa,2BAA2B;AACxC;AACA,eAAe;AACf;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,aAAa;AACb;AACA;;AAEA;;AAEA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB;AACxB;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;ACzHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ,OAAO;AACf;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;AC5NA,gC;;;;;;ACAA,gC;;;;;;;ACAA;;;;;;;;;;;;GAYG;;;AAIH;IAaI,YAAY,OAAY;QAXhB,OAAE,GAAG,mBAAO,CAAC,EAAkB,CAAC,CAAC;QAYrC,IAAI,CAAC;YACD,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC,WAAW,CAAC,IAAI,IAAI,GAAG,aAAa,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;YAC/E,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,WAAW,CAAC,IAAI,IAAI,GAAG,QAAQ,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;YAC7E,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,YAAY,CAAC,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;YAClF,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;YAC3C,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,QAAQ,CAAC,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;YACvF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;YAC3C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;YACnD,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,YAAY,CAAC,IAAI,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,OAAO,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;QACpG,CAAC;QAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACX,OAAO,CAAC,GAAG,CAAC,kCAAkC,GAAG,GAAG,CAAC,CAAC;QAC1D,CAAC;IACL,CAAC;IAEM,OAAO,CAAC,KAAe,IAAU,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC;IACtD,cAAc,KAAa,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IACtD,YAAY,KAAa,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IAC3C,QAAQ,KAAa,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IAC1C,QAAQ,KAAa,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IAC1C,SAAS,KAAa,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IAC5C,WAAW,KAAa,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IAChD,eAAe,KAAa,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;IACxD,QAAQ,CAAC,IAAY,IAAY,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACxD,WAAW,CAAC,IAAa;QAC5B,EAAE,CAAC,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC;YAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;QAAC,CAAC;QACpD,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACzB,CAAC;IAED,gFAAgF;IAEhF;;;;;;;;;;OAUG;IACI,gBAAgB,CAAC,SAAiB;QACrC,IAAI,CAAC;YACD,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;QACnD,CAAC;QAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACb,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACvB,CAAC;IACL,CAAC;IAED;;;;;;;;;;;OAWG;IACI,aAAa,CAAC,OAAiB;QAClC,IAAI,QAAQ,GAAW,EAAE,CAAC;QAC1B,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,OAAO,CAAC,CAAC,CAAC;YACxB,QAAQ,IAAI,IAAI,GAAG,UAAU,GAAG,KAAK,GAAG,KAAK,CAAC;QAClD,CAAC;QACD,MAAM,CAAC,QAAQ,CAAC;IACpB,CAAC;IAED;;;;;;;;;;QAUI;IACG,mBAAmB,CAAC,OAAiB;QACxC,IAAI,QAAQ,GAAW,EAAE,CAAC;QAC1B,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,OAAO,CAAC,CAAC,CAAC;YACxB,QAAQ,IAAI,eAAe,KAAK,kBAAkB,KAAK,CAAC,WAAW,EAAE,OAAO,CAAC;QACjF,CAAC;QACD,MAAM,CAAC,QAAQ,CAAC;IACpB,CAAC;IAED;;;;;;;;;;OAUG;IACI,YAAY,CAAC,OAAiB;QACjC,IAAI,QAAQ,GAAW,2BAA2B,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC;QACvE,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,OAAO,CAAC,CAAC,CAAC;YACxB,QAAQ,IAAI,YAAY,KAAK,CAAC,WAAW,EAAE,OAAO,KAAK,OAAO,CAAC;QACnE,CAAC;QACD,MAAM,CAAC,QAAQ,CAAC;IACpB,CAAC;CAGJ;AA1HD,sCA0HC;;;;;;;;;;ACzID,qCAA0B;AAC1B,0CAAoC;AAEpC;;;;;;;;;;GAUG;AACH;IAMI;;;;;;;;;;OAUG;IACH,YAA2B,YAA2B;QAA3B,iBAAY,GAAZ,YAAY,CAAe;QAClD,IAAI,CAAC;YACD,IAAI,CAAC,GAAG,GAAG,IAAI,OAAE,CAAC,YAAY,CAAC,CAAC;YAChC,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,IAAI,CAAC,GAAG,EAAE,CAAC;QACf,CAAC;QAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACb,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACvB,CAAC;IACL,CAAC;IAED;;;;;;;;;;;;OAYG;IACI,OAAO,CAAC,QAAkB;QAE7B,OAAO,CAAC,GAAG,CAAC,qBAAqB,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;QACnD,OAAO,CAAC,GAAG,CAAC,sBAAsB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC7D,OAAO,CAAC,GAAG,CAAC,oBAAoB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACzD,OAAO,CAAC,GAAG,CAAC,uBAAuB,IAAI,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;IAC3D,CAAC;IAED;;;;;;;;;;OAUG;IACI,GAAG;QACN,IAAI,CAAC,GAAG,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM;YAChC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAa;YAClB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC;IAEP,CAAC;IAGD;;;;;;;;;;OAUG;IACK,WAAW;QACf,IAAI,CAAC;YACD,IAAI,OAAO,GAAG,mBAAO,CAAC,GAAQ,CAAC,CAAC;YAChC,IAAI,OAAO,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,cAAc,CAAC;YAClG,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC1B,CAAC;QAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACb,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACvB,CAAC;IACL,CAAC;IAED;;;;;;;;;;OAUG;IACK,OAAO;QACX,IAAI,MAAM,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,YAAY,CAAC,EAAE,CAAC;QACzI,MAAM,CAAC,IAAI,iBAAO,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,GAAG,YAAY,EAAE,MAAM,EACrE;YACI,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE;YACnC,SAAS,EAAE,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE;YAC3C,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE;YAC3C,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE;SACxC,CACJ,CAAC,UAAU,EAAE,CAAC;IAEnB,CAAC;IAED;;;;;;;;;;OAUG;IACK,QAAQ,CAAC,QAAkB;QAC/B,IAAI,MAAM,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,OAAO,CAAC,EAAE,CAAC;QACpI,MAAM,CAAC,IAAI,iBAAO,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,GAAG,OAAO,EAAE,MAAM,EAChE;YACI,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE;YACnC,SAAS,EAAE,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE;YAC3C,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE;YAC3C,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE;YACrC,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,QAAQ,CAAC;YAClD,aAAa,EAAE,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,QAAQ,CAAC;SACjE,CACJ,CAAC,UAAU,EAAE,CAAC;IACnB,CAAC;IAED;;;;;;;;;;OAUG;IAEK,MAAM,CAAC,QAAkB;QAC7B,IAAI,MAAM,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,gBAAgB,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAE,CAAC;QACnJ,MAAM,CAAC,IAAI,iBAAO,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,GAAG,UAAU,EAC3D,MAAM,EACN;YACI,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE;YACnC,SAAS,EAAE,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE;YAC3C,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE;YAC3C,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE;YACrC,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,QAAQ,CAAC;SACnD,CACJ,CAAC,UAAU,EAAE,CAAC;IACnB,CAAC;IAED;;;;;;;;;;OAUG;IAEK,SAAS;QACb,IAAI,MAAM,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,cAAc,CAAC,EAAE,CAAC;QAC3I,MAAM,CAAC,IAAI,iBAAO,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,GAAG,aAAa,EAC9D,MAAM,EACN;YACI,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE;YACnC,SAAS,EAAE,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE;YAC3C,SAAS,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE;SAC1C,CACJ,CAAC,UAAU,EAAE,CAAC;IACnB,CAAC;CACJ;AA5LD,sBA4LC;;;;;;;AC3MD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,uCAAuC,gCAAgC;AACvE;AACA,WAAW,MAAM;AACjB,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,MAAM;AACjB,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,kCAAkC,yCAAyC;AAC3E,KAAK;AACL,+BAA+B,yCAAyC;AACxE;AACA,GAAG;AACH;AACA,0CAA0C,kBAAkB;AAC5D;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC,SAAS;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA,4CAA4C,SAAS;AACrD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,iBAAiB,SAAS;AAC1B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,UAAU;AACV;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB;AACA;;AAEA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;;ACplCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,E;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;AC/CA;;;;;;;;;;GAUG;;;AAEH,4CAAiD;AACjD,4CAAiD;AAGjD;IAOI,YAAoB,cAA6B;QAA7B,mBAAc,GAAd,cAAc,CAAe;QAC7C,IAAI,CAAC;YACD,OAAO,CAAC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;YAChE,MAAM,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBAChD,KAAK,IAAI;oBACL,IAAI,CAAC,WAAW,GAAG,IAAI,qBAAS,CAAC,cAAc,CAAC,CAAC;oBACjD,KAAK,CAAC;gBACV,KAAK,OAAO;oBACR,IAAI,CAAC,WAAW,GAAG,IAAI,qBAAS,CAAC,cAAc,CAAC,CAAC;oBACjD,KAAK,CAAC;gBACV,QAAQ;YACZ,CAAC;QACL,CAAC;QAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACb,OAAO,CAAC,GAAG,CAAC,+BAA+B,KAAK,EAAE,CAAC,CAAC;QACxD,CAAC;QACD,MAAM,CAAC;IACX,CAAC;IACD,UAAU;QACN,MAAM,CAAC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM;YAC/B,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG;YACR,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK;YACX,OAAO,CAAC,GAAG,CAAC,8BAA8B,KAAK,EAAE,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,UAAU;QACd,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC;CACJ;AAtCD,gBAsCC;;;;;;;;ACtDD,mCAAmC;AACnC,8CAA8C;;;AAM9C;IAKI,YAAoB,GAAkB;QAAlB,QAAG,GAAH,GAAG,CAAe;QAH9B,WAAM,GAAG,mBAAO,CAAC,EAAO,CAAC,CAAC;QAI9B,IAAI,CAAC;YACD,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;YACrC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;QACrE,CAAC;QACD,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACX,OAAO,CAAC,GAAG,CAAC,2BAA2B,KAAK,EAAE,CAAC,CAAC;QACpD,CAAC;IACL,CAAC;IACM,UAAU;QACb,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC3C,CAAC;IACM,cAAc;QACjB,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAGD;;;;;;;;;;;OAWG;IACI,YAAY,CAAC,QAAkB;QAClC,IAAI,QAAQ,GAAa,EAAE,CAAC;QAC5B,IAAI,CAAC;YACD,GAAG,CAAC,CAAC,IAAI,MAAM,IAAI,QAAQ,CAAC,CAAC,CAAC;gBAC1B,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;YACzC,CAAC;QACL,CAAC;QAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACb,OAAO,CAAC,GAAG,CAAC,4BAA4B,KAAK,EAAE,CAAC,CAAC;QACrD,CAAC;QACD,OAAO,CAAC,GAAG,CAAC,+BAA+B,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;QACxE,MAAM,CAAC,QAAQ,CAAC;IAEpB,CAAC;IAED;;;;;;;;;;QAUI;IACI,gBAAgB;QACpB,IAAI,CAAC;YACD,MAAM,CAAC,WAAW,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;QACjH,CAAC;QACD,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACX,OAAO,CAAC,GAAG,CAAC,gCAAgC,KAAK,EAAE,CAAC,CAAC;QACzD,CAAC;IACL,CAAC;IAED;;;;;;;;;;MAUE;IACM,QAAQ,CAAC,UAAmB;QAChC,MAAM,CAAC,wEAAwE,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC;IAC3G,CAAC;CAGJ;AArFD,8BAqFC;;;;;;;;;;ACxFD;IAMI,YAAoB,GAAkB;QAAlB,QAAG,GAAH,GAAG,CAAe;QAH9B,SAAI,GAAG,mBAAO,CAAC,EAAY,CAAC,CAAC,EAAE,CAAC,CAAC;QAIrC,IAAI,CAAC;YACD,IAAI,CAAC,SAAS,EAAE,CAAC;QACrB,CAAC;QACD,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACX,OAAO,CAAC,GAAG,CAAC,2BAA2B,KAAK,EAAE,CAAC,CAAC;QACpD,CAAC;IACL,CAAC;IACM,UAAU;QACb,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC3C,CAAC;IACM,cAAc;QACjB,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAED;;;;;;;;;;OAUG;IACK,SAAS;QACb,IAAI,CAAC;YACD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;YACrC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;QAClD,CAAC;QAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACb,OAAO,CAAC,GAAG,CAAC,yBAAyB,KAAK,EAAE,CAAC,CAAC;QAClD,CAAC;IACL,CAAC;IAED;;;;;;;;;;OAUG;IACK,gBAAgB;QACpB,IAAI,CAAC;YACD,MAAM,CAAC,cAAc,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;QACpH,CAAC;QACD,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACX,OAAO,CAAC,GAAG,CAAC,gCAAgC,KAAK,EAAE,CAAC,CAAC;QACzD,CAAC;IACL,CAAC;IAED;;;;;;;;;;;OAWG;IACI,YAAY,CAAC,QAAkB;QAClC,IAAI,QAAQ,GAAa,EAAE,CAAC;QAC5B,IAAI,CAAC;YACD,GAAG,CAAC,CAAC,IAAI,MAAM,IAAI,QAAQ,CAAC,CAAC,CAAC;gBAC1B,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;YACzC,CAAC;QACL,CAAC;QAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACb,OAAO,CAAC,GAAG,CAAC,4BAA4B,KAAK,EAAE,CAAC,CAAC;QACrD,CAAC;QACD,OAAO,CAAC,GAAG,CAAC,+BAA+B,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;QACxE,MAAM,CAAC,QAAQ,CAAC;IAEpB,CAAC;IAED;;;;;;;;;;MAUE;IACM,QAAQ,CAAC,UAAmB;QAChC,MAAM,CAAC,wEAAwE,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC;IAC3G,CAAC;CAEJ;AAtGD,8BAsGC;;;;;;;;;;AC1GD;;;;;;;;;;GAUG;AACH;IAMI;;;;;;;;;;OAUG;IACH,YAAoB,SAAiB,EAAU,eAAuB,EAAU,KAAa;QAAzE,cAAS,GAAT,SAAS,CAAQ;QAAU,oBAAe,GAAf,eAAe,CAAQ;QAAU,UAAK,GAAL,KAAK,CAAQ;QAdrF,QAAG,GAAG,mBAAO,CAAC,CAAI,CAAC,CAAC;QACpB,cAAS,GAAG,mBAAO,CAAC,GAAsB,CAAC,CAAC;QAchD,IAAI,CAAC;QACL,CAAC;QACD,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC;IACL,CAAC;IAED;;;;;;;;;;OAUG;IACI,UAAU;QACb,IAAI,CAAC;YACD,IAAI,OAAO,GAAG,mBAAO,CAAC,EAA8B,CAAC,EACjD,eAAe,GAAG,mBAAO,CAAC,EAAwC,CAAC,CAAC;YACxE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;YAC3D,IAAI,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACpC,IAAI,SAAS,GAAG,CAAC,eAAe,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACzD,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,eAAe,EAAE,SAAS,CAAC,CAAC;YACxD,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACb,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;IACL,CAAC;IAED;;;;;;;;;;OAUG;IACI,OAAO;QACV,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;QAC7D,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,QAAQ,CAAC,CAAC;QAC1C,MAAM,CAAC,QAAQ,CAAC;IACpB,CAAC;CAEJ;AApED,0BAoEC;;;;;;;AC/ED;;AAEA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB;;;AAGlB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA;;;AAGA;AACA;AACA;AACA;AACA,cAAc,wBAAwB;AACtC,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;;AAEA,+DAA+D,EAAE;AACjE;AACA;AACA;;AAEA,sDAAsD,EAAE;AACxD,oDAAoD,EAAE;AACtD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,2CAA2C,SAAS;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,8FAA8F,EAAE;AAChG;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA,wBAAwB,0BAA0B;;AAElD;AACA,mCAAmC,8BAA8B;AACjE;;AAEA;AACA;;AAEA;AACA,sFAAsF,EAAE;AACxF;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB;;AAEjB;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,8CAA8C,SAAS;AACvD;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA,2BAA2B,KAAK;AAChC;AACA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;;;AAGA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,OAAO;AACrC,8BAA8B,OAAO;AACrC,8BAA8B,gBAAgB;AAC9C;AACA,8BAA8B,gBAAgB;AAC9C;AACA,8BAA8B,eAAe;AAC7C,8BAA8B,eAAe;AAC7C,8BAA8B,OAAO;AACrC,8BAA8B,OAAO;AACrC,8BAA8B,OAAO;AACrC,wCAAwC;AACxC,wCAAwC;AACxC,wCAAwC;AACxC,wCAAwC;AACxC,wCAAwC;AACxC,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA,6BAA6B,yCAAyC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,iCAAiC,wDAAwD;AACzF,iCAAiC,mDAAmD;;AAEpF,+BAA+B,OAAO;AACtC,yDAAyD,EAAE;AAC3D,uDAAuD,EAAE;AACzD;AACA;AACA;AACA;;AAEA,8BAA8B,OAAO;AACrC,wDAAwD,EAAE;AAC1D,sDAAsD,EAAE;AACxD;AACA;AACA;AACA;;AAEA,+BAA+B;AAC/B;AACA,yDAAyD,EAAE;AAC3D,uDAAuD,EAAE;AACzD;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA,sBAAsB,gBAAgB;AACtC;AACA,gDAAgD,EAAE;AAClD,gDAAgD,EAAE;AAClD,8CAA8C,EAAE;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,eAAe;AACtC,gEAAgE,EAAE;AAClE;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA,uBAAuB,eAAe;AACtC,gEAAgE,EAAE;AAClE,8CAA8C,OAAO;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,yBAAyB;AACzB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA,4BAA4B,OAAO;AACnC,sDAAsD,EAAE;AACxD,oDAAoD,EAAE;AACtD;AACA;AACA;AACA;;AAEA,8BAA8B,OAAO;AACrC,wDAAwD,EAAE;AAC1D,sDAAsD,EAAE;AACxD;AACA;AACA;AACA;;AAEA,uBAAuB;AACvB,gDAAgD,EAAE;AAClD;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,cAAc,IAAI;AAClB;AACA;;;AAGA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,qCAAqC,oCAAoC;;;AAGzE;AACA;AACA;AACA,sBAAsB;AACtB;AACA,qCAAqC,oCAAoC;;;AAGzE;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA,qDAAqD,GAAG;AACxD,mDAAmD,GAAG;AACtD,0CAA0C,OAAO;AACjD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA6B,6CAA6C;AAC1E,6BAA6B;AAC7B,iDAAiD;;AAEjD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,+BAA+B,OAAO;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB;;AAErB;AACA;;AAEA,+BAA+B,OAAO;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;;AAEA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,YAAY;;AAEnC;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA,kCAAkC,YAAY;;AAE9C;AACA,0CAA0C,SAAS;;AAEnD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;;AAGT;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,cAAc;AACjC;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa;AACb;;AAEA;;AAEA;AACA,oCAAoC,qBAAqB;AACzD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,UAAU;;AAE9C;AACA,sCAAsC,QAAQ;AAC9C;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC,KAAK;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB;;AAEjB,sCAAsC,QAAQ;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,uBAAuB,MAAM;AAC7B;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,uBAAuB;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,yBAAyB;AACrD;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,2BAA2B,WAAW;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;;AAEzB;AACA;;AAEA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,qBAAqB;;AAErB;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,2CAA2C,SAAS;AACpD;;AAEA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA,SAAS;;;AAGT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2BAA2B,SAAS;AACpC;;AAEA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA,wDAAwD,KAAK;AAC7D,qBAAqB;AACrB;AACA;AACA;AACA,mCAAmC,KAAK;AACxC;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,mBAAmB;AACtC;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,SAAS;;AAE5B;AACA,2BAA2B,SAAS;;AAEpC;AACA;;AAEA;AACA;;AAEA;AACA,aAAa;;AAEb;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA,yBAAyB;;AAEzB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,uDAAuD,EAAE;AACzD,oDAAoD,EAAE,UAAU,EAAE;AAClE;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;;AAGT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2CAA2C,SAAS;AACpD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB;;AAEA;;AAEA;;AAEA;AACA,uCAAuC,iBAAiB;AACxD;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,yBAAyB;AACzB;;AAEA;AACA,wCAAwC,SAAS;;AAEjD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,+BAA+B,EAAE;;AAEjC;AACA;;AAEA;AACA,uDAAuD,SAAS;AAChE;AACA,4CAA4C,SAAS;;AAErD;AACA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC,eAAe;AACvD;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;;;AAGA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mCAAmC,aAAa;AAChD;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;;AAEA;AACA,4BAA4B,KAAK;AACjC;AACA,aAAa;;AAEb;AACA;;AAEA,gCAAgC,OAAO;;AAEvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,gCAAgC,KAAK;AACrC;;AAEA;AACA,mBAAmB,OAAO;;AAE1B;AACA,gCAAgC,eAAe;AAC/C;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,YAAY;;AAE/B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA,uBAAuB,KAAK;AAC5B;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,wBAAwB,GAAG;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,gBAAgB,eAAe;AAC/B;AACA;AACA;AACA;AACA;;AAEA,qEAAqE,EAAE;AACvE;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,uBAAuB,aAAa;;AAEpC;AACA,+BAA+B,SAAS;AACxC;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB;AACA,kDAAkD,GAAG;AACrD,oDAAoD,GAAG;AACvD,mDAAmD,GAAG;AACtD,iDAAiD,GAAG;AACpD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA,8CAA8C,EAAE;AAChD,4CAA4C,EAAE;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,EAAE;AACzB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB;;AAEzB,8DAA8D,IAAI,OAAO,IAAI;AAC7E;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yCAAyC,KAAK;;AAE9C;AACA;;AAEA,0BAA0B,UAAU;AACpC;AACA;AACA;;AAEA,yCAAyC,OAAO;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB;AACA,gDAAgD,GAAG;AACnD,kDAAkD,GAAG;AACrD,sDAAsD,GAAG;AACzD,oDAAoD,GAAG;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB;AACA,4DAA4D,GAAG;AAC/D,0DAA0D,GAAG;AAC7D,2DAA2D,GAAG;AAC9D,yDAAyD,GAAG;AAC5D;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB;AACA,sDAAsD,GAAG;AACzD,oDAAoD,GAAG;AACvD,qDAAqD,GAAG;AACxD,mDAAmD,GAAG;AACtD;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB;AACA,uDAAuD,GAAG;AAC1D,qDAAqD,GAAG;AACxD,sDAAsD,GAAG;AACzD,oDAAoD,GAAG;AACvD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,2BAA2B,SAAS;AACpC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,6DAA6D,WAAW;AACxE;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA,0DAA0D,GAAG;AAC7D,wDAAwD,GAAG;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,gBAAgB,wBAAwB;AACxC;AACA,4CAA4C,EAAE;AAC9C,0CAA0C,EAAE;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB;AACA,qDAAqD,GAAG;AACxD,mDAAmD,GAAG;AACtD,yDAAyD,GAAG;AAC5D,uDAAuD,GAAG;AAC1D;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA,6CAA6C,EAAE;AAC/C,2CAA2C,EAAE;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;;AAGA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,OAAO;AACtB;AACA;AACA,mBAAmB,KAAK;AACxB;AACA;;AAEA;AACA,2BAA2B,0BAA0B;AACrD;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,oBAAoB,OAAO;;AAE3B;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAAS;AACxB,oCAAoC,QAAQ;AAC5C;;AAEA,mBAAmB,gBAAgB;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,2BAA2B,KAAK;AAChC;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA,wCAAwC,KAAK;AAC7C;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;;;AAGA;AACA;;;AAGA;AACA;AACA,uDAA6B,kBAAkB,EAAE;AAAA;;AAEjD;AACA,KAAK;AACL;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;;;;;;;ACvrFD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,YAAY;AACZ,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,KAAK;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,wBAAwB;AACtD;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,8BAA8B,KAAK;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,0BAA0B;AAC1B;AACA;AACA;;AAEA,iCAAiC;AACjC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;AChIA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA,SAAS;AACT;AACA;;;;;;;;AC9DA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACRA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzGA;;AAEA;;AAEA,qCAAqC,kBAAkB,EAAE;;AAEzD,+BAA+B,kCAAkC;;;;;;;;ACNjE;;AAEA;;AAEA;;AAEA;AACA;AACA;;;;;;;;ACRA;;AAEA;;;;;;;;ACFA;;AAEA;AACA;AACA;;;;;;;;ACJA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;ACNA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;ACNA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACXA;;AAEA;;AAEA;;AAEA,mCAAmC,iCAAiC;;;;;;;;ACNpE;;AAEA;AACA;AACA;AACA,QAAQ;AACR,cAAc,aAAa,GAAG,eAAe;AAC7C;AACA;;;;;;;;ACRA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,OAAO,sBAAsB,EAAE;AAC/B;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrBA;;AAEA;AACA;AACA;;;;;;;;ACJA;;AAEA;AACA;AACA;AACA;AACA,EAAE,YAAY,cAAc;AAC5B;;;;;;;;ACPA;;AAEA;;AAEA;AACA;AACA;;;;;;;;ACNA;;AAEA;;AAEA;AACA;AACA;AACA;;;;;;;;ACPA;;AAEA;;AAEA;AACA;AACA;;;;;;;;ACNA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;;;;;;;ACTA;;AAEA;;;;;;;;ACFA;;AAEA,kBAAkB;;AAElB;AACA;AACA;AACA;AACA,MAAM,gBAAgB,EAAE,YAAY,cAAc;;AAElD;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;AChBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACRA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,8BAA8B,sBAAsB,EAAE;AACtD,CAAC;;AAED;AACA;AACA;AACA,0BAA0B,gEAAgE,EAAE;AAC5F,yBAAyB,6BAA6B,EAAE;AACxD,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrHA;;AAEA;;AAEA;AACA;AACA;AACA;;;;;;;;ACPA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;ACPA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;;;;;;;;ACTA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,wCAAwC,sBAAsB,EAAE;AAChE;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,kCAAkC,aAAa;AAC/C;AACA;AACA;AACA,EAAE;AACF;;;;;;;;AClCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oDAAoD,mBAAmB;AACvE,kDAAkD,mBAAmB;;AAErE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA,EAAE,wCAAwC;AAC1C;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0BAA0B,UAAU,EAAE;AACtC,yBAAyB,aAAa,EAAE;AACxC,yBAAyB,aAAa,EAAE;AACxC,gCAAgC,oBAAoB,EAAE;AACtD;AACA;AACA;AACA;AACA,EAAE;AACF,wBAAwB,gBAAgB,EAAE;AAC1C,CAAC;;;;;;;;ACrOD;;AAEA;;AAEA;;;;;;;;ACJA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;ACPA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;ACPA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA,SAAS;AACT;AACA;;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,0CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,WAAW,OAAO;AAClB;AACA,WAAW,SAAS;AACpB;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,WAAW,OAAO;AAClB;AACA,WAAW,iBAAiB;AAC5B;AACA;AACA,WAAW,OAAO;AAClB;AACA,WAAW,YAAY;AACvB;AACA,WAAW,KAAK;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;;AAEtD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,iDAAiD,8FAA8F;AAC/I;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mCAAmC,QAAQ;AAC3C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,6DAA6D,sCAAsC;AACnG;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;ACpjBA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACttWA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,eAAe,OAAO;AACtB;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACrKA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;ACjGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B,mBAAmB;AACjD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,oBAAoB;AACrC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,iBAAiB,yBAAyB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC/RA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;AC/DA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,sCAAsC;AACtC;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;ACtIA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACxBA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,sBAAsB,kBAAkB;AACxC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,iBAAiB,WAAW;AAC5B;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,WAAW;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;ACjNA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,WAAW;AACzE;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kBAAkB;AAClB;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,mBAAmB;AACpC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,6CAA6C;AAC7C,wFAAwF;AACxF;AACA;AACA,sFAAsF;AACtF,sFAAsF;AACtF,kBAAkB;AAClB;AACA;AACA,8FAA8F;AAC9F;AACA,8BAA8B,OAAO;AACrC,wFAAwF;AACxF,wFAAwF;AACxF,uBAAuB,WAAW;AAClC;AACA;AACA;AACA,6FAA6F;AAC7F;AACA,6BAA6B,OAAO;AACpC,gGAAgG;AAChG;AACA,gCAAgC,OAAO;AACvC,0FAA0F;AAC1F,0FAA0F;AAC1F,uBAAuB,WAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wFAAwF;AACxF;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACrdA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,+BAA+B,oCAAoC;AACnE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;ACtciDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;ACtbA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnDA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACzBA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACXA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;ACdA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACXA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACXA;AACA;AACA;;AAEA;AACA;;;;;;;ACLA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACxBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;AClCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC5FA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;ACnGA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACdA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACxCA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;ACdA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;ACxBA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,yBAAyB;AAC1C;AACA;;AAEA;AACA,sDAAsD,sCAAsC;AAC5F,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;ACpIA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC1BA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACnBA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACbA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;ACxCA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,6CAA6C,mBAAmB;AAChE;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;;;;;;ACzGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;AClBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;ACjBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACNA;AACA;AACA;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACTA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;ACxDA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;AC7DA;;AAEA;AACA;;AAEA;;AAEA;AACA,sBAAsB;;AAEtB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+CAA+C;;AAE/C;AACA;AACA,mDAAmD;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY,aAAa;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;AC7NA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,cAAc;AAC9B;AACA;AACA,kBAAkB,cAAc;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,0BAA0B,gCAAgC;AAC1D,GAAG;AACH,0BAA0B,8CAA8C;AACxE;;AAEA;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;AClSA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC7JA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;;;;;;AC9CA;AACA;AACA;AACA,8DAA8D,mDAAmD;AACjH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,aAAa;AAC9B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AC7PA;;AAEA;AACA;AACA;AACA,yBAAyB,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,GAAG;;AAE9E;AACA;AACA;AACA,wBAAwB,GAAG,MAAM,EAAE,MAAM,EAAE;AAC3C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B,EAAE,QAAQ,EAAE,QAAQ,EAAE;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,YAAY,aAAa;AACzB;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA,YAAY,aAAa;AACzB;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA,YAAY,aAAa;AACzB;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA,YAAY,aAAa;AACzB;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA,YAAY,aAAa;;AAEzB;AACA;AACA;;AAEA;AACA,aAAa,aAAa;;AAE1B;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,aAAa,WAAW;AACxB;AACA;AACA,aAAa,8BAA8B;AAC3C,aAAa,+BAA+B;AAC5C,aAAa,6BAA6B;AAC1C,aAAa,8BAA8B;AAC3C,cAAc,iCAAiC;AAC/C,cAAc,iCAAiC;AAC/C;AACA,kBAAkB,eAAe;AACjC,oBAAoB,iBAAiB;AACrC,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,0CAA0C,EAAE;AAC5C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,kBAAkB,6BAA6B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B,eAAe;AAC5C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,+BAA+B,uBAAuB,EAAE;AACxD;;AAEA;AACA,gCAAgC;AAChC,6BAA6B;AAC7B,6BAA6B;AAC7B,6BAA6B;AAC7B,4BAA4B;AAC5B,4BAA4B;AAC5B;AACA,4BAA4B;AAC5B,4BAA4B;AAC5B,4BAA4B;AAC5B;AACA,oCAAoC;AACpC,oCAAoC;AACpC,uCAAuC;AACvC,kCAAkC;AAClC,kCAAkC;AAClC,kCAAkC;AAClC,mCAAmC;AACnC,mCAAmC;AACnC;AACA;AACA,iCAAiC;AACjC,iCAAiC;AACjC,iCAAiC;AACjC;AACA;AACA;AACA;AACA,gCAAgC;AAChC,mCAAmC;AACnC;;AAEA;AACA;AACA;;;;;;;AC/QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,kBAAkB;AAClB;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,E;;;;;;;ACrGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;AChCA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;;AAEA,iBAAiB;AACjB,iBAAiB;AACjB,2BAA2B;AAC3B,iBAAiB;AACjB,2BAA2B;;AAE3B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1CA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;;AC3FD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,2DAA2D,0BAA0B;AACrF;AACA;AACA;AACA;AACA,8DAA8D,eAAe;AAC7E,oGAAoG;AACpG;AACA;AACA;AACA;AACA;AACA,+CAA+C,eAAe;AAC9D;AACA;AACA,uCAAuC,+CAA+C;AACtF;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA,oBAAoB,sFAAsF;AAC1G;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,IAAI,2BAA2B;AAC/B,IAAI,yBAAyB;AAC7B,IAAI,uBAAuB;AAC3B,IAAI,mCAAmC;AACvC,IAAI,yBAAyB;AAC7B,IAAI,qCAAqC;AACzC,IAAI,uBAAuB;AAC3B,IAAI,yBAAyB;AAC7B,IAAI,yBAAyB;AAC7B,IAAI,6BAA6B;AACjC,IAAI,uBAAuB;AAC3B,IAAI,yBAAyB;AAC7B,IAAI,6BAA6B;AACjC,IAAI,yBAAyB;AAC7B,IAAI,qBAAqB;AACzB,IAAI,+BAA+B;AACnC,IAAI,+BAA+B;AACnC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,yBAAyB,MAAM,qBAAqB;AACtG;AACA;AACA,oDAAoD,6BAA6B;AACjF;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB,qDAAqD,6BAA6B;AAClF;AACA;AACA,qBAAqB,6BAA6B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,sCAAsC,eAAe;AACrD,uCAAuC,6BAA6B;AACpE;AACA;AACA;AACA;AACA,QAAQ,oBAAoB;AAC5B,QAAQ;AACR;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,YAAY;AACZ;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B;AACA;AACA,8BAA8B,wBAAwB,MAAM,wBAAwB;AACpF,+BAA+B,kBAAkB,MAAM,yBAAyB;AAChF,UAAU,gBAAgB;AAC1B;AACA,eAAe,YAAY;AAC3B;AACA;AACA,8CAA8C,gBAAgB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B,QAAQ;AACR;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA,4DAA4D,eAAe;AAC3E;AACA;AACA;AACA,oCAAoC,+CAA+C;AACnF;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA,kCAAkC;;AAElC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA,kCAAkC,wBAAwB,MAAM,wBAAwB;AACxF,mCAAmC,kBAAkB,MAAM,yBAAyB;AACpF,cAAc,gBAAgB;AAC9B;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA,kDAAkD,gBAAgB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,yDAAyD,+CAA+C;AACxG;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA,kCAAkC,wBAAwB,MAAM,wBAAwB;AACxF,mCAAmC,kBAAkB,MAAM,yBAAyB;AACpF,cAAc,gBAAgB;AAC9B;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA,kDAAkD,gBAAgB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,yDAAyD,+CAA+C;AACxG;AACA,0BAA0B;AAC1B,+DAA+D,+CAA+C;AAC9G;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA,kCAAkC,wBAAwB,MAAM,wBAAwB;AACxF,mCAAmC,kBAAkB,MAAM,yBAAyB;AACpF,cAAc,gBAAgB;AAC9B;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA,kDAAkD,gBAAgB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,yDAAyD,+CAA+C;AACxG;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA,kCAAkC,wBAAwB,MAAM,wBAAwB;AACxF,mCAAmC,kBAAkB,MAAM,yBAAyB;AACpF,cAAc,gBAAgB;AAC9B;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA,kDAAkD,gBAAgB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,+DAA+D,+CAA+C;AAC9G;AACA,0BAA0B;AAC1B;AACA;AACA,YAAY,uBAAuB;AACnC,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA,kCAAkC,wBAAwB,MAAM,wBAAwB;AACxF,mCAAmC,kBAAkB,MAAM,yBAAyB;AACpF,cAAc,gBAAgB;AAC9B;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA,kDAAkD,gBAAgB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sDAAsD,qCAAqC;AAC3F;AACA,mBAAmB,cAAc;AACjC;AACA;AACA,kCAAkC,wBAAwB,MAAM,wBAAwB;AACxF,mCAAmC,kBAAkB,MAAM,yBAAyB;AACpF,cAAc,gBAAgB;AAC9B;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA,kDAAkD,gBAAgB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qCAAqC;AACjD,YAAY,uBAAuB;AACnC,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA,kCAAkC,wBAAwB,MAAM,wBAAwB;AACxF,mCAAmC,kBAAkB,MAAM,yBAAyB;AACpF,cAAc,gBAAgB;AAC9B;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA,kDAAkD,gBAAgB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,aAAa,oBAAoB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA,mBAAmB,YAAY,0BAA0B,oCAAoC;AAC7F;AACA,qBAAqB;AACrB;AACA,qDAAqD,2BAA2B;AAChF;AACA;AACA,YAAY,2BAA2B;AACvC,YAAY;AACZ;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,yBAAyB;AACrE;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,qBAAqB;AACrB;AACA,qBAAqB,yBAAyB;AAC9C,uDAAuD,mCAAmC;AAC1F;AACA;AACA,YAAY,mCAAmC;AAC/C,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+BAA+B,uBAAuB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uFAAuF;AACvF;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA,kCAAkC,wBAAwB,MAAM,wBAAwB;AACxF,mCAAmC,kBAAkB,MAAM,yBAAyB;AACpF,cAAc,gBAAgB;AAC9B;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA,kDAAkD,gBAAgB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA,qEAAqE;AACrE;AACA,oBAAoB;AACpB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,YAAY,uBAAuB;AACnC,YAAY,yBAAyB;AACrC,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,YAAY;AACZ;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,gBAAgB;AAChB,YAAY;AACZ;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA,yGAAyG,uBAAuB;AAChI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,sFAAsF;AACtF;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA,kCAAkC,wBAAwB,MAAM,wBAAwB;AACxF,mCAAmC,kBAAkB,MAAM,yBAAyB;AACpF,cAAc,gBAAgB;AAC9B;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA,kDAAkD,gBAAgB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA,4DAA4D;AAC5D;AACA,oBAAoB;AACpB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,YAAY,uBAAuB;AACnC,YAAY,uBAAuB;AACnC,YAAY;AACZ;AACA;AACA;AACA;AACA,oCAAoC;AACpC,YAAY;AACZ;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,uBAAuB,GAAG,qBAAqB,GAAG,6BAA6B,iBAAiB,mBAAmB;AAC/H;AACA;AACA,sBAAsB,WAAW;AACjC;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,YAAY,WAAW;AACvB,YAAY,qBAAqB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iDAAiD,yBAAyB;AAC1E;AACA;AACA;AACA;AACA;AACA,YAAY,uBAAuB,GAAG,qBAAqB,GAAG,6BAA6B,iBAAiB,mBAAmB;AAC/H;AACA;AACA,sBAAsB,WAAW;AACjC;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,YAAY,WAAW;AACvB,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sCAAsC;;AAEtC;AACA;AACA;;AAEA;AACA,uCAAuC;AACvC;;AAEA,4BAA4B;;AAE5B;AACA;AACA;AACA,yBAAyB;AACzB;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,sCAAsC;AACtC;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4CAA4C,sBAAsB;AAClE;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;AACA;;;;;;;;AC7xCA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI,6DAA6D,gCAAgC,aAAa;AAC9G;AACA,kEAAkE,yBAAyB;AAC3F,4CAA4C,aAAa;AACzD;AACA,cAAc,OAAO;AACrB,aAAa,2BAA2B;AACxC;AACA,cAAc,OAAO;AACrB,aAAa,2BAA2B;AACxC;AACA,cAAc,OAAO;AACrB,aAAa,2BAA2B;AACxC;AACA,cAAc,sBAAsB;AACpC,aAAa,4BAA4B;AACzC;AACA,mCAAmC,yBAAyB,SAAS,gBAAgB;AACrF;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA,6BAA6B;AAC7B;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;AC7FA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI,2DAA2D,gCAAgC,aAAa;AAC5G;AACA,kEAAkE,wBAAwB;AAC1F,4CAA4C,mBAAmB;AAC/D;AACA,cAAc,OAAO;AACrB,aAAa,2BAA2B;AACxC;AACA,cAAc,OAAO;AACrB,aAAa,2BAA2B;AACxC;AACA,cAAc,OAAO;AACrB,aAAa,2BAA2B;AACxC;AACA,cAAc,sBAAsB;AACpC,aAAa,4BAA4B;AACzC;AACA,mCAAmC,wBAAwB,SAAS,gBAAgB;AACpF;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;AC9FA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA,0DAA0D,aAAa;AACvE;AACA,wEAAwE,8BAA8B;AACtG;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,KAAK,4DAA4D;AACjE,KAAK,0DAA0D;AAC/D,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iGAAiG,kBAAkB;AACnH;AACA,gEAAgE,yBAAyB;AACzF,IAAI,uBAAuB,GAAG,mCAAmC,MAAM,yBAAyB;AAChG;AACA;AACA;AACA,6CAA6C;AAC7C,kDAAkD,uBAAuB,MAAM;AAC/E,kDAAkD,uBAAuB,MAAM;AAC/E;AACA,6EAA6E,wBAAwB;AACrG;AACA,mCAAmC,aAAa;AAChD;AACA,cAAc,OAAO;AACrB,aAAa,2BAA2B;AACxC;AACA,cAAc,OAAO;AACrB,aAAa,2BAA2B;AACxC;AACA,cAAc,OAAO;AACrB,aAAa,2BAA2B;AACxC;AACA,cAAc,OAAO;AACrB;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA,cAAc,OAAO;AACrB,iBAAiB,uDAAuD;AACxE;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,kBAAkB,GAAG,yBAAyB,GAAG,uBAAuB;AAC5E,IAAI,mCAAmC,GAAG;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;AChLA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,SAAS;AACvB,IAAI,kCAAkC;AACtC;AACA,cAAc,SAAS;AACvB,IAAI,kCAAkC;AACtC;AACA,cAAc,SAAS;AACvB,IAAI,4BAA4B;AAChC;AACA,cAAc,SAAS;AACvB,IAAI,4BAA4B;AAChC;AACA,cAAc,SAAS;AACvB,IAAI,4BAA4B;AAChC;AACA,cAAc,SAAS;AACvB,IAAI,4BAA4B;AAChC;AACA,cAAc,SAAS;AACvB,IAAI,wBAAwB;AAC5B;AACA,cAAc,SAAS;AACvB,IAAI,4BAA4B;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4CAA4C;AACvD;AACA;AACA,eAAe,sCAAsC,iBAAiB,2BAA2B;AACjG,QAAQ,gBAAgB;AACxB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,aAAa;AAC7D,gDAAgD,aAAa;AAC7D;AACA;AACA,QAAQ,2EAA2E;AACnF,QAAQ,6DAA6D;AACrE,QAAQ,gCAAgC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA,KAAK;;AAEL,2CAA2C;AAC3C;;AAEA;AACA,+EAA+E;AAC/E,2BAA2B,OAAO;AAClC;;AAEA;;AAEA;AACA;AACA;AACA,8DAA8D,kCAAkC;AAChG;AACA,cAAc,oBAAoB;AAClC;AACA;AACA,cAAc,mBAAmB;AACjC;AACA;AACA,cAAc,OAAO;AACrB,qDAAqD,kCAAkC;AACvF;AACA;AACA,IAAI;AACJ;;;;;;;;AC7FA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA,yEAAyE,mCAAmC;AAC5G;AACA,iDAAiD,mCAAmC;AACpF;AACA,oFAAoF,2BAA2B;AAC/G;AACA;AACA,WAAW,uCAAuC;AAClD;AACA;AACA;AACA,sCAAsC,mCAAmC;AACzE;AACA,4BAA4B,kCAAkC,sBAAsB;AACpF;AACA;AACA,mBAAmB,kCAAkC;AACrD,IAAI,2BAA2B;AAC/B;AACA,WAAW,0BAA0B,cAAc;AACnD;AACA;AACA,8EAA8E,kCAAkC;AAChH;AACA,eAAe,2BAA2B;AAC1C;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,4BAA4B;AACjC,KAAK,kCAAkC;AACvC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,qBAAqB;AACrB,qBAAqB,uBAAuB,GAAG,wBAAwB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,kBAAkB;AACzE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;AC5IA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,4BAA4B;AACpF;AACA,WAAW,OAAO;AAClB;AACA;AACA,kDAAkD,mCAAmC;AACrF;AACA,WAAW,uCAAuC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,4BAA4B;AACjC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;ACvEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA,yEAAyE,mCAAmC;AAC5G;AACA,iDAAiD,mCAAmC;AACpF;AACA,oFAAoF,2BAA2B;AAC/G;AACA;AACA,WAAW,uCAAuC;AAClD;AACA;AACA;AACA,sCAAsC,mCAAmC;AACzE;AACA,4BAA4B,kCAAkC,sBAAsB;AACpF;AACA;AACA,mBAAmB,kCAAkC;AACrD,IAAI,2BAA2B,+DAA+D,0DAA0D;AACxJ;AACA,WAAW,0BAA0B,cAAc;AACnD;AACA;AACA,8EAA8E,kCAAkC;AAChH;AACA,eAAe,2BAA2B;AAC1C;AACA,WAAW,OAAO;AAClB;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,4BAA4B;AACjC,KAAK,kCAAkC;AACvC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,qBAAqB;AACrB,qBAAqB,8BAA8B,GAAG,+BAA+B;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,kBAAkB;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,iCAAiC;AAC7E;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC9MA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA,kDAAkD,mCAAmC;AACrF;AACA,oFAAoF,2BAA2B;AAC/G;AACA;AACA;AACA;AACA,WAAW,uCAAuC;AAClD;AACA;AACA;AACA,sCAAsC,mCAAmC;AACzE;AACA,mBAAmB,kCAAkC;AACrD,IAAI,2BAA2B;AAC/B;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,4BAA4B;AACjC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,qBAAqB,uBAAuB,GAAG,wBAAwB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;;;;;;;AC3GA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA,yBAAyB,0BAA0B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,iBAAiB,4BAA4B;AAC7C;AACA;AACA;AACA,WAAW,SAAS;AACpB,iBAAiB,kCAAkC;AACnD;AACA;AACA;AACA,WAAW,SAAS;AACpB,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA,WAAW,SAAS;AACpB,iBAAiB,4BAA4B;AAC7C;AACA,WAAW,SAAS;AACpB,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA,WAAW,SAAS;AACpB,iBAAiB,8BAA8B;AAC/C;AACA;AACA;AACA,WAAW,SAAS;AACpB,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA,WAAW,SAAS;AACpB,iBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,6CAA6C;;AAE7C;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,gBAAgB,YAAY;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA,sBAAsB,oDAAoD;AAC1E;AACA;AACA;AACA,aAAa,cAAc;AAC3B;AACA;;AAEA;AACA,gBAAgB,cAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,iBAAiB;AACzB,QAAQ,gBAAgB;AACxB,QAAQ;AACR;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA,sBAAsB,gDAAgD;AACtE;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;;AAEA;AACA,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,YAAY;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,eAAe;AAC/B;AACA;AACA,QAAQ,qBAAqB;AAC7B;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,mBAAmB;AACnC;AACA;AACA,QAAQ,yBAAyB;AACjC;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,kBAAkB;AAClC;AACA;AACA,QAAQ,wBAAwB;AAChC;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,UAAU;AAC1B;AACA;AACA,QAAQ,gBAAgB;AACxB;AACA;AACA;AACA;;;AAGA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA,QAAQ,aAAa;AACrB;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,MAAM;AACtB;AACA;AACA,QAAQ,YAAY;AACpB;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA,QAAQ,8BAA8B;AACtC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;ACpXA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC9CA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,kCAAkC;AAClC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;ACjHA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B,0EAA0E,oBAAoB,MAAM,kBAAkB;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,mBAAmB;AACvB,IAAI,uBAAuB;AAC3B,IAAI,6BAA6B;AACjC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA,mBAAmB;AACnB,gFAAgF,eAAe;AAC/F;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA,mBAAmB;AACnB,8DAA8D,yBAAyB,MAAM,qBAAqB;AAClH;AACA,kBAAkB,KAAK;AACvB;AACA;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA,kBAAkB,KAAK;AACvB;AACA;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,4BAA4B;;AAE5B;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+CAA+C,GAAG,UAAU;AAC5D;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,SAAS;AACxB,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8CAA8C,YAAY,UAAU;AACpE;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kDAAkD,mBAAmB,UAAU;AAC/E;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,kCAAkC;AAClC;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,oCAAoC;;AAEpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA,yBAAyB;AACzB,8CAA8C;AAC9C;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;ACtTA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gDAAgD,kBAAkB,UAAU,EAAE;AAC9E;AACA,qBAAqB,yBAAyB;AAC9C;AACA,wDAAwD,uCAAuC,MAAM,yCAAyC;AAC9I;AACA;AACA;AACA;AACA,iCAAiC,aAAa;AAC9C,+BAA+B,yBAAyB;AACxD;AACA;AACA,gDAAgD,6DAA6D;AAC7G;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,kCAAkC,gBAAgB;AAClD;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,cAAc;AACd;AACA,sCAAsC,gBAAgB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,+CAA+C,6DAA6D;AAC5G;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wDAAwD,aAAa;AACrE,6BAA6B,6DAA6D;AAC1F;AACA;AACA;AACA,kBAAkB,aAAa;AAC/B;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;;AAEA;;;;;;;;ACnTA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+CAA+C,wBAAwB,UAAU,EAAE;AACnF;AACA;AACA;AACA,wDAAwD,sCAAsC,GAAG;AACjG,QAAQ,kCAAkC;AAC1C;AACA;AACA;AACA,iCAAiC,mBAAmB;AACpD,+BAA+B,wBAAwB;AACvD;AACA;AACA,gDAAgD,2DAA2D;AAC3G;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,kCAAkC,gBAAgB;AAClD;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA,IAAI,2DAA2D;AAC/D,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,cAAc;AACd;AACA,sCAAsC,gBAAgB;AACtD;AACA,4CAA4C,kCAAkC;AAC9E,iDAAiD,kCAAkC;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,cAAc;AACd;AACA;AACA,+CAA+C,2DAA2D;AAC1G;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wDAAwD,mBAAmB;AAC3E,6BAA6B,2DAA2D;AACxF;AACA;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;;AAEA;;;;;;;;;AC3WA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,8BAA8B;AAC5D;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,kDAAkD;AAClD;AACA;AACA,uBAAuB;AACvB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yDAAyD,oCAAoC;AAC7F;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,IAAI,sCAAsC;AAC1C,IAAI;AACJ;AACA;AACA;AACA;AACA,2CAA2C,gBAAgB;AAC3D;AACA;AACA;AACA;AACA,2CAA2C,gBAAgB;AAC3D,uCAAuC,aAAa;AACpD,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,gBAAgB;AAC3D;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,IAAI,4BAA4B;AAChC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,gBAAgB;AAC1D;AACA;AACA,+CAA+C;AAC/C;AACA;AACA,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,aAAa;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,aAAa,+BAA+B;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA,sCAAsC;AACtC,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA,sBAAsB,QAAQ;AAC9B;AACA,yBAAyB,QAAQ;AACjC;AACA,mBAAmB,OAAO,6CAA6C;AACvE;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B,mFAAmF;AACnF;AACA,qBAAqB,OAAO,iDAAiD;AAC7E;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,2BAA2B;AAC1F;AACA,aAAa;AACb;AACA;AACA;AACA,IAAI,4BAA4B;AAChC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,oCAAoC,+DAA+D;AACnG;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,kEAAkE;AAClE;;AAEA;AACA;AACA,SAAS,MAAM;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,SAAS;AACvB,IAAI,8BAA8B;AAClC;AACA,cAAc,SAAS;AACvB,IAAI,oCAAoC;AACxC;AACA,cAAc,SAAS;AACvB,IAAI,4BAA4B;AAChC;AACA,cAAc,SAAS;AACvB,IAAI,sCAAsC;AAC1C;AACA,cAAc,SAAS;AACvB,IAAI,0CAA0C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACzhBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;;AAGA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;ACpVA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;ACzFA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;ACjIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC3BA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,SAAS;AAC7D;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;;;;;;AClGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gCAAgC,4CAA4C;;AAE5E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,iBAAiB,aAAa;AAC9B;AACA;AACA,iBAAiB,aAAa;AAC9B;AACA,kBAAkB,cAAc;AAChC;AACA;AACA,mCAAmC,cAAc;AACjD;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACvMA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC,SAAS;AAC/C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF;AAChF;;AAEA;AACA;AACA;AACA,2CAA2C,eAAe;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,8BAA8B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;AC1GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,kBAAkB;AAClB;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA,E;;;;;;;AC5GA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,oEAAoE;AACpE;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB,oBAAoB;AACxC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,0BAA0B;AAChD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;ACrOA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;AACL;;;;;;;ACtBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD,sCAAsC;AACtC,oCAAoC;AACpC,sCAAsC;AACtC,oCAAoC;AACpC,sCAAsC;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;ACtqCA;AACA;AACA;AACA,8DAA8D,mDAAmD;AACjH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,aAAa;AAC9B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AC7PA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,cAAc,aAAa;AAC3B;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA,cAAc,aAAa;;AAE3B;AACA;AACA;;AAEA;AACA,eAAe,aAAa;;AAE5B;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B,eAAe;AAC5C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,+BAA+B,uBAAuB,EAAE;AACxD;;AAEA;AACA,yBAAyB,aAAa;;AAEtC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,6CAA6C,aAAa;;AAE1D;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gCAAgC;AAChC,6BAA6B;AAC7B,6BAA6B;AAC7B,6BAA6B;AAC7B,4BAA4B;AAC5B,4BAA4B;AAC5B;AACA,4BAA4B;AAC5B,4BAA4B;AAC5B,4BAA4B;AAC5B,4BAA4B;AAC5B,6BAA6B;AAC7B;AACA;AACA,oCAAoC;AACpC,oCAAoC;AACpC,oCAAoC;AACpC,uCAAuC;AACvC,kCAAkC;AAClC,kCAAkC;AAClC,kCAAkC;AAClC,mCAAmC;AACnC,mCAAmC;AACnC;AACA;AACA,iCAAiC;AACjC,iCAAiC;AACjC,iCAAiC;AACjC;AACA;AACA,uCAAuC;AACvC,wCAAwC;AACxC,gCAAgC;AAChC,iCAAiC;AACjC,mCAAmC;AACnC,kCAAkC;AAClC,mCAAmC;AACnC;;AAEA;AACA;AACA;;;;;;;;ACpLA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,iBAAiB,EAAE;AACnB;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,uBAAuB,iCAAiC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC9BA;;AAEA,qBAAqB,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,GAAG;AAC1E,iBAAiB,GAAG,MAAM,EAAE,MAAM,EAAE;AACpC,4BAA4B,EAAE,QAAQ,EAAE,QAAQ,EAAE;AAClD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;ACjFA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,IAAI;AACT;;;;;;;;ACjEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,iBAAiB;AACtE;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,wBAAwB;AACxB,OAAO;AACP,+BAA+B;AAC/B,OAAO;AACP,mCAAmC;AACnC,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;AC7EA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,mCAAmC;AACvC;AACA,cAAc,SAAS;AACvB,IAAI,mCAAmC;AACvC;AACA,6DAA6D,YAAY;AACzE;AACA,cAAc,SAAS;AACvB,IAAI,iCAAiC;AACrC;AACA,6DAA6D,WAAW;AACxE;AACA,cAAc,SAAS;AACvB,IAAI,yCAAyC;AAC7C;AACA,6DAA6D,eAAe;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACtCA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,GAAG,UAAU;AAChC;AACA,qDAAqD,gBAAgB;AACrE;AACA;AACA;AACA,SAAS,mCAAmC;AAC5C;AACA,WAAW,MAAM;AACjB,2BAA2B,gBAAgB;AAC3C;AACA,6DAA6D,mCAAmC;AAChG;AACA;AACA,WAAW,mBAAmB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,mCAAmC;AAC5C,eAAe,wBAAwB;AACvC;AACA;AACA,wEAAwE,gBAAgB;AACxF;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,4BAA4B,mCAAmC;AAC/D,4FAA4F;AAC5F;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,6BAA6B;AAC7B;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA,gCAAgC,eAAe;AAC/C;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA,kDAAkD,mBAAmB;AACrE;AACA;AACA,iCAAiC;AACjC,iDAAiD;AACjD;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;;;;;;ACvJA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,YAAY,UAAU;AACxC;AACA,mEAAmE,gBAAgB;AACnF;AACA,uDAAuD,gBAAgB;AACvE,gCAAgC,YAAY;AAC5C;AACA,WAAW,mBAAmB;AAC9B,sCAAsC,gBAAgB,mEAAmE,gBAAgB;AACzI;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,YAAY;AACpE;AACA;AACA;AACA,IAAI,iCAAiC;AACrC;AACA;AACA,qCAAqC,iCAAiC;AACtE;AACA;AACA,+DAA+D,mCAAmC;AAClG;AACA,WAAW,mBAAmB;AAC9B,wEAAwE,YAAY;AACpF;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,iCAAiC;AACjE;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,sDAAsD,uBAAuB;AAC7E;AACA;AACA;AACA;AACA,2CAA2C,iCAAiC;AAC5E;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD,6CAA6C;AAC7C,qCAAqC;AACrC;AACA;AACA,iCAAiC;AACjC;AACA;AACA,4CAA4C;AAC5C,6BAA6B;AAC7B;AACA;AACA;AACA,iCAAiC;AACjC,6BAA6B;AAC7B,qBAAqB;AACrB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;;AAEb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,4BAA4B;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;;;;;;ACzLA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,mBAAmB,UAAU;AACnD;AACA,iDAAiD,gBAAgB;AACjE;AACA,sCAAsC,gBAAgB;AACtD;AACA;AACA,qDAAqD,qBAAqB;AAC1E;AACA,WAAW,mBAAmB;AAC9B,6CAA6C,gBAAgB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,yCAAyC;AACzE;AACA,+DAA+D,mCAAmC;AAClG;AACA,WAAW,mBAAmB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,yCAAyC;AACzE;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,gDAAgD,gBAAgB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,yCAAyC;AACpF;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD,iCAAiC;AACjC;AACA;AACA;AACA;AACA,qCAAqC;AACrC,iCAAiC;AACjC,yBAAyB;AACzB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;;AAEb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,4CAA4C;AAC5C,6BAA6B;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;;;;;;ACnMA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iEAAiE,uBAAuB;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AClEA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B,mBAAmB,UAAU;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,sDAAsD,+BAA+B;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;;;;;;AC7LA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA,qCAAqC,qBAAqB;AAC1D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS,qBAAqB,GAAG,YAAY,GAAG,WAAW,GAAG,eAAe,GAAG;AAChF;AACA;;AAEA,iBAAiB;AACjB,8CAA8C;;AAE9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;AC1HA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,qBAAqB;AACrB;AACA,6CAA6C;AAC7C,qBAAqB;AACrB,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;;AAEA;AACA;AACA;;AAEA;;;;;;;AC7FA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;AC9DA;;;;;;;ACAA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,gBAAgB;AACnC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACzNA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,oCAAoC;AACpC,4BAA4B;;AAE5B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;;;;;ACrBA;;AAEA;;AAEA;AACA,mBAAmB,sBAAsB;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;AChBA,0C;;;;;;ACAA,gC;;;;;;ACAA,2C;;;;;;ACAA,mC;;;;;;;;;ACAA,gDAAgD;AAChD,wCAAgC;AAEhC,IAAI,OAAO,GAAG,mBAAO,CAAC,EAAW,CAAC,CAAC;AACnC,OAAO;KACJ,MAAM,CAAC,+BAA+B,EAAE,qDAAqD,CAAC;KAC9F,MAAM,CAAC,8BAA8B,EAAE,oCAAoC,CAAC;KAC5E,MAAM,CAAC,6BAA6B,EAAE,uCAAuC,CAAC;KAC9E,MAAM,CAAC,0BAA0B,EAAE,4CAA4C,CAAC;KAChF,MAAM,CAAC,uBAAuB,EAAE,oDAAoD,CAAC;KACvF,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAErB,OAAO,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC,cAAc,EAAE,CAAC;AAElD,IAAI,CAAC,GAAG,IAAI,aAAK,CAAC,IAAI,6BAAa,CAAC,OAAO,CAAC,CAAC,CAAC","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 236);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7ce7ecce38bea82d3618","module.exports = require(\"util\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"util\"\n// module id = 0\n// module chunks = 0","'use strict';\r\n\r\nvar $path = require('path');\r\n\r\n////////////////////////////////////////////\r\n// Simpler check for null/undefined;\r\nfunction isNull(value) {\r\n    return value === null || value === undefined;\r\n}\r\n\r\n////////////////////////////////////////////////////////\r\n// Verifies parameter for being a non-empty text string;\r\nfunction isText(txt) {\r\n    return txt && typeof txt === 'string' && /\\S/.test(txt);\r\n}\r\n\r\n//////////////////////////////////////\r\n// Verifies value for being an object,\r\n// based on type and property names.\r\nfunction isObject(value, properties) {\r\n    if (value && typeof value === 'object') {\r\n        for (var i = 0; i < properties.length; i++) {\r\n            if (!(properties[i] in value)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n///////////////////////////////////////////////////////////\r\n// Approximates the environment as being for development.\r\n//\r\n// Proper configuration is having NODE_ENV = 'development', but this\r\n// method only checks for 'dev' being present, and regardless of the case.\r\nfunction isDev() {\r\n    var env = global.process.env.NODE_ENV || '';\r\n    return env.toLowerCase().indexOf('dev') !== -1;\r\n}\r\n\r\n///////////////////////////////////////////////////\r\n// Locks all properties in an object to read-only,\r\n// or freezes the entire object for any changes.\r\nfunction lock(obj, freeze, options) {\r\n    if (options && options.noLocking) {\r\n        return;\r\n    }\r\n    if (freeze) {\r\n        Object.freeze(obj); // freeze the entire object, permanently;\r\n    } else {\r\n        var desc = {\r\n            writable: false,\r\n            configurable: false,\r\n            enumerable: true\r\n        };\r\n        for (var p in obj) {\r\n            Object.defineProperty(obj, p, desc);\r\n        }\r\n    }\r\n}\r\n\r\n/////////////////////////////////////////////\r\n// Adds properties from source to the target,\r\n// making them read-only and enumerable.\r\nfunction addReadProperties(target, source) {\r\n    for (var p in source) {\r\n        addReadProp(target, p, source[p]);\r\n    }\r\n}\r\n\r\n///////////////////////////////////////////////////////\r\n// Adds a read-only, non-deletable enumerable property.\r\nfunction addReadProp(obj, name, value, hidden) {\r\n    Object.defineProperty(obj, name, {\r\n        value: value,\r\n        configurable: false,\r\n        enumerable: !hidden,\r\n        writable: false\r\n    });\r\n}\r\n\r\n//////////////////////////////////////////////////////////////\r\n// Converts a connection string or object into its safe copy:\r\n// if password is present, it is masked with symbol '#'.\r\nfunction getSafeConnection(cn) {\r\n    if (typeof cn === 'object') {\r\n        var copy = JSON.parse(JSON.stringify(cn));\r\n        if (typeof copy.password === 'string') {\r\n            copy.password = copy.password.replace(/./g, '#');\r\n        }\r\n        return copy;\r\n    }\r\n    // or else it is a connection string;\r\n    return cn.replace(/:(?![\\/])([^@]+)/, (_, m) => {\r\n        return ':' + new Array(m.length + 1).join('#');\r\n    });\r\n}\r\n\r\n///////////////////////////////////////////\r\n// Returns a space gap for console output;\r\nfunction messageGap(level) {\r\n    return Array(1 + level * 4).join(' ');\r\n}\r\n\r\n/////////////////////////////////////////\r\n// Provides platform-neutral inheritance;\r\nfunction inherits(child, parent) {\r\n    child.prototype.__proto__ = parent.prototype;\r\n}\r\n\r\n///////////////////////////////////////////////////////////////////////////\r\n// Checks if the path is absolute;\r\n//\r\n// We exclude this from the coverage, because the code is platform-specific,\r\n// and while most of its code is for Windows, Travis CI is a linux platform.\r\n//\r\n// istanbul ignore next\r\nfunction isPathAbsolute(path) {\r\n    // Based on: https://github.com/sindresorhus/path-is-absolute\r\n    if (process.platform === 'win32') {\r\n        var splitDeviceRe = /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$/;\r\n        var result = splitDeviceRe.exec(path);\r\n        var device = result[1] || '';\r\n        var isUnc = !!device && device.charAt(1) !== ':';\r\n        return !!result[2] || isUnc;\r\n    }\r\n    return path.charAt(0) === '/';\r\n}\r\n\r\nfunction getLocalStack(startIdx) {\r\n    // from the call stack, we take only lines starting with the client's\r\n    // source code, and only those that contain a full path inside brackets,\r\n    // indicating a reference to the client's source code:\r\n    return new Error().stack.split('\\n').slice(startIdx).filter(line => {\r\n        return line.match(/\\(.*(\\\\+|\\/+).*\\)/); // contains \\ or / inside ()\r\n    }).join('\\n');\r\n}\r\n\r\n//////////////////////////////\r\n// Internal error container;\r\nfunction InternalError(error) {\r\n    this.error = error;\r\n}\r\n\r\nvar exp = {\r\n    InternalError: InternalError,\r\n    getLocalStack: getLocalStack,\r\n    isPathAbsolute: isPathAbsolute,\r\n    lock: lock,\r\n    isText: isText,\r\n    isNull: isNull,\r\n    isDev: isDev,\r\n    isObject: isObject,\r\n    addReadProp: addReadProp,\r\n    addReadProperties: addReadProperties,\r\n    getSafeConnection: getSafeConnection,\r\n    messageGap: messageGap,\r\n    inherits: inherits\r\n};\r\n\r\nvar mainFile = process.argv[1];\r\n\r\n// istanbul ignore next\r\nexp.startDir = mainFile ? $path.dirname(mainFile) : process.cwd();\r\n\r\nObject.freeze(exp);\r\n\r\nmodule.exports = exp;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/lib/utils/index.js\n// module id = 1\n// module chunks = 0","module.exports = require(\"events\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"events\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"os\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"os\"\n// module id = 3\n// module chunks = 0","'use strict';\r\n\r\nvar $pgUtils = require('pg/lib/utils');\r\nvar $arr = require('../lib/array');\r\n\r\n// Format Modification Flags;\r\nvar fmFlags = {\r\n    raw: 1, // Raw-Text variable\r\n    name: 2, // SQL Name/Identifier\r\n    json: 4, // JSON modifier\r\n    csv: 8, // CSV modifier\r\n    value: 16 // escaped, but without ''\r\n};\r\n\r\n// Format Modification Map;\r\nvar fmMap = {\r\n    '^': fmFlags.raw,\r\n    ':raw': fmFlags.raw,\r\n    '~': fmFlags.name,\r\n    ':name': fmFlags.name,\r\n    ':json': fmFlags.json,\r\n    ':csv': fmFlags.csv,\r\n    ':value': fmFlags.value,\r\n    '#': fmFlags.value\r\n};\r\n\r\n////////////////////////////////////////////////////\r\n// Converts a single value into its Postgres format.\r\nfunction formatValue(value, fm, obj) {\r\n\r\n    if (typeof value === 'function') {\r\n        return formatValue(resolveFunc(value, obj), fm, obj);\r\n    }\r\n\r\n    if (value && typeof value === 'object') {\r\n        var ctf = value['formatDBType']; // custom type formatting;\r\n        if (typeof ctf === 'function') {\r\n            fm |= value._rawDBType ? fmFlags.raw : 0;\r\n            return formatValue(resolveFunc(ctf, value), fm, obj);\r\n        }\r\n    }\r\n\r\n    var isRaw = !!(fm & fmFlags.raw);\r\n    fm &= ~fmFlags.raw;\r\n\r\n    switch (fm) {\r\n        case fmFlags.name:\r\n            return $as.name(value);\r\n        case fmFlags.json:\r\n            return $as.json(value, isRaw);\r\n        case fmFlags.csv:\r\n            return $as.csv(value);\r\n        case fmFlags.value:\r\n            return $as.value(value);\r\n        default:\r\n            break;\r\n    }\r\n\r\n    if (isNull(value)) {\r\n        throwIfRaw(isRaw);\r\n        return 'null';\r\n    }\r\n\r\n    switch (typeof value) {\r\n        case 'string':\r\n            return $as.text(value, isRaw);\r\n        case 'boolean':\r\n            return $as.bool(value);\r\n        case 'number':\r\n            return $as.number(value);\r\n        default:\r\n            if (value instanceof Date) {\r\n                return $as.date(value, isRaw);\r\n            }\r\n            if (value instanceof Array) {\r\n                return $as.array(value);\r\n            }\r\n            if (value instanceof Buffer) {\r\n                return $as.buffer(value, isRaw);\r\n            }\r\n            return $as.json(value, isRaw);\r\n    }\r\n}\r\n\r\n//////////////////////////////////////////////////////////////////////////\r\n// Converts array of values into PostgreSQL Array Constructor: array[...],\r\n// as per PostgreSQL documentation: http://www.postgresql.org/docs/9.4/static/arrays.html\r\n// Arrays of any depth/dimension are supported.\r\nfunction formatArray(array) {\r\n    var loop = a => '[' + $arr.map(a, v => v instanceof Array ? loop(v) : formatValue(v)).join() + ']';\r\n    return 'array' + loop(array);\r\n}\r\n\r\n///////////////////////////////////////////////////////////////\r\n// Formats array of javascript-type parameters as a csv string,\r\n// so it can be passed into a PostgreSQL function.\r\n// Both single value and array or values are supported.\r\nfunction formatCSV(values) {\r\n    if (values instanceof Array) {\r\n        return $arr.map(values, v => formatValue(v)).join();\r\n    }\r\n    return values === undefined ? '' : formatValue(values);\r\n}\r\n\r\n///////////////////////////////\r\n// Query formatting helpers;\r\nvar formatAs = {\r\n\r\n    object: (query, obj, raw, options) => {\r\n        options = options && typeof options === 'object' ? options : {};\r\n        var pattern = /\\$(?:({)|(\\()|(<)|(\\[)|(\\/))\\s*[a-zA-Z0-9\\$_]+(\\^|~|#|:raw|:name|:json|:csv|:value)?\\s*(?:(?=\\2)(?=\\3)(?=\\4)(?=\\5)}|(?=\\1)(?=\\3)(?=\\4)(?=\\5)\\)|(?=\\1)(?=\\2)(?=\\4)(?=\\5)>|(?=\\1)(?=\\2)(?=\\3)(?=\\5)]|(?=\\1)(?=\\2)(?=\\3)(?=\\4)\\/)/g;\r\n        return query.replace(pattern, name => {\r\n            var v = formatAs.stripName(name.replace(/^\\$[{(<[/]|[\\s})>\\]/]/g, ''), raw);\r\n            if (v.name in obj) {\r\n                return formatValue(obj[v.name], v.fm, obj);\r\n            }\r\n            if (v.name === 'this') {\r\n                return formatValue(obj, v.fm);\r\n            }\r\n            if ('default' in options) {\r\n                var d = options.default, value = typeof d === 'function' ? d.call(obj, v.name, obj) : d;\r\n                return formatValue(value, v.fm, obj);\r\n            }\r\n            if (options.partial) {\r\n                return name;\r\n            }\r\n            // property must exist as the object's own or inherited;\r\n            throw new Error('Property \\'' + v.name + '\\' doesn\\'t exist.');\r\n        });\r\n    },\r\n\r\n    array: (query, array, raw, options) => {\r\n        options = options && typeof options === 'object' ? options : {};\r\n        return query.replace(/\\$([1-9][0-9]{0,3}(?![0-9])(\\^|~|#|:raw|:name|:json|:csv|:value)?)/g, name => {\r\n            var v = formatAs.stripName(name.substr(1), raw);\r\n            var idx = v.name - 1;\r\n            if (idx < array.length) {\r\n                return formatValue(array[idx], v.fm);\r\n            }\r\n            if ('default' in options) {\r\n                var d = options.default, value = typeof d === 'function' ? d.call(array, idx, array) : d;\r\n                return formatValue(value, v.fm);\r\n            }\r\n            if (options.partial) {\r\n                return name;\r\n            }\r\n            throw new RangeError('Variable $' + v.name + ' out of range. Parameters array length: ' + array.length);\r\n        });\r\n    },\r\n\r\n    value: (query, value, raw) => {\r\n        return query.replace(/\\$1(?![0-9])(\\^|~|#|:raw|:name|:json|:csv|:value)?/g, name => {\r\n            var v = formatAs.stripName(name, raw);\r\n            return formatValue(value, v.fm);\r\n        });\r\n    },\r\n\r\n    stripName: (name, raw) => {\r\n        var mod = name.match(/\\^|~|#|:raw|:name|:json|:csv|:value/);\r\n        if (mod) {\r\n            return {\r\n                name: name.substr(0, mod.index),\r\n                fm: fmMap[mod[0]] | (raw ? fmFlags.raw : 0)\r\n            };\r\n        } else {\r\n            return {\r\n                name: name,\r\n                fm: raw ? fmFlags.raw : null\r\n            };\r\n        }\r\n    }\r\n};\r\n\r\n////////////////////////////////////////////\r\n// Simpler check for null/undefined;\r\nfunction isNull(value) {\r\n    return value === undefined || value === null;\r\n}\r\n\r\n/////////////////////////////////////////\r\n// Wraps a text string in single quotes;\r\nfunction TEXT(text) {\r\n    return '\\'' + text + '\\'';\r\n}\r\n\r\n////////////////////////////////////////////////\r\n// Replaces each single-quote symbol ' with two,\r\n// for compliance with PostgreSQL strings.\r\nfunction safeText(text) {\r\n    return text.replace(/'/g, '\\'\\'');\r\n}\r\n\r\n/////////////////////////////////////////////\r\n// Throws an exception, if flag 'raw' is set.\r\nfunction throwIfRaw(raw) {\r\n    if (raw) {\r\n        throw new TypeError('Values null/undefined cannot be used as raw text.');\r\n    }\r\n}\r\n\r\n////////////////////////////////////////////\r\n// Recursively resolves parameter-function,\r\n// with the optional calling context.\r\nfunction resolveFunc(value, obj) {\r\n    while (typeof value === 'function') {\r\n        value = obj ? value.call(obj) : value();\r\n    }\r\n    return value;\r\n}\r\n\r\n///////////////////////////////////////////////////////////////////////////////////\r\n// 'pg-promise' query formatting solution;\r\n//\r\n// It implements two types of formatting, depending on the 'values' passed:\r\n//\r\n// 1. format \"$1, $2, etc\", when 'values' is of type string, boolean, number, date,\r\n//    function or null (or an array of the same types, plus undefined values);\r\n// 2. format $*propName*, when 'values' is an object (not null and not Date),\r\n//    and where * is any of the supported open-close pairs: {}, (), [], <>, //\r\n//\r\n// NOTES:\r\n// 1. Raw-text values can be injected using syntax: $1^,$2^,... or $*propName^*\r\n// 2. If 'values' is an object that supports function formatDBType, either its\r\n//    own or inherited, the actual value and the formatting syntax are determined\r\n//    by the result returned from that function.\r\n//\r\n// When formatting fails, the function throws an error.\r\nfunction $formatQuery(query, values, raw, options) {\r\n    if (typeof query !== 'string') {\r\n        throw new TypeError('Parameter \\'query\\' must be a text string.');\r\n    }\r\n    if (values && typeof values === 'object') {\r\n        var ctf = values['formatDBType']; // custom type formatting;\r\n        if (typeof ctf === 'function') {\r\n            return $formatQuery(query, resolveFunc(ctf, values), raw || values._rawDBType, options);\r\n        }\r\n        if (values instanceof Array) {\r\n            // $1, $2,... formatting to be applied;\r\n            return formatAs.array(query, values, raw, options);\r\n        }\r\n        if (!(values instanceof Date || values instanceof Buffer)) {\r\n            // $*propName* formatting to be applied;\r\n            return formatAs.object(query, values, raw, options);\r\n        }\r\n    }\r\n    // $1 formatting to be applied, if values != undefined;\r\n    return values === undefined ? query : formatAs.value(query, values, raw);\r\n}\r\n\r\n//////////////////////////////////////////////////////\r\n// Formats a standard PostgreSQL function call query;\r\nfunction $formatFunction(funcName, values, capSQL) {\r\n    var sql = capSQL ? 'SELECT * FROM ' : 'select * from ';\r\n    return sql + funcName + '(' + formatCSV(values) + ')';\r\n}\r\n\r\n/**\r\n * @namespace formatting\r\n * @description\r\n * Namespace for all query-formatting functions, available from `pgp.as`, before and after initializing the library.\r\n *\r\n * @property {function} name\r\n * {@link formatting.name name} - formats an SQL name.\r\n *\r\n * @property {function} text\r\n * {@link formatting.text text} - formats a text string.\r\n *\r\n * @property {function} number\r\n * {@link formatting.number number} - formats a number.\r\n *\r\n * @property {function} buffer\r\n * {@link formatting.buffer buffer} - formats a `Buffer` object.\r\n *\r\n * @property {function} value\r\n * {@link formatting.value value} - formats text as an open value.\r\n *\r\n * @property {function} json\r\n * {@link formatting.json json} - formats any value as JSON.\r\n *\r\n * @property {function} func\r\n * {@link formatting.func func} - formats the value returned from a function.\r\n *\r\n * @property {function} format\r\n * {@link formatting.format format} - formats a query according to parameters.\r\n *\r\n */\r\nvar $as = {\r\n\r\n    /**\r\n     * @method formatting.text\r\n     * @description\r\n     * Converts a value into PostgreSQL text presentation, escaped as required.\r\n     *\r\n     * Escaping the result means:\r\n     *  1. Every single-quote (apostrophe) is replaced with two\r\n     *  2. The resulting text is wrapped in apostrophes\r\n     *\r\n     * @param {value|function} value\r\n     * Value to be converted, or a function that returns the value.\r\n     *\r\n     * If the `value` resolves as `null` or `undefined`, while `raw`=`true`,\r\n     * it will throw {@link external:TypeError TypeError} = `Values null/undefined cannot be used as raw text.`\r\n     *\r\n     * @param {boolean} [raw=false]\r\n     * Indicates when not to escape the resulting text.\r\n     *\r\n     * @returns {string}\r\n     *\r\n     * - `null` string, if the `value` resolves as `null` or `undefined`\r\n     * - escaped result of `value.toString()`, if the `value` isn't a string\r\n     * - escaped string version, if `value` is a string.\r\n     *\r\n     *  The result is not escaped, if `raw` was passed in as `true`.\r\n     */\r\n    text: (value, raw) => {\r\n        value = resolveFunc(value);\r\n        if (isNull(value)) {\r\n            throwIfRaw(raw);\r\n            return 'null';\r\n        }\r\n        if (typeof value !== 'string') {\r\n            value = value.toString();\r\n        }\r\n        return raw ? value : TEXT(safeText(value));\r\n    },\r\n\r\n    /**\r\n     * @method formatting.name\r\n     * @description\r\n     * Properly escapes an sql name or identifier, fixing double-quote symbols and wrapping the result in double quotes.\r\n     *\r\n     * Implements a safe way to format SQL Names that neutralizes SQL Injection.\r\n     *\r\n     * @param {string|function|array|object} name\r\n     * SQL name or identifier, or a function that returns it.\r\n     *\r\n     * The name must be at least 1 character long.\r\n     *\r\n     * If `name` doesn't resolve into a non-empty string, it throws {@link external:TypeError TypeError} = `Invalid sql name: ...`\r\n     *\r\n     * If the `name` contains only a single `*` (trailing spaces are ignored), then `name` is returned exactly as is (unescaped).\r\n     *\r\n     * **Added in v.5.2.1:**\r\n     *\r\n     * - If `name` is an Array, it is formatted as a comma-separated list of SQL names\r\n     * - If `name` is a non-Array object, its keys are formatted as a comma-separated list of SQL names\r\n     *\r\n     * Passing in an empty array/object will throw {@link external:Error Error} = `Cannot retrieve sql names from an empty array/object.`\r\n     *\r\n     * @returns {string}\r\n     * The SQL Name/Identifier properly escaped for compliance with the PostgreSQL standard for SQL names and identifiers.\r\n     *\r\n     * @example\r\n     *\r\n     * // example of using v5.2.1 feature:\r\n     * // automatically list object properties as sql names:\r\n     * format('INSERT INTO table(${this~}) VALUES(${one}, ${two})', {\r\n     *     one: 1,\r\n     *     two: 2\r\n     * });\r\n     * //=> INSERT INTO table(\"one\",\"two\") VALUES(1, 2)\r\n     *\r\n     */\r\n    name: name => {\r\n        name = resolveFunc(name);\r\n        if (name) {\r\n            if (typeof name === 'string') {\r\n                return /^\\s*\\*(\\s*)$/.test(name) ? name : formatName(name);\r\n            } else {\r\n                if (typeof name === 'object') {\r\n                    var keys = Array.isArray(name) ? name : Object.keys(name);\r\n                    if (!keys.length) {\r\n                        throw new Error('Cannot retrieve sql names from an empty array/object.');\r\n                    }\r\n                    return $arr.map(keys, value => {\r\n                        if (!value || typeof value !== 'string') {\r\n                            throw new Error('Invalid sql name: ' + JSON.stringify(value));\r\n                        }\r\n                        return formatName(value);\r\n                    }).join();\r\n                }\r\n            }\r\n        }\r\n\r\n        throw new TypeError('Invalid sql name: ' + JSON.stringify(name));\r\n\r\n        function formatName(name) {\r\n            return '\"' + name.replace(/\"/g, '\"\"') + '\"';\r\n        }\r\n    },\r\n\r\n    /**\r\n     * @method formatting.value\r\n     * @description\r\n     * Represents an open value, one to be formatted according to its type, properly escaped,\r\n     * but without surrounding quotes for text types.\r\n     *\r\n     * @param {value|function} value\r\n     * Value to be converted, or a function that returns the value.\r\n     *\r\n     * If `value` resolves as `null` or `undefined`, it will throw {@link external:TypeError TypeError} = `Open values cannot be null or undefined.`\r\n     *\r\n     * @returns {string}\r\n     * Formatted and properly escaped string, but without surrounding quotes for text types.\r\n     */\r\n    value: value => {\r\n        value = resolveFunc(value);\r\n        if (isNull(value)) {\r\n            throw new TypeError('Open values cannot be null or undefined.');\r\n        }\r\n        return safeText(formatValue(value, fmFlags.raw));\r\n    },\r\n\r\n    /**\r\n     * @method formatting.buffer\r\n     * @description\r\n     * Converts an object of type `Buffer` into a hex string compatible with PostgreSQL type `bytea`.\r\n     *\r\n     * @param {Buffer|function} obj\r\n     * Object to be converted, or a function that returns one.\r\n     *\r\n     * @param {boolean} [raw=false]\r\n     * Indicates when not to wrap the resulting string in quotes.\r\n     *\r\n     * The generated hex string doesn't need to be escaped.\r\n     *\r\n     * @returns {string}\r\n     */\r\n    buffer: (obj, raw) => {\r\n        obj = resolveFunc(obj);\r\n        if (isNull(obj)) {\r\n            throwIfRaw(raw);\r\n            return 'null';\r\n        }\r\n        if (obj instanceof Buffer) {\r\n            var s = '\\\\x' + obj.toString('hex');\r\n            return raw ? s : TEXT(s);\r\n        }\r\n        throw new TypeError(TEXT(obj) + ' is not a Buffer object.');\r\n    },\r\n\r\n    /**\r\n     * @method formatting.bool\r\n     * @description\r\n     * Converts a truthy value into PostgreSQL boolean presentation.\r\n     *\r\n     * @param {boolean|function} value\r\n     * Value to be converted, or a function that returns the value.\r\n     *\r\n     * @returns {string}\r\n     */\r\n    bool: value => {\r\n        value = resolveFunc(value);\r\n        if (isNull(value)) {\r\n            return 'null';\r\n        }\r\n        return value ? 'true' : 'false';\r\n    },\r\n\r\n    /**\r\n     * @method formatting.date\r\n     * @description\r\n     * Converts a `Date`-type value into PostgreSQL date/time presentation,\r\n     * wrapped in quotes (unless flag `raw` is set).\r\n     *\r\n     * @param {date|function} d\r\n     * Date object to be converted, or a function that returns one.\r\n     *\r\n     * @param {boolean} [raw=false]\r\n     * Indicates when not to escape the value.\r\n     *\r\n     * @returns {string}\r\n     */\r\n    date: (d, raw) => {\r\n        d = resolveFunc(d);\r\n        if (isNull(d)) {\r\n            throwIfRaw(raw);\r\n            return 'null';\r\n        }\r\n        if (d instanceof Date) {\r\n            var s = $pgUtils.prepareValue(d);\r\n            return raw ? s : TEXT(s);\r\n        }\r\n        throw new TypeError(TEXT(d) + ' is not a Date object.');\r\n    },\r\n\r\n    /**\r\n     * @method formatting.number\r\n     * @description\r\n     * Converts a numeric value into its PostgreSQL number presentation,\r\n     * with support for `NaN`, `+Infinity` and `-Infinity`.\r\n     *\r\n     * @param {number|function} num\r\n     * Number to be converted, or a function that returns one.\r\n     *\r\n     * @returns {string}\r\n     */\r\n    number: num => {\r\n        num = resolveFunc(num);\r\n        if (isNull(num)) {\r\n            return 'null';\r\n        }\r\n        if (typeof num !== 'number') {\r\n            throw new TypeError(TEXT(num) + ' is not a number.');\r\n        }\r\n        if (isFinite(num)) {\r\n            return num.toString();\r\n        }\r\n        // Converting NaN/+Infinity/-Infinity according to Postgres documentation:\r\n        // http://www.postgresql.org/docs/9.4/static/datatype-numeric.html#DATATYPE-FLOAT\r\n        //\r\n        // NOTE: strings for 'NaN'/'+Infinity'/'-Infinity' are not case-sensitive.\r\n        if (num === Number.POSITIVE_INFINITY) {\r\n            return TEXT('+Infinity');\r\n        }\r\n        if (num === Number.NEGATIVE_INFINITY) {\r\n            return TEXT('-Infinity');\r\n        }\r\n        return TEXT('NaN');\r\n    },\r\n\r\n    /**\r\n     * @method formatting.array\r\n     * @description\r\n     * Converts an array of values into its PostgreSQL presentation as an Array-Type\r\n     * constructor string: `array[]`.\r\n     *\r\n     * @param {array|function} arr\r\n     * Array to be converted, or a function that returns one.\r\n     *\r\n     * @returns {string}\r\n     */\r\n    array: arr => {\r\n        arr = resolveFunc(arr);\r\n        if (isNull(arr)) {\r\n            return 'null';\r\n        }\r\n        if (arr instanceof Array) {\r\n            return formatArray(arr);\r\n        }\r\n        throw new TypeError(TEXT(arr) + ' is not an Array object.');\r\n    },\r\n\r\n    /**\r\n     * @method formatting.csv\r\n     * @description\r\n     * Converts a single value or an array of values into a CSV string, with all values formatted\r\n     * according to their type.\r\n     *\r\n     * @param {array|value|function} values\r\n     * Value(s) to be converted, or a function that returns it.\r\n     *\r\n     * @returns {string}\r\n     */\r\n    csv: values => formatCSV(resolveFunc(values)),\r\n\r\n    /**\r\n     * @method formatting.json\r\n     * @description\r\n     * Converts any value into JSON (using `JSON.stringify`), and returns it as\r\n     * a valid string, with single-quote symbols fixed, unless flag `raw` is set.\r\n     *\r\n     * @param {object|function} obj\r\n     * Object/Value to be converted, or a function that returns it.\r\n     *\r\n     * @param {boolean} [raw=false]\r\n     * Indicates when not to escape the result.\r\n     *\r\n     * @returns {string}\r\n     */\r\n    json: (obj, raw) => {\r\n        obj = resolveFunc(obj);\r\n        if (isNull(obj)) {\r\n            throwIfRaw(raw);\r\n            return 'null';\r\n        }\r\n        var s = JSON.stringify(obj);\r\n        return raw ? s : TEXT(safeText(s));\r\n    },\r\n\r\n    /**\r\n     * @method formatting.func\r\n     * @description\r\n     * Calls the function to get the actual value, and then formats the result\r\n     * according to its type + `raw` flag.\r\n     *\r\n     * @param {function} func\r\n     * Function to be called, with support for nesting.\r\n     *\r\n     * @param {boolean} [raw=false]\r\n     * Indicates when not to escape the result.\r\n     *\r\n     * @param {object} [obj]\r\n     * `this` context to be passed into the function on all nested levels.\r\n     *\r\n     * @returns {string}\r\n     */\r\n    func: (func, raw, obj) => {\r\n        if (isNull(func)) {\r\n            throwIfRaw(raw);\r\n            return 'null';\r\n        }\r\n        if (typeof func !== 'function') {\r\n            throw new TypeError(TEXT(func) + ' is not a function.');\r\n        }\r\n        var fm = raw ? fmFlags.raw : null;\r\n        if (isNull(obj)) {\r\n            return formatValue(resolveFunc(func), fm);\r\n        }\r\n        if (typeof obj === 'object') {\r\n            return formatValue(resolveFunc(func, obj), fm, obj);\r\n        }\r\n        throw new TypeError(TEXT(obj) + ' is not an object.');\r\n    },\r\n\r\n    /**\r\n     * @method formatting.format\r\n     * @description\r\n     * Replaces variables in a string according to the type of `values`:\r\n     *\r\n     * - Replaces `$1` occurrences when `values` is of type `string`, `boolean`, `number`, `Date`, `Buffer` or when it is `null`.\r\n     * - Replaces variables `$1`, `$2`, ...`$9999` when `values` is an array of parameters. When a variable is out of range,\r\n     *   it throws {@link external:RangeError RangeError} = `Variable $n out of range. Parameters array length: x`, unless\r\n     *   option `partial` is used.\r\n     * - Replaces `$*propName*`, where `*` is any of `{}`, `()`, `[]`, `<>`, `//`, when `values` is an object that's not a\r\n     * `Date`, `Buffer`, {@link QueryFile} or `null`. Special property name `this` refers to the formatting object itself,\r\n     *   to be injected as a JSON string. When referencing a property that doesn't exist in the formatting object, it throws\r\n     *   {@link external:Error Error} = `Property 'PropName' doesn't exist`, unless option `partial` is used.\r\n     *\r\n     * By default, each variable is automatically formatted according to its type, unless it is a special variable:\r\n     * - Raw-text variables end with `:raw` or symbol `^`, and prevent escaping the text. Such variables are not\r\n     *   allowed to be `null` or `undefined`, or the method will throw {@link external:TypeError TypeError} = `Values null/undefined cannot be used as raw text.`\r\n     *   - `$1:raw`, `$2:raw`,..., and `$*propName:raw*` (see `*` above)\r\n     *   - `$1^`, `$2^`,..., and `$*propName^*` (see `*` above)\r\n     * - Open-value variables end with `:value` or symbol `#`, to be escaped, but not wrapped in quotes. Such variables are\r\n     *   not allowed to be `null` or `undefined`, or the method will throw {@link external:TypeError TypeError} = `Open values cannot be null or undefined.`\r\n     *   - `$1:value`, `$2:value`,..., and `$*propName:value*` (see `*` above)\r\n     *   - `$1#`, `$2#`,..., and `$*propName#*` (see `*` above)\r\n     * - SQL name variables end with `:name` or symbol `~` (tilde), and provide proper escaping for SQL names/identifiers:\r\n     *   - `$1:name`, `$2:name`,..., and `$*propName:name*` (see `*` above)\r\n     *   - `$1~`, `$2~`,..., and `$*propName~*` (see `*` above)\r\n     * - JSON override ends with `:json` to format the value of any type as a JSON string\r\n     * - CSV override ends with `:csv` to format an array as a properly escaped comma-separated list of values.\r\n     *\r\n     * @param {string|value|Object} query\r\n     * A query string or a value/object that implements $[Custom Type Formatting], to be formatted according to `values`.\r\n     *\r\n     * **NOTE:** Support for $[Custom Type Formatting] was added in v5.2.7.\r\n     *\r\n     * @param {array|object|value} [values]\r\n     * Formatting parameter(s) / variable value(s).\r\n     *\r\n     * @param {object} [options]\r\n     * Formatting Options.\r\n     *\r\n     * @param {boolean} [options.partial=false]\r\n     * Indicates that we intend to do only a partial replacement, i.e. throw no error when encountering a variable or\r\n     * property name that's missing within the formatting parameters.\r\n     *\r\n     * This option has no meaning when option `default` is present.\r\n     *\r\n     * @param {} [options.default]\r\n     * **Added in v.5.0.5**\r\n     *\r\n     * Sets a default value for every variable that's missing, consequently preventing errors when encountering a variable\r\n     * or property name that's missing within the formatting parameters.\r\n     *\r\n     * It can also be set to a function, to be called with two parameters that depend on the type of formatting being used,\r\n     * and to return the actual default value:\r\n     *\r\n     * - Named Parameters formatting:\r\n     *   - `name` - name of the property missing in the formatting object\r\n     *   - `obj` - the formatting object, and is the same as `this` context\r\n     *\r\n     * - Regular variable formatting:\r\n     *   - `index` - element's index that's outside of the formatting array's range\r\n     *   - `arr` - the formatting array, and is the same as `this` context\r\n     *\r\n     * @returns {string}\r\n     * Formatted query string.\r\n     *\r\n     * The function will throw an error, if any occurs during formatting.\r\n     */\r\n    format: (query, values, options) => {\r\n        if (query && typeof query.formatDBType === 'function') {\r\n            query = query.formatDBType();\r\n        }\r\n        return $formatQuery(query, values, false, options);\r\n    }\r\n};\r\n\r\nObject.freeze($as);\r\n\r\nmodule.exports = {\r\n    formatQuery: $formatQuery,\r\n    formatFunction: $formatFunction,\r\n    as: $as\r\n};\r\n\r\n/**\r\n * @external Error\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error\r\n */\r\n\r\n/**\r\n * @external TypeError\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError\r\n */\r\n\r\n/**\r\n * @external RangeError\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError\r\n */\r\n\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/lib/formatting.js\n// module id = 4\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 5\n// module chunks = 0","module.exports = require(\"stream\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"stream\"\n// module id = 6\n// module chunks = 0","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 7\n// module chunks = 0","exports.ClientAuthenticationPacket = require('./ClientAuthenticationPacket');\nexports.ComChangeUserPacket = require('./ComChangeUserPacket');\nexports.ComPingPacket = require('./ComPingPacket');\nexports.ComQueryPacket = require('./ComQueryPacket');\nexports.ComQuitPacket = require('./ComQuitPacket');\nexports.ComStatisticsPacket = require('./ComStatisticsPacket');\nexports.EmptyPacket = require('./EmptyPacket');\nexports.EofPacket = require('./EofPacket');\nexports.ErrorPacket = require('./ErrorPacket');\nexports.Field = require('./Field');\nexports.FieldPacket = require('./FieldPacket');\nexports.HandshakeInitializationPacket = require('./HandshakeInitializationPacket');\nexports.LocalDataFilePacket = require('./LocalDataFilePacket');\nexports.OkPacket = require('./OkPacket');\nexports.OldPasswordPacket = require('./OldPasswordPacket');\nexports.ResultSetHeaderPacket = require('./ResultSetHeaderPacket');\nexports.RowDataPacket = require('./RowDataPacket');\nexports.SSLRequestPacket = require('./SSLRequestPacket');\nexports.StatisticsPacket = require('./StatisticsPacket');\nexports.UseOldPasswordPacket = require('./UseOldPasswordPacket');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/protocol/packets/index.js\n// module id = 8\n// module chunks = 0","'use strict';\r\n\r\n// Number of times it is faster than the standard 'map', by Node.js versions:\r\n// 0.10.44: ~2.8\r\n// 0.11.16: ~3.8\r\n// 0.12.13: ~3.8\r\n// 4.4.4: ~1.38\r\n// 5.11.0: ~1.44\r\n// 6.1.0: ~8.25\r\nfunction map(arr, cb, obj) {\r\n    var res = new Array(arr.length);\r\n    if (obj) {\r\n        for (var i = 0; i < arr.length; i++) {\r\n            res[i] = cb.call(obj, arr[i], i, arr);\r\n        }\r\n    } else {\r\n        for (var k = 0; k < arr.length; k++) {\r\n            res[k] = cb(arr[k], k, arr);\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\n// Number of times it is faster than the standard 'filter', by Node.js versions:\r\n// 0.10.44: ~2.42\r\n// 0.11.16: ~2.83\r\n// 0.12.13: ~2.78\r\n// 4.4.4: ~1.12\r\n// 5.11.0: ~1.14\r\n// 6.1.0: ~7.54\r\nfunction filter(arr, cb, obj) {\r\n    var res = [];\r\n    if (obj) {\r\n        for (var i = 0; i < arr.length; i++) {\r\n            if (cb.call(obj, arr[i], i, arr)) {\r\n                res.push(arr[i]);\r\n            }\r\n        }\r\n    } else {\r\n        for (var k = 0; k < arr.length; k++) {\r\n            if (cb(arr[k], k, arr)) {\r\n                res.push(arr[k]);\r\n            }\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\n// Number of times it is faster than the standard 'forEach', by Node.js versions:\r\n// 0.10.44: ~3.11\r\n// 0.11.16: ~4.6\r\n// 0.12.13: ~4.4\r\n// 4.4.4: ~1.55\r\n// 5.11.0: ~1.54\r\n// 6.1.0: ~1.21\r\nfunction forEach(arr, cb, obj) {\r\n    if (obj) {\r\n        for (var i = 0; i < arr.length; i++) {\r\n            cb.call(obj, arr[i], i, arr);\r\n        }\r\n    } else {\r\n        for (var k = 0; k < arr.length; k++) {\r\n            cb(arr[k], k, arr);\r\n        }\r\n    }\r\n}\r\n\r\n//////////////////////////\r\n// Custom Methods\r\n//////////////////////////\r\n\r\n// Counts elements based on a condition;\r\nfunction countIf(arr, cb, obj) {\r\n    var count = 0;\r\n    if (obj) {\r\n        for (var i = 0; i < arr.length; i++) {\r\n            count += cb.call(obj, arr[i], i, arr) ? 1 : 0;\r\n        }\r\n    } else {\r\n        for (var k = 0; k < arr.length; k++) {\r\n            count += cb(arr[k], k, arr) ? 1 : 0;\r\n        }\r\n    }\r\n    return count;\r\n}\r\n\r\nmodule.exports = {\r\n    map: map,\r\n    filter: filter,\r\n    forEach: forEach,\r\n    countIf: countIf\r\n};\r\n\r\nObject.freeze(module.exports);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/lib/array.js\n// module id = 9\n// module chunks = 0","var Util           = require('util');\nvar EventEmitter   = require('events').EventEmitter;\nvar Packets        = require('../packets');\nvar ErrorConstants = require('../constants/errors');\n\n// istanbul ignore next: Node.js < 0.10 not covered\nvar listenerCount = EventEmitter.listenerCount\n  || function(emitter, type){ return emitter.listeners(type).length; };\n\nvar LONG_STACK_DELIMITER = '\\n    --------------------\\n';\n\nmodule.exports = Sequence;\nUtil.inherits(Sequence, EventEmitter);\nfunction Sequence(options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  EventEmitter.call(this);\n\n  options = options || {};\n\n  this._callback = callback;\n  this._callSite = null;\n  this._ended    = false;\n  this._timeout  = options.timeout;\n\n  // For Timers\n  this._idleNext    = null;\n  this._idlePrev    = null;\n  this._idleStart   = null;\n  this._idleTimeout = -1;\n  this._repeat      = null;\n}\n\nSequence.determinePacket = function(byte) {\n  switch (byte) {\n    case 0x00: return Packets.OkPacket;\n    case 0xfe: return Packets.EofPacket;\n    case 0xff: return Packets.ErrorPacket;\n    default:   return undefined;\n  }\n};\n\nSequence.prototype.hasErrorHandler = function() {\n  return Boolean(this._callback) || listenerCount(this, 'error') > 1;\n};\n\nSequence.prototype._packetToError = function(packet) {\n  var code = ErrorConstants[packet.errno] || 'UNKNOWN_CODE_PLEASE_REPORT';\n  var err  = new Error(code + ': ' + packet.message);\n  err.code = code;\n  err.errno = packet.errno;\n  err.sqlState = packet.sqlState;\n\n  return err;\n};\n\nSequence.prototype.end = function(err) {\n  if (this._ended) {\n    return;\n  }\n\n  this._ended = true;\n\n  if (err) {\n    this._addLongStackTrace(err);\n  }\n\n  // Without this we are leaking memory. This problem was introduced in\n  // 8189925374e7ce3819bbe88b64c7b15abac96b16. I suspect that the error object\n  // causes a cyclic reference that the GC does not detect properly, but I was\n  // unable to produce a standalone version of this leak. This would be a great\n  // challenge for somebody interested in difficult problems : )!\n  this._callSite = null;\n\n  // try...finally for exception safety\n  try {\n    if (err) {\n      this.emit('error', err);\n    }\n  } finally {\n    try {\n      if (this._callback) {\n        this._callback.apply(this, arguments);\n      }\n    } finally {\n      this.emit('end');\n    }\n  }\n};\n\nSequence.prototype['OkPacket'] = function(packet) {\n  this.end(null, packet);\n};\n\nSequence.prototype['ErrorPacket'] = function(packet) {\n  this.end(this._packetToError(packet));\n};\n\n// Implemented by child classes\nSequence.prototype.start = function() {};\n\nSequence.prototype._addLongStackTrace = function _addLongStackTrace(err) {\n  var callSiteStack = this._callSite && this._callSite.stack;\n\n  if (!callSiteStack || typeof callSiteStack !== 'string') {\n    // No recorded call site\n    return;\n  }\n\n  if (err.stack.indexOf(LONG_STACK_DELIMITER) !== -1) {\n    // Error stack already looks long\n    return;\n  }\n\n  var index = callSiteStack.indexOf('\\n');\n\n  if (index !== -1) {\n    // Append recorded call site\n    err.stack += LONG_STACK_DELIMITER + callSiteStack.substr(index + 1);\n  }\n};\n\nSequence.prototype._onTimeout = function _onTimeout() {\n  this.emit('timeout');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/protocol/sequences/Sequence.js\n// module id = 10\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\nforEach(objectKeys(Writable.prototype), function(method) {\n  if (!Duplex.prototype[method])\n    Duplex.prototype[method] = Writable.prototype[method];\n});\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex))\n    return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false)\n    this.readable = false;\n\n  if (options && options.writable === false)\n    this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false)\n    this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended)\n    return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(this.end.bind(this));\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/~/readable-stream/lib/_stream_duplex.js\n// module id = 11\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-util-is/lib/util.js\n// module id = 12\n// module chunks = 0","try {\n  var util = require('util');\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  module.exports = require('./inherits_browser.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/inherits/inherits.js\n// module id = 13\n// module chunks = 0","'use strict';\r\n\r\nvar $npm = {\r\n    con: require('manakin').local,\r\n    main: require('./'),\r\n    utils: require('./utils')\r\n};\r\n\r\n/////////////////////////////////\r\n// Client notification helpers;\r\nvar $events = {\r\n\r\n    /**\r\n     * @event connect\r\n     * @description\r\n     * Global notification of acquiring a new database connection from the connection pool,\r\n     * i.e. a virtual connection.\r\n     *\r\n     * However, for direct calls to method {@link Database.connect} with parameter `{direct: true}`,\r\n     * this event represents a physical connection.\r\n     *\r\n     * The library will suppress any error thrown by the handler and write it into the console.\r\n     *\r\n     * @param {external:Client} client\r\n     * $[pg.Client] object that represents the connection.\r\n     *\r\n     * @param {} dc\r\n     * Database Context that was used when creating the database object (see {@link Database}).\r\n     *\r\n     * @param {boolean} isFresh\r\n     * It indicates when it is a fresh physical connection:\r\n     * - `true` - the physical connection just has been allocated\r\n     * - `false` - the connection has been used previously\r\n     *\r\n     * **NOTE:**\r\n     *\r\n     * This parameter is always `true` for direct connections (created by calling {@link Database.connect}\r\n     * with parameter `{direct: true}`).\r\n     *\r\n     * @example\r\n     *\r\n     * var options = {\r\n     *\r\n     *     // pg-promise initialization options...\r\n     *\r\n     *     connect: (client, dc, isFresh) => {\r\n     *         var cp = client.connectionParameters;\r\n     *         console.log(\"Connected to database:\", cp.database);\r\n     *     }\r\n     *\r\n     * };\r\n     */\r\n    connect: (ctx, client, isFresh) => {\r\n        if (typeof ctx.options.connect === 'function') {\r\n            try {\r\n                ctx.options.connect(client, ctx.dc, isFresh);\r\n            } catch (e) {\r\n                // have to silence errors here;\r\n                // cannot allow unhandled errors while connecting to the database,\r\n                // as it will break the connection logic;\r\n                $events.unexpected('connect', e);\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * @event disconnect\r\n     * @description\r\n     * Global notification of releasing a database connection back to the connection pool,\r\n     * i.e. releasing the virtual connection.\r\n     *\r\n     * However, when releasing a direct connection (created by calling {@link Database.connect} with parameter\r\n     * `{direct: true}`), this event represents a physical disconnection.\r\n     *\r\n     * The library will suppress any error thrown by the handler and write it into the console.\r\n     *\r\n     * @param {external:Client} client - $[pg.Client] object that represents connection with the database.\r\n     *\r\n     * @param {} dc - Database Context that was used when creating the database object (see {@link Database}).\r\n     *\r\n     * @example\r\n     *\r\n     * var options = {\r\n     *\r\n     *     // pg-promise initialization options...\r\n     *\r\n     *     disconnect: (client, dc) => {\r\n     *        var cp = client.connectionParameters;\r\n     *        console.log(\"Disconnecting from database:\", cp.database);\r\n     *     }\r\n     *\r\n     * };\r\n     */\r\n    disconnect: (ctx, client) => {\r\n        if (typeof ctx.options.disconnect === 'function') {\r\n            try {\r\n                ctx.options.disconnect(client, ctx.dc);\r\n            } catch (e) {\r\n                // have to silence errors here;\r\n                // cannot allow unhandled errors while disconnecting from the database,\r\n                // as it will break the disconnection logic;\r\n                $events.unexpected('disconnect', e);\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * @event query\r\n     * @description\r\n     *\r\n     * Global notification of a query that's about to execute.\r\n     *\r\n     * Notification happens just before the query execution. And if the handler throws an error, the query execution\r\n     * will be rejected with that error.\r\n     *\r\n     * @param {object} e - Event Context Object.\r\n     *\r\n     * This is a shared-type object that's passed in with the following events: {@link event:query query},\r\n     * {@link event:receive receive}, {@link event:error error}, {@link event:task task} and {@link event:transact transact}.\r\n     *\r\n     * @param {String|Object} e.cn\r\n     *\r\n     * Set only for event {@link event:error error}, and only when the error is connection-related.\r\n     *\r\n     * It is a safe copy of the connection string/object that was used when initializing `db` - the database instance.\r\n     *\r\n     * If the original connection contains a password, the safe copy contains it masked with symbol `#`, so the connection\r\n     * can be logged safely, without exposing the password.\r\n     *\r\n     * @param {} e.dc\r\n     * Database Context that was used when creating the database object (see {@link Database}). It is set for all events.\r\n     *\r\n     * @param {String|Object} e.query\r\n     *\r\n     * Query string/object that was passed into the query method. This property is only set during events {@link event:query query}\r\n     * and {@link event:receive receive}.\r\n     *\r\n     * @param {external:Client} e.client\r\n     *\r\n     * $[pg.Client] object that represents the connection. It is set for all events, except for event {@link event:error error}\r\n     * when it is connection-related.\r\n     *\r\n     * @param {} e.params - Formatting parameters for the query.\r\n     *\r\n     * It is set only for events {@link event:query query}, {@link event:receive receive} and {@link event:error error}, and only\r\n     * when it is needed for logging. This library takes an extra step in figuring out when formatting parameters are of any value\r\n     * to the event logging:\r\n     * - when an error occurs related to the query formatting, event {@link event:error error} is sent with the property set.\r\n     * - when initialization parameter `pgFormat` is used, and all query formatting is done within the $[PG] library, events\r\n     * {@link event:query query} and {@link event:receive receive} will have this property set also, since this library no longer\r\n     * handles the query formatting.\r\n     *\r\n     * When this parameter is not set, it means one of the two things:\r\n     * - there were no parameters passed into the query method;\r\n     * - property `query` of this object already contains all the formatting values in it, so logging only the query is sufficient.\r\n     *\r\n     * @param {object} e.ctx\r\n     * _Task/Transaction Context_ object. See {@link Task.ctx} for details.\r\n     *\r\n     * This property is always set for events {@link event:task task} and {@link event:transact transact}, while for events\r\n     * {@link event:query query}, {@link event:receive receive} and {@link event:error error} it is only set when the event occurred\r\n     * while executing a task or transaction.\r\n     *\r\n     */\r\n    query: (options, context) => {\r\n        if (typeof options.query === 'function') {\r\n            try {\r\n                options.query(context);\r\n            } catch (e) {\r\n                // throwing an error during event 'query'\r\n                // will result in a reject for the request.\r\n                return e instanceof Error ? e : new $npm.utils.InternalError(e);\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * @event receive\r\n     * @description\r\n     * Global notification of any data received from the database, coming from a regular query or from a stream.\r\n     *\r\n     * The event is fired before the data reaches the client, and only when receiving 1 or more records.\r\n     *\r\n     * This event notification serves two purposes:\r\n     *  - Providing selective data logging for debugging;\r\n     *  - Pre-processing data before it reaches the client.\r\n     *\r\n     * **NOTES:**\r\n     * - If you alter the size of `data` directly or through the `result` object, it may affect `QueryResultMask`\r\n     *   validation for regular queries, which is executed right after this notification.\r\n     * - When adding data pre-processing, you should consider possible performance penalty this may bring.\r\n     * - If the event handler throws an error, the original request will be rejected with that error.\r\n     *\r\n     * @param {array} data\r\n     * A non-empty array of received data objects/rows.\r\n     *\r\n     * If any of those objects are modified during notification, the client will receive the modified data.\r\n     *\r\n     * @param {object} result\r\n     * - original $[Result] object, if the data comes from a regular query, in which case `data = result.rows`.\r\n     * - `undefined` when the data comes from a stream.\r\n     *\r\n     * @param {object} e\r\n     * Event Context Object.\r\n     *\r\n     * This type of object is used by several events. See event {@link event:query query} for its complete documentation.\r\n     *\r\n     * @example\r\n     *\r\n     * // Example below shows the fastest way to camelize column names:\r\n     *\r\n     * var options = {\r\n     *     receive: (data, result, e) => {\r\n     *         camelizeColumns(data);\r\n     *     }\r\n     * };\r\n     *\r\n     * function camelizeColumns(data) {\r\n     *     var template = data[0];\r\n     *     for (var prop in template) {\r\n     *         var camel = pgp.utils.camelize(prop);\r\n     *         if (!(camel in template)) {\r\n     *             for (var i = 0; i < data.length; i++) {\r\n     *                 var d = data[i];\r\n     *                 d[camel] = d[prop];\r\n     *                 delete d[prop];\r\n     *             }\r\n     *         }\r\n     *     }\r\n     * }\r\n     */\r\n    receive: (options, data, result, context) => {\r\n        if (typeof options.receive === 'function') {\r\n            try {\r\n                options.receive(data, result, context);\r\n            } catch (e) {\r\n                // throwing an error during event 'receive'\r\n                // will result in a reject for the request.\r\n                return e instanceof Error ? e : new $npm.utils.InternalError(e);\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * @event task\r\n     * @description\r\n     * Global notification of a task start / finish events.\r\n     *\r\n     * The library will suppress any error thrown by the handler and write it into the console.\r\n     *\r\n     * @param {object} e - Event Context Object.\r\n     *\r\n     * This type of object is used by several events. See event {@link event:query query}\r\n     * for its complete documentation.\r\n     *\r\n     * @example\r\n     *\r\n     * var options = {\r\n     *     task: e => {\r\n     *         if (e.ctx.finish) {\r\n     *             // this is a task->finish event;\r\n     *             console.log(\"Finish Time:\", e.ctx.finish);\r\n     *             if (e.ctx.success) {\r\n     *                 // e.ctx.result = resolved data;\r\n     *             } else {\r\n     *                 // e.ctx.result = error/rejection reason;\r\n     *             }\r\n     *         } else {\r\n     *             // this is a task->start event;\r\n     *             console.log(\"Start Time:\", e.ctx.start);\r\n     *         }\r\n     *     }\r\n     * };\r\n     *\r\n     */\r\n    task: (options, context) => {\r\n        if (typeof options.task === 'function') {\r\n            try {\r\n                options.task(context);\r\n            } catch (e) {\r\n                // silencing the error, to avoid breaking the task;\r\n                $events.unexpected('task', e);\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * @event transact\r\n     * @description\r\n     * Global notification of a transaction start / finish events.\r\n     *\r\n     * The library will suppress any error thrown by the handler and write it into the console.\r\n     *\r\n     * @param {object} e - Event Context Object.\r\n     *\r\n     * This type of object is used by several events. See event {@link event:query query}\r\n     * for its complete documentation.\r\n     *\r\n     * @example\r\n     *\r\n     * var options = {\r\n     *     transact: e => {\r\n     *         if (e.ctx.finish) {\r\n     *             // this is a transaction->finish event;\r\n     *             console.log(\"Finish Time:\", e.ctx.finish);\r\n     *             if (e.ctx.success) {\r\n     *                 // e.ctx.result = resolved data;\r\n     *             } else {\r\n     *                 // e.ctx.result = error/rejection reason;\r\n     *             }\r\n     *         } else {\r\n     *             // this is a transaction->start event;\r\n     *             console.log(\"Start Time:\", e.ctx.start);\r\n     *         }\r\n     *     }\r\n     * };\r\n     *\r\n     */\r\n    transact: (options, context) => {\r\n        if (typeof options.transact === 'function') {\r\n            try {\r\n                options.transact(context);\r\n            } catch (e) {\r\n                // silencing the error, to avoid breaking the transaction;\r\n                $events.unexpected('transact', e);\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * @event error\r\n     * @description\r\n     * Global notification of every error encountered by this library.\r\n     *\r\n     * The library will suppress any error thrown by the handler and write it into the console.\r\n     *\r\n     * @param {} err\r\n     * The error encountered, of the same value and type as it was reported.\r\n     *\r\n     * @param {object} e\r\n     * Event Context Object.\r\n     *\r\n     * This type of object is used by several events. See event {@link event:query query}\r\n     * for its complete documentation.\r\n     *\r\n     * @example\r\n     * var options = {\r\n     *\r\n     *     // pg-promise initialization options...\r\n     *\r\n     *     error: (err, e) => {\r\n     *\r\n     *         // e.dc = Database Context\r\n     *\r\n     *         if (e.cn) {\r\n     *             // this is a connection-related error\r\n     *             // cn = safe connection details passed into the library:\r\n     *             //      if password is present, it is masked by #\r\n     *         }\r\n     *\r\n     *         if (e.query) {\r\n     *             // query string is available\r\n     *             if (e.params) {\r\n     *                 // query parameters are available\r\n     *             }\r\n     *         }\r\n     *\r\n     *         if (e.ctx) {\r\n     *             // occurred inside a task or transaction\r\n     *         }\r\n     *       }\r\n     *\r\n     * };\r\n     *\r\n     */\r\n    error: (options, err, context) => {\r\n        if (typeof options.error === 'function') {\r\n            try {\r\n                options.error(err, context);\r\n            } catch (e) {\r\n                // have to silence errors here;\r\n                // throwing unhandled errors while handling an error\r\n                // notification is simply not acceptable.\r\n                $events.unexpected('error', e);\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * @event extend\r\n     * @description\r\n     * Extends database protocol with custom methods and properties.\r\n     *\r\n     * Override this event to extend the existing access layer with your own functions and\r\n     * properties best suited for your application.\r\n     *\r\n     * The extension thus becomes available across all access layers:\r\n     *\r\n     * - Within the root/default database protocol;\r\n     * - Inside transactions, including nested ones;\r\n     * - Inside tasks, including nested ones.\r\n     *\r\n     * All pre-defined methods and properties are read-only, so you will get an error,\r\n     * if you try overriding them.\r\n     *\r\n     * The library will suppress any error thrown by the handler and write it into the console.\r\n     *\r\n     * @param {object} obj - Protocol object to be extended.\r\n     *\r\n     * @param {} dc - Database Context that was used when creating the database object.\r\n     *\r\n     * @example\r\n     *\r\n     * // In the example below we extend the protocol with function `addImage`\r\n     * // that will insert one binary image and resolve with the new record id.\r\n     *\r\n     * var options = {\r\n     *     extend: (obj, dc) => {\r\n     *         // obj = this;\r\n     *         // dc = database context;\r\n     *         obj.addImage = data => {\r\n     *             return obj.one(\"insert into images(data) values($1) returning id\", '\\\\x' + data);\r\n     *         }\r\n     *     }\r\n     * };\r\n     *\r\n     * @example\r\n     *\r\n     * // It is best to extend the protocol by adding whole entity repositories to it\r\n     * // as shown in the following example.\r\n     *\r\n     * // Users repository;\r\n     * function repUsers(obj, dc) {\r\n     *     // NOTE: You can change the implementation based on `dc`;\r\n     *     return {\r\n     *         add: (name, active) => {\r\n     *             return obj.none(\"insert into users values($1, $2)\", [name, active]);\r\n     *         },\r\n     *         delete: id => obj.none(\"delete from users where id = $1\", id)\r\n     *     }\r\n     * }\r\n     *\r\n     * // Overriding 'extend' event;\r\n     * var options = {\r\n     *     extend: (obj, dc) => {\r\n     *         // obj = this;\r\n     *         // dc = database context;\r\n     *         this.users = repUsers(this, dc);\r\n     *         // You can set different repositories based on `dc`\r\n     *     }\r\n     * };\r\n     *\r\n     * // Usage example:\r\n     * db.users.add(\"John\", true)\r\n     *     .then(() => {\r\n     *         // user added successfully;\r\n     *     })\r\n     *     .catch(error => {\r\n     *         // failed to add the user;\r\n     *     });\r\n     *\r\n     */\r\n    extend: (options, obj, dc) => {\r\n        if (typeof options.extend === 'function') {\r\n            try {\r\n                options.extend.call(obj, obj, dc);\r\n            } catch (e) {\r\n                // have to silence errors here;\r\n                // the result of throwing unhandled errors while\r\n                // extending the protocol would be unpredictable.\r\n                $events.unexpected('extend', e);\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * @event unexpected\r\n     * @param {string} event - unhandled event name.\r\n     * @param {String|Error} e - unhandled error.\r\n     * @private\r\n     */\r\n    unexpected: (event, e) => {\r\n        // If you should ever get here, your app is definitely broken, and you need to fix\r\n        // your event handler to prevent unhandled errors during event notifications.\r\n        //\r\n        // Console output is suppressed when running tests, to avoid polluting test output\r\n        // with error messages that are intentional and of no value to the test.\r\n\r\n        /* istanbul ignore if */\r\n        if (!$npm.main.suppressErrors) {\r\n            var stack = e instanceof Error ? e.stack : new Error().stack;\r\n            $npm.con.error('Unexpected error in \\'%s\\' event handler.\\n%s\\n', event, stack);\r\n        }\r\n    }\r\n};\r\n\r\nmodule.exports = $events;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/lib/events.js\n// module id = 14\n// module chunks = 0","'use strict';\r\n\r\nvar $npm = {\r\n    os: require('os'),\r\n    utils: require('../utils'),\r\n    formatting: require('../formatting'),\r\n    TableName: require('./tableName'),\r\n    Column: require('./column')\r\n};\r\n\r\nvar $arr = require('../array');\r\n\r\n/**\r\n * @class helpers.ColumnSet\r\n * @description\r\n *\r\n * Performance-optimized, read-only structure with query-formatting columns.\r\n *\r\n * For performance-oriented applications this type should be created globally, to be reused by all methods.\r\n *\r\n * @param {object|helpers.Column|array} columns\r\n * Columns information object, depending on the type:\r\n *\r\n * - When it is a simple object, its properties are enumerated to represent both column names and property names\r\n *   within the source objects. See also option `inherit` that's applicable in this case.\r\n *\r\n * - When it is a single {@link helpers.Column Column} object, property {@link helpers.ColumnSet#columns columns} is initialized with\r\n *   just a single column. It is not a unique situation when only a single column is required for an update operation.\r\n *\r\n * - When it is an array, each element is assumed to represent details for a column. If the element is already of type {@link helpers.Column Column},\r\n *   it is used directly; otherwise the element is passed into {@link helpers.Column Column} constructor for initialization.\r\n *   On any duplicate column name (case-sensitive) it will throw {@link external:Error Error} = `Duplicate column name \"name\".`\r\n *\r\n * - When it is none of the above, it will throw {@link external:TypeError TypeError} = `Invalid parameter 'columns' specified.`\r\n *\r\n * @param {object} [options]\r\n *\r\n * @param {helpers.TableName|string|{table,schema}} [options.table]\r\n * Table details.\r\n *\r\n * When it is a non-null value, and not a {@link helpers.TableName TableName} object, a new {@link helpers.TableName TableName} is constructed from the value.\r\n *\r\n * It can be used as the default for methods {@link helpers.insert insert} and {@link helpers.update update} when their parameter\r\n * `table` is omitted, and for logging purposes.\r\n *\r\n * @param {boolean} [options.inherit = false]\r\n * Use inherited properties in addition to the object's own properties.\r\n *\r\n * By default, only the object's own properties are enumerated for column names.\r\n *\r\n * @returns {helpers.ColumnSet}\r\n *\r\n * @see\r\n *\r\n * {@link helpers.ColumnSet#columns columns},\r\n * {@link helpers.ColumnSet#names names},\r\n * {@link helpers.ColumnSet#table table},\r\n * {@link helpers.ColumnSet#variables variables} |\r\n * {@link helpers.ColumnSet.extend extend},\r\n * {@link helpers.ColumnSet.merge merge},\r\n * {@link helpers.ColumnSet.prepare prepare}\r\n *\r\n * @example\r\n *\r\n * // A complex insert/update object scenario for table 'purchases' in schema 'fiscal'.\r\n * // For a good performance, you should declare such objects once and then reuse them.\r\n * //\r\n * // Column Requirements:\r\n * //\r\n * // 1. Property 'id' is only to be used for a WHERE condition in updates\r\n * // 2. Property 'list' needs to be formatted as a csv\r\n * // 3. Property 'code' is to be used as raw text, and to be defaulted to 0 when the\r\n * //    property is missing in the source object\r\n * // 4. Property 'log' is a JSON object with 'log-entry' for the column name\r\n * // 5. Property 'data' requires SQL type casting '::int[]'\r\n * // 6. Property 'amount' needs to be set to 100, if it is 0\r\n * // 7. Property 'total' must be skipped during updates, if 'amount' was 0, plus its\r\n * //    column name is 'total-val'\r\n *\r\n * var cs = new pgp.helpers.ColumnSet([\r\n *     '?id', // ColumnConfig equivalent: {name: 'id', cnd: true}\r\n *     'list:csv', // ColumnConfig equivalent: {name: 'list', mod: ':csv'}\r\n *     {\r\n *         name: 'code',\r\n *         mod: '^', // format as raw text\r\n *         def: 0 // default to 0 when the property doesn't exist\r\n *     },\r\n *     {\r\n *         name: 'log-entry',\r\n *         prop: 'log',\r\n *         mod: ':json' // format as JSON\r\n *     },\r\n *     {\r\n *         name: 'data',\r\n *         cast: 'int[]' // use SQL type casting '::int[]'\r\n *     },\r\n *     {\r\n *         name: 'amount',\r\n *         init: col => {\r\n *             // set to 100, if the value is 0:\r\n *             return col.value === 0 ? 100 : col.value;\r\n *         }\r\n *     },\r\n *     {\r\n *         name: 'total-val',\r\n *         prop: 'total',\r\n *         skip: col => {\r\n *             // skip from updates, if 'amount' is 0:\r\n *             return this.amount === 0; // = col.source.amount\r\n *         }\r\n *     }\r\n * ], {table: {table: 'purchases', schema: 'fiscal'}});\r\n *\r\n * // Alternatively, you could take the table declaration out:\r\n * // var table = new pgp.helpers.TableName('purchases', 'fiscal');\r\n *\r\n * console.log(cs); // console output for the object:\r\n * //=>\r\n * // ColumnSet {\r\n * //    table: \"fiscal\".\"purchases\"\r\n * //    columns: [\r\n * //        Column {\r\n * //            name: \"id\"\r\n * //            cnd: true\r\n * //        }\r\n * //        Column {\r\n * //            name: \"list\"\r\n * //            mod: \":csv\"\r\n * //        }\r\n * //        Column {\r\n * //            name: \"code\"\r\n * //            mod: \"^\"\r\n * //            def: 0\r\n * //        }\r\n * //        Column {\r\n * //            name: \"log-entry\"\r\n * //            prop: \"log\"\r\n * //            mod: \":json\"\r\n * //        }\r\n * //        Column {\r\n * //            name: \"data\"\r\n * //            cast: \"int[]\"\r\n * //        }\r\n * //        Column {\r\n * //            name: \"amount\"\r\n * //            init: [Function]\r\n * //        }\r\n * //        Column {\r\n * //            name: \"total-val\"\r\n * //            prop: \"total\"\r\n * //            skip: [Function]\r\n * //        }\r\n * //    ]\r\n * // }\r\n */\r\nfunction ColumnSet(columns, options) {\r\n\r\n    if (!(this instanceof ColumnSet)) {\r\n        return new ColumnSet(columns, options);\r\n    }\r\n\r\n    if (!columns || typeof columns !== 'object') {\r\n        throw new TypeError('Invalid parameter \\'columns\\' specified.');\r\n    }\r\n\r\n    var inherit, names, variables, updates, isSimple = true;\r\n\r\n    if (!$npm.utils.isNull(options)) {\r\n        if (typeof options !== 'object') {\r\n            throw new TypeError('Invalid parameter \\'options\\' specified.');\r\n        }\r\n        if (!$npm.utils.isNull(options.table)) {\r\n            if (options.table instanceof $npm.TableName) {\r\n                this.table = options.table;\r\n            } else {\r\n                this.table = new $npm.TableName(options.table);\r\n            }\r\n        }\r\n        inherit = options.inherit;\r\n    }\r\n\r\n    /**\r\n     * @name helpers.ColumnSet#table\r\n     * @type {helpers.TableName}\r\n     * @readonly\r\n     * @description\r\n     * Destination table. It can be specified for two purposes:\r\n     *\r\n     * - **primary:** to be used as the default table when it is omitted during a call into methods {@link helpers.insert insert} and {@link helpers.update update}\r\n     * - **secondary:** to be automatically written into the console (for logging purposes).\r\n     */\r\n\r\n\r\n    /**\r\n     * @name helpers.ColumnSet#columns\r\n     * @type helpers.Column[]\r\n     * @readonly\r\n     * @description\r\n     * Array of {@link helpers.Column Column} objects.\r\n     */\r\n    if (Array.isArray(columns)) {\r\n        var colNames = {};\r\n        this.columns = $arr.map(columns, c => {\r\n            var col = (c instanceof $npm.Column) ? c : new $npm.Column(c);\r\n            if (col.name in colNames) {\r\n                throw new Error('Duplicate column name \"' + col.name + '\".');\r\n            }\r\n            colNames[col.name] = true;\r\n            return col;\r\n        });\r\n    } else {\r\n        if (columns instanceof $npm.Column) {\r\n            this.columns = [columns];\r\n        } else {\r\n            this.columns = [];\r\n            for (var name in columns) {\r\n                if (inherit || columns.hasOwnProperty(name)) {\r\n                    this.columns.push(new $npm.Column(name));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    Object.freeze(this.columns);\r\n\r\n    for (var i = 0; i < this.columns.length; i++) {\r\n        var c = this.columns[i];\r\n        // ColumnSet is simple when the source objects require no preparation,\r\n        // and should be used directly:\r\n        if (c.prop || c.init || 'def' in c) {\r\n            isSimple = false;\r\n            break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name helpers.ColumnSet#names\r\n     * @type String\r\n     * @readonly\r\n     * @description\r\n     * **Added in v5.5.5**\r\n     *\r\n     * Returns a string - comma-separated list of all column names, properly escaped.\r\n     *\r\n     * This method is primarily for internal use.\r\n     *\r\n     * @example\r\n     * var cs = new ColumnSet(['id^', {name: 'cells', cast: 'int[]'}, 'doc:json']);\r\n     * console.log(cs.names);\r\n     * //=> \"id\",\"cells\",\"doc\"\r\n     */\r\n    Object.defineProperty(this, 'names', {\r\n        get: () => {\r\n            if (!names) {\r\n                names = $arr.map(this.columns, c => c.escapedName).join();\r\n            }\r\n            return names;\r\n        }\r\n    });\r\n\r\n    /**\r\n     * @name helpers.ColumnSet#variables\r\n     * @type String\r\n     * @readonly\r\n     * @description\r\n     * **Added in v5.5.5**\r\n     *\r\n     * Returns a string - formatting template for all column values.\r\n     *\r\n     * This method is primarily for internal use.\r\n     *\r\n     * @example\r\n     * var cs = new ColumnSet(['id^', {name: 'cells', cast: 'int[]'}, 'doc:json']);\r\n     * console.log(cs.variables);\r\n     * //=> ${id^},${cells}::int[],${doc:json}\r\n     */\r\n    Object.defineProperty(this, 'variables', {\r\n        get: () => {\r\n            if (!variables) {\r\n                variables = $arr.map(this.columns, c => c.variable + c.castText).join();\r\n            }\r\n            return variables;\r\n        }\r\n    });\r\n\r\n    /**\r\n     * @method helpers.ColumnSet.assign\r\n     * @private\r\n     * @description\r\n     * Returns a formatting template of SET assignments for a single object.\r\n     *\r\n     * This method is for internal use only.\r\n     *\r\n     * @param {object} source\r\n     * Source object that contains values for columns.\r\n     *\r\n     * @returns {string}\r\n     * Comma-separated list of variable-to-column assignments.\r\n     */\r\n    this.assign = function (source) {\r\n        if (updates) {\r\n            return updates;\r\n        }\r\n        var dynamic;\r\n        var list = $arr.filter(this.columns, c => {\r\n            if (c.cnd) {\r\n                return false;\r\n            }\r\n            if (c.skip) {\r\n                dynamic = true;\r\n                var a = colDesc(c, source);\r\n                if (c.skip.call(source, a)) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        });\r\n\r\n        list = $arr.map(list, c => c.escapedName + '=' + c.variable + c.castText).join();\r\n\r\n        if (!dynamic) {\r\n            updates = list;\r\n        }\r\n        return list;\r\n    };\r\n\r\n    /**\r\n     * @method helpers.ColumnSet.extend\r\n     * @description\r\n     * Creates a new {@link helpers.ColumnSet ColumnSet}, by joining the two sets of columns.\r\n     *\r\n     * If the two sets contain a column with the same `name` (case-sensitive), an error is thrown.\r\n     *\r\n     * @param {helpers.Column|helpers.ColumnSet|array} columns\r\n     * Columns to be appended, of the same type as parameter `columns` during {@link helpers.ColumnSet ColumnSet} construction, except:\r\n     * - it can also be of type {@link helpers.ColumnSet ColumnSet}\r\n     * - it cannot be a simple object (properties enumeration is not supported here)\r\n     *\r\n     * @returns {helpers.ColumnSet}\r\n     * New {@link helpers.ColumnSet ColumnSet} object with the extended/concatenated list of columns.\r\n     *\r\n     * @see\r\n     * {@link helpers.Column Column},\r\n     * {@link helpers.ColumnSet.merge merge}\r\n     *\r\n     * @example\r\n     *\r\n     * var pgp = require('pg-promise')();\r\n     *\r\n     * var cs = new pgp.helpers.ColumnSet(['one', 'two'], {table: 'my-table'});\r\n     * console.log(cs);\r\n     * //=>\r\n     * // ColumnSet {\r\n     * //    table: \"my-table\"\r\n     * //    columns: [\r\n     * //        Column {\r\n     * //            name: \"one\"\r\n     * //        }\r\n     * //        Column {\r\n     * //            name: \"two\"\r\n     * //        }\r\n     * //    ]\r\n     * // }\r\n     * var csExtended = cs.extend(['three']);\r\n     * console.log(csExtended);\r\n     * //=>\r\n     * // ColumnSet {\r\n     * //    table: \"my-table\"\r\n     * //    columns: [\r\n     * //        Column {\r\n     * //            name: \"one\"\r\n     * //        }\r\n     * //        Column {\r\n     * //            name: \"two\"\r\n     * //        }\r\n     * //        Column {\r\n     * //            name: \"three\"\r\n     * //        }\r\n     * //    ]\r\n     * // }\r\n     */\r\n    this.extend = function (columns) {\r\n        var cs = columns;\r\n        if (!(cs instanceof ColumnSet)) {\r\n            cs = new ColumnSet(columns);\r\n        }\r\n        // Any duplicate column will throw Error = 'Duplicate column name \"name\".',\r\n        return new ColumnSet(this.columns.concat(cs.columns), {table: this.table});\r\n    };\r\n\r\n    /**\r\n     * @method helpers.ColumnSet.merge\r\n     * @description\r\n     * Creates a new {@link helpers.ColumnSet ColumnSet}, by joining the two sets of columns.\r\n     *\r\n     * Items in `columns` with the same `name` (case-sensitive) override the original columns.\r\n     *\r\n     * @param {helpers.Column|helpers.ColumnSet|array} columns\r\n     * Columns to be appended, of the same type as parameter `columns` during {@link helpers.ColumnSet ColumnSet} construction, except:\r\n     * - it can also be of type {@link helpers.ColumnSet ColumnSet}\r\n     * - it cannot be a simple object (properties enumeration is not supported here)\r\n     *\r\n     * @see\r\n     * {@link helpers.Column Column},\r\n     * {@link helpers.ColumnSet.extend extend}\r\n     *\r\n     * @returns {helpers.ColumnSet}\r\n     * New {@link helpers.ColumnSet ColumnSet} object with the merged list of columns.\r\n     *\r\n     * @example\r\n     *\r\n     * var pgp = require('pg-promise')();\r\n     *\r\n     * var cs = new pgp.helpers.ColumnSet(['?one', 'two:json'], {table: 'my-table'});\r\n     * console.log(cs);\r\n     * //=>\r\n     * // ColumnSet {\r\n     * //    table: \"my-table\"\r\n     * //    columns: [\r\n     * //        Column {\r\n     * //            name: \"one\"\r\n     * //            cnd: true\r\n     * //        }\r\n     * //        Column {\r\n     * //            name: \"two\"\r\n     * //            mod: \":json\"\r\n     * //        }\r\n     * //    ]\r\n     * // }\r\n     * var csMerged = cs.merge(['two', 'three^']);\r\n     * console.log(csMerged);\r\n     * //=>\r\n     * // ColumnSet {\r\n     * //    table: \"my-table\"\r\n     * //    columns: [\r\n     * //        Column {\r\n     * //            name: \"one\"\r\n     * //            cnd: true\r\n     * //        }\r\n     * //        Column {\r\n     * //            name: \"two\"\r\n     * //        }\r\n     * //        Column {\r\n     * //            name: \"three\"\r\n     * //            mod: \"^\"\r\n     * //        }\r\n     * //    ]\r\n     * // }\r\n     *\r\n     */\r\n    this.merge = function (columns) {\r\n        var cs = columns;\r\n        if (!(cs instanceof ColumnSet)) {\r\n            cs = new ColumnSet(columns);\r\n        }\r\n        var colNames = {}, cols = [];\r\n        $arr.forEach(this.columns, (c, idx) => {\r\n            cols.push(c);\r\n            colNames[c.name] = idx;\r\n        });\r\n        $arr.forEach(cs.columns, c => {\r\n            if (c.name in colNames) {\r\n                cols[colNames[c.name]] = c;\r\n            } else {\r\n                cols.push(c);\r\n            }\r\n        });\r\n        return new ColumnSet(cols, {table: this.table});\r\n    };\r\n\r\n    /**\r\n     * @method helpers.ColumnSet.prepare\r\n     * @description\r\n     * **Added in v5.5.6**\r\n     *\r\n     * Prepares a source object to be formatted, by cloning it and applying the rules\r\n     * as set by the columns configuration.\r\n     *\r\n     * This method is primarily for internal use, and as such it does not validate\r\n     * its input parameters.\r\n     *\r\n     * @param {object} source\r\n     * The source object to be prepared, if required.\r\n     *\r\n     * It must be a non-`null` object, which the method does not validate, as it is\r\n     * intended primarily for internal use by the library.\r\n     *\r\n     * @returns {object}\r\n     * When the object needs to be prepared, the method returns a clone of the source object,\r\n     * with all properties and values set according to the columns configuration.\r\n     *\r\n     * When the object does not need to be prepared, the original object is returned.\r\n     */\r\n    this.prepare = function (source) {\r\n        if (isSimple) {\r\n            return source; // a simple ColumnSet requires no object preparation;\r\n        }\r\n        var target = {};\r\n        $arr.forEach(this.columns, c => {\r\n            var a = colDesc(c, source);\r\n            if (c.init) {\r\n                target[a.name] = c.init.call(source, a);\r\n            } else {\r\n                if (a.exists || 'def' in c) {\r\n                    target[a.name] = a.value;\r\n                }\r\n            }\r\n        });\r\n        return target;\r\n    };\r\n\r\n    Object.freeze(this);\r\n\r\n    function colDesc(column, source) {\r\n        var a = {\r\n            source: source,\r\n            name: column.prop || column.name\r\n        };\r\n        a.exists = a.name in source;\r\n        if (a.exists) {\r\n            a.value = source[a.name];\r\n        } else {\r\n            a.value = 'def' in column ? column.def : undefined;\r\n        }\r\n        return a;\r\n    }\r\n}\r\n\r\n/**\r\n * @method helpers.ColumnSet.toString\r\n * @description\r\n * Creates a well-formatted multi-line string that represents the object.\r\n *\r\n * It is called automatically when writing the object into the console.\r\n *\r\n * @param {number} [level=0]\r\n * Nested output level, to provide visual offset.\r\n *\r\n * @returns {string}\r\n */\r\nColumnSet.prototype.toString = function (level) {\r\n    level = level > 0 ? parseInt(level) : 0;\r\n    var gap0 = $npm.utils.messageGap(level),\r\n        gap1 = $npm.utils.messageGap(level + 1),\r\n        lines = [\r\n            'ColumnSet {'\r\n        ];\r\n    if (this.table) {\r\n        lines.push(gap1 + 'table: ' + this.table);\r\n    }\r\n    if (this.columns.length) {\r\n        lines.push(gap1 + 'columns: [');\r\n        $arr.forEach(this.columns, c => {\r\n            lines.push(c.toString(2));\r\n        });\r\n        lines.push(gap1 + ']');\r\n    } else {\r\n        lines.push(gap1 + 'columns: []');\r\n    }\r\n    lines.push(gap0 + '}');\r\n    return lines.join($npm.os.EOL);\r\n};\r\n\r\nColumnSet.prototype.inspect = function () {\r\n    return this.toString();\r\n};\r\n\r\nmodule.exports = ColumnSet;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/lib/helpers/columnSet.js\n// module id = 15\n// module chunks = 0","'use strict';\r\n\r\nvar $npm = {\r\n    fs: require('fs'),\r\n    os: require('os'),\r\n    path: require('path'),\r\n    minify: require('pg-minify'),\r\n    utils: require('./utils'),\r\n    format: require('./formatting').as.format,\r\n    QueryFileError: require('./errors/queryFile')\r\n};\r\n\r\n/**\r\n * @constructor QueryFile\r\n * @description\r\n *\r\n * Represents an external SQL file. The type is available from the library's root: `pgp.QueryFile`.\r\n *\r\n * Reads a file with SQL and prepares it for execution, also parses and minifies it, if required.\r\n * The SQL can be of any complexity, with both single and multi-line comments.\r\n *\r\n * The type can be used in place of the `query` parameter, with any query method directly, plus as `text` in {@link PreparedStatement}\r\n * and {@link ParameterizedQuery}.\r\n *\r\n * It never throws any error, leaving it for query methods to reject with {@link errors.QueryFileError QueryFileError}.\r\n *\r\n * For any given SQL file you should only create a single instance of this class throughout the application.\r\n *\r\n * @param {string} file\r\n * Path to the SQL file with the query, either absolute or relative to the application's entry point file.\r\n *\r\n * If there is any problem reading the file, it will be reported when executing the query.\r\n *\r\n * @param {QueryFile.Options} [options]\r\n * Set of configuration options, as documented by {@link QueryFile.Options}.\r\n *\r\n * @returns {QueryFile}\r\n *\r\n * @see\r\n * {@link errors.QueryFileError QueryFileError},\r\n * {@link utils}\r\n *\r\n * @example\r\n * // File sql.js\r\n *\r\n * // Proper way to organize an sql provider:\r\n * //\r\n * // - have all sql files for Users in ./sql/users\r\n * // - have all sql files for Products in ./sql/products\r\n * // - have your sql provider module as ./sql/index.js\r\n *\r\n * var QueryFile = require('pg-promise').QueryFile;\r\n * var path = require('path');\r\n *\r\n * // Helper for linking to external query files:\r\n * function sql(file) {\r\n *     var fullPath = path.join(__dirname, file); // generating full path;\r\n *     return new QueryFile(fullPath, {minify: true});\r\n * }\r\n *\r\n * module.exports = {\r\n *     // external queries for Users:\r\n *     users: {\r\n *         add: sql('users/create.sql'),\r\n *         search: sql('users/search.sql'),\r\n *         report: sql('users/report.sql'),\r\n *     },\r\n *     // external queries for Products:\r\n *     products: {\r\n *         add: sql('products/add.sql'),\r\n *         quote: sql('products/quote.sql'),\r\n *         search: sql('products/search.sql'),\r\n *     }\r\n * };\r\n *\r\n * @example\r\n * // Testing our SQL provider\r\n *\r\n * var db = require('./db'); // our database module;\r\n * var sql = require('./sql').users; // our sql for users;\r\n *\r\n * module.exports = {\r\n *     addUser: (name, age) => db.none(sql.add, [name, age]),\r\n *     findUser: name => db.any(sql.search, name)\r\n * };\r\n *\r\n */\r\nfunction QueryFile(file, options) {\r\n\r\n    if (!(this instanceof QueryFile)) {\r\n        return new QueryFile(file, options);\r\n    }\r\n\r\n    var sql, error, ready, modTime, after, filePath = file, opt = {\r\n        debug: $npm.utils.isDev(),\r\n        minify: false,\r\n        compress: false\r\n    };\r\n\r\n    if (options && typeof options === 'object') {\r\n        if (options.debug !== undefined) {\r\n            opt.debug = !!options.debug;\r\n        }\r\n        if (options.minify !== undefined) {\r\n            after = options.minify === 'after';\r\n            opt.minify = after ? 'after' : !!options.minify;\r\n        }\r\n        if (options.compress !== undefined) {\r\n            opt.compress = !!options.compress;\r\n        }\r\n        if (opt.compress && options.minify === undefined) {\r\n            opt.minify = true;\r\n        }\r\n        if (options.params !== undefined) {\r\n            opt.params = options.params;\r\n        }\r\n    }\r\n\r\n    Object.freeze(opt);\r\n\r\n    if ($npm.utils.isText(filePath) && !$npm.utils.isPathAbsolute(filePath)) {\r\n        filePath = $npm.path.join($npm.utils.startDir, filePath);\r\n    }\r\n\r\n    // Custom Type Formatting support:\r\n    this.formatDBType = function () {\r\n        this.prepare(true);\r\n        return this.query;\r\n    };\r\n\r\n    /**\r\n     * @method QueryFile.prepare\r\n     * @summary Prepares the query for execution.\r\n     * @description\r\n     * If the the query hasn't been prepared yet, it will read the file and process the contents according\r\n     * to the parameters passed into the constructor.\r\n     *\r\n     * This method is primarily for internal use by the library.\r\n     *\r\n     * @param {boolean} [throwErrors=false]\r\n     * Throw any error encountered.\r\n     *\r\n     */\r\n    this.prepare = function (throwErrors) {\r\n        var lastMod;\r\n        if (opt.debug && ready) {\r\n            try {\r\n                lastMod = $npm.fs.statSync(filePath).mtime.getTime();\r\n                if (lastMod === modTime) {\r\n                    // istanbul ignore next;\r\n                    // coverage for this works differently under Windows and Linux\r\n                    return;\r\n                }\r\n                ready = false;\r\n            } catch (e) {\r\n                sql = undefined;\r\n                ready = false;\r\n                error = e;\r\n                if (throwErrors) {\r\n                    throw error;\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        if (ready) {\r\n            return;\r\n        }\r\n        try {\r\n            sql = $npm.fs.readFileSync(filePath, 'utf8');\r\n            modTime = lastMod || $npm.fs.statSync(filePath).mtime.getTime();\r\n            if (opt.minify && !after) {\r\n                sql = $npm.minify(sql, {compress: opt.compress});\r\n            }\r\n            if (opt.params !== undefined) {\r\n                sql = $npm.format(sql, opt.params, {partial: true});\r\n            }\r\n            if (opt.minify && after) {\r\n                sql = $npm.minify(sql, {compress: opt.compress});\r\n            }\r\n            ready = true;\r\n            error = undefined;\r\n        } catch (e) {\r\n            sql = undefined;\r\n            error = new $npm.QueryFileError(e, this);\r\n            if (throwErrors) {\r\n                throw error;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @name QueryFile#query\r\n     * @type {string}\r\n     * @default undefined\r\n     * @readonly\r\n     * @summary Prepared query string.\r\n     * @description\r\n     * When property {@link QueryFile#error error} is set, the query is `undefined`.\r\n     *\r\n     * This property is primarily for internal use by the library.\r\n     */\r\n    Object.defineProperty(this, 'query', {\r\n        get: () => sql\r\n    });\r\n\r\n    /**\r\n     * @name QueryFile#error\r\n     * @type {errors.QueryFileError}\r\n     * @default undefined\r\n     * @readonly\r\n     * @description\r\n     * When in an error state, it is set to a {@link errors.QueryFileError QueryFileError} object. Otherwise, it is `undefined`.\r\n     *\r\n     * This property is primarily for internal use by the library.\r\n     */\r\n    Object.defineProperty(this, 'error', {\r\n        get: () => error\r\n    });\r\n\r\n    /**\r\n     * @name QueryFile#file\r\n     * @type {string}\r\n     * @readonly\r\n     * @description\r\n     * File name that was passed into the constructor.\r\n     *\r\n     * This property is primarily for internal use by the library.\r\n     */\r\n    Object.defineProperty(this, 'file', {\r\n        get: () => file\r\n    });\r\n\r\n    /**\r\n     * @name QueryFile#options\r\n     * @type {QueryFile.Options}\r\n     * @readonly\r\n     * @description\r\n     * Set of options, as configured during the object's construction.\r\n     *\r\n     * This property is primarily for internal use by the library.\r\n     */\r\n    Object.defineProperty(this, 'options', {\r\n        get: () => opt\r\n    });\r\n\r\n    this.prepare();\r\n}\r\n\r\n/**\r\n * @method QueryFile.toString\r\n * @description\r\n * Creates a well-formatted multi-line string that represents the object's current state.\r\n *\r\n * It is called automatically when writing the object into the console.\r\n *\r\n * @param {number} [level=0]\r\n * Nested output level, to provide visual offset.\r\n *\r\n * @returns {string}\r\n */\r\nQueryFile.prototype.toString = function (level) {\r\n    level = level > 0 ? parseInt(level) : 0;\r\n    var gap = $npm.utils.messageGap(level + 1);\r\n    var lines = [\r\n        'QueryFile {'\r\n    ];\r\n    this.prepare();\r\n    lines.push(gap + 'file: \"' + this.file + '\"');\r\n    lines.push(gap + 'options: ' + JSON.stringify(this.options));\r\n    if (this.error) {\r\n        lines.push(gap + 'error: ' + this.error.toString(level + 1));\r\n    } else {\r\n        lines.push(gap + 'query: \"' + this.query + '\"');\r\n    }\r\n    lines.push($npm.utils.messageGap(level) + '}');\r\n    return lines.join($npm.os.EOL);\r\n};\r\n\r\nQueryFile.prototype.inspect = function () {\r\n    return this.toString();\r\n};\r\n\r\nmodule.exports = QueryFile;\r\n\r\n/**\r\n * @typedef QueryFile.Options\r\n * @description\r\n * A set of configuration options as passed into the {@link QueryFile} constructor.\r\n *\r\n * @property {boolean} debug\r\n * When in debug mode, the query file is checked for its last modification time on every query request,\r\n * so if it changes, the file is read afresh.\r\n *\r\n * The default for this property is `true` when `NODE_ENV` = `development`,\r\n * or `false` otherwise.\r\n *\r\n * @property {boolean|string} minify=false\r\n * Parses and minifies the SQL using $[pg-minify]:\r\n * - `false` - do not use $[pg-minify]\r\n * - `true` - use $[pg-minify] to parse and minify SQL\r\n * - `'after'` - use $[pg-minify] after applying static formatting parameters\r\n *   (option `params`), as opposed to before it (default)\r\n *\r\n * If option `compress` is set, then the default for `minify` is `true`.\r\n *\r\n * Failure to parse SQL will result in $[SQLParsingError].\r\n *\r\n * @property {boolean} compress=false\r\n * Sets option `compress` as supported by $[pg-minify], to uglify the SQL:\r\n * - `false` - no compression to be applied, keep minimum spaces for easier read\r\n * - `true` - remove all unnecessary spaces from SQL\r\n *\r\n * This option has no meaning, if `minify` is explicitly set to `false`. However, if `minify` is not\r\n * specified and `compress` is specified as `true`, then `minify` defaults to `true`.\r\n *\r\n * @property {array|object|value} params\r\n *\r\n * Static formatting parameters to be applied to the SQL, using the same method {@link formatting.format as.format},\r\n * but with option `partial` = `true`.\r\n *\r\n * Most of the time query formatting is fully dynamic, and applied just before executing the query.\r\n * In some cases though you may need to pre-format SQL with static values. Examples of it can be a\r\n * schema name, or a configurable table name.\r\n *\r\n * This option makes two-step SQL formatting easy: you can pre-format the SQL initially, and then\r\n * apply the second-step dynamic formatting when executing the query.\r\n */\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/lib/queryFile.js\n// module id = 16\n// module chunks = 0","var defaults = module.exports = {\n  // database host. defaults to localhost\n  host: 'localhost',\n\n  //database user's name\n  user: process.platform === 'win32' ? process.env.USERNAME : process.env.USER,\n\n  //name of database to connect\n  database: process.platform === 'win32' ? process.env.USERNAME : process.env.USER,\n\n  //database user's password\n  password: null,\n\n  // a Postgres connection string to be used instead of setting individual connection items\n  // NOTE:  Setting this value will cause it to override any other value (such as database or user) defined\n  // in the defaults object.\n  connectionString : undefined,\n\n  //database port\n  port: 5432,\n\n  //number of rows to return at a time from a prepared statement's\n  //portal. 0 will return all rows at once\n  rows: 0,\n\n  // binary result mode\n  binary: false,\n\n  //Connection pool options - see https://github.com/coopernurse/node-pool\n  //number of connections to use in connection pool\n  //0 will disable connection pooling\n  poolSize: 10,\n\n  //max milliseconds a client can go unused before it is removed\n  //from the pool and destroyed\n  poolIdleTimeout: 30000,\n\n  //frequency to check for idle clients within the client pool\n  reapIntervalMillis: 1000,\n\n  //if true the most recently released resources will be the first to be allocated\n  returnToHead: false,\n\n  //pool log function / boolean\n  poolLog: false,\n\n  client_encoding: \"\",\n\n  ssl: false,\n\n  application_name: undefined,\n  fallback_application_name: undefined,\n\n  parseInputDatesAsUTC: false\n};\n\n//parse int8 so you can get your count values as actual numbers\nmodule.exports.__defineSetter__(\"parseInt8\", function(val) {\n  require('pg-types').setTypeParser(20, 'text', val ? parseInt : function(val) { return val; });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/~/pg/lib/defaults.js\n// module id = 17\n// module chunks = 0","'use strict';\n\nvar forEach = Array.prototype.forEach, create = Object.create;\n\nmodule.exports = function (arg/*, …args*/) {\n\tvar set = create(null);\n\tforEach.call(arguments, function (name) { set[name] = true; });\n\treturn set;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/object/primitive-set.js\n// module id = 18\n// module chunks = 0","'use strict';\n\nmodule.exports = function (value) {\n\tif (value == null) throw new TypeError(\"Cannot use null or undefined\");\n\treturn value;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/object/valid-value.js\n// module id = 19\n// module chunks = 0","'use strict';\r\n\r\nvar Writer = require('./writer');\r\n\r\nfunction getLocal() {\r\n    return new Writer();\r\n}\r\n\r\nvar glb = new Writer();\r\n\r\nfunction getGlobal() {\r\n    console.log = function () {\r\n        glb.log.apply(glb, arguments);\r\n    };\r\n    console.error = function () {\r\n        glb.error.apply(glb, arguments);\r\n    };\r\n    console.warn = function () {\r\n        glb.warn.apply(glb, arguments);\r\n    };\r\n    console.info = function () {\r\n        glb.info.apply(glb, arguments);\r\n    };\r\n    console.success = function () {\r\n        glb.success.apply(glb, arguments);\r\n    };\r\n\r\n    return glb;\r\n}\r\n\r\nvar exp = module.exports = new Writer(true);\r\n\r\nObject.defineProperty(exp, 'local', {\r\n    get: getLocal,\r\n    enumerable: true\r\n});\r\n\r\nObject.defineProperty(exp, 'global', {\r\n    get: getGlobal,\r\n    enumerable: true\r\n});\r\n\r\nObject.freeze(exp);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/manakin/lib/index.js\n// module id = 20\n// module chunks = 0","var Crypto           = require('crypto');\nvar Events           = require('events');\nvar Net              = require('net');\nvar tls              = require('tls');\nvar ConnectionConfig = require('./ConnectionConfig');\nvar Protocol         = require('./protocol/Protocol');\nvar SqlString        = require('./protocol/SqlString');\nvar Query            = require('./protocol/sequences/Query');\nvar Util             = require('util');\n\nmodule.exports = Connection;\nUtil.inherits(Connection, Events.EventEmitter);\nfunction Connection(options) {\n  Events.EventEmitter.call(this);\n\n  this.config = options.config;\n\n  this._socket        = options.socket;\n  this._protocol      = new Protocol({config: this.config, connection: this});\n  this._connectCalled = false;\n  this.state          = 'disconnected';\n  this.threadId       = null;\n}\n\nfunction bindToCurrentDomain(callback) {\n  if (!callback) {\n    return undefined;\n  }\n\n  var domain = process.domain;\n\n  return domain\n    ? domain.bind(callback)\n    : callback;\n}\n\nConnection.createQuery = function createQuery(sql, values, callback) {\n  if (sql instanceof Query) {\n    return sql;\n  }\n\n  var cb      = bindToCurrentDomain(callback);\n  var options = {};\n\n  if (typeof sql === 'function') {\n    cb = bindToCurrentDomain(sql);\n    return new Query(options, cb);\n  }\n\n  if (typeof sql === 'object') {\n    for (var prop in sql) {\n      options[prop] = sql[prop];\n    }\n\n    if (typeof values === 'function') {\n      cb = bindToCurrentDomain(values);\n    } else if (values !== undefined) {\n      options.values = values;\n    }\n\n    return new Query(options, cb);\n  }\n\n  options.sql    = sql;\n  options.values = values;\n\n  if (typeof values === 'function') {\n    cb = bindToCurrentDomain(values);\n    options.values = undefined;\n  }\n\n  if (cb === undefined && callback !== undefined) {\n    throw new TypeError('argument callback must be a function when provided');\n  }\n\n  return new Query(options, cb);\n};\n\nConnection.prototype.connect = function connect(options, callback) {\n  if (!callback && typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  if (!this._connectCalled) {\n    this._connectCalled = true;\n\n    // Connect either via a UNIX domain socket or a TCP socket.\n    this._socket = (this.config.socketPath)\n      ? Net.createConnection(this.config.socketPath)\n      : Net.createConnection(this.config.port, this.config.host);\n\n    // Connect socket to connection domain\n    if (Events.usingDomains) {\n      this._socket.domain = this.domain;\n    }\n\n    var connection = this;\n    this._protocol.on('data', function(data) {\n      connection._socket.write(data);\n    });\n    this._socket.on('data', function(data) {\n      connection._protocol.write(data);\n    });\n    this._protocol.on('end', function() {\n      connection._socket.end();\n    });\n    this._socket.on('end', function() {\n      connection._protocol.end();\n    });\n\n    this._socket.on('error', this._handleNetworkError.bind(this));\n    this._socket.on('connect', this._handleProtocolConnect.bind(this));\n    this._protocol.on('handshake', this._handleProtocolHandshake.bind(this));\n    this._protocol.on('unhandledError', this._handleProtocolError.bind(this));\n    this._protocol.on('drain', this._handleProtocolDrain.bind(this));\n    this._protocol.on('end', this._handleProtocolEnd.bind(this));\n    this._protocol.on('enqueue', this._handleProtocolEnqueue.bind(this));\n\n    if (this.config.connectTimeout) {\n      var handleConnectTimeout = this._handleConnectTimeout.bind(this);\n\n      this._socket.setTimeout(this.config.connectTimeout, handleConnectTimeout);\n      this._socket.once('connect', function() {\n        this.setTimeout(0, handleConnectTimeout);\n      });\n    }\n  }\n\n  this._protocol.handshake(options, bindToCurrentDomain(callback));\n};\n\nConnection.prototype.changeUser = function changeUser(options, callback) {\n  if (!callback && typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  this._implyConnect();\n\n  var charsetNumber = (options.charset)\n    ? ConnectionConfig.getCharsetNumber(options.charset)\n    : this.config.charsetNumber;\n\n  return this._protocol.changeUser({\n    user          : options.user || this.config.user,\n    password      : options.password || this.config.password,\n    database      : options.database || this.config.database,\n    timeout       : options.timeout,\n    charsetNumber : charsetNumber,\n    currentConfig : this.config\n  }, bindToCurrentDomain(callback));\n};\n\nConnection.prototype.beginTransaction = function beginTransaction(options, callback) {\n  if (!callback && typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n  options.sql = 'START TRANSACTION';\n  options.values = null;\n\n  return this.query(options, callback);\n};\n\nConnection.prototype.commit = function commit(options, callback) {\n  if (!callback && typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n  options.sql = 'COMMIT';\n  options.values = null;\n\n  return this.query(options, callback);\n};\n\nConnection.prototype.rollback = function rollback(options, callback) {\n  if (!callback && typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n  options.sql = 'ROLLBACK';\n  options.values = null;\n\n  return this.query(options, callback);\n};\n\nConnection.prototype.query = function query(sql, values, cb) {\n  var query = Connection.createQuery(sql, values, cb);\n  query._connection = this;\n\n  if (!(typeof sql === 'object' && 'typeCast' in sql)) {\n    query.typeCast = this.config.typeCast;\n  }\n\n  if (query.sql) {\n    query.sql = this.format(query.sql, query.values);\n  }\n\n  this._implyConnect();\n\n  return this._protocol._enqueue(query);\n};\n\nConnection.prototype.ping = function ping(options, callback) {\n  if (!callback && typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  this._implyConnect();\n  this._protocol.ping(options, bindToCurrentDomain(callback));\n};\n\nConnection.prototype.statistics = function statistics(options, callback) {\n  if (!callback && typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  this._implyConnect();\n  this._protocol.stats(options, bindToCurrentDomain(callback));\n};\n\nConnection.prototype.end = function end(options, callback) {\n  var cb   = callback;\n  var opts = options;\n\n  if (!callback && typeof options === 'function') {\n    cb   = options;\n    opts = null;\n  }\n\n  // create custom options reference\n  opts = Object.create(opts || null);\n\n  if (opts.timeout === undefined) {\n    // default timeout of 30 seconds\n    opts.timeout = 30000;\n  }\n\n  this._implyConnect();\n  this._protocol.quit(opts, bindToCurrentDomain(cb));\n};\n\nConnection.prototype.destroy = function() {\n  this.state = 'disconnected';\n  this._implyConnect();\n  this._socket.destroy();\n  this._protocol.destroy();\n};\n\nConnection.prototype.pause = function() {\n  this._socket.pause();\n  this._protocol.pause();\n};\n\nConnection.prototype.resume = function() {\n  this._socket.resume();\n  this._protocol.resume();\n};\n\nConnection.prototype.escape = function(value) {\n  return SqlString.escape(value, false, this.config.timezone);\n};\n\nConnection.prototype.escapeId = function escapeId(value) {\n  return SqlString.escapeId(value, false);\n};\n\nConnection.prototype.format = function(sql, values) {\n  if (typeof this.config.queryFormat === 'function') {\n    return this.config.queryFormat.call(this, sql, values, this.config.timezone);\n  }\n  return SqlString.format(sql, values, this.config.stringifyObjects, this.config.timezone);\n};\n\nif (tls.TLSSocket) {\n  // 0.11+ environment\n  Connection.prototype._startTLS = function _startTLS(onSecure) {\n    var connection    = this;\n    var secureContext = tls.createSecureContext({\n      ca         : this.config.ssl.ca,\n      cert       : this.config.ssl.cert,\n      ciphers    : this.config.ssl.ciphers,\n      key        : this.config.ssl.key,\n      passphrase : this.config.ssl.passphrase\n    });\n\n    // \"unpipe\"\n    this._socket.removeAllListeners('data');\n    this._protocol.removeAllListeners('data');\n\n    // socket <-> encrypted\n    var rejectUnauthorized = this.config.ssl.rejectUnauthorized;\n    var secureEstablished  = false;\n    var secureSocket       = new tls.TLSSocket(this._socket, {\n      rejectUnauthorized : rejectUnauthorized,\n      requestCert        : true,\n      secureContext      : secureContext,\n      isServer           : false\n    });\n\n    // error handler for secure socket\n    secureSocket.on('_tlsError', function(err) {\n      if (secureEstablished) {\n        connection._handleNetworkError(err);\n      } else {\n        onSecure(err);\n      }\n    });\n\n    // cleartext <-> protocol\n    secureSocket.pipe(this._protocol);\n    this._protocol.on('data', function(data) {\n      secureSocket.write(data);\n    });\n\n    secureSocket.on('secure', function() {\n      secureEstablished = true;\n\n      onSecure(rejectUnauthorized ? this.ssl.verifyError() : null);\n    });\n\n    // start TLS communications\n    secureSocket._start();\n  };\n} else {\n  // pre-0.11 environment\n  Connection.prototype._startTLS = function _startTLS(onSecure) {\n    // before TLS:\n    //  _socket <-> _protocol\n    // after:\n    //  _socket <-> securePair.encrypted <-> securePair.cleartext <-> _protocol\n\n    var connection  = this;\n    var credentials = Crypto.createCredentials({\n      ca         : this.config.ssl.ca,\n      cert       : this.config.ssl.cert,\n      ciphers    : this.config.ssl.ciphers,\n      key        : this.config.ssl.key,\n      passphrase : this.config.ssl.passphrase\n    });\n\n    var rejectUnauthorized = this.config.ssl.rejectUnauthorized;\n    var secureEstablished  = false;\n    var securePair         = tls.createSecurePair(credentials, false, true, rejectUnauthorized);\n\n    // error handler for secure pair\n    securePair.on('error', function(err) {\n      if (secureEstablished) {\n        connection._handleNetworkError(err);\n      } else {\n        onSecure(err);\n      }\n    });\n\n    // \"unpipe\"\n    this._socket.removeAllListeners('data');\n    this._protocol.removeAllListeners('data');\n\n    // socket <-> encrypted\n    securePair.encrypted.pipe(this._socket);\n    this._socket.on('data', function(data) {\n      securePair.encrypted.write(data);\n    });\n\n    // cleartext <-> protocol\n    securePair.cleartext.pipe(this._protocol);\n    this._protocol.on('data', function(data) {\n      securePair.cleartext.write(data);\n    });\n\n    // secure established\n    securePair.on('secure', function() {\n      secureEstablished = true;\n\n      if (!rejectUnauthorized) {\n        onSecure();\n        return;\n      }\n\n      var verifyError = this.ssl.verifyError();\n      var err = verifyError;\n\n      // node.js 0.6 support\n      if (typeof err === 'string') {\n        err = new Error(verifyError);\n        err.code = verifyError;\n      }\n\n      onSecure(err);\n    });\n\n    // node.js 0.8 bug\n    securePair._cycle = securePair.cycle;\n    securePair.cycle  = function cycle() {\n      if (this.ssl && this.ssl.error) {\n        this.error();\n      }\n\n      return this._cycle.apply(this, arguments);\n    };\n  };\n}\n\nConnection.prototype._handleConnectTimeout = function() {\n  if (this._socket) {\n    this._socket.setTimeout(0);\n    this._socket.destroy();\n  }\n\n  var err = new Error('connect ETIMEDOUT');\n  err.errorno = 'ETIMEDOUT';\n  err.code = 'ETIMEDOUT';\n  err.syscall = 'connect';\n\n  this._handleNetworkError(err);\n};\n\nConnection.prototype._handleNetworkError = function(err) {\n  this._protocol.handleNetworkError(err);\n};\n\nConnection.prototype._handleProtocolError = function(err) {\n  this.state = 'protocol_error';\n  this.emit('error', err);\n};\n\nConnection.prototype._handleProtocolDrain = function() {\n  this.emit('drain');\n};\n\nConnection.prototype._handleProtocolConnect = function() {\n  this.state = 'connected';\n  this.emit('connect');\n};\n\nConnection.prototype._handleProtocolHandshake = function _handleProtocolHandshake(packet) {\n  this.state    = 'authenticated';\n  this.threadId = packet.threadId;\n};\n\nConnection.prototype._handleProtocolEnd = function(err) {\n  this.state = 'disconnected';\n  this.emit('end', err);\n};\n\nConnection.prototype._handleProtocolEnqueue = function _handleProtocolEnqueue(sequence) {\n  this.emit('enqueue', sequence);\n};\n\nConnection.prototype._implyConnect = function() {\n  if (!this._connectCalled) {\n    this.connect();\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/Connection.js\n// module id = 21\n// module chunks = 0","// Manually extracted from mysql-5.5.23/include/mysql_com.h\nexports.CLIENT_LONG_PASSWORD     = 1; /* new more secure passwords */\nexports.CLIENT_FOUND_ROWS        = 2; /* Found instead of affected rows */\nexports.CLIENT_LONG_FLAG         = 4; /* Get all column flags */\nexports.CLIENT_CONNECT_WITH_DB   = 8; /* One can specify db on connect */\nexports.CLIENT_NO_SCHEMA         = 16; /* Don't allow database.table.column */\nexports.CLIENT_COMPRESS          = 32; /* Can use compression protocol */\nexports.CLIENT_ODBC              = 64; /* Odbc client */\nexports.CLIENT_LOCAL_FILES       = 128; /* Can use LOAD DATA LOCAL */\nexports.CLIENT_IGNORE_SPACE      = 256; /* Ignore spaces before '(' */\nexports.CLIENT_PROTOCOL_41       = 512; /* New 4.1 protocol */\nexports.CLIENT_INTERACTIVE       = 1024; /* This is an interactive client */\nexports.CLIENT_SSL               = 2048; /* Switch to SSL after handshake */\nexports.CLIENT_IGNORE_SIGPIPE    = 4096;    /* IGNORE sigpipes */\nexports.CLIENT_TRANSACTIONS      = 8192; /* Client knows about transactions */\nexports.CLIENT_RESERVED          = 16384;   /* Old flag for 4.1 protocol  */\nexports.CLIENT_SECURE_CONNECTION = 32768;  /* New 4.1 authentication */\n\nexports.CLIENT_MULTI_STATEMENTS = 65536; /* Enable/disable multi-stmt support */\nexports.CLIENT_MULTI_RESULTS    = 131072; /* Enable/disable multi-results */\nexports.CLIENT_PS_MULTI_RESULTS = 262144; /* Multi-results in PS-protocol */\n\nexports.CLIENT_PLUGIN_AUTH = 524288; /* Client supports plugin authentication */\n\nexports.CLIENT_SSL_VERIFY_SERVER_CERT = 1073741824;\nexports.CLIENT_REMEMBER_OPTIONS       = 2147483648;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/protocol/constants/client.js\n// module id = 22\n// module chunks = 0","'use strict';\r\n\r\nvar $npm = {\r\n    qResult: require('./queryResult'),\r\n    qFile: require('./queryFile'),\r\n    prepared: require('./prepared'),\r\n    paramQuery: require('./paramQuery')\r\n};\r\n\r\n/**\r\n * @namespace errors\r\n * @description\r\n * Error types namespace, available as `pgp.errors`, before and after initializing the library.\r\n *\r\n * @property {function} PreparedStatementError\r\n * {@link errors.PreparedStatementError PreparedStatementError} class constructor.\r\n *\r\n * Represents all errors that can be reported by class {@link PreparedStatement}.\r\n *\r\n * @property {function} ParameterizedQueryError\r\n * {@link errors.ParameterizedQueryError ParameterizedQueryError} class constructor.\r\n *\r\n * Represents all errors that can be reported by class {@link ParameterizedQuery}.\r\n *\r\n * @property {function} QueryFileError\r\n * {@link errors.QueryFileError QueryFileError} class constructor.\r\n *\r\n * Represents all errors that can be reported by class {@link QueryFile}.\r\n *\r\n * @property {function} QueryResultError\r\n * {@link errors.QueryResultError QueryResultError} class constructor.\r\n *\r\n * Represents all result-specific errors from query methods.\r\n *\r\n * @property {errors.queryResultErrorCode} queryResultErrorCode\r\n * Error codes `enum` used by class {@link errors.QueryResultError QueryResultError}.\r\n *\r\n */\r\n\r\nmodule.exports = {\r\n    QueryResultError: $npm.qResult.QueryResultError,\r\n    queryResultErrorCode: $npm.qResult.queryResultErrorCode,\r\n    PreparedStatementError: $npm.prepared,\r\n    ParameterizedQueryError: $npm.paramQuery,\r\n    QueryFileError: $npm.qFile\r\n};\r\n\r\nObject.freeze(module.exports);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/lib/errors/index.js\n// module id = 23\n// module chunks = 0","'use strict';\r\n\r\nvar $npm = {\r\n    os: require('os'),\r\n    utils: require('../utils'),\r\n    minify: require('pg-minify')\r\n};\r\n\r\n/**\r\n * @interface errors.QueryFileError\r\n * @augments external:Error\r\n * @description\r\n * {@link errors.QueryFileError QueryFileError} interface, available from the {@link errors} namespace.\r\n *\r\n * This type represents all errors related to {@link QueryFile}.\r\n *\r\n * @property {string} name\r\n * Standard {@link external:Error Error} property - error type name = `QueryFileError`.\r\n *\r\n * @property {string} message\r\n * Standard {@link external:Error Error} property - the error message.\r\n *\r\n * @property {string} stack\r\n * Standard {@link external:Error Error} property - the stack trace.\r\n *\r\n * @property {string} file\r\n * File path/name that was passed into the {@link QueryFile} constructor.\r\n *\r\n * @property {object} options\r\n * Set of options that was used by the {@link QueryFile} object.\r\n *\r\n * @property {SQLParsingError} error\r\n * Internal $[SQLParsingError] object.\r\n *\r\n * It is set only when the error was thrown by $[pg-minify] while parsing the SQL file.\r\n *\r\n * @see QueryFile\r\n *\r\n */\r\nfunction QueryFileError(error, qf) {\r\n    var temp = Error.apply(this, arguments);\r\n    temp.name = this.name = 'QueryFileError';\r\n    this.stack = temp.stack;\r\n    if (error instanceof $npm.minify.SQLParsingError) {\r\n        this.error = error;\r\n        this.message = 'Failed to parse the SQL.';\r\n    } else {\r\n        this.message = error.message;\r\n    }\r\n    this.file = qf.file;\r\n    this.options = qf.options;\r\n}\r\n\r\nQueryFileError.prototype = Object.create(Error.prototype, {\r\n    constructor: {\r\n        value: QueryFileError,\r\n        writable: true,\r\n        configurable: true\r\n    }\r\n});\r\n\r\n/**\r\n * @method errors.QueryFileError.toString\r\n * @description\r\n * Creates a well-formatted multi-line string that represents the error.\r\n *\r\n * It is called automatically when writing the object into the console.\r\n *\r\n * @param {number} [level=0]\r\n * Nested output level, to provide visual offset.\r\n *\r\n * @returns {string}\r\n */\r\nQueryFileError.prototype.toString = function (level) {\r\n    level = level > 0 ? parseInt(level) : 0;\r\n    var gap0 = $npm.utils.messageGap(level),\r\n        gap1 = $npm.utils.messageGap(level + 1),\r\n        lines = [\r\n            'QueryFileError {',\r\n            gap1 + 'message: \"' + this.message + '\"',\r\n            gap1 + 'options: ' + JSON.stringify(this.options),\r\n            gap1 + 'file: \"' + this.file + '\"'\r\n        ];\r\n    if (this.error) {\r\n        lines.push(gap1 + 'error: ' + this.error.toString(level + 1));\r\n    }\r\n    lines.push(gap0 + '}');\r\n    return lines.join($npm.os.EOL);\r\n};\r\n\r\nQueryFileError.prototype.inspect = function () {\r\n    return this.toString();\r\n};\r\n\r\nmodule.exports = QueryFileError;\r\n\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/lib/errors/queryFile.js\n// module id = 24\n// module chunks = 0","'use strict';\r\n\r\nvar $npm = {\r\n    utils: require('../utils'),\r\n    formatting: require('../formatting')\r\n};\r\n\r\n/**\r\n * @class helpers.TableName\r\n * @description\r\n *\r\n * **Alternative Syntax:** `TableName({table, [schema]})` &#8658; {@link helpers.TableName}\r\n *\r\n * Prepares and escapes a full table name that can be injected into queries directly.\r\n *\r\n * This is a read-only type that can be used wherever parameter `table` is supported.\r\n *\r\n * It supports $[Custom Type Formatting], which means you can use the type directly as a formatting\r\n * parameter, without specifying any escaping.\r\n *\r\n * @param {String|Object} table\r\n * Table name details, depending on the type:\r\n *\r\n * - table name, if `table` is a string\r\n * - object `{table, [schema]}`\r\n *\r\n * @param {string} [schema]\r\n * Database schema name.\r\n *\r\n * When `table` is passed in as `{table, [schema]}`, this parameter is ignored.\r\n *\r\n * @property {string} name\r\n * Formatted/escaped full table name, based on properties `schema` + `table`.\r\n *\r\n * @property {string} table\r\n * Table name.\r\n *\r\n * @property {string} schema\r\n * Database schema name.\r\n *\r\n * It is `undefined` when no schema was specified (or if it was an empty string).\r\n *\r\n * @returns {helpers.TableName}\r\n *\r\n * @example\r\n *\r\n * var table = new pgp.helpers.TableName('my-table', 'my-schema');\r\n * console.log(table);\r\n * //=> \"my-schema\".\"my-table\"\r\n *\r\n * // Formatting the type directly:\r\n * pgp.as.format(\"SELECT * FROM $1\", table);\r\n * //=> SELECT * FROM \"my-schema\".\"my-table\"\r\n *\r\n */\r\nfunction TableName(table, schema) {\r\n\r\n    if (!(this instanceof TableName)) {\r\n        return new TableName(table, schema);\r\n    }\r\n\r\n    if (table && typeof table === 'object' && 'table' in table) {\r\n        schema = table.schema;\r\n        table = table.table;\r\n    }\r\n\r\n    if (!$npm.utils.isText(table)) {\r\n        throw new TypeError('Table name must be a non-empty text string.');\r\n    }\r\n\r\n    if (!$npm.utils.isNull(schema)) {\r\n        if (typeof schema !== 'string') {\r\n            throw new TypeError('Invalid schema name.');\r\n        }\r\n        if (schema.length > 0) {\r\n            this.schema = schema;\r\n        }\r\n    }\r\n\r\n    this.table = table;\r\n    this.name = $npm.formatting.as.name(table);\r\n\r\n    if (this.schema) {\r\n        this.name = $npm.formatting.as.name(schema) + '.' + this.name;\r\n    }\r\n\r\n    this._rawDBType = true;\r\n\r\n    Object.freeze(this);\r\n}\r\n\r\nTableName.prototype.formatDBType = function () {\r\n    return this.name;\r\n};\r\n\r\n/**\r\n * @method helpers.TableName.toString\r\n * @description\r\n * Creates a well-formatted string that represents the object.\r\n *\r\n * It is called automatically when writing the object into the console.\r\n *\r\n * @returns {string}\r\n */\r\nTableName.prototype.toString = function () {\r\n    return this.name;\r\n};\r\n\r\nTableName.prototype.inspect = function () {\r\n    return this.toString();\r\n};\r\n\r\nmodule.exports = TableName;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/lib/helpers/tableName.js\n// module id = 25\n// module chunks = 0","var textParsers = require('./lib/textParsers');\nvar binaryParsers = require('./lib/binaryParsers');\nvar arrayParser = require('./lib/arrayParser');\n\nexports.getTypeParser = getTypeParser;\nexports.setTypeParser = setTypeParser;\nexports.arrayParser = arrayParser;\n\nvar typeParsers = {\n  text: {},\n  binary: {}\n};\n\n//the empty parse function\nfunction noParse (val) {\n  return String(val);\n};\n\n//returns a function used to convert a specific type (specified by\n//oid) into a result javascript type\n//note: the oid can be obtained via the following sql query:\n//SELECT oid FROM pg_type WHERE typname = 'TYPE_NAME_HERE';\nfunction getTypeParser (oid, format) {\n  format = format || 'text';\n  if (!typeParsers[format]) {\n    return noParse;\n  }\n  return typeParsers[format][oid] || noParse;\n};\n\nfunction setTypeParser (oid, format, parseFn) {\n  if(typeof format == 'function') {\n    parseFn = format;\n    format = 'text';\n  }\n  typeParsers[format][oid] = parseFn;\n};\n\ntextParsers.init(function(oid, converter) {\n  typeParsers.text[oid] = converter;\n});\n\nbinaryParsers.init(function(oid, converter) {\n  typeParsers.binary[oid] = converter;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-types/index.js\n// module id = 26\n// module chunks = 0","'use strict';\r\n\r\nvar stream = require('stream');\r\nvar util = require('util');\r\n\r\n/////////////////////////////////////\r\n// Checks if the value is a promise;\r\nfunction isPromise(value) {\r\n    return value && typeof value.then === 'function';\r\n}\r\n\r\n////////////////////////////////////////////\r\n// Checks object for being a readable stream;\r\n\r\nfunction isReadableStream(obj) {\r\n    return obj instanceof stream.Stream &&\r\n        typeof obj._read === 'function' &&\r\n        typeof obj._readableState === 'object';\r\n}\r\n\r\n////////////////////////////////////////////////////////////\r\n// Sets an object property as read-only and non-enumerable.\r\nfunction extend(obj, name, value) {\r\n    Object.defineProperty(obj, name, {\r\n        value: value,\r\n        configurable: false,\r\n        enumerable: false,\r\n        writable: false\r\n    });\r\n}\r\n\r\n///////////////////////////////////////////\r\n// Returns a space gap for console output;\r\nfunction messageGap(level) {\r\n    return Array(1 + level * 4).join(' ');\r\n}\r\n\r\nfunction formatError(error, level) {\r\n    var names = ['BatchError', 'PageError', 'SequenceError'];\r\n    var msg = util.inspect(error);\r\n    if (error instanceof Error) {\r\n        if (names.indexOf(error.name) === -1) {\r\n            var gap = messageGap(level);\r\n            msg = msg.split('\\n').map(function (line, index) {\r\n                return (index ? gap : '') + line;\r\n            }).join('\\n');\r\n        } else {\r\n            msg = error.toString(level);\r\n        }\r\n    }\r\n    return msg;\r\n}\r\n\r\nmodule.exports = {\r\n    formatError: formatError,\r\n    isPromise: isPromise,\r\n    isReadableStream: isReadableStream,\r\n    messageGap: messageGap,\r\n    extend: extend\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/spex/lib/utils/static.js\n// module id = 27\n// module chunks = 0","module.exports = require(\"assert\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"assert\"\n// module id = 28\n// module chunks = 0","module.exports = require(\"buffer\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"buffer\"\n// module id = 29\n// module chunks = 0","'use strict';\n\nmodule.exports = require('./is-implemented')()\n\t? Array.from\n\t: require('./shim');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/array/from/index.js\n// module id = 30\n// module chunks = 0","'use strict';\n\nvar forEach = Array.prototype.forEach, create = Object.create;\n\nvar process = function (src, obj) {\n\tvar key;\n\tfor (key in src) obj[key] = src[key];\n};\n\nmodule.exports = function (options/*, …options*/) {\n\tvar result = create(null);\n\tforEach.call(arguments, function (options) {\n\t\tif (options == null) return;\n\t\tprocess(Object(options), result);\n\t});\n\treturn result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/object/normalize-options.js\n// module id = 31\n// module chunks = 0","var urlParse        = require('url').parse;\nvar ClientConstants = require('./protocol/constants/client');\nvar Charsets        = require('./protocol/constants/charsets');\nvar SSLProfiles     = null;\n\nmodule.exports = ConnectionConfig;\nfunction ConnectionConfig(options) {\n  if (typeof options === 'string') {\n    options = ConnectionConfig.parseUrl(options);\n  }\n\n  this.host               = options.host || 'localhost';\n  this.port               = options.port || 3306;\n  this.localAddress       = options.localAddress;\n  this.socketPath         = options.socketPath;\n  this.user               = options.user || undefined;\n  this.password           = options.password || undefined;\n  this.database           = options.database;\n  this.connectTimeout     = (options.connectTimeout === undefined)\n    ? (10 * 1000)\n    : options.connectTimeout;\n  this.insecureAuth       = options.insecureAuth || false;\n  this.supportBigNumbers  = options.supportBigNumbers || false;\n  this.bigNumberStrings   = options.bigNumberStrings || false;\n  this.dateStrings        = options.dateStrings || false;\n  this.debug              = options.debug;\n  this.trace              = options.trace !== false;\n  this.stringifyObjects   = options.stringifyObjects || false;\n  this.timezone           = options.timezone || 'local';\n  this.flags              = options.flags || '';\n  this.queryFormat        = options.queryFormat;\n  this.pool               = options.pool || undefined;\n  this.ssl                = (typeof options.ssl === 'string')\n    ? ConnectionConfig.getSSLProfile(options.ssl)\n    : (options.ssl || false);\n  this.multipleStatements = options.multipleStatements || false;\n  this.typeCast           = (options.typeCast === undefined)\n    ? true\n    : options.typeCast;\n\n  if (this.timezone[0] === ' ') {\n    // \"+\" is a url encoded char for space so it\n    // gets translated to space when giving a\n    // connection string..\n    this.timezone = '+' + this.timezone.substr(1);\n  }\n\n  if (this.ssl) {\n    // Default rejectUnauthorized to true\n    this.ssl.rejectUnauthorized = this.ssl.rejectUnauthorized !== false;\n  }\n\n  this.maxPacketSize = 0;\n  this.charsetNumber = (options.charset)\n    ? ConnectionConfig.getCharsetNumber(options.charset)\n    : options.charsetNumber || Charsets.UTF8_GENERAL_CI;\n\n  // Set the client flags\n  var defaultFlags = ConnectionConfig.getDefaultFlags(options);\n  this.clientFlags = ConnectionConfig.mergeFlags(defaultFlags, options.flags);\n}\n\nConnectionConfig.mergeFlags = function mergeFlags(defaultFlags, userFlags) {\n  var allFlags = ConnectionConfig.parseFlagList(defaultFlags);\n  var newFlags = ConnectionConfig.parseFlagList(userFlags);\n\n  // Merge the new flags\n  for (var flag in newFlags) {\n    if (allFlags[flag] !== false) {\n      allFlags[flag] = newFlags[flag];\n    }\n  }\n\n  // Build flags\n  var flags = 0x0;\n  for (var flag in allFlags) {\n    if (allFlags[flag]) {\n      // TODO: Throw here on some future release\n      flags |= ClientConstants['CLIENT_' + flag] || 0x0;\n    }\n  }\n\n  return flags;\n};\n\nConnectionConfig.getCharsetNumber = function getCharsetNumber(charset) {\n  var num = Charsets[charset.toUpperCase()];\n\n  if (num === undefined) {\n    throw new TypeError('Unknown charset \\'' + charset + '\\'');\n  }\n\n  return num;\n};\n\nConnectionConfig.getDefaultFlags = function getDefaultFlags(options) {\n  var defaultFlags = [\n    '-COMPRESS',          // Compression protocol *NOT* supported\n    '-CONNECT_ATTRS',     // Does *NOT* send connection attributes in Protocol::HandshakeResponse41\n    '+CONNECT_WITH_DB',   // One can specify db on connect in Handshake Response Packet\n    '+FOUND_ROWS',        // Send found rows instead of affected rows\n    '+IGNORE_SIGPIPE',    // Don't issue SIGPIPE if network failures\n    '+IGNORE_SPACE',      // Let the parser ignore spaces before '('\n    '+LOCAL_FILES',       // Can use LOAD DATA LOCAL\n    '+LONG_FLAG',         // Longer flags in Protocol::ColumnDefinition320\n    '+LONG_PASSWORD',     // Use the improved version of Old Password Authentication\n    '+MULTI_RESULTS',     // Can handle multiple resultsets for COM_QUERY\n    '+ODBC',              // Special handling of ODBC behaviour\n    '-PLUGIN_AUTH',       // Does *NOT* support auth plugins\n    '+PROTOCOL_41',       // Uses the 4.1 protocol\n    '+PS_MULTI_RESULTS',  // Can handle multiple resultsets for COM_STMT_EXECUTE\n    '+RESERVED',          // Unused\n    '+SECURE_CONNECTION', // Supports Authentication::Native41\n    '+TRANSACTIONS'       // Expects status flags\n  ];\n\n  if (options && options.multipleStatements) {\n    // May send multiple statements per COM_QUERY and COM_STMT_PREPARE\n    defaultFlags.push('+MULTI_STATEMENTS');\n  }\n\n  return defaultFlags;\n};\n\nConnectionConfig.getSSLProfile = function getSSLProfile(name) {\n  if (!SSLProfiles) {\n    SSLProfiles = require('./protocol/constants/ssl_profiles');\n  }\n\n  var ssl = SSLProfiles[name];\n\n  if (ssl === undefined) {\n    throw new TypeError('Unknown SSL profile \\'' + name + '\\'');\n  }\n\n  return ssl;\n};\n\nConnectionConfig.parseFlagList = function parseFlagList(flagList) {\n  var allFlags = Object.create(null);\n\n  if (!flagList) {\n    return allFlags;\n  }\n\n  var flags = !Array.isArray(flagList)\n    ? String(flagList || '').toUpperCase().split(/\\s*,+\\s*/)\n    : flagList;\n\n  for (var i = 0; i < flags.length; i++) {\n    var flag   = flags[i];\n    var offset = 1;\n    var state  = flag[0];\n\n    if (state === undefined) {\n      // TODO: throw here on some future release\n      continue;\n    }\n\n    if (state !== '-' && state !== '+') {\n      offset = 0;\n      state  = '+';\n    }\n\n    allFlags[flag.substr(offset)] = state === '+';\n  }\n\n  return allFlags;\n};\n\nConnectionConfig.parseUrl = function(url) {\n  url = urlParse(url, true);\n\n  var options = {\n    host     : url.hostname,\n    port     : url.port,\n    database : url.pathname.substr(1)\n  };\n\n  if (url.auth) {\n    var auth = url.auth.split(':');\n    options.user     = auth.shift();\n    options.password = auth.join(':');\n  }\n\n  if (url.query) {\n    for (var key in url.query) {\n      var value = url.query[key];\n\n      try {\n        // Try to parse this as a JSON expression first\n        options[key] = JSON.parse(value);\n      } catch (err) {\n        // Otherwise assume it is a plain string\n        options[key] = value;\n      }\n    }\n  }\n\n  return options;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/ConnectionConfig.js\n// module id = 32\n// module chunks = 0","// Manually extracted from mysql-5.7.9/include/mysql.h.pp\n// some more info here: http://dev.mysql.com/doc/refman/5.5/en/c-api-prepared-statement-type-codes.html\nexports.DECIMAL     = 0x00; // aka DECIMAL (http://dev.mysql.com/doc/refman/5.0/en/precision-math-decimal-changes.html)\nexports.TINY        = 0x01; // aka TINYINT, 1 byte\nexports.SHORT       = 0x02; // aka SMALLINT, 2 bytes\nexports.LONG        = 0x03; // aka INT, 4 bytes\nexports.FLOAT       = 0x04; // aka FLOAT, 4-8 bytes\nexports.DOUBLE      = 0x05; // aka DOUBLE, 8 bytes\nexports.NULL        = 0x06; // NULL (used for prepared statements, I think)\nexports.TIMESTAMP   = 0x07; // aka TIMESTAMP\nexports.LONGLONG    = 0x08; // aka BIGINT, 8 bytes\nexports.INT24       = 0x09; // aka MEDIUMINT, 3 bytes\nexports.DATE        = 0x0a; // aka DATE\nexports.TIME        = 0x0b; // aka TIME\nexports.DATETIME    = 0x0c; // aka DATETIME\nexports.YEAR        = 0x0d; // aka YEAR, 1 byte (don't ask)\nexports.NEWDATE     = 0x0e; // aka ?\nexports.VARCHAR     = 0x0f; // aka VARCHAR (?)\nexports.BIT         = 0x10; // aka BIT, 1-8 byte\nexports.TIMESTAMP2  = 0x11; // aka TIMESTAMP with fractional seconds\nexports.DATETIME2   = 0x12; // aka DATETIME with fractional seconds\nexports.TIME2       = 0x13; // aka TIME with fractional seconds\nexports.JSON        = 0xf5; // aka JSON\nexports.NEWDECIMAL  = 0xf6; // aka DECIMAL\nexports.ENUM        = 0xf7; // aka ENUM\nexports.SET         = 0xf8; // aka SET\nexports.TINY_BLOB   = 0xf9; // aka TINYBLOB, TINYTEXT\nexports.MEDIUM_BLOB = 0xfa; // aka MEDIUMBLOB, MEDIUMTEXT\nexports.LONG_BLOB   = 0xfb; // aka LONGBLOG, LONGTEXT\nexports.BLOB        = 0xfc; // aka BLOB, TEXT\nexports.VAR_STRING  = 0xfd; // aka VARCHAR, VARBINARY\nexports.STRING      = 0xfe; // aka CHAR, BINARY\nexports.GEOMETRY    = 0xff; // aka GEOMETRY\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/protocol/constants/types.js\n// module id = 33\n// module chunks = 0","'use strict';\r\n\r\nvar parser = require('./parser');\r\nvar error = require('./error');\r\n\r\nparser.minify.SQLParsingError = error.SQLParsingError;\r\nparser.minify.parsingErrorCode = error.parsingErrorCode;\r\n\r\nmodule.exports = parser.minify;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-minify/lib/index.js\n// module id = 34\n// module chunks = 0","'use strict';\r\n\r\n/**\r\n * @enum {number}\r\n * @alias queryResult\r\n * @readonly\r\n * @description\r\n * _Query Result Mask._\r\n *\r\n * Binary mask that represents the result expected from queries.\r\n * It is used in the generic {@link Database.query query} method,\r\n * as well as method {@link Database.func func}.\r\n *\r\n * The mask is always the last optional parameter, which defaults to `queryResult.any`.\r\n *\r\n * Any combination of flags is supported, except for `one + many`.\r\n *\r\n * The type is available from the library's root: `pgp.queryResult`.\r\n *\r\n * @see {@link Database.query}, {@link Database.func}\r\n */\r\nvar queryResult = {\r\n    /** Single row is expected. */\r\n    one: 1,\r\n    /** One or more rows expected. */\r\n    many: 2,\r\n    /** Expecting no rows. */\r\n    none: 4,\r\n    /** `many|none` - any result is expected. */\r\n    any: 6\r\n};\r\n\r\nObject.freeze(queryResult);\r\n\r\nmodule.exports = queryResult;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/lib/result.js\n// module id = 35\n// module chunks = 0","var defaults = require('./defaults');\n\n// convert a JS array to a postgres array literal\n// uses comma separator so won't work for types like box that use\n// a different array separator.\nfunction arrayString(val) {\n  var result = '{';\n  for (var i = 0 ; i < val.length; i++) {\n    if(i > 0) {\n      result = result + ',';\n    }\n    if(val[i] === null || typeof val[i] === 'undefined') {\n      result = result + 'NULL';\n    }\n    else if(Array.isArray(val[i])) {\n      result = result + arrayString(val[i]);\n    }\n    else\n    {\n      result = result + JSON.stringify(prepareValue(val[i]));\n    }\n  }\n  result = result + '}';\n  return result;\n}\n\n//converts values from javascript types\n//to their 'raw' counterparts for use as a postgres parameter\n//note: you can override this function to provide your own conversion mechanism\n//for complex types, etc...\nvar prepareValue = function(val, seen) {\n  if (val instanceof Buffer) {\n    return val;\n  }\n  if(val instanceof Date) {\n    if(defaults.parseInputDatesAsUTC) {\n      return dateToStringUTC(val);\n    } else {\n      return dateToString(val);\n    }\n  }\n  if(Array.isArray(val)) {\n    return arrayString(val);\n  }\n  if(val === null || typeof val === 'undefined') {\n    return null;\n  }\n  if(typeof val === 'object') {\n    return prepareObject(val, seen);\n  }\n  if (typeof val === 'undefined') {\n    throw new Error('SQL queries with undefined where clause option');\n  }\n  return val.toString();\n};\n\nfunction prepareObject(val, seen) {\n  if(val.toPostgres && typeof val.toPostgres === 'function') {\n    seen = seen || [];\n    if (seen.indexOf(val) !== -1) {\n      throw new Error('circular reference detected while preparing \"' + val + '\" for query');\n    }\n    seen.push(val);\n\n    return prepareValue(val.toPostgres(prepareValue), seen);\n  }\n  return JSON.stringify(val);\n}\n\nfunction pad(number, digits) {\n  number = \"\"  +number;\n  while(number.length < digits)\n    number = \"0\" + number;\n  return number;\n}\n\nfunction dateToString(date) {\n\n  var offset = -date.getTimezoneOffset();\n  var ret = pad(date.getFullYear(), 4) + '-' +\n    pad(date.getMonth() + 1, 2) + '-' +\n    pad(date.getDate(), 2) + 'T' +\n    pad(date.getHours(), 2) + ':' +\n    pad(date.getMinutes(), 2) + ':' +\n    pad(date.getSeconds(), 2) + '.' +\n    pad(date.getMilliseconds(), 3);\n\n  if(offset < 0) {\n    ret += \"-\";\n    offset *= -1;\n  }\n  else\n    ret += \"+\";\n\n  return ret + pad(Math.floor(offset/60), 2) + \":\" + pad(offset%60, 2);\n}\n\nfunction dateToStringUTC(date) {\n  \n  var ret = pad(date.getUTCFullYear(), 4) + '-' +\n      pad(date.getUTCMonth() + 1, 2) + '-' +\n      pad(date.getUTCDate(), 2) + 'T' +\n      pad(date.getUTCHours(), 2) + ':' +\n      pad(date.getUTCMinutes(), 2) + ':' +\n      pad(date.getUTCSeconds(), 2) + '.' +\n      pad(date.getUTCMilliseconds(), 3);\n  \n  return ret + \"+00:00\";\n}\n\nfunction normalizeQueryConfig (config, values, callback) {\n  //can take in strings or config objects\n  config = (typeof(config) == 'string') ? { text: config } : config;\n  if(values) {\n    if(typeof values === 'function') {\n      config.callback = values;\n    } else {\n      config.values = values;\n    }\n  }\n  if(callback) {\n    config.callback = callback;\n  }\n  return config;\n}\n\nmodule.exports = {\n  prepareValue: function prepareValueWrapper (value) {\n    //this ensures that extra arguments do not get passed into prepareValue\n    //by accident, eg: from calling values.map(utils.prepareValue)\n    return prepareValue(value);\n  },\n  normalizeQueryConfig: normalizeQueryConfig\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/~/pg/lib/utils.js\n// module id = 36\n// module chunks = 0","module.exports = require(\"crypto\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"crypto\"\n// module id = 37\n// module chunks = 0","module.exports = require(\"url\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"url\"\n// module id = 38\n// module chunks = 0","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 39;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bindings\n// module id = 39\n// module chunks = 0","'use strict';\n\nmodule.exports = require('./is-implemented')()\n\t? Object.assign\n\t: require('./shim');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/object/assign/index.js\n// module id = 40\n// module chunks = 0","// Deprecated\n\n'use strict';\n\nmodule.exports = function (obj) { return typeof obj === 'function'; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/object/is-callable.js\n// module id = 41\n// module chunks = 0","'use strict';\n\nmodule.exports = function (fn) {\n\tif (typeof fn !== 'function') throw new TypeError(fn + \" is not a function\");\n\treturn fn;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/object/valid-callable.js\n// module id = 42\n// module chunks = 0","'use strict';\n\nmodule.exports = require('./is-implemented')()\n\t? String.prototype.contains\n\t: require('./shim');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/string/#/contains/index.js\n// module id = 43\n// module chunks = 0","'use strict';\n\nvar esniff = require('esniff')\n\n  , i, current, literals, substitutions, sOut, sEscape, sAhead, sIn, sInEscape, template;\n\nsOut = function (char) {\n\tif (char === '\\\\') return sEscape;\n\tif (char === '$') return sAhead;\n\tcurrent += char;\n\treturn sOut;\n};\nsEscape = function (char) {\n\tif ((char !== '\\\\') && (char !== '$')) current += '\\\\';\n\tcurrent += char;\n\treturn sOut;\n};\nsAhead = function (char) {\n\tif (char === '{') {\n\t\tliterals.push(current);\n\t\tcurrent = '';\n\t\treturn sIn;\n\t}\n\tif (char === '$') {\n\t\tcurrent += '$';\n\t\treturn sAhead;\n\t}\n\tcurrent += '$' + char;\n\treturn sOut;\n};\nsIn = function (char) {\n\tvar code = template.slice(i), end;\n\tesniff(code, '}', function (j) {\n\t\tif (esniff.nest >= 0) return esniff.next();\n\t\tend = j;\n\t});\n\tif (end != null) {\n\t\tsubstitutions.push(template.slice(i, i + end));\n\t\ti += end;\n\t\tcurrent = '';\n\t\treturn sOut;\n\t}\n\tend = code.length;\n\ti += end;\n\tcurrent += code;\n\treturn sIn;\n};\nsInEscape = function (char) {\n\tif ((char !== '\\\\') && (char !== '}')) current += '\\\\';\n\tcurrent += char;\n\treturn sIn;\n};\n\nmodule.exports = function (str) {\n\tvar length, state, result;\n\tcurrent = '';\n\tliterals = [];\n\tsubstitutions = [];\n\n\ttemplate = String(str);\n\tlength = template.length;\n\n\tstate = sOut;\n\tfor (i = 0; i < length; ++i) state = state(template[i]);\n\tif (state === sOut) {\n\t\tliterals.push(current);\n\t} else if (state === sEscape) {\n\t\tliterals.push(current + '\\\\');\n\t} else if (state === sAhead) {\n\t\tliterals.push(current + '$');\n\t} else if (state === sIn) {\n\t\tliterals[literals.length - 1] += '${' + current;\n\t} else if (state === sInEscape) {\n\t\tliterals[literals.length - 1] += '${' + current + '\\\\';\n\t}\n\tresult = { literals: literals, substitutions: substitutions };\n\tliterals = substitutions = null;\n\treturn result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es6-template-strings/compile.js\n// module id = 44\n// module chunks = 0","'use strict';\n\nvar resolve  = require('./resolve')\n  , passthru = require('./passthru');\n\nmodule.exports = function (data, context/*, options*/) {\n\treturn passthru.apply(null, resolve(data, context, arguments[2]));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es6-template-strings/resolve-to-string.js\n// module id = 45\n// module chunks = 0","'use strict';\n\nvar from         = require('es5-ext/array/from')\n  , primitiveSet = require('es5-ext/object/primitive-set');\n\nmodule.exports = primitiveSet.apply(null, from('\\n\\r\\u2028\\u2029'));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/esniff/lib/ws-eol.js\n// module id = 46\n// module chunks = 0","var Classes = Object.create(null);\n\n/**\n * Create a new Connection instance.\n * @param {object|string} config Configuration or connection string for new MySQL connection\n * @return {Connection} A new MySQL connection\n * @public\n */\nexports.createConnection = function createConnection(config) {\n  var Connection       = loadClass('Connection');\n  var ConnectionConfig = loadClass('ConnectionConfig');\n\n  return new Connection({config: new ConnectionConfig(config)});\n};\n\n/**\n * Create a new Pool instance.\n * @param {object|string} config Configuration or connection string for new MySQL connections\n * @return {Pool} A new MySQL pool\n * @public\n */\nexports.createPool = function createPool(config) {\n  var Pool       = loadClass('Pool');\n  var PoolConfig = loadClass('PoolConfig');\n\n  return new Pool({config: new PoolConfig(config)});\n};\n\n/**\n * Create a new PoolCluster instance.\n * @param {object} [config] Configuration for pool cluster\n * @return {PoolCluster} New MySQL pool cluster\n * @public\n */\nexports.createPoolCluster = function createPoolCluster(config) {\n  var PoolCluster = loadClass('PoolCluster');\n\n  return new PoolCluster(config);\n};\n\n/**\n * Create a new Query instance.\n * @param {string} sql The SQL for the query\n * @param {array} [values] Any values to insert into placeholders in sql\n * @param {function} [callback] The callback to use when query is complete\n * @return {Query} New query object\n * @public\n */\nexports.createQuery = function createQuery(sql, values, callback) {\n  var Connection = loadClass('Connection');\n\n  return Connection.createQuery(sql, values, callback);\n};\n\n/**\n * Escape a value for SQL.\n * @param {*} value The value to escape\n * @param {boolean} [stringifyObjects=false] Setting if objects should be stringified\n * @param {string} [timeZone=local] Setting for time zone to use for Date conversion\n * @return {string} Escaped string value\n * @public\n */\nexports.escape = function escape(value, stringifyObjects, timeZone) {\n  var SqlString = loadClass('SqlString');\n\n  return SqlString.escape(value, stringifyObjects, timeZone);\n};\n\n/**\n * Escape an identifier for SQL.\n * @param {*} value The value to escape\n * @param {boolean} [forbidQualified=false] Setting to treat '.' as part of identifier\n * @return {string} Escaped string value\n * @public\n */\nexports.escapeId = function escapeId(value, forbidQualified) {\n  var SqlString = loadClass('SqlString');\n\n  return SqlString.escapeId(value, forbidQualified);\n};\n\n/**\n * Format SQL and replacement values into a SQL string.\n * @param {string} sql The SQL for the query\n * @param {array} [values] Any values to insert into placeholders in sql\n * @param {boolean} [stringifyObjects=false] Setting if objects should be stringified\n * @param {string} [timeZone=local] Setting for time zone to use for Date conversion\n * @return {string} Formatted SQL string\n * @public\n */\nexports.format = function format(sql, values, stringifyObjects, timeZone) {\n  var SqlString = loadClass('SqlString');\n\n  return SqlString.format(sql, values, stringifyObjects, timeZone);\n};\n\n/**\n * The type constants.\n * @public\n */\nObject.defineProperty(exports, 'Types', {\n  get: loadClass.bind(null, 'Types')\n});\n\n/**\n * Load the given class.\n * @param {string} className Name of class to default\n * @return {function|object} Class constructor or exports\n * @private\n */\nfunction loadClass(className) {\n  var Class = Classes[className];\n\n  if (Class !== undefined) {\n    return Class;\n  }\n\n  // This uses a switch for static require analysis\n  switch (className) {\n    case 'Connection':\n      Class = require('./lib/Connection');\n      break;\n    case 'ConnectionConfig':\n      Class = require('./lib/ConnectionConfig');\n      break;\n    case 'Pool':\n      Class = require('./lib/Pool');\n      break;\n    case 'PoolCluster':\n      Class = require('./lib/PoolCluster');\n      break;\n    case 'PoolConfig':\n      Class = require('./lib/PoolConfig');\n      break;\n    case 'SqlString':\n      Class = require('./lib/protocol/SqlString');\n      break;\n    case 'Types':\n      Class = require('./lib/protocol/constants/types');\n      break;\n    default:\n      throw new Error('Cannot find class \\'' + className + '\\'');\n  }\n\n  // Store to prevent invoking require()\n  Classes[className] = Class;\n\n  return Class;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/index.js\n// module id = 47\n// module chunks = 0","var mysql          = require('../');\nvar Connection     = require('./Connection');\nvar EventEmitter   = require('events').EventEmitter;\nvar Util           = require('util');\nvar PoolConnection = require('./PoolConnection');\n\nmodule.exports = Pool;\n\nUtil.inherits(Pool, EventEmitter);\nfunction Pool(options) {\n  EventEmitter.call(this);\n  this.config = options.config;\n  this.config.connectionConfig.pool = this;\n\n  this._acquiringConnections = [];\n  this._allConnections       = [];\n  this._freeConnections      = [];\n  this._connectionQueue      = [];\n  this._closed               = false;\n}\n\nPool.prototype.getConnection = function (cb) {\n\n  if (this._closed) {\n    var err = new Error('Pool is closed.');\n    err.code = 'POOL_CLOSED';\n    process.nextTick(function () {\n      cb(err);\n    });\n    return;\n  }\n\n  var connection;\n  var pool = this;\n\n  if (this._freeConnections.length > 0) {\n    connection = this._freeConnections.shift();\n    this.acquireConnection(connection, cb);\n    return;\n  }\n\n  if (this.config.connectionLimit === 0 || this._allConnections.length < this.config.connectionLimit) {\n    connection = new PoolConnection(this, { config: this.config.newConnectionConfig() });\n\n    this._acquiringConnections.push(connection);\n    this._allConnections.push(connection);\n\n    connection.connect({timeout: this.config.acquireTimeout}, function onConnect(err) {\n      spliceConnection(pool._acquiringConnections, connection);\n\n      if (pool._closed) {\n        err = new Error('Pool is closed.');\n        err.code = 'POOL_CLOSED';\n      }\n\n      if (err) {\n        pool._purgeConnection(connection);\n        cb(err);\n        return;\n      }\n\n      pool.emit('connection', connection);\n      pool.emit('acquire', connection);\n      cb(null, connection);\n    });\n    return;\n  }\n\n  if (!this.config.waitForConnections) {\n    process.nextTick(function(){\n      var err = new Error('No connections available.');\n      err.code = 'POOL_CONNLIMIT';\n      cb(err);\n    });\n    return;\n  }\n\n  this._enqueueCallback(cb);\n};\n\nPool.prototype.acquireConnection = function acquireConnection(connection, cb) {\n  if (connection._pool !== this) {\n    throw new Error('Connection acquired from wrong pool.');\n  }\n\n  var changeUser = this._needsChangeUser(connection);\n  var pool       = this;\n\n  this._acquiringConnections.push(connection);\n\n  function onOperationComplete(err) {\n    spliceConnection(pool._acquiringConnections, connection);\n\n    if (pool._closed) {\n      err = new Error('Pool is closed.');\n      err.code = 'POOL_CLOSED';\n    }\n\n    if (err) {\n      pool._connectionQueue.unshift(cb);\n      pool._purgeConnection(connection);\n      return;\n    }\n\n    if (changeUser) {\n      pool.emit('connection', connection);\n    }\n\n    pool.emit('acquire', connection);\n    cb(null, connection);\n  }\n\n  if (changeUser) {\n    // restore user back to pool configuration\n    connection.config = this.config.newConnectionConfig();\n    connection.changeUser({timeout: this.config.acquireTimeout}, onOperationComplete);\n  } else {\n    // ping connection\n    connection.ping({timeout: this.config.acquireTimeout}, onOperationComplete);\n  }\n};\n\nPool.prototype.releaseConnection = function releaseConnection(connection) {\n\n  if (this._acquiringConnections.indexOf(connection) !== -1) {\n    // connection is being acquired\n    return;\n  }\n\n  if (connection._pool) {\n    if (connection._pool !== this) {\n      throw new Error('Connection released to wrong pool');\n    }\n\n    if (this._freeConnections.indexOf(connection) !== -1) {\n      // connection already in free connection pool\n      // this won't catch all double-release cases\n      throw new Error('Connection already released');\n    } else {\n      // add connection to end of free queue\n      this._freeConnections.push(connection);\n      this.emit('release', connection);\n    }\n  }\n\n  if (this._closed) {\n    // empty the connection queue\n    this._connectionQueue.splice(0).forEach(function (cb) {\n      var err = new Error('Pool is closed.');\n      err.code = 'POOL_CLOSED';\n      process.nextTick(function () {\n        cb(err);\n      });\n    });\n  } else if (this._connectionQueue.length) {\n    // get connection with next waiting callback\n    this.getConnection(this._connectionQueue.shift());\n  }\n};\n\nPool.prototype.end = function (cb) {\n  this._closed = true;\n\n  if (typeof cb !== 'function') {\n    cb = function (err) {\n      if (err) throw err;\n    };\n  }\n\n  var calledBack   = false;\n  var waitingClose = 0;\n\n  function onEnd(err) {\n    if (!calledBack && (err || --waitingClose <= 0)) {\n      calledBack = true;\n      cb(err);\n    }\n  }\n\n  while (this._allConnections.length !== 0) {\n    waitingClose++;\n    this._purgeConnection(this._allConnections[0], onEnd);\n  }\n\n  if (waitingClose === 0) {\n    process.nextTick(onEnd);\n  }\n};\n\nPool.prototype.query = function (sql, values, cb) {\n  var query = Connection.createQuery(sql, values, cb);\n\n  if (!(typeof sql === 'object' && 'typeCast' in sql)) {\n    query.typeCast = this.config.connectionConfig.typeCast;\n  }\n\n  if (this.config.connectionConfig.trace) {\n    // Long stack trace support\n    query._callSite = new Error();\n  }\n\n  this.getConnection(function (err, conn) {\n    if (err) {\n      query.on('error', function () {});\n      query.end(err);\n      return;\n    }\n\n    // Release connection based off event\n    query.once('end', function() {\n      conn.release();\n    });\n\n    conn.query(query);\n  });\n\n  return query;\n};\n\nPool.prototype._enqueueCallback = function _enqueueCallback(callback) {\n\n  if (this.config.queueLimit && this._connectionQueue.length >= this.config.queueLimit) {\n    process.nextTick(function () {\n      var err = new Error('Queue limit reached.');\n      err.code = 'POOL_ENQUEUELIMIT';\n      callback(err);\n    });\n    return;\n  }\n\n  // Bind to domain, as dequeue will likely occur in a different domain\n  var cb = process.domain\n    ? process.domain.bind(callback)\n    : callback;\n\n  this._connectionQueue.push(cb);\n  this.emit('enqueue');\n};\n\nPool.prototype._needsChangeUser = function _needsChangeUser(connection) {\n  var connConfig = connection.config;\n  var poolConfig = this.config.connectionConfig;\n\n  // check if changeUser values are different\n  return connConfig.user !== poolConfig.user\n    || connConfig.database !== poolConfig.database\n    || connConfig.password !== poolConfig.password\n    || connConfig.charsetNumber !== poolConfig.charsetNumber;\n};\n\nPool.prototype._purgeConnection = function _purgeConnection(connection, callback) {\n  var cb = callback || function () {};\n\n  if (connection.state === 'disconnected') {\n    connection.destroy();\n  }\n\n  this._removeConnection(connection);\n\n  if (connection.state !== 'disconnected' && !connection._protocol._quitSequence) {\n    connection._realEnd(cb);\n    return;\n  }\n\n  process.nextTick(cb);\n};\n\nPool.prototype._removeConnection = function(connection) {\n  connection._pool = null;\n\n  // Remove connection from all connections\n  spliceConnection(this._allConnections, connection);\n\n  // Remove connection from free connections\n  spliceConnection(this._freeConnections, connection);\n\n  this.releaseConnection(connection);\n};\n\nPool.prototype.escape = function(value) {\n  return mysql.escape(value, this.config.connectionConfig.stringifyObjects, this.config.connectionConfig.timezone);\n};\n\nPool.prototype.escapeId = function escapeId(value) {\n  return mysql.escapeId(value, false);\n};\n\nfunction spliceConnection(array, connection) {\n  var index;\n  if ((index = array.indexOf(connection)) !== -1) {\n    // Remove connection from all connections\n    array.splice(index, 1);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/Pool.js\n// module id = 48\n// module chunks = 0","\nvar ConnectionConfig = require('./ConnectionConfig');\n\nmodule.exports = PoolConfig;\nfunction PoolConfig(options) {\n  if (typeof options === 'string') {\n    options = ConnectionConfig.parseUrl(options);\n  }\n\n  this.acquireTimeout     = (options.acquireTimeout === undefined)\n    ? 10 * 1000\n    : Number(options.acquireTimeout);\n  this.connectionConfig   = new ConnectionConfig(options);\n  this.waitForConnections = (options.waitForConnections === undefined)\n    ? true\n    : Boolean(options.waitForConnections);\n  this.connectionLimit    = (options.connectionLimit === undefined)\n    ? 10\n    : Number(options.connectionLimit);\n  this.queueLimit         = (options.queueLimit === undefined)\n    ? 0\n    : Number(options.queueLimit);\n}\n\nPoolConfig.prototype.newConnectionConfig = function newConnectionConfig() {\n  var connectionConfig = new ConnectionConfig(this.connectionConfig);\n\n  connectionConfig.clientFlags   = this.connectionConfig.clientFlags;\n  connectionConfig.maxPacketSize = this.connectionConfig.maxPacketSize;\n\n  return connectionConfig;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/PoolConfig.js\n// module id = 49\n// module chunks = 0","\n/**\n * PoolSelector\n */\nvar PoolSelector = module.exports = {};\n\nPoolSelector.RR = function PoolSelectorRoundRobin() {\n  var index = 0;\n\n  return function(clusterIds) {\n    if (index >= clusterIds.length) {\n      index = 0;\n    }\n\n    var clusterId = clusterIds[index++];\n\n    return clusterId;\n  };\n};\n\nPoolSelector.RANDOM = function PoolSelectorRandom() {\n  return function(clusterIds) {\n    return clusterIds[Math.floor(Math.random() * clusterIds.length)];\n  };\n};\n\nPoolSelector.ORDER = function PoolSelectorOrder() {\n  return function(clusterIds) {\n    return clusterIds[0];\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/PoolSelector.js\n// module id = 50\n// module chunks = 0","var Buffer = require('buffer').Buffer;\nvar Crypto = require('crypto');\nvar Auth   = exports;\n\nfunction sha1(msg) {\n  var hash = Crypto.createHash('sha1');\n  hash.update(msg, 'binary');\n  return hash.digest('binary');\n}\nAuth.sha1 = sha1;\n\nfunction xor(a, b) {\n  a = new Buffer(a, 'binary');\n  b = new Buffer(b, 'binary');\n  var result = new Buffer(a.length);\n  for (var i = 0; i < a.length; i++) {\n    result[i] = (a[i] ^ b[i]);\n  }\n  return result;\n}\nAuth.xor = xor;\n\nAuth.token = function(password, scramble) {\n  if (!password) {\n    return new Buffer(0);\n  }\n\n  // password must be in binary format, not utf8\n  var stage1 = sha1((new Buffer(password, 'utf8')).toString('binary'));\n  var stage2 = sha1(stage1);\n  var stage3 = sha1(scramble.toString('binary') + stage2);\n  return xor(stage3, stage1);\n};\n\n// This is a port of sql/password.c:hash_password which needs to be used for\n// pre-4.1 passwords.\nAuth.hashPassword = function(password) {\n  var nr = [0x5030, 0x5735],\n      add = 7,\n      nr2 = [0x1234, 0x5671],\n      result = new Buffer(8);\n\n  if (typeof password === 'string'){\n    password = new Buffer(password);\n  }\n\n  for (var i = 0; i < password.length; i++) {\n    var c = password[i];\n    if (c === 32 || c === 9) {\n      // skip space in password\n      continue;\n    }\n\n    // nr^= (((nr & 63)+add)*c)+ (nr << 8);\n    // nr = xor(nr, add(mul(add(and(nr, 63), add), c), shl(nr, 8)))\n    nr = this.xor32(nr, this.add32(this.mul32(this.add32(this.and32(nr, [0,63]), [0,add]), [0,c]), this.shl32(nr, 8)));\n\n    // nr2+=(nr2 << 8) ^ nr;\n    // nr2 = add(nr2, xor(shl(nr2, 8), nr))\n    nr2 = this.add32(nr2, this.xor32(this.shl32(nr2, 8), nr));\n\n    // add+=tmp;\n    add += c;\n  }\n\n  this.int31Write(result, nr, 0);\n  this.int31Write(result, nr2, 4);\n\n  return result;\n};\n\nAuth.randomInit = function(seed1, seed2) {\n  return {\n    max_value     : 0x3FFFFFFF,\n    max_value_dbl : 0x3FFFFFFF,\n    seed1         : seed1 % 0x3FFFFFFF,\n    seed2         : seed2 % 0x3FFFFFFF\n  };\n};\n\nAuth.myRnd = function(r){\n  r.seed1 = (r.seed1 * 3 + r.seed2) % r.max_value;\n  r.seed2 = (r.seed1 + r.seed2 + 33) % r.max_value;\n\n  return r.seed1 / r.max_value_dbl;\n};\n\nAuth.scramble323 = function(message, password) {\n  var to = new Buffer(8),\n      hashPass = this.hashPassword(password),\n      hashMessage = this.hashPassword(message.slice(0, 8)),\n      seed1 = this.int32Read(hashPass, 0) ^ this.int32Read(hashMessage, 0),\n      seed2 = this.int32Read(hashPass, 4) ^ this.int32Read(hashMessage, 4),\n      r = this.randomInit(seed1, seed2);\n\n  for (var i = 0; i < 8; i++){\n    to[i] = Math.floor(this.myRnd(r) * 31) + 64;\n  }\n  var extra = (Math.floor(this.myRnd(r) * 31));\n\n  for (var i = 0; i < 8; i++){\n    to[i] ^= extra;\n  }\n\n  return to;\n};\n\nAuth.xor32 = function(a,b){\n  return [a[0] ^ b[0], a[1] ^ b[1]];\n};\n\nAuth.add32 = function(a,b){\n  var w1 = a[1] + b[1],\n      w2 = a[0] + b[0] + ((w1 & 0xFFFF0000) >> 16);\n\n  return [w2 & 0xFFFF, w1 & 0xFFFF];\n};\n\nAuth.mul32 = function(a,b){\n  // based on this example of multiplying 32b ints using 16b\n  // http://www.dsprelated.com/showmessage/89790/1.php\n  var w1 = a[1] * b[1],\n      w2 = (((a[1] * b[1]) >> 16) & 0xFFFF) + ((a[0] * b[1]) & 0xFFFF) + (a[1] * b[0] & 0xFFFF);\n\n  return [w2 & 0xFFFF, w1 & 0xFFFF];\n};\n\nAuth.and32 = function(a,b){\n  return [a[0] & b[0], a[1] & b[1]];\n};\n\nAuth.shl32 = function(a,b){\n  // assume b is 16 or less\n  var w1 = a[1] << b,\n      w2 = (a[0] << b) | ((w1 & 0xFFFF0000) >> 16);\n\n  return [w2 & 0xFFFF, w1 & 0xFFFF];\n};\n\nAuth.int31Write = function(buffer, number, offset) {\n  buffer[offset] = (number[0] >> 8) & 0x7F;\n  buffer[offset + 1] = (number[0]) & 0xFF;\n  buffer[offset + 2] = (number[1] >> 8) & 0xFF;\n  buffer[offset + 3] = (number[1]) & 0xFF;\n};\n\nAuth.int32Read = function(buffer, offset){\n  return (buffer[offset] << 24)\n       + (buffer[offset + 1] << 16)\n       + (buffer[offset + 2] << 8)\n       + (buffer[offset + 3]);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/protocol/Auth.js\n// module id = 51\n// module chunks = 0","module.exports = require('sqlstring');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/protocol/SqlString.js\n// module id = 52\n// module chunks = 0","exports.BIG5_CHINESE_CI              = 1;\nexports.LATIN2_CZECH_CS              = 2;\nexports.DEC8_SWEDISH_CI              = 3;\nexports.CP850_GENERAL_CI             = 4;\nexports.LATIN1_GERMAN1_CI            = 5;\nexports.HP8_ENGLISH_CI               = 6;\nexports.KOI8R_GENERAL_CI             = 7;\nexports.LATIN1_SWEDISH_CI            = 8;\nexports.LATIN2_GENERAL_CI            = 9;\nexports.SWE7_SWEDISH_CI              = 10;\nexports.ASCII_GENERAL_CI             = 11;\nexports.UJIS_JAPANESE_CI             = 12;\nexports.SJIS_JAPANESE_CI             = 13;\nexports.CP1251_BULGARIAN_CI          = 14;\nexports.LATIN1_DANISH_CI             = 15;\nexports.HEBREW_GENERAL_CI            = 16;\nexports.TIS620_THAI_CI               = 18;\nexports.EUCKR_KOREAN_CI              = 19;\nexports.LATIN7_ESTONIAN_CS           = 20;\nexports.LATIN2_HUNGARIAN_CI          = 21;\nexports.KOI8U_GENERAL_CI             = 22;\nexports.CP1251_UKRAINIAN_CI          = 23;\nexports.GB2312_CHINESE_CI            = 24;\nexports.GREEK_GENERAL_CI             = 25;\nexports.CP1250_GENERAL_CI            = 26;\nexports.LATIN2_CROATIAN_CI           = 27;\nexports.GBK_CHINESE_CI               = 28;\nexports.CP1257_LITHUANIAN_CI         = 29;\nexports.LATIN5_TURKISH_CI            = 30;\nexports.LATIN1_GERMAN2_CI            = 31;\nexports.ARMSCII8_GENERAL_CI          = 32;\nexports.UTF8_GENERAL_CI              = 33;\nexports.CP1250_CZECH_CS              = 34;\nexports.UCS2_GENERAL_CI              = 35;\nexports.CP866_GENERAL_CI             = 36;\nexports.KEYBCS2_GENERAL_CI           = 37;\nexports.MACCE_GENERAL_CI             = 38;\nexports.MACROMAN_GENERAL_CI          = 39;\nexports.CP852_GENERAL_CI             = 40;\nexports.LATIN7_GENERAL_CI            = 41;\nexports.LATIN7_GENERAL_CS            = 42;\nexports.MACCE_BIN                    = 43;\nexports.CP1250_CROATIAN_CI           = 44;\nexports.UTF8MB4_GENERAL_CI           = 45;\nexports.UTF8MB4_BIN                  = 46;\nexports.LATIN1_BIN                   = 47;\nexports.LATIN1_GENERAL_CI            = 48;\nexports.LATIN1_GENERAL_CS            = 49;\nexports.CP1251_BIN                   = 50;\nexports.CP1251_GENERAL_CI            = 51;\nexports.CP1251_GENERAL_CS            = 52;\nexports.MACROMAN_BIN                 = 53;\nexports.UTF16_GENERAL_CI             = 54;\nexports.UTF16_BIN                    = 55;\nexports.UTF16LE_GENERAL_CI           = 56;\nexports.CP1256_GENERAL_CI            = 57;\nexports.CP1257_BIN                   = 58;\nexports.CP1257_GENERAL_CI            = 59;\nexports.UTF32_GENERAL_CI             = 60;\nexports.UTF32_BIN                    = 61;\nexports.UTF16LE_BIN                  = 62;\nexports.BINARY                       = 63;\nexports.ARMSCII8_BIN                 = 64;\nexports.ASCII_BIN                    = 65;\nexports.CP1250_BIN                   = 66;\nexports.CP1256_BIN                   = 67;\nexports.CP866_BIN                    = 68;\nexports.DEC8_BIN                     = 69;\nexports.GREEK_BIN                    = 70;\nexports.HEBREW_BIN                   = 71;\nexports.HP8_BIN                      = 72;\nexports.KEYBCS2_BIN                  = 73;\nexports.KOI8R_BIN                    = 74;\nexports.KOI8U_BIN                    = 75;\nexports.LATIN2_BIN                   = 77;\nexports.LATIN5_BIN                   = 78;\nexports.LATIN7_BIN                   = 79;\nexports.CP850_BIN                    = 80;\nexports.CP852_BIN                    = 81;\nexports.SWE7_BIN                     = 82;\nexports.UTF8_BIN                     = 83;\nexports.BIG5_BIN                     = 84;\nexports.EUCKR_BIN                    = 85;\nexports.GB2312_BIN                   = 86;\nexports.GBK_BIN                      = 87;\nexports.SJIS_BIN                     = 88;\nexports.TIS620_BIN                   = 89;\nexports.UCS2_BIN                     = 90;\nexports.UJIS_BIN                     = 91;\nexports.GEOSTD8_GENERAL_CI           = 92;\nexports.GEOSTD8_BIN                  = 93;\nexports.LATIN1_SPANISH_CI            = 94;\nexports.CP932_JAPANESE_CI            = 95;\nexports.CP932_BIN                    = 96;\nexports.EUCJPMS_JAPANESE_CI          = 97;\nexports.EUCJPMS_BIN                  = 98;\nexports.CP1250_POLISH_CI             = 99;\nexports.UTF16_UNICODE_CI             = 101;\nexports.UTF16_ICELANDIC_CI           = 102;\nexports.UTF16_LATVIAN_CI             = 103;\nexports.UTF16_ROMANIAN_CI            = 104;\nexports.UTF16_SLOVENIAN_CI           = 105;\nexports.UTF16_POLISH_CI              = 106;\nexports.UTF16_ESTONIAN_CI            = 107;\nexports.UTF16_SPANISH_CI             = 108;\nexports.UTF16_SWEDISH_CI             = 109;\nexports.UTF16_TURKISH_CI             = 110;\nexports.UTF16_CZECH_CI               = 111;\nexports.UTF16_DANISH_CI              = 112;\nexports.UTF16_LITHUANIAN_CI          = 113;\nexports.UTF16_SLOVAK_CI              = 114;\nexports.UTF16_SPANISH2_CI            = 115;\nexports.UTF16_ROMAN_CI               = 116;\nexports.UTF16_PERSIAN_CI             = 117;\nexports.UTF16_ESPERANTO_CI           = 118;\nexports.UTF16_HUNGARIAN_CI           = 119;\nexports.UTF16_SINHALA_CI             = 120;\nexports.UTF16_GERMAN2_CI             = 121;\nexports.UTF16_CROATIAN_MYSQL561_CI   = 122;\nexports.UTF16_UNICODE_520_CI         = 123;\nexports.UTF16_VIETNAMESE_CI          = 124;\nexports.UCS2_UNICODE_CI              = 128;\nexports.UCS2_ICELANDIC_CI            = 129;\nexports.UCS2_LATVIAN_CI              = 130;\nexports.UCS2_ROMANIAN_CI             = 131;\nexports.UCS2_SLOVENIAN_CI            = 132;\nexports.UCS2_POLISH_CI               = 133;\nexports.UCS2_ESTONIAN_CI             = 134;\nexports.UCS2_SPANISH_CI              = 135;\nexports.UCS2_SWEDISH_CI              = 136;\nexports.UCS2_TURKISH_CI              = 137;\nexports.UCS2_CZECH_CI                = 138;\nexports.UCS2_DANISH_CI               = 139;\nexports.UCS2_LITHUANIAN_CI           = 140;\nexports.UCS2_SLOVAK_CI               = 141;\nexports.UCS2_SPANISH2_CI             = 142;\nexports.UCS2_ROMAN_CI                = 143;\nexports.UCS2_PERSIAN_CI              = 144;\nexports.UCS2_ESPERANTO_CI            = 145;\nexports.UCS2_HUNGARIAN_CI            = 146;\nexports.UCS2_SINHALA_CI              = 147;\nexports.UCS2_GERMAN2_CI              = 148;\nexports.UCS2_CROATIAN_MYSQL561_CI    = 149;\nexports.UCS2_UNICODE_520_CI          = 150;\nexports.UCS2_VIETNAMESE_CI           = 151;\nexports.UCS2_GENERAL_MYSQL500_CI     = 159;\nexports.UTF32_UNICODE_CI             = 160;\nexports.UTF32_ICELANDIC_CI           = 161;\nexports.UTF32_LATVIAN_CI             = 162;\nexports.UTF32_ROMANIAN_CI            = 163;\nexports.UTF32_SLOVENIAN_CI           = 164;\nexports.UTF32_POLISH_CI              = 165;\nexports.UTF32_ESTONIAN_CI            = 166;\nexports.UTF32_SPANISH_CI             = 167;\nexports.UTF32_SWEDISH_CI             = 168;\nexports.UTF32_TURKISH_CI             = 169;\nexports.UTF32_CZECH_CI               = 170;\nexports.UTF32_DANISH_CI              = 171;\nexports.UTF32_LITHUANIAN_CI          = 172;\nexports.UTF32_SLOVAK_CI              = 173;\nexports.UTF32_SPANISH2_CI            = 174;\nexports.UTF32_ROMAN_CI               = 175;\nexports.UTF32_PERSIAN_CI             = 176;\nexports.UTF32_ESPERANTO_CI           = 177;\nexports.UTF32_HUNGARIAN_CI           = 178;\nexports.UTF32_SINHALA_CI             = 179;\nexports.UTF32_GERMAN2_CI             = 180;\nexports.UTF32_CROATIAN_MYSQL561_CI   = 181;\nexports.UTF32_UNICODE_520_CI         = 182;\nexports.UTF32_VIETNAMESE_CI          = 183;\nexports.UTF8_UNICODE_CI              = 192;\nexports.UTF8_ICELANDIC_CI            = 193;\nexports.UTF8_LATVIAN_CI              = 194;\nexports.UTF8_ROMANIAN_CI             = 195;\nexports.UTF8_SLOVENIAN_CI            = 196;\nexports.UTF8_POLISH_CI               = 197;\nexports.UTF8_ESTONIAN_CI             = 198;\nexports.UTF8_SPANISH_CI              = 199;\nexports.UTF8_SWEDISH_CI              = 200;\nexports.UTF8_TURKISH_CI              = 201;\nexports.UTF8_CZECH_CI                = 202;\nexports.UTF8_DANISH_CI               = 203;\nexports.UTF8_LITHUANIAN_CI           = 204;\nexports.UTF8_SLOVAK_CI               = 205;\nexports.UTF8_SPANISH2_CI             = 206;\nexports.UTF8_ROMAN_CI                = 207;\nexports.UTF8_PERSIAN_CI              = 208;\nexports.UTF8_ESPERANTO_CI            = 209;\nexports.UTF8_HUNGARIAN_CI            = 210;\nexports.UTF8_SINHALA_CI              = 211;\nexports.UTF8_GERMAN2_CI              = 212;\nexports.UTF8_CROATIAN_MYSQL561_CI    = 213;\nexports.UTF8_UNICODE_520_CI          = 214;\nexports.UTF8_VIETNAMESE_CI           = 215;\nexports.UTF8_GENERAL_MYSQL500_CI     = 223;\nexports.UTF8MB4_UNICODE_CI           = 224;\nexports.UTF8MB4_ICELANDIC_CI         = 225;\nexports.UTF8MB4_LATVIAN_CI           = 226;\nexports.UTF8MB4_ROMANIAN_CI          = 227;\nexports.UTF8MB4_SLOVENIAN_CI         = 228;\nexports.UTF8MB4_POLISH_CI            = 229;\nexports.UTF8MB4_ESTONIAN_CI          = 230;\nexports.UTF8MB4_SPANISH_CI           = 231;\nexports.UTF8MB4_SWEDISH_CI           = 232;\nexports.UTF8MB4_TURKISH_CI           = 233;\nexports.UTF8MB4_CZECH_CI             = 234;\nexports.UTF8MB4_DANISH_CI            = 235;\nexports.UTF8MB4_LITHUANIAN_CI        = 236;\nexports.UTF8MB4_SLOVAK_CI            = 237;\nexports.UTF8MB4_SPANISH2_CI          = 238;\nexports.UTF8MB4_ROMAN_CI             = 239;\nexports.UTF8MB4_PERSIAN_CI           = 240;\nexports.UTF8MB4_ESPERANTO_CI         = 241;\nexports.UTF8MB4_HUNGARIAN_CI         = 242;\nexports.UTF8MB4_SINHALA_CI           = 243;\nexports.UTF8MB4_GERMAN2_CI           = 244;\nexports.UTF8MB4_CROATIAN_MYSQL561_CI = 245;\nexports.UTF8MB4_UNICODE_520_CI       = 246;\nexports.UTF8MB4_VIETNAMESE_CI        = 247;\nexports.UTF8_GENERAL50_CI            = 253;\n\n// short aliases\nexports.ARMSCII8 = exports.ARMSCII8_GENERAL_CI;\nexports.ASCII    = exports.ASCII_GENERAL_CI;\nexports.BIG5     = exports.BIG5_CHINESE_CI;\nexports.BINARY   = exports.BINARY;\nexports.CP1250   = exports.CP1250_GENERAL_CI;\nexports.CP1251   = exports.CP1251_GENERAL_CI;\nexports.CP1256   = exports.CP1256_GENERAL_CI;\nexports.CP1257   = exports.CP1257_GENERAL_CI;\nexports.CP866    = exports.CP866_GENERAL_CI;\nexports.CP850    = exports.CP850_GENERAL_CI;\nexports.CP852    = exports.CP852_GENERAL_CI;\nexports.CP932    = exports.CP932_JAPANESE_CI;\nexports.DEC8     = exports.DEC8_SWEDISH_CI;\nexports.EUCJPMS  = exports.EUCJPMS_JAPANESE_CI;\nexports.EUCKR    = exports.EUCKR_KOREAN_CI;\nexports.GB2312   = exports.GB2312_CHINESE_CI;\nexports.GBK      = exports.GBK_CHINESE_CI;\nexports.GEOSTD8  = exports.GEOSTD8_GENERAL_CI;\nexports.GREEK    = exports.GREEK_GENERAL_CI;\nexports.HEBREW   = exports.HEBREW_GENERAL_CI;\nexports.HP8      = exports.HP8_ENGLISH_CI;\nexports.KEYBCS2  = exports.KEYBCS2_GENERAL_CI;\nexports.KOI8R    = exports.KOI8R_GENERAL_CI;\nexports.KOI8U    = exports.KOI8U_GENERAL_CI;\nexports.LATIN1   = exports.LATIN1_SWEDISH_CI;\nexports.LATIN2   = exports.LATIN2_GENERAL_CI;\nexports.LATIN5   = exports.LATIN5_TURKISH_CI;\nexports.LATIN7   = exports.LATIN7_GENERAL_CI;\nexports.MACCE    = exports.MACCE_GENERAL_CI;\nexports.MACROMAN = exports.MACROMAN_GENERAL_CI;\nexports.SJIS     = exports.SJIS_JAPANESE_CI;\nexports.SWE7     = exports.SWE7_SWEDISH_CI;\nexports.TIS620   = exports.TIS620_THAI_CI;\nexports.UCS2     = exports.UCS2_GENERAL_CI;\nexports.UJIS     = exports.UJIS_JAPANESE_CI;\nexports.UTF16    = exports.UTF16_GENERAL_CI;\nexports.UTF16LE  = exports.UTF16LE_GENERAL_CI;\nexports.UTF8     = exports.UTF8_GENERAL_CI;\nexports.UTF8MB4  = exports.UTF8MB4_GENERAL_CI;\nexports.UTF32    = exports.UTF32_GENERAL_CI;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/protocol/constants/charsets.js\n// module id = 53\n// module chunks = 0","var Types = require('../constants/types');\n\nmodule.exports = Field;\nfunction Field(options) {\n  options = options || {};\n\n  this.parser = options.parser;\n  this.packet = options.packet;\n  this.db     = options.packet.db;\n  this.table  = options.packet.table;\n  this.name   = options.packet.name;\n  this.type   = typeToString(options.packet.type);\n  this.length = options.packet.length;\n}\n\nField.prototype.string = function () {\n  return this.parser.parseLengthCodedString();\n};\n\nField.prototype.buffer = function () {\n  return this.parser.parseLengthCodedBuffer();\n};\n\nField.prototype.geometry = function () {\n  return this.parser.parseGeometryValue();\n};\n\nfunction typeToString(t) {\n  for (var k in Types) {\n    if (Types[k] === t) return k;\n  }\n\n  return undefined;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/protocol/packets/Field.js\n// module id = 54\n// module chunks = 0","var Sequence     = require('./Sequence');\nvar Util         = require('util');\nvar Packets      = require('../packets');\nvar ResultSet    = require('../ResultSet');\nvar ServerStatus = require('../constants/server_status');\nvar fs           = require('fs');\nvar Readable     = require('readable-stream');\n\nmodule.exports = Query;\nUtil.inherits(Query, Sequence);\nfunction Query(options, callback) {\n  Sequence.call(this, options, callback);\n\n  this.sql = options.sql;\n  this.values = options.values;\n  this.typeCast = (options.typeCast === undefined)\n    ? true\n    : options.typeCast;\n  this.nestTables = options.nestTables || false;\n\n  this._resultSet = null;\n  this._results   = [];\n  this._fields    = [];\n  this._index     = 0;\n  this._loadError = null;\n}\n\nQuery.prototype.start = function() {\n  this.emit('packet', new Packets.ComQueryPacket(this.sql));\n};\n\nQuery.prototype.determinePacket = function determinePacket(byte, parser) {\n  var resultSet = this._resultSet;\n\n  if (!resultSet) {\n    switch (byte) {\n      case 0x00: return Packets.OkPacket;\n      case 0xff: return Packets.ErrorPacket;\n      default:   return Packets.ResultSetHeaderPacket;\n    }\n  }\n\n  if (resultSet.eofPackets.length === 0) {\n    return (resultSet.fieldPackets.length < resultSet.resultSetHeaderPacket.fieldCount)\n      ? Packets.FieldPacket\n      : Packets.EofPacket;\n  }\n\n  if (byte === 0xff) {\n    return Packets.ErrorPacket;\n  }\n\n  if (byte === 0xfe && parser.packetLength() < 9) {\n    return Packets.EofPacket;\n  }\n\n  return Packets.RowDataPacket;\n};\n\nQuery.prototype['OkPacket'] = function(packet) {\n  // try...finally for exception safety\n  try {\n    if (!this._callback) {\n      this.emit('result', packet, this._index);\n    } else {\n      this._results.push(packet);\n      this._fields.push(undefined);\n    }\n  } finally {\n    this._index++;\n    this._resultSet = null;\n    this._handleFinalResultPacket(packet);\n  }\n};\n\nQuery.prototype['ErrorPacket'] = function(packet) {\n  var err = this._packetToError(packet);\n\n  var results = (this._results.length > 0)\n    ? this._results\n    : undefined;\n\n  var fields = (this._fields.length > 0)\n    ? this._fields\n    : undefined;\n\n  err.index = this._index;\n  this.end(err, results, fields);\n};\n\nQuery.prototype['ResultSetHeaderPacket'] = function(packet) {\n  if (packet.fieldCount === null) {\n    this._sendLocalDataFile(packet.extra);\n  } else {\n    this._resultSet = new ResultSet(packet);\n  }\n};\n\nQuery.prototype['FieldPacket'] = function(packet) {\n  this._resultSet.fieldPackets.push(packet);\n};\n\nQuery.prototype['EofPacket'] = function(packet) {\n  this._resultSet.eofPackets.push(packet);\n\n  if (this._resultSet.eofPackets.length === 1 && !this._callback) {\n    this.emit('fields', this._resultSet.fieldPackets, this._index);\n  }\n\n  if (this._resultSet.eofPackets.length !== 2) {\n    return;\n  }\n\n  if (this._callback) {\n    this._results.push(this._resultSet.rows);\n    this._fields.push(this._resultSet.fieldPackets);\n  }\n\n  this._index++;\n  this._resultSet = null;\n  this._handleFinalResultPacket(packet);\n};\n\nQuery.prototype._handleFinalResultPacket = function(packet) {\n  if (packet.serverStatus & ServerStatus.SERVER_MORE_RESULTS_EXISTS) {\n    return;\n  }\n\n  var results = (this._results.length > 1)\n    ? this._results\n    : this._results[0];\n\n  var fields = (this._fields.length > 1)\n    ? this._fields\n    : this._fields[0];\n\n  this.end(this._loadError, results, fields);\n};\n\nQuery.prototype['RowDataPacket'] = function(packet, parser, connection) {\n  packet.parse(parser, this._resultSet.fieldPackets, this.typeCast, this.nestTables, connection);\n\n  if (this._callback) {\n    this._resultSet.rows.push(packet);\n  } else {\n    this.emit('result', packet, this._index);\n  }\n};\n\nQuery.prototype._sendLocalDataFile = function(path) {\n  var self = this;\n  var localStream = fs.createReadStream(path, {\n    flag      : 'r',\n    encoding  : null,\n    autoClose : true\n  });\n\n  this.on('pause', function () {\n    localStream.pause();\n  });\n\n  this.on('resume', function () {\n    localStream.resume();\n  });\n\n  localStream.on('data', function (data) {\n    self.emit('packet', new Packets.LocalDataFilePacket(data));\n  });\n\n  localStream.on('error', function (err) {\n    self._loadError = err;\n    localStream.emit('end');\n  });\n\n  localStream.on('end', function () {\n    self.emit('packet', new Packets.EmptyPacket());\n  });\n};\n\nQuery.prototype.stream = function(options) {\n  var self = this,\n      stream;\n\n  options = options || {};\n  options.objectMode = true;\n  stream = new Readable(options);\n\n  stream._read = function() {\n    self._connection && self._connection.resume();\n  };\n\n  stream.once('end', function() {\n    process.nextTick(function () {\n      stream.emit('close');\n    });\n  });\n\n  this.on('result',function(row,i) {\n    if (!stream.push(row)) self._connection.pause();\n    stream.emit('result',row,i);  // replicate old emitter\n  });\n\n  this.on('error',function(err) {\n    stream.emit('error',err);  // Pass on any errors\n  });\n\n  this.on('end', function() {\n    stream.push(null);  // pushing null, indicating EOF\n  });\n\n  this.on('fields',function(fields,i) {\n    stream.emit('fields',fields,i);  // replicate old emitter\n  });\n\n  return stream;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/protocol/sequences/Query.js\n// module id = 55\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\nvar EE = require('events').EventEmitter;\n\n/*<replacement>*/\nif (!EE.listenerCount) EE.listenerCount = function(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\nvar Stream = require('stream');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar StringDecoder;\n\n\n/*<replacement>*/\nvar debug = require('util');\nif (debug && debug.debuglog) {\n  debug = debug.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\n\nutil.inherits(Readable, Stream);\n\nfunction ReadableState(options, stream) {\n  var Duplex = require('./_stream_duplex');\n\n  options = options || {};\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var defaultHwm = options.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.buffer = [];\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex)\n    this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // when piping, we only care about 'readable' events that happen\n  // after read()ing all the bytes and not getting any pushback.\n  this.ranOut = false;\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder)\n      StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  var Duplex = require('./_stream_duplex');\n\n  if (!(this instanceof Readable))\n    return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  Stream.call(this);\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function(chunk, encoding) {\n  var state = this._readableState;\n\n  if (util.isString(chunk) && !state.objectMode) {\n    encoding = encoding || state.defaultEncoding;\n    if (encoding !== state.encoding) {\n      chunk = new Buffer(chunk, encoding);\n      encoding = '';\n    }\n  }\n\n  return readableAddChunk(this, state, chunk, encoding, false);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function(chunk) {\n  var state = this._readableState;\n  return readableAddChunk(this, state, chunk, '', true);\n};\n\nfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n  var er = chunkInvalid(state, chunk);\n  if (er) {\n    stream.emit('error', er);\n  } else if (util.isNullOrUndefined(chunk)) {\n    state.reading = false;\n    if (!state.ended)\n      onEofChunk(stream, state);\n  } else if (state.objectMode || chunk && chunk.length > 0) {\n    if (state.ended && !addToFront) {\n      var e = new Error('stream.push() after EOF');\n      stream.emit('error', e);\n    } else if (state.endEmitted && addToFront) {\n      var e = new Error('stream.unshift() after end event');\n      stream.emit('error', e);\n    } else {\n      if (state.decoder && !addToFront && !encoding)\n        chunk = state.decoder.write(chunk);\n\n      if (!addToFront)\n        state.reading = false;\n\n      // if we want the data now, just emit it.\n      if (state.flowing && state.length === 0 && !state.sync) {\n        stream.emit('data', chunk);\n        stream.read(0);\n      } else {\n        // update the buffer info.\n        state.length += state.objectMode ? 1 : chunk.length;\n        if (addToFront)\n          state.buffer.unshift(chunk);\n        else\n          state.buffer.push(chunk);\n\n        if (state.needReadable)\n          emitReadable(stream);\n      }\n\n      maybeReadMore(stream, state);\n    }\n  } else if (!addToFront) {\n    state.reading = false;\n  }\n\n  return needMoreData(state);\n}\n\n\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended &&\n         (state.needReadable ||\n          state.length < state.highWaterMark ||\n          state.length === 0);\n}\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function(enc) {\n  if (!StringDecoder)\n    StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 128MB\nvar MAX_HWM = 0x800000;\nfunction roundUpToNextPowerOf2(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2\n    n--;\n    for (var p = 1; p < 32; p <<= 1) n |= n >> p;\n    n++;\n  }\n  return n;\n}\n\nfunction howMuchToRead(n, state) {\n  if (state.length === 0 && state.ended)\n    return 0;\n\n  if (state.objectMode)\n    return n === 0 ? 0 : 1;\n\n  if (isNaN(n) || util.isNull(n)) {\n    // only flow one buffer at a time\n    if (state.flowing && state.buffer.length)\n      return state.buffer[0].length;\n    else\n      return state.length;\n  }\n\n  if (n <= 0)\n    return 0;\n\n  // If we're asking for more than the target buffer level,\n  // then raise the water mark.  Bump up to the next highest\n  // power of 2, to prevent increasing it excessively in tiny\n  // amounts.\n  if (n > state.highWaterMark)\n    state.highWaterMark = roundUpToNextPowerOf2(n);\n\n  // don't have that much.  return null, unless we've ended.\n  if (n > state.length) {\n    if (!state.ended) {\n      state.needReadable = true;\n      return 0;\n    } else\n      return state.length;\n  }\n\n  return n;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function(n) {\n  debug('read', n);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (!util.isNumber(n) || n > 0)\n    state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 &&\n      state.needReadable &&\n      (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended)\n      endReadable(this);\n    else\n      emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0)\n      endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  }\n\n  if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0)\n      state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n  }\n\n  // If _read pushed data synchronously, then `reading` will be false,\n  // and we need to re-evaluate how much data we can return to the user.\n  if (doRead && !state.reading)\n    n = howMuchToRead(nOrig, state);\n\n  var ret;\n  if (n > 0)\n    ret = fromList(n, state);\n  else\n    ret = null;\n\n  if (util.isNull(ret)) {\n    state.needReadable = true;\n    n = 0;\n  }\n\n  state.length -= n;\n\n  // If we have nothing in the buffer, then we want to know\n  // as soon as we *do* get something into the buffer.\n  if (state.length === 0 && !state.ended)\n    state.needReadable = true;\n\n  // If we tried to read() past the EOF, then emit end on the next tick.\n  if (nOrig !== n && state.ended && state.length === 0)\n    endReadable(this);\n\n  if (!util.isNull(ret))\n    this.emit('data', ret);\n\n  return ret;\n};\n\nfunction chunkInvalid(state, chunk) {\n  var er = null;\n  if (!util.isBuffer(chunk) &&\n      !util.isString(chunk) &&\n      !util.isNullOrUndefined(chunk) &&\n      !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n\nfunction onEofChunk(stream, state) {\n  if (state.decoder && !state.ended) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync)\n      process.nextTick(function() {\n        emitReadable_(stream);\n      });\n    else\n      emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(function() {\n      maybeReadMore_(stream, state);\n    });\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended &&\n         state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n    else\n      len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function(n) {\n  this.emit('error', new Error('not implemented'));\n};\n\nReadable.prototype.pipe = function(dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&\n              dest !== process.stdout &&\n              dest !== process.stderr;\n\n  var endFn = doEnd ? onend : cleanup;\n  if (state.endEmitted)\n    process.nextTick(endFn);\n  else\n    src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable) {\n    debug('onunpipe');\n    if (readable === src) {\n      cleanup();\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', cleanup);\n    src.removeListener('data', ondata);\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain &&\n        (!dest._writableState || dest._writableState.needDrain))\n      ondrain();\n  }\n\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    if (false === ret) {\n      debug('false write response, pause',\n            src._readableState.awaitDrain);\n      src._readableState.awaitDrain++;\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EE.listenerCount(dest, 'error') === 0)\n      dest.emit('error', er);\n  }\n  // This is a brutally ugly hack to make sure that our error handler\n  // is attached before any userland ones.  NEVER DO THIS.\n  if (!dest._events || !dest._events.error)\n    dest.on('error', onerror);\n  else if (isArray(dest._events.error))\n    dest._events.error.unshift(onerror);\n  else\n    dest._events.error = [onerror, dest._events.error];\n\n\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain)\n      state.awaitDrain--;\n    if (state.awaitDrain === 0 && EE.listenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\n\nReadable.prototype.unpipe = function(dest) {\n  var state = this._readableState;\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0)\n    return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes)\n      return this;\n\n    if (!dest)\n      dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest)\n      dest.emit('unpipe', this);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++)\n      dests[i].emit('unpipe', this);\n    return this;\n  }\n\n  // try to find the right one.\n  var i = indexOf(state.pipes, dest);\n  if (i === -1)\n    return this;\n\n  state.pipes.splice(i, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1)\n    state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function(ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  // If listening to data, and it has not explicitly been paused,\n  // then call resume to start the flow of data on the next tick.\n  if (ev === 'data' && false !== this._readableState.flowing) {\n    this.resume();\n  }\n\n  if (ev === 'readable' && this.readable) {\n    var state = this._readableState;\n    if (!state.readableListening) {\n      state.readableListening = true;\n      state.emittedReadable = false;\n      state.needReadable = true;\n      if (!state.reading) {\n        var self = this;\n        process.nextTick(function() {\n          debug('readable nexttick read 0');\n          self.read(0);\n        });\n      } else if (state.length) {\n        emitReadable(this, state);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function() {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    if (!state.reading) {\n      debug('resume read 0');\n      this.read(0);\n    }\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(function() {\n      resume_(stream, state);\n    });\n  }\n}\n\nfunction resume_(stream, state) {\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading)\n    stream.read(0);\n}\n\nReadable.prototype.pause = function() {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  if (state.flowing) {\n    do {\n      var chunk = stream.read();\n    } while (null !== chunk && state.flowing);\n  }\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function(stream) {\n  var state = this._readableState;\n  var paused = false;\n\n  var self = this;\n  stream.on('end', function() {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length)\n        self.push(chunk);\n    }\n\n    self.push(null);\n  });\n\n  stream.on('data', function(chunk) {\n    debug('wrapped data');\n    if (state.decoder)\n      chunk = state.decoder.write(chunk);\n    if (!chunk || !state.objectMode && !chunk.length)\n      return;\n\n    var ret = self.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (util.isFunction(stream[i]) && util.isUndefined(this[i])) {\n      this[i] = function(method) { return function() {\n        return stream[method].apply(stream, arguments);\n      }}(i);\n    }\n  }\n\n  // proxy certain important events.\n  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n  forEach(events, function(ev) {\n    stream.on(ev, self.emit.bind(self, ev));\n  });\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  self._read = function(n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return self;\n};\n\n\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\nfunction fromList(n, state) {\n  var list = state.buffer;\n  var length = state.length;\n  var stringMode = !!state.decoder;\n  var objectMode = !!state.objectMode;\n  var ret;\n\n  // nothing in the list, definitely empty.\n  if (list.length === 0)\n    return null;\n\n  if (length === 0)\n    ret = null;\n  else if (objectMode)\n    ret = list.shift();\n  else if (!n || n >= length) {\n    // read it all, truncate the array.\n    if (stringMode)\n      ret = list.join('');\n    else\n      ret = Buffer.concat(list, length);\n    list.length = 0;\n  } else {\n    // read just some of it.\n    if (n < list[0].length) {\n      // just take a part of the first list item.\n      // slice is the same for buffers and strings.\n      var buf = list[0];\n      ret = buf.slice(0, n);\n      list[0] = buf.slice(n);\n    } else if (n === list[0].length) {\n      // first list is a perfect match\n      ret = list.shift();\n    } else {\n      // complex case.\n      // we have enough to cover it, but it spans past the first buffer.\n      if (stringMode)\n        ret = '';\n      else\n        ret = new Buffer(n);\n\n      var c = 0;\n      for (var i = 0, l = list.length; i < l && c < n; i++) {\n        var buf = list[0];\n        var cpy = Math.min(n - c, buf.length);\n\n        if (stringMode)\n          ret += buf.slice(0, cpy);\n        else\n          buf.copy(ret, c, 0, cpy);\n\n        if (cpy < buf.length)\n          list[0] = buf.slice(cpy);\n        else\n          list.shift();\n\n        c += cpy;\n      }\n    }\n  }\n\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0)\n    throw new Error('endReadable called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(function() {\n      // Check that we didn't get one last unshift.\n      if (!state.endEmitted && state.length === 0) {\n        state.endEmitted = true;\n        stream.readable = false;\n        stream.emit('end');\n      }\n    });\n  }\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf (xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/~/readable-stream/lib/_stream_readable.js\n// module id = 56\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\n\nfunction TransformState(options, stream) {\n  this.afterTransform = function(er, data) {\n    return afterTransform(stream, er, data);\n  };\n\n  this.needTransform = false;\n  this.transforming = false;\n  this.writecb = null;\n  this.writechunk = null;\n}\n\nfunction afterTransform(stream, er, data) {\n  var ts = stream._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb)\n    return stream.emit('error', new Error('no writecb in Transform class'));\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (!util.isNullOrUndefined(data))\n    stream.push(data);\n\n  if (cb)\n    cb(er);\n\n  var rs = stream._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    stream._read(rs.highWaterMark);\n  }\n}\n\n\nfunction Transform(options) {\n  if (!(this instanceof Transform))\n    return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = new TransformState(options, this);\n\n  // when the writable side finishes, then flush out anything remaining.\n  var stream = this;\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  this.once('prefinish', function() {\n    if (util.isFunction(this._flush))\n      this._flush(function(er) {\n        done(stream, er);\n      });\n    else\n      done(stream);\n  });\n}\n\nTransform.prototype.push = function(chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function(chunk, encoding, cb) {\n  throw new Error('not implemented');\n};\n\nTransform.prototype._write = function(chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform ||\n        rs.needReadable ||\n        rs.length < rs.highWaterMark)\n      this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function(n) {\n  var ts = this._transformState;\n\n  if (!util.isNull(ts.writechunk) && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\n\nfunction done(stream, er) {\n  if (er)\n    return stream.emit('error', er);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  var ws = stream._writableState;\n  var ts = stream._transformState;\n\n  if (ws.length)\n    throw new Error('calling transform done when ws.length != 0');\n\n  if (ts.transforming)\n    throw new Error('calling transform done when still transforming');\n\n  return stream.push(null);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/~/readable-stream/lib/_stream_transform.js\n// module id = 57\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, cb), and it'll handle all\n// the drain event emission and buffering.\n\nmodule.exports = Writable;\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Stream = require('stream');\n\nutil.inherits(Writable, Stream);\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n}\n\nfunction WritableState(options, stream) {\n  var Duplex = require('./_stream_duplex');\n\n  options = options || {};\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var defaultHwm = options.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex)\n    this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function(er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.buffer = [];\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n}\n\nfunction Writable(options) {\n  var Duplex = require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, though they're not\n  // instanceof Writable, they're instanceof Readable.\n  if (!(this instanceof Writable) && !(this instanceof Duplex))\n    return new Writable(options);\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function() {\n  this.emit('error', new Error('Cannot pipe. Not readable.'));\n};\n\n\nfunction writeAfterEnd(stream, state, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  process.nextTick(function() {\n    cb(er);\n  });\n}\n\n// If we get something that is not a buffer, string, null, or undefined,\n// and we're not in objectMode, then that's an error.\n// Otherwise stream chunks are all considered to be of length=1, and the\n// watermarks determine how many objects to keep in the buffer, rather than\n// how many bytes or characters.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  if (!util.isBuffer(chunk) &&\n      !util.isString(chunk) &&\n      !util.isNullOrUndefined(chunk) &&\n      !state.objectMode) {\n    var er = new TypeError('Invalid non-string/buffer chunk');\n    stream.emit('error', er);\n    process.nextTick(function() {\n      cb(er);\n    });\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function(chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  if (util.isFunction(encoding)) {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (util.isBuffer(chunk))\n    encoding = 'buffer';\n  else if (!encoding)\n    encoding = state.defaultEncoding;\n\n  if (!util.isFunction(cb))\n    cb = function() {};\n\n  if (state.ended)\n    writeAfterEnd(this, state, cb);\n  else if (validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function() {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function() {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing &&\n        !state.corked &&\n        !state.finished &&\n        !state.bufferProcessing &&\n        state.buffer.length)\n      clearBuffer(this, state);\n  }\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode &&\n      state.decodeStrings !== false &&\n      util.isString(chunk)) {\n    chunk = new Buffer(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n  chunk = decodeChunk(state, chunk, encoding);\n  if (util.isBuffer(chunk))\n    encoding = 'buffer';\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret)\n    state.needDrain = true;\n\n  if (state.writing || state.corked)\n    state.buffer.push(new WriteReq(chunk, encoding, cb));\n  else\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev)\n    stream._writev(chunk, state.onwrite);\n  else\n    stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  if (sync)\n    process.nextTick(function() {\n      state.pendingcb--;\n      cb(er);\n    });\n  else {\n    state.pendingcb--;\n    cb(er);\n  }\n\n  stream._writableState.errorEmitted = true;\n  stream.emit('error', er);\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er)\n    onwriteError(stream, state, sync, er, cb);\n  else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(stream, state);\n\n    if (!finished &&\n        !state.corked &&\n        !state.bufferProcessing &&\n        state.buffer.length) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      process.nextTick(function() {\n        afterWrite(stream, state, finished, cb);\n      });\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished)\n    onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n\n  if (stream._writev && state.buffer.length > 1) {\n    // Fast case, write everything using _writev()\n    var cbs = [];\n    for (var c = 0; c < state.buffer.length; c++)\n      cbs.push(state.buffer[c].callback);\n\n    // count the one we are adding, as well.\n    // TODO(isaacs) clean this up\n    state.pendingcb++;\n    doWrite(stream, state, true, state.length, state.buffer, '', function(err) {\n      for (var i = 0; i < cbs.length; i++) {\n        state.pendingcb--;\n        cbs[i](err);\n      }\n    });\n\n    // Clear buffer\n    state.buffer = [];\n  } else {\n    // Slow case, write chunks one-by-one\n    for (var c = 0; c < state.buffer.length; c++) {\n      var entry = state.buffer[c];\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        c++;\n        break;\n      }\n    }\n\n    if (c < state.buffer.length)\n      state.buffer = state.buffer.slice(c);\n    else\n      state.buffer.length = 0;\n  }\n\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function(chunk, encoding, cb) {\n  cb(new Error('not implemented'));\n\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function(chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (util.isFunction(chunk)) {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (util.isFunction(encoding)) {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (!util.isNullOrUndefined(chunk))\n    this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished)\n    endWritable(this, state, cb);\n};\n\n\nfunction needFinish(stream, state) {\n  return (state.ending &&\n          state.length === 0 &&\n          !state.finished &&\n          !state.writing);\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished) {\n    state.prefinished = true;\n    stream.emit('prefinish');\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(stream, state);\n  if (need) {\n    if (state.pendingcb === 0) {\n      prefinish(stream, state);\n      state.finished = true;\n      stream.emit('finish');\n    } else\n      prefinish(stream, state);\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished)\n      process.nextTick(cb);\n    else\n      stream.once('finish', cb);\n  }\n  state.ended = true;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/~/readable-stream/lib/_stream_writable.js\n// module id = 58\n// module chunks = 0","'use strict';\r\n\r\nvar EOL = require('os').EOL;\r\n\r\nvar parsingErrorCode = {\r\n    unclosedMLC: 0, // Unclosed multi-line comment.\r\n    unclosedText: 1, // Unclosed text block.\r\n    unclosedQI: 2, // Unclosed quoted identifier.\r\n    multiLineQI: 3 // Multi-line quoted identifiers are not supported.\r\n};\r\n\r\nObject.freeze(parsingErrorCode);\r\n\r\nvar errorMessages = [\r\n    {name: \"unclosedMLC\", message: \"Unclosed multi-line comment.\"},\r\n    {name: \"unclosedText\", message: \"Unclosed text block.\"},\r\n    {name: \"unclosedQI\", message: \"Unclosed quoted identifier.\"},\r\n    {name: \"multiLineQI\", message: \"Multi-line quoted identifiers are not supported.\"}\r\n];\r\n\r\nfunction SQLParsingError(code, position) {\r\n    var temp = Error.apply(this, arguments);\r\n    temp.name = this.name = 'SQLParsingError';\r\n    this.stack = temp.stack;\r\n    this.code = code; // one of parsingErrorCode values;\r\n    this.error = errorMessages[code].message;\r\n    this.position = position; // Error position in the text: {line, column}\r\n    this.message = \"Error parsing SQL at {line:\" + position.line + \",col:\" + position.column + \"}: \" + this.error;\r\n}\r\n\r\nSQLParsingError.prototype = Object.create(Error.prototype, {\r\n    constructor: {\r\n        value: SQLParsingError,\r\n        writable: true,\r\n        configurable: true\r\n    }\r\n});\r\n\r\nSQLParsingError.prototype.toString = function (level) {\r\n    level = level > 0 ? parseInt(level) : 0;\r\n    var gap = messageGap(level + 1);\r\n    var lines = [\r\n        'SQLParsingError {',\r\n        gap + 'code: parsingErrorCode.' + errorMessages[this.code].name,\r\n        gap + 'error: \"' + this.error + '\"',\r\n        gap + 'position: {line: ' + this.position.line + \", col: \" + this.position.column + '}',\r\n        messageGap(level) + '}'\r\n    ];\r\n    return lines.join(EOL);\r\n};\r\n\r\nfunction messageGap(level) {\r\n    return Array(1 + level * 4).join(' ');\r\n}\r\n\r\nSQLParsingError.prototype.inspect = function () {\r\n    return this.toString();\r\n};\r\n\r\nmodule.exports = {\r\n    SQLParsingError: SQLParsingError,\r\n    parsingErrorCode: parsingErrorCode\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-minify/lib/error.js\n// module id = 59\n// module chunks = 0","function ArrayParser(source, converter) {\n  this.source = source;\n  this.converter = converter;\n  this.pos = 0;\n  this.entries = [];\n  this.recorded = [];\n  this.dimension = 0;\n  if (!this.converter) {\n    this.converter = function(entry) {\n      return entry;\n    };\n  }\n}\n\nArrayParser.prototype.eof = function() {\n  return this.pos >= this.source.length;\n};\n\nArrayParser.prototype.nextChar = function() {\n  var c;\n  if ((c = this.source[this.pos++]) === \"\\\\\") {\n    return {\n      char: this.source[this.pos++],\n      escaped: true\n    };\n  } else {\n    return {\n      char: c,\n      escaped: false\n    };\n  }\n};\n\nArrayParser.prototype.record = function(c) {\n  return this.recorded.push(c);\n};\n\nArrayParser.prototype.newEntry = function(includeEmpty) {\n  var entry;\n  if (this.recorded.length > 0 || includeEmpty) {\n    entry = this.recorded.join(\"\");\n    if (entry === \"NULL\" && !includeEmpty) {\n      entry = null;\n    }\n    if (entry !== null) {\n      entry = this.converter(entry);\n    }\n    this.entries.push(entry);\n    this.recorded = [];\n  }\n};\n\nArrayParser.prototype.parse = function(nested) {\n  var c, p, quote;\n  if (nested === null) {\n    nested = false;\n  }\n  quote = false;\n  while (!this.eof()) {\n    c = this.nextChar();\n    if (c.char === \"{\" && !quote) {\n      this.dimension++;\n      if (this.dimension > 1) {\n        p = new ArrayParser(this.source.substr(this.pos - 1), this.converter);\n        this.entries.push(p.parse(true));\n        this.pos += p.pos - 2;\n      }\n    } else if (c.char === \"}\" && !quote) {\n      this.dimension--;\n      if (this.dimension === 0) {\n        this.newEntry();\n        if (nested) {\n          return this.entries;\n        }\n      }\n    } else if (c.char === '\"' && !c.escaped) {\n      if (quote) {\n        this.newEntry(true);\n      }\n      quote = !quote;\n    } else if (c.char === ',' && !quote) {\n      this.newEntry();\n    } else {\n      this.record(c.char);\n    }\n  }\n  if (this.dimension !== 0) {\n    throw \"array dimension not balanced\";\n  }\n  return this.entries;\n};\n\nmodule.exports = {\n  create: function(source, converter){\n    return new ArrayParser(source, converter);\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-native/~/pg-types/lib/arrayParser.js\n// module id = 60\n// module chunks = 0","'use strict';\r\n\r\n/**\r\n * @constructor PromiseAdapter\r\n * @summary Adapter for the primary promise operations.\r\n * @description\r\n * Provides compatibility with promise libraries that cannot be recognized automatically,\r\n * via functions that implement the primary operations with promises:\r\n *\r\n *  - construct a new promise with a callback function\r\n *  - resolve a promise with some result data\r\n *  - reject a promise with a reason\r\n *\r\n * The type is available from the library's root: `pgp.PromiseAdapter`.\r\n *\r\n * @param {function} create\r\n * A function that takes a callback parameter and returns a new promise object.\r\n * The callback parameter is expected to be `function(resolve, reject)`.\r\n *\r\n * Passing in anything other than a function will throw `Adapter requires a function to create a promise.`\r\n *\r\n * @param {function} resolve\r\n * A function that takes an optional data parameter and resolves a promise with it.\r\n *\r\n * Passing in anything other than a function will throw `Adapter requires a function to resolve a promise.`\r\n *\r\n * @param {function} reject\r\n * A function that takes an optional error parameter and rejects a promise with it.\r\n *\r\n * Passing in anything other than a function will throw `Adapter requires a function to reject a promise.`\r\n *\r\n * @returns {PromiseAdapter}\r\n */\r\nfunction PromiseAdapter(create, resolve, reject) {\r\n\r\n    if (!(this instanceof PromiseAdapter)) {\r\n        return new PromiseAdapter(create, resolve, reject);\r\n    }\r\n\r\n    this.create = create;\r\n    this.resolve = resolve;\r\n    this.reject = reject;\r\n\r\n    if (typeof create !== 'function') {\r\n        throw new TypeError('Adapter requires a function to create a promise.');\r\n    }\r\n\r\n    if (typeof resolve !== 'function') {\r\n        throw new TypeError('Adapter requires a function to resolve a promise.');\r\n    }\r\n\r\n    if (typeof reject !== 'function') {\r\n        throw new TypeError('Adapter requires a function to reject a promise.');\r\n    }\r\n}\r\n\r\nmodule.exports = PromiseAdapter;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/lib/adapter.js\n// module id = 61\n// module chunks = 0","'use strict';\r\n\r\nvar $npm = {\r\n    os: require('os'),\r\n    utils: require('../utils'),\r\n    formatting: require('../formatting')\r\n};\r\n\r\n/**\r\n *\r\n * @class helpers.Column\r\n * @description\r\n *\r\n * It is a read-only structure that contains details for a single column, to be primarily used by {@link helpers.ColumnSet ColumnSet}.\r\n *\r\n * The class parses and validates all the details, and prepares them for high-performance query generation.\r\n *\r\n * @param {String|helpers.ColumnConfig} col\r\n * Column details, depending on the type.\r\n *\r\n * When it is a string, it is expected to contain a name for both the column and the source property, assuming that the two are the same.\r\n * The name must adhere to JavaScript syntax for variable names. The name can be appended with any format modifier as supported by\r\n * {@link formatting.format as.format} (`^`, `~`, `#`, `:csv`, `:json`, `:name`, `:raw`, `:value`), which is then removed from the name and put\r\n * into property `mod`. If the name starts with `?`, it is removed, while setting flag `cnd` = `true`.\r\n *\r\n * If the string doesn't adhere to the above requirements, the method will throw {@link external:TypeError TypeError} = `Invalid column syntax`.\r\n *\r\n * When `col` is a simple {@link helpers.ColumnConfig ColumnConfig}-like object, it is used as an input configurator to set all the properties\r\n * of the class.\r\n *\r\n * @property {string} name\r\n * Destination column name + source property name (if `prop` is skipped). The name must adhere to JavaScript syntax for variables,\r\n * unless `prop` is specified, in which case `name` represents only the column name, and therefore can be any string.\r\n *\r\n * @property {string} [prop]\r\n * Source property name, if different from the column's name. It must adhere to JavaScript syntax for variables.\r\n *\r\n * It is ignored when it is the same as `name`.\r\n *\r\n * @property {string} [mod]\r\n * Formatting modifier, as supported by method {@link formatting.format as.format}: `^`, `~`, `#`, `:csv`, `:json`, `:name`, `:raw`, `:value`.\r\n *\r\n * @property {string} [cast]\r\n * Server-side type casting, without `::` in front.\r\n *\r\n * @property {boolean} [cnd]\r\n * Conditional column flag.\r\n *\r\n * Used by methods {@link helpers.update update} and {@link helpers.sets sets}, ignored by methods {@link helpers.insert insert} and\r\n * {@link helpers.values values}. It indicates that the column is reserved for a `WHERE` condition, not to be set or updated.\r\n *\r\n * It can be set from a string initialization, by adding `?` in front of the name.\r\n *\r\n * @property {} [def]\r\n * Default value for the property, to be used only when the source object doesn't have the property.\r\n * It is ignored when property `init` is set.\r\n *\r\n * @property {helpers.initCB} [init]\r\n * Override callback for the value.\r\n *\r\n * @property {helpers.skipCB} [skip]\r\n * An override for skipping columns dynamically.\r\n *\r\n * Used by methods {@link helpers.update update} (for a single object) and {@link helpers.sets sets}, ignored by methods\r\n * {@link helpers.insert insert} and {@link helpers.values values}.\r\n *\r\n * It is also ignored when conditional flag `cnd` is set.\r\n *\r\n * @returns {helpers.Column}\r\n *\r\n * @see {@link helpers.ColumnConfig ColumnConfig}\r\n *\r\n * @example\r\n *\r\n * var pgp = require('pg-promise')({\r\n *     capSQL: true // if you want all generated SQL capitalized\r\n * });\r\n *\r\n * var Column = pgp.helpers.Column;\r\n *\r\n * // creating a column from just a name:\r\n * var col1 = new Column('colName');\r\n * console.log(col1);\r\n * //=>\r\n * // Column {\r\n * //    name: \"colName\"\r\n * // }\r\n *\r\n * // creating a column from a name + modifier:\r\n * var col2 = new Column('colName:csv');\r\n * console.log(col2);\r\n * //=>\r\n * // Column {\r\n * //    name: \"colName\"\r\n * //    mod: \":csv\"\r\n * // }\r\n *\r\n * // creating a column from a configurator:\r\n * var col3 = new Column({\r\n *     name: 'colName', // required\r\n *     prop: 'propName', // optional\r\n *     mod: '^', // optional\r\n *     def: 123 // optional\r\n * });\r\n * console.log(col3);\r\n * //=>\r\n * // Column {\r\n * //    name: \"colName\"\r\n * //    prop: \"propName\"\r\n * //    mod: \"^\"\r\n * //    def: 123\r\n * // }\r\n *\r\n */\r\nfunction Column(col) {\r\n\r\n    if (!(this instanceof Column)) {\r\n        return new Column(col);\r\n    }\r\n\r\n    if (typeof col === 'string') {\r\n        var info = parseColumn(col);\r\n        this.name = info.name;\r\n        if ('mod' in info) {\r\n            this.mod = info.mod;\r\n        }\r\n        if ('cnd' in info) {\r\n            this.cnd = info.cnd;\r\n        }\r\n    } else {\r\n        if (col && typeof col === 'object' && 'name' in col) {\r\n            if (!$npm.utils.isText(col.name)) {\r\n                throw new TypeError('Invalid \\'name\\' value: ' + JSON.stringify(col.name) + '. A non-empty string was expected.');\r\n            }\r\n            if ($npm.utils.isNull(col.prop) && !isValidVariable(col.name)) {\r\n                throw new TypeError('Invalid \\'name\\' syntax: ' + JSON.stringify(col.name) + '. A valid variable name was expected.');\r\n            }\r\n            this.name = col.name; // column name + property name (if 'prop' isn't specified)\r\n\r\n            if (!$npm.utils.isNull(col.prop)) {\r\n                if (!$npm.utils.isText(col.prop)) {\r\n                    throw new TypeError('Invalid \\'prop\\' value: ' + JSON.stringify(col.prop) + '. A non-empty string was expected.');\r\n                }\r\n                if (!isValidVariable(col.prop)) {\r\n                    throw new TypeError('Invalid \\'prop\\' syntax: ' + JSON.stringify(col.prop) + '. A valid variable name was expected.');\r\n                }\r\n                if (col.prop !== col.name) {\r\n                    // optional property name, if different from the column's name;\r\n                    this.prop = col.prop;\r\n                }\r\n            }\r\n            if (!$npm.utils.isNull(col.mod)) {\r\n                if (typeof col.mod !== 'string' || !isValidMod(col.mod)) {\r\n                    throw new TypeError('Invalid \\'mod\\' value: ' + JSON.stringify(col.mod) + '.');\r\n                }\r\n                this.mod = col.mod; // optional format modifier;\r\n            }\r\n            if (!$npm.utils.isNull(col.cast)) {\r\n                this.cast = parseCast(col.cast); // optional SQL type casting\r\n            }\r\n            if ('cnd' in col) {\r\n                this.cnd = !!col.cnd;\r\n            }\r\n            if ('def' in col) {\r\n                this.def = col.def; // optional default\r\n            }\r\n            if (typeof col.init === 'function') {\r\n                this.init = col.init; // optional value override (overrides 'def' also)\r\n            }\r\n            if (typeof col.skip === 'function') {\r\n                this.skip = col.skip;\r\n            }\r\n        } else {\r\n            throw new TypeError('Invalid column details.');\r\n        }\r\n    }\r\n\r\n    var variable = '${' + (this.prop || this.name) + (this.mod || '') + '}',\r\n        castText = this.cast ? ('::' + this.cast) : '',\r\n        escapedName = $npm.formatting.as.name(this.name);\r\n\r\n    Object.defineProperty(this, 'variable', {\r\n        enumerable: false,\r\n        value: variable\r\n    });\r\n\r\n    Object.defineProperty(this, 'castText', {\r\n        enumerable: false,\r\n        value: castText\r\n    });\r\n\r\n    Object.defineProperty(this, 'escapedName', {\r\n        enumerable: false,\r\n        value: escapedName\r\n    });\r\n\r\n    Object.freeze(this);\r\n}\r\n\r\nfunction parseCast(name) {\r\n    if (typeof name === 'string') {\r\n        var s = name.replace(/^[:\\s]*|\\s*$/g, '');\r\n        if (s) {\r\n            return s;\r\n        }\r\n    }\r\n    throw new TypeError('Invalid \\'cast\\' value: ' + JSON.stringify(name) + '.');\r\n}\r\n\r\nfunction parseColumn(name) {\r\n    var m = name.match(/\\??[a-zA-Z0-9\\$_]+(\\^|~|#|:raw|:name|:json|:csv|:value)?/);\r\n    if (m && m[0] === name) {\r\n        var res = {};\r\n        if (name[0] === '?') {\r\n            res.cnd = true;\r\n            name = name.substr(1);\r\n        }\r\n        var mod = name.match(/\\^|~|#|:raw|:name|:json|:csv|:value/);\r\n        if (mod) {\r\n            res.name = name.substr(0, mod.index);\r\n            res.mod = mod[0];\r\n        } else {\r\n            res.name = name;\r\n        }\r\n        return res;\r\n    }\r\n    throw new TypeError('Invalid column syntax: ' + JSON.stringify(name) + '.');\r\n}\r\n\r\nfunction isValidMod(mod) {\r\n    var values = ['^', '~', '#', ':raw', ':name', ':json', ':csv', ':value'];\r\n    return values.indexOf(mod) !== -1;\r\n}\r\n\r\nfunction isValidVariable(name) {\r\n    var m = name.match(/^[0-9]+|[a-zA-Z0-9\\$_]+/);\r\n    return !!m && m[0] === name;\r\n}\r\n\r\n/**\r\n * @method helpers.Column.toString\r\n * @description\r\n * Creates a well-formatted multi-line string that represents the object.\r\n *\r\n * It is called automatically when writing the object into the console.\r\n *\r\n * @param {number} [level=0]\r\n * Nested output level, to provide visual offset.\r\n *\r\n * @returns {string}\r\n */\r\nColumn.prototype.toString = function (level) {\r\n    level = level > 0 ? parseInt(level) : 0;\r\n    var gap0 = $npm.utils.messageGap(level),\r\n        gap1 = $npm.utils.messageGap(level + 1),\r\n        lines = [\r\n            gap0 + 'Column {',\r\n            gap1 + 'name: ' + JSON.stringify(this.name)\r\n        ];\r\n    if ('prop' in this) {\r\n        lines.push(gap1 + 'prop: ' + JSON.stringify(this.prop));\r\n    }\r\n    if ('mod' in this) {\r\n        lines.push(gap1 + 'mod: ' + JSON.stringify(this.mod));\r\n    }\r\n    if ('cast' in this) {\r\n        lines.push(gap1 + 'cast: ' + JSON.stringify(this.cast));\r\n    }\r\n    if ('cnd' in this) {\r\n        lines.push(gap1 + 'cnd: ' + JSON.stringify(this.cnd));\r\n    }\r\n    if ('def' in this) {\r\n        lines.push(gap1 + 'def: ' + JSON.stringify(this.def));\r\n    }\r\n    if ('init' in this) {\r\n        lines.push(gap1 + 'init: [Function]');\r\n    }\r\n    if ('skip' in this) {\r\n        lines.push(gap1 + 'skip: [Function]');\r\n    }\r\n    lines.push(gap0 + '}');\r\n    return lines.join($npm.os.EOL);\r\n};\r\n\r\nColumn.prototype.inspect = function () {\r\n    return this.toString();\r\n};\r\n\r\n/**\r\n * @typedef helpers.ColumnConfig\r\n * @description\r\n * A simple structure with column details, to be passed into the {@link helpers.Column Column} constructor for initialization.\r\n *\r\n * @property {string} name\r\n * Destination column name + source property name (if `prop` is skipped). The name must adhere to JavaScript syntax for variables,\r\n * unless `prop` is specified, in which case `name` represents only the column name, and therefore can be any string.\r\n *\r\n * @property {string} [prop]\r\n * Source property name, if different from the column's name. It must adhere to JavaScript syntax for variables.\r\n *\r\n * It is ignored when it is the same as `name`.\r\n *\r\n * @property {string} [mod]\r\n * Formatting modifier, as supported by method {@link formatting.format as.format}: `^`, `~`, `#`, `:csv`, `:json`, `:name`, `:raw`, `:value`.\r\n *\r\n * @property {string} [cast]\r\n * Server-side type casting. Leading `::` is allowed, but not needed (automatically removed when specified).\r\n *\r\n * @property {boolean} [cnd]\r\n * Conditional column flag.\r\n *\r\n * Used by methods {@link helpers.update update} and {@link helpers.sets sets}, ignored by methods {@link helpers.insert insert} and\r\n * {@link helpers.values values}. It indicates that the column is reserved for a `WHERE` condition, not to be set or updated.\r\n *\r\n * It can be set from a string initialization, by adding `?` in front of the name.\r\n *\r\n * @property {} [def]\r\n * Default value for the property, to be used only when the source object doesn't have the property.\r\n * It is ignored when property `init` is set.\r\n *\r\n * @property {helpers.initCB} [init]\r\n * Override callback for the value.\r\n *\r\n * @property {helpers.skipCB} [skip]\r\n * An override for skipping columns dynamically.\r\n *\r\n * Used by methods {@link helpers.update update} (for a single object) and {@link helpers.sets sets}, ignored by methods\r\n * {@link helpers.insert insert} and {@link helpers.values values}.\r\n *\r\n * It is also ignored when conditional flag `cnd` is set.\r\n *\r\n */\r\n\r\n/**\r\n * @callback helpers.initCB\r\n * @description\r\n * A callback function type used by parameter `init` within {@link helpers.ColumnConfig ColumnConfig}.\r\n *\r\n * It works as an override for the corresponding property value in the `source` object.\r\n *\r\n * The function is called with `this` set to the `source` object.\r\n *\r\n * @param {} col\r\n * Column-to-property descriptor.\r\n *\r\n * @param {object} col.source\r\n * The source object, equals to `this` that's passed into the function.\r\n *\r\n * @param {string} col.name\r\n * Name of the property within the `source` object.\r\n *\r\n * @param {} col.value\r\n *\r\n * Property value, set to one of the following:\r\n *\r\n * - Value of the property within the `source` object (`value` = `source[name]`), if the property exists\r\n * - If the property doesn't exist and `def` is set in the column, then `value` is set to the value of `def`\r\n * - If the property doesn't exist and `def` is not set in the column, then `value` is set to `undefined`\r\n *\r\n * @param {boolean} col.exists\r\n * Indicates whether the property exists in the `source` object (`exists = name in source`).\r\n *\r\n * @returns {}\r\n * The new value to be used for the corresponding column.\r\n */\r\n\r\n/**\r\n * @callback helpers.skipCB\r\n * @description\r\n * A callback function type used by parameter `skip` within {@link helpers.ColumnConfig ColumnConfig}.\r\n *\r\n * It is to dynamically determine when the property with specified `name` in the `source` object is to be skipped.\r\n *\r\n * The function is called with `this` set to the `source` object.\r\n *\r\n * @param {} col\r\n * Column-to-property descriptor.\r\n *\r\n * @param {object} col.source\r\n * The source object, equals to `this` that's passed into the function.\r\n *\r\n * @param {string} col.name\r\n * Name of the property within the `source` object.\r\n *\r\n * @param {} col.value\r\n *\r\n * Property value, set to one of the following:\r\n *\r\n * - Value of the property within the `source` object (`value` = `source[name]`), if the property exists\r\n * - If the property doesn't exist and `def` is set in the column, then `value` is set to the value of `def`\r\n * - If the property doesn't exist and `def` is not set in the column, then `value` is set to `undefined`\r\n *\r\n * @param {boolean} col.exists\r\n * Indicates whether the property exists in the `source` object (`exists = name in source`).\r\n *\r\n * @returns {boolean}\r\n * A truthy value that indicates whether the column is to be skipped.\r\n *\r\n */\r\n\r\nmodule.exports = Column;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/lib/helpers/column.js\n// module id = 62\n// module chunks = 0","'use strict';\r\n\r\nvar nodeHighVer = +process.versions.node.split('.')[0];\r\n\r\n// istanbul ignore if\r\nif (nodeHighVer < 4) {\r\n\r\n    // Starting from pg-promise v5.6.0, the library no longer supports legacy\r\n    // Node.js versions 0.10 and 0.12, requiring Node.js 4.x as the minimum.\r\n\r\n    throw new Error('Minimum Node.js version required by pg-promise is 4.x');\r\n}\r\n\r\nmodule.exports = require('./main');\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/lib/index.js\n// module id = 63\n// module chunks = 0","'use strict';\r\n\r\nvar $npm = {\r\n    utils: require('./utils'),\r\n    special: require('./special'),\r\n    QueryFile: require('./queryFile'),\r\n    formatting: require('./formatting'),\r\n    result: require('./result'),\r\n    errors: require('./errors'),\r\n    events: require('./events'),\r\n    stream: require('./stream'),\r\n    types: require('./types')\r\n};\r\n\r\nvar QueryResultError = $npm.errors.QueryResultError,\r\n    InternalError = $npm.utils.InternalError,\r\n    ExternalQuery = $npm.types.ExternalQuery,\r\n    PreparedStatement = $npm.types.PreparedStatement,\r\n    ParameterizedQuery = $npm.types.ParameterizedQuery,\r\n    SpecialQuery = $npm.special.SpecialQuery,\r\n    qrec = $npm.errors.queryResultErrorCode;\r\n\r\nvar badMask = $npm.result.one | $npm.result.many; // the combination isn't supported;\r\n\r\n//////////////////////////////\r\n// Generic query method;\r\nfunction $query(ctx, query, values, qrm, config) {\r\n\r\n    var isResult, $p = config.promise;\r\n\r\n    if (qrm instanceof SpecialQuery) {\r\n        if (qrm.isStream) {\r\n            return $npm.stream.call(this, ctx, query, values, config);\r\n        }\r\n        isResult = qrm.isResult;\r\n    }\r\n\r\n    var error, isFunc,\r\n        opt = ctx.options,\r\n        pgFormatting = opt.pgFormatting,\r\n        capSQL = opt.capSQL,\r\n        params = pgFormatting ? values : undefined;\r\n\r\n    if (!query) {\r\n        error = new TypeError('Empty or undefined query.');\r\n    }\r\n\r\n    if (!error && typeof query === 'object') {\r\n        if (query instanceof $npm.QueryFile) {\r\n            query.prepare();\r\n            if (query.error) {\r\n                error = query.error;\r\n                query = query.file;\r\n            } else {\r\n                query = query.query;\r\n            }\r\n        } else {\r\n            if ('funcName' in query) {\r\n                isFunc = true;\r\n                query = query.funcName; // query is a function name;\r\n            } else {\r\n                if (query instanceof ExternalQuery) {\r\n                    pgFormatting = true;\r\n                } else {\r\n                    if ('name' in query) {\r\n                        query = new PreparedStatement(query);\r\n                        pgFormatting = true;\r\n                    } else {\r\n                        if ('text' in query) {\r\n                            query = new ParameterizedQuery(query);\r\n                            pgFormatting = true;\r\n                        }\r\n                    }\r\n                }\r\n                if (query instanceof ExternalQuery && !$npm.utils.isNull(values)) {\r\n                    query.values = values;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!error) {\r\n        if (!pgFormatting && !$npm.utils.isText(query)) {\r\n            error = new TypeError(isFunc ? 'Invalid function name.' : 'Invalid query format.');\r\n        }\r\n        if (query instanceof ExternalQuery) {\r\n            var qp = query.parse();\r\n            if (qp instanceof Error) {\r\n                error = qp;\r\n            } else {\r\n                query = qp;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!error && !isResult) {\r\n        if ($npm.utils.isNull(qrm)) {\r\n            qrm = $npm.result.any; // default query result;\r\n        } else {\r\n            if (qrm !== parseInt(qrm) || (qrm & badMask) === badMask || qrm < 1 || qrm > 6) {\r\n                error = new TypeError('Invalid Query Result Mask specified.');\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!error && (!pgFormatting || isFunc)) {\r\n        try {\r\n            // use 'pg-promise' implementation of values formatting;\r\n            if (isFunc) {\r\n                query = $npm.formatting.formatFunction(query, values, capSQL);\r\n            } else {\r\n                query = $npm.formatting.formatQuery(query, values);\r\n            }\r\n        } catch (e) {\r\n            if (isFunc) {\r\n                var prefix = capSQL ? 'SELECT * FROM' : 'select * from';\r\n                query = prefix + ' ' + query + '(...)';\r\n            }\r\n            error = e instanceof Error ? e : new $npm.utils.InternalError(e);\r\n            params = values;\r\n        }\r\n    }\r\n\r\n    return $p((resolve, reject) => {\r\n\r\n        if (notifyReject()) {\r\n            return;\r\n        }\r\n        error = $npm.events.query(opt, getContext());\r\n        if (notifyReject()) {\r\n            return;\r\n        }\r\n        var start = Date.now();\r\n        try {\r\n            ctx.db.client.query(query, params, (err, result) => {\r\n                var data;\r\n                if (!err) {\r\n                    $npm.utils.addReadProp(result, 'duration', Date.now() - start);\r\n                    $npm.utils.addReadProp(result.rows, 'duration', result.duration, true);\r\n                    if (result.rows.length) {\r\n                        err = $npm.events.receive(opt, result.rows, result, getContext());\r\n                        err = err || error;\r\n                    }\r\n                }\r\n                if (err) {\r\n                    error = err;\r\n                } else {\r\n                    if (isResult) {\r\n                        data = result; // raw object requested (Result type);\r\n                    } else {\r\n                        data = result.rows;\r\n                        var len = data.length;\r\n                        if (len) {\r\n                            if (len > 1 && qrm & $npm.result.one) {\r\n                                // one row was expected, but returned multiple;\r\n                                error = new QueryResultError(qrec.multiple, result, query, params);\r\n                            } else {\r\n                                if (!(qrm & ($npm.result.one | $npm.result.many))) {\r\n                                    // no data should have been returned;\r\n                                    error = new QueryResultError(qrec.notEmpty, result, query, params);\r\n                                } else {\r\n                                    if (!(qrm & $npm.result.many)) {\r\n                                        data = data[0];\r\n                                    }\r\n                                }\r\n                            }\r\n                        } else {\r\n                            // no data returned;\r\n                            if (qrm & $npm.result.none) {\r\n                                if (qrm & $npm.result.one) {\r\n                                    data = null;\r\n                                } else {\r\n                                    data = qrm & $npm.result.many ? data : null;\r\n                                }\r\n                            } else {\r\n                                error = new QueryResultError(qrec.noData, result, query, params);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (!notifyReject()) {\r\n                    resolve(data);\r\n                }\r\n            });\r\n        } catch (e) {\r\n            // this can only happen as a result of an internal failure within node-postgres,\r\n            // like during a sudden loss of communications, which is impossible to reproduce\r\n            // automatically, so removing it from the test coverage:\r\n            // istanbul ignore next\r\n            error = e;\r\n        }\r\n\r\n        function getContext() {\r\n            var client;\r\n            if (ctx.db) {\r\n                client = ctx.db.client;\r\n            } else {\r\n                error = new Error('Loose request outside an expired connection.');\r\n            }\r\n            return {\r\n                client: client,\r\n                dc: ctx.dc,\r\n                query: query,\r\n                params: params,\r\n                ctx: ctx.ctx\r\n            };\r\n        }\r\n\r\n        notifyReject();\r\n\r\n        function notifyReject() {\r\n            var context = getContext();\r\n            if (error) {\r\n                if (error instanceof InternalError) {\r\n                    error = error.error;\r\n                }\r\n                $npm.events.error(opt, error, context);\r\n                reject(error);\r\n                return true;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nmodule.exports = config => {\r\n    return function (ctx, query, values, qrm) {\r\n        return $query.call(this, ctx, query, values, qrm, config);\r\n    };\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/lib/query.js\n// module id = 64\n// module chunks = 0","'use strict';\r\n\r\n/////////////////////////////\r\n// Special Query type;\r\nfunction SpecialQuery(type) {\r\n    this.isStream = type === 'stream';\r\n    this.isResult = type === 'result';\r\n}\r\n\r\nvar cache = {\r\n    resultQuery: new SpecialQuery('result'),\r\n    streamQuery: new SpecialQuery('stream')\r\n};\r\n\r\nmodule.exports = {\r\n    SpecialQuery: SpecialQuery,\r\n    cache: cache\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/lib/special.js\n// module id = 65\n// module chunks = 0","'use strict';\r\n\r\n/**\r\n * @enum {number}\r\n * @alias txMode.isolationLevel\r\n * @readonly\r\n * @summary Transaction Isolation Level.\r\n * @description\r\n * The type is available from the {@link txMode} namespace.\r\n *\r\n * @see $[Transaction Isolation]\r\n */\r\nvar isolationLevel = {\r\n    /** Isolation level not specified. */\r\n    none: 0,\r\n\r\n    /** ISOLATION LEVEL SERIALIZABLE */\r\n    serializable: 1,\r\n\r\n    /** ISOLATION LEVEL REPEATABLE READ */\r\n    repeatableRead: 2,\r\n\r\n    /** ISOLATION LEVEL READ COMMITTED */\r\n    readCommitted: 3\r\n\r\n    // From the official documentation: http://www.postgresql.org/docs/9.5/static/sql-set-transaction.html\r\n    // The SQL standard defines one additional level, READ UNCOMMITTED. In PostgreSQL READ UNCOMMITTED is treated as READ COMMITTED.\r\n    // => skipping `READ UNCOMMITTED`.\r\n};\r\n\r\nObject.freeze(isolationLevel);\r\n\r\n/**\r\n * @class txMode.TransactionMode\r\n * @description\r\n * **Alternative Syntax:** `TransactionMode({tiLevel, readOnly, deferrable})` &#8658; {@link TransactionMode}\r\n *\r\n * Constructs a complete transaction-opening command, based on the parameters:\r\n *  - isolation level\r\n *  - access mode\r\n *  - deferrable mode\r\n *\r\n * The type is available from the {@link txMode} namespace.\r\n *\r\n * @param {isolationLevel|Object} [tiLevel]\r\n * Transaction Isolation Level, or an object with parameters, if the alternative\r\n * syntax is used.\r\n *\r\n * @param {boolean} [readOnly]\r\n * Sets transaction access mode based on the read-only flag:\r\n *  - `undefined` - access mode not specified (default)\r\n *  - `true` - access mode is set to `READ ONLY`\r\n *  - `false` - access mode is set to `READ WRITE`\r\n *\r\n * @param {boolean} [deferrable]\r\n * Sets transaction deferrable mode based on the boolean value:\r\n *  - `undefined` - deferrable mode not specified (default)\r\n *  - `true` - mode is set to `DEFERRABLE`\r\n *  - `false` - mode is set to `NOT DEFERRABLE`\r\n *\r\n * It is used only when `tiLevel`=`isolationLevel.serializable`\r\n * and `readOnly`=`true`, or else it is ignored.\r\n *\r\n * @returns {txMode.TransactionMode}\r\n *\r\n * @see $[BEGIN], {@link txMode.isolationLevel}\r\n *\r\n * @example\r\n *\r\n * var TransactionMode = pgp.txMode.TransactionMode;\r\n * var isolationLevel = pgp.txMode.isolationLevel;\r\n *\r\n * // Create a reusable transaction mode (serializable + read-only + deferrable):\r\n * var tmSRD = new TransactionMode({\r\n *     tiLevel: isolationLevel.serializable,\r\n *     readOnly: true,\r\n *     deferrable: true\r\n * });\r\n *\r\n * function myTransaction() {\r\n *     return this.query(\"SELECT * FROM table\");\r\n * }\r\n *\r\n * myTransaction.txMode = tmSRD; // assign transaction mode;\r\n *\r\n * db.tx(myTransaction)\r\n *     .then(() => {\r\n *         // success;\r\n *     });\r\n *\r\n * // Instead of the default BEGIN, such transaction will initiate with:\r\n *\r\n * // BEGIN ISOLATION LEVEL SERIALIZABLE READ ONLY DEFERRABLE\r\n *\r\n */\r\nfunction TransactionMode(tiLevel, readOnly, deferrable) {\r\n\r\n    if (!(this instanceof TransactionMode)) {\r\n        return new TransactionMode(tiLevel, readOnly, deferrable);\r\n    }\r\n\r\n    if (tiLevel && typeof tiLevel === 'object') {\r\n        readOnly = tiLevel.readOnly;\r\n        deferrable = tiLevel.deferrable;\r\n        tiLevel = tiLevel.tiLevel;\r\n    }\r\n\r\n    var level, accessMode, deferrableMode, capBegin, begin = 'begin';\r\n\r\n    tiLevel = (tiLevel > 0) ? parseInt(tiLevel) : 0;\r\n\r\n    if (tiLevel > 0 && tiLevel < 4) {\r\n        var values = ['serializable', 'repeatable read', 'read committed'];\r\n        level = 'isolation level ' + values[tiLevel - 1];\r\n    }\r\n\r\n    if (readOnly) {\r\n        accessMode = 'read only';\r\n    } else {\r\n        if (readOnly !== undefined) {\r\n            accessMode = 'read write';\r\n        }\r\n    }\r\n\r\n    // From the official documentation: http://www.postgresql.org/docs/9.5/static/sql-set-transaction.html\r\n    // The DEFERRABLE transaction property has no effect unless the transaction is also SERIALIZABLE and READ ONLY\r\n    if (tiLevel === isolationLevel.serializable && readOnly) {\r\n        if (deferrable) {\r\n            deferrableMode = 'deferrable';\r\n        } else {\r\n            if (deferrable !== undefined) {\r\n                deferrableMode = 'not deferrable';\r\n            }\r\n        }\r\n    }\r\n\r\n    if (level) {\r\n        begin += ' ' + level;\r\n    }\r\n\r\n    if (accessMode) {\r\n        begin += ' ' + accessMode;\r\n    }\r\n\r\n    if (deferrableMode) {\r\n        begin += ' ' + deferrableMode;\r\n    }\r\n\r\n    capBegin = begin.toUpperCase();\r\n\r\n    this.begin = cap => {\r\n        return cap ? capBegin : begin;\r\n    };\r\n}\r\n\r\n/**\r\n * @namespace txMode\r\n * @description\r\n * Transaction Mode namespace, available as `pgp.txMode`, before and after initializing the library.\r\n *\r\n * Extends the default `BEGIN` with Transaction Mode parameters:\r\n *  - isolation level\r\n *  - access mode\r\n *  - deferrable mode\r\n *\r\n * @property {function} TransactionMode\r\n * {@link txMode.TransactionMode TransactionMode} class constructor.\r\n *\r\n * @property {txMode.isolationLevel} isolationLevel\r\n * Transaction Isolation Level enumerator\r\n *\r\n * @see $[BEGIN]\r\n */\r\nmodule.exports = {\r\n    isolationLevel: isolationLevel,\r\n    TransactionMode: TransactionMode\r\n};\r\n\r\nObject.freeze(module.exports);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/lib/txMode.js\n// module id = 66\n// module chunks = 0","'use strict';\r\n\r\nvar $npm = {\r\n    utils: require('../utils'),\r\n    PS: require('./prepared'),\r\n    PQ: require('./parameterized')\r\n};\r\n\r\n// istanbul ignore next;\r\nfunction ExternalQuery() {\r\n}\r\n\r\nExternalQuery.prototype.inspect = function () {\r\n    return this.toString();\r\n};\r\n\r\n$npm.utils.inherits($npm.PS, ExternalQuery);\r\n$npm.utils.inherits($npm.PQ, ExternalQuery);\r\n\r\nmodule.exports = {\r\n    ExternalQuery: ExternalQuery,\r\n    PreparedStatement: $npm.PS,\r\n    ParameterizedQuery: $npm.PQ\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/lib/types/index.js\n// module id = 67\n// module chunks = 0","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 68;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/lib/utils\n// module id = 68\n// module chunks = 0","var url = require('url');\nvar dns = require('dns');\n\nvar defaults = require('./defaults');\n\nvar val = function(key, config, envVar) {\n  if (envVar === undefined) {\n    envVar = process.env[ 'PG' + key.toUpperCase() ];\n  } else if (envVar === false) {\n    // do nothing ... use false\n  } else {\n    envVar = process.env[ envVar ];\n  }\n\n  return config[key] ||\n    envVar ||\n    defaults[key];\n};\n\n//parses a connection string\nvar parse = require('pg-connection-string').parse;\n\nvar useSsl = function() {\n  switch(process.env.PGSSLMODE) {\n  case \"disable\":\n    return false;\n  case \"prefer\":\n  case \"require\":\n  case \"verify-ca\":\n  case \"verify-full\":\n    return true;\n  }\n  return defaults.ssl;\n};\n\nvar ConnectionParameters = function(config) {\n  //if a string is passed, it is a raw connection string so we parse it into a config\n  config = typeof config == 'string' ? parse(config) : (config || {});\n  //if the config has a connectionString defined, parse IT into the config we use\n  //this will override other default values with what is stored in connectionString\n  if(config.connectionString) {\n    config = parse(config.connectionString);\n  }\n  this.user = val('user', config);\n  this.database = val('database', config);\n  this.port = parseInt(val('port', config), 10);\n  this.host = val('host', config);\n  this.password = val('password', config);\n  this.binary = val('binary', config);\n  this.ssl = config.ssl || useSsl();\n  this.client_encoding = val(\"client_encoding\", config);\n  //a domain socket begins with '/'\n  this.isDomainSocket = (!(this.host||'').indexOf('/'));\n\n  this.application_name = val('application_name', config, 'PGAPPNAME');\n  this.fallback_application_name = val('fallback_application_name', config, false);\n};\n\nvar add = function(params, config, paramName) {\n  var value = config[paramName];\n  if(value) {\n    params.push(paramName+\"='\"+value+\"'\");\n  }\n};\n\nConnectionParameters.prototype.getLibpqConnectionString = function(cb) {\n  var params = [];\n  add(params, this, 'user');\n  add(params, this, 'password');\n  add(params, this, 'port');\n  add(params, this, 'application_name');\n  add(params, this, 'fallback_application_name');\n\n  if(this.database) {\n    params.push(\"dbname='\" + this.database + \"'\");\n  }\n  if(this.host) {\n    params.push(\"host=\" + this.host);\n  }\n  if(this.isDomainSocket) {\n    return cb(null, params.join(' '));\n  }\n  if(this.client_encoding) {\n    params.push(\"client_encoding='\" + this.client_encoding + \"'\");\n  }\n  dns.lookup(this.host, function(err, address) {\n    if(err) return cb(err, null);\n    params.push(\"hostaddr=\" + address);\n    return cb(null, params.join(' '));\n  });\n};\n\nmodule.exports = ConnectionParameters;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/~/pg/lib/connection-parameters.js\n// module id = 69\n// module chunks = 0","var net = require('net');\nvar EventEmitter = require('events').EventEmitter;\nvar util = require('util');\n\nvar Writer = require('buffer-writer');\nvar Reader = require('packet-reader');\n\nvar TEXT_MODE = 0;\nvar BINARY_MODE = 1;\nvar Connection = function(config) {\n  EventEmitter.call(this);\n  config = config || {};\n  this.stream = config.stream || new net.Stream();\n  this.lastBuffer = false;\n  this.lastOffset = 0;\n  this.buffer = null;\n  this.offset = null;\n  this.encoding = 'utf8';\n  this.parsedStatements = {};\n  this.writer = new Writer();\n  this.ssl = config.ssl || false;\n  this._ending = false;\n  this._mode = TEXT_MODE;\n  this._emitMessage = false;\n  this._reader = new Reader({\n    headerSize: 1,\n    lengthPadding: -4\n  });\n  var self = this;\n  this.on('newListener', function(eventName) {\n    if(eventName == 'message') {\n      self._emitMessage = true;\n    }\n  });\n};\n\nutil.inherits(Connection, EventEmitter);\n\nConnection.prototype.connect = function(port, host) {\n\n  if(this.stream.readyState === 'closed') {\n    this.stream.connect(port, host);\n  } else if(this.stream.readyState == 'open') {\n    this.emit('connect');\n  }\n\n  var self = this;\n\n  this.stream.on('connect', function() {\n    self.emit('connect');\n  });\n\n  this.stream.on('error', function(error) {\n    //don't raise ECONNRESET errors - they can & should be ignored\n    //during disconnect\n    if(self._ending && error.code == 'ECONNRESET') {\n      return;\n    }\n    self.emit('error', error);\n  });\n\n  this.stream.on('close', function() {\n    // NOTE: node-0.10 emits both 'end' and 'close'\n    //       for streams closed by the peer, while\n    //       node-0.8 only emits 'close'\n    self.emit('end');\n  });\n\n  if(!this.ssl) {\n    return this.attachListeners(this.stream);\n  }\n\n  this.stream.once('data', function(buffer) {\n    var responseCode = buffer.toString('utf8');\n    if(responseCode != 'S') {\n      return self.emit('error', new Error('The server does not support SSL connections'));\n    }\n    var tls = require('tls');\n    self.stream = tls.connect({\n      socket: self.stream,\n      servername: host,\n      rejectUnauthorized: self.ssl.rejectUnauthorized,\n      ca: self.ssl.ca,\n      pfx: self.ssl.pfx,\n      key: self.ssl.key,\n      passphrase: self.ssl.passphrase,\n      cert: self.ssl.cert,\n      NPNProtocols: self.ssl.NPNProtocols\n    });\n    self.attachListeners(self.stream);\n    self.emit('sslconnect');\n\n    self.stream.on('error', function(error){\n      self.emit('error', error);\n    });\n  });\n};\n\nConnection.prototype.attachListeners = function(stream) {\n  var self = this;\n  stream.on('data', function(buff) {\n    self._reader.addChunk(buff);\n    var packet = self._reader.read();\n    while(packet) {\n      var msg = self.parseMessage(packet);\n      if(self._emitMessage) {\n        self.emit('message', msg);\n      }\n      self.emit(msg.name, msg);\n      packet = self._reader.read();\n    }\n  });\n};\n\nConnection.prototype.requestSsl = function() {\n  this.checkSslResponse = true;\n\n  var bodyBuffer = this.writer\n    .addInt16(0x04D2)\n    .addInt16(0x162F).flush();\n\n  var length = bodyBuffer.length + 4;\n\n  var buffer = new Writer()\n    .addInt32(length)\n    .add(bodyBuffer)\n    .join();\n  this.stream.write(buffer);\n};\n\nConnection.prototype.startup = function(config) {\n  var writer = this.writer\n    .addInt16(3)\n    .addInt16(0)\n  ;\n\n  Object.keys(config).forEach(function(key){\n    var val = config[key];\n    writer.addCString(key).addCString(val);\n  });\n\n  writer.addCString('client_encoding').addCString(\"'utf-8'\");\n\n  var bodyBuffer = writer.addCString('').flush();\n  //this message is sent without a code\n\n  var length = bodyBuffer.length + 4;\n\n  var buffer = new Writer()\n    .addInt32(length)\n    .add(bodyBuffer)\n    .join();\n  this.stream.write(buffer);\n};\n\nConnection.prototype.cancel = function(processID, secretKey) {\n  var bodyBuffer = this.writer\n    .addInt16(1234)\n    .addInt16(5678)\n    .addInt32(processID)\n    .addInt32(secretKey)\n    .flush();\n\n  var length = bodyBuffer.length + 4;\n\n  var buffer = new Writer()\n    .addInt32(length)\n    .add(bodyBuffer)\n    .join();\n  this.stream.write(buffer);\n};\n\nConnection.prototype.password = function(password) {\n  //0x70 = 'p'\n  this._send(0x70, this.writer.addCString(password));\n};\n\nConnection.prototype._send = function(code, more) {\n  if(!this.stream.writable) { return false; }\n  if(more === true) {\n    this.writer.addHeader(code);\n  } else {\n    return this.stream.write(this.writer.flush(code));\n  }\n};\n\nConnection.prototype.query = function(text) {\n  //0x51 = Q\n  this.stream.write(this.writer.addCString(text).flush(0x51));\n};\n\n//send parse message\n//\"more\" === true to buffer the message until flush() is called\nConnection.prototype.parse = function(query, more) {\n  //expect something like this:\n  // { name: 'queryName',\n  //   text: 'select * from blah',\n  //   types: ['int8', 'bool'] }\n\n  //normalize missing query names to allow for null\n  query.name = query.name || '';\n  if (query.name.length > 63) {\n    console.error('Warning! Postgres only supports 63 characters for query names.');\n    console.error('You supplied', query.name, '(', query.name.length, ')');\n    console.error('This can cause conflicts and silent errors executing queries');\n  }\n  //normalize null type array\n  query.types = query.types || [];\n  var len = query.types.length;\n  var buffer = this.writer\n    .addCString(query.name) //name of query\n    .addCString(query.text) //actual query text\n    .addInt16(len);\n  for(var i = 0; i < len; i++) {\n    buffer.addInt32(query.types[i]);\n  }\n\n  var code = 0x50;\n  this._send(code, more);\n};\n\n//send bind message\n//\"more\" === true to buffer the message until flush() is called\nConnection.prototype.bind = function(config, more) {\n  //normalize config\n  config = config || {};\n  config.portal = config.portal || '';\n  config.statement = config.statement || '';\n  config.binary = config.binary || false;\n  var values = config.values || [];\n  var len = values.length;\n  var useBinary = false;\n  for (var j = 0; j < len; j++)\n    useBinary |= values[j] instanceof Buffer;\n  var buffer = this.writer\n    .addCString(config.portal)\n    .addCString(config.statement);\n  if (!useBinary)\n    buffer.addInt16(0);\n  else {\n    buffer.addInt16(len);\n    for (j = 0; j < len; j++)\n      buffer.addInt16(values[j] instanceof Buffer);\n  }\n  buffer.addInt16(len);\n  for(var i = 0; i < len; i++) {\n    var val = values[i];\n    if(val === null || typeof val === \"undefined\") {\n      buffer.addInt32(-1);\n    } else if (val instanceof Buffer) {\n      buffer.addInt32(val.length);\n      buffer.add(val);\n    } else {\n      buffer.addInt32(Buffer.byteLength(val));\n      buffer.addString(val);\n    }\n  }\n\n  if(config.binary) {\n    buffer.addInt16(1); // format codes to use binary\n    buffer.addInt16(1);\n  }\n  else {\n    buffer.addInt16(0); // format codes to use text\n  }\n  //0x42 = 'B'\n  this._send(0x42, more);\n};\n\n//send execute message\n//\"more\" === true to buffer the message until flush() is called\nConnection.prototype.execute = function(config, more) {\n  config = config || {};\n  config.portal = config.portal || '';\n  config.rows = config.rows || '';\n  this.writer\n    .addCString(config.portal)\n    .addInt32(config.rows);\n\n  //0x45 = 'E'\n  this._send(0x45, more);\n};\n\nvar emptyBuffer = Buffer(0);\n\nConnection.prototype.flush = function() {\n  //0x48 = 'H'\n  this.writer.add(emptyBuffer);\n  this._send(0x48);\n};\n\nConnection.prototype.sync = function() {\n  //clear out any pending data in the writer\n  this.writer.flush(0);\n\n  this.writer.add(emptyBuffer);\n  this._ending = true;\n  this._send(0x53);\n};\n\nConnection.prototype.end = function() {\n  //0x58 = 'X'\n  this.writer.add(emptyBuffer);\n  this._ending = true;\n  this._send(0x58);\n};\n\nConnection.prototype.close = function(msg, more) {\n  this.writer.addCString(msg.type + (msg.name || ''));\n  this._send(0x43, more);\n};\n\nConnection.prototype.describe = function(msg, more) {\n  this.writer.addCString(msg.type + (msg.name || ''));\n  this._send(0x44, more);\n};\n\nConnection.prototype.sendCopyFromChunk = function (chunk) {\n  this.stream.write(this.writer.add(chunk).flush(0x64));\n};\n\nConnection.prototype.endCopyFrom = function () {\n  this.stream.write(this.writer.add(emptyBuffer).flush(0x63));\n};\n\nConnection.prototype.sendCopyFail = function (msg) {\n  //this.stream.write(this.writer.add(emptyBuffer).flush(0x66));\n  this.writer.addCString(msg);\n  this._send(0x66);\n};\n\nvar Message = function(name, length) {\n  this.name = name;\n  this.length = length;\n};\n\nConnection.prototype.parseMessage =  function(buffer) {\n\n  this.offset = 0;\n  var length = buffer.length + 4;\n  switch(this._reader.header)\n  {\n\n  case 0x52: //R\n    return this.parseR(buffer, length);\n\n  case 0x53: //S\n    return this.parseS(buffer, length);\n\n  case 0x4b: //K\n    return this.parseK(buffer, length);\n\n  case 0x43: //C\n    return this.parseC(buffer, length);\n\n  case 0x5a: //Z\n    return this.parseZ(buffer, length);\n\n  case 0x54: //T\n    return this.parseT(buffer, length);\n\n  case 0x44: //D\n    return this.parseD(buffer, length);\n\n  case 0x45: //E\n    return this.parseE(buffer, length);\n\n  case 0x4e: //N\n    return this.parseN(buffer, length);\n\n  case 0x31: //1\n    return new Message('parseComplete', length);\n\n  case 0x32: //2\n    return new Message('bindComplete', length);\n\n  case 0x33: //3\n    return new Message('closeComplete', length);\n\n  case 0x41: //A\n    return this.parseA(buffer, length);\n\n  case 0x6e: //n\n    return new Message('noData', length);\n\n  case 0x49: //I\n    return new Message('emptyQuery', length);\n\n  case 0x73: //s\n    return new Message('portalSuspended', length);\n\n  case 0x47: //G\n    return this.parseG(buffer, length);\n\n  case 0x48: //H\n    return this.parseH(buffer, length);\n\n  case 0x63: //c\n    return new Message('copyDone', length);\n\n  case 0x64: //d\n    return this.parsed(buffer, length);\n  }\n};\n\nConnection.prototype.parseR = function(buffer, length) {\n  var code = 0;\n  var msg = new Message('authenticationOk', length);\n  if(msg.length === 8) {\n    code = this.parseInt32(buffer);\n    if(code === 3) {\n      msg.name = 'authenticationCleartextPassword';\n    }\n    return msg;\n  }\n  if(msg.length === 12) {\n    code = this.parseInt32(buffer);\n    if(code === 5) { //md5 required\n      msg.name = 'authenticationMD5Password';\n      msg.salt = new Buffer(4);\n      buffer.copy(msg.salt, 0, this.offset, this.offset + 4);\n      this.offset += 4;\n      return msg;\n    }\n  }\n  throw new Error(\"Unknown authenticationOk message type\" + util.inspect(msg));\n};\n\nConnection.prototype.parseS = function(buffer, length) {\n  var msg = new Message('parameterStatus', length);\n  msg.parameterName = this.parseCString(buffer);\n  msg.parameterValue = this.parseCString(buffer);\n  return msg;\n};\n\nConnection.prototype.parseK = function(buffer, length) {\n  var msg = new Message('backendKeyData', length);\n  msg.processID = this.parseInt32(buffer);\n  msg.secretKey = this.parseInt32(buffer);\n  return msg;\n};\n\nConnection.prototype.parseC = function(buffer, length) {\n  var msg = new Message('commandComplete', length);\n  msg.text = this.parseCString(buffer);\n  return msg;\n};\n\nConnection.prototype.parseZ = function(buffer, length) {\n  var msg = new Message('readyForQuery', length);\n  msg.name = 'readyForQuery';\n  msg.status = this.readString(buffer, 1);\n  return msg;\n};\n\nvar ROW_DESCRIPTION = 'rowDescription';\nConnection.prototype.parseT = function(buffer, length) {\n  var msg = new Message(ROW_DESCRIPTION, length);\n  msg.fieldCount = this.parseInt16(buffer);\n  var fields = [];\n  for(var i = 0; i < msg.fieldCount; i++){\n    fields.push(this.parseField(buffer));\n  }\n  msg.fields = fields;\n  return msg;\n};\n\nvar Field = function() {\n  this.name = null;\n  this.tableID = null;\n  this.columnID = null;\n  this.dataTypeID = null;\n  this.dataTypeSize = null;\n  this.dataTypeModifier = null;\n  this.format = null;\n};\n\nvar FORMAT_TEXT = 'text';\nvar FORMAT_BINARY = 'binary';\nConnection.prototype.parseField = function(buffer) {\n  var field = new Field();\n  field.name = this.parseCString(buffer);\n  field.tableID = this.parseInt32(buffer);\n  field.columnID = this.parseInt16(buffer);\n  field.dataTypeID = this.parseInt32(buffer);\n  field.dataTypeSize = this.parseInt16(buffer);\n  field.dataTypeModifier = this.parseInt32(buffer);\n  if(this.parseInt16(buffer) === TEXT_MODE) {\n    this._mode = TEXT_MODE;\n    field.format = FORMAT_TEXT;\n  } else {\n    this._mode = BINARY_MODE;\n    field.format = FORMAT_BINARY;\n  }\n  return field;\n};\n\nvar DATA_ROW = 'dataRow';\nvar DataRowMessage = function(length, fieldCount) {\n  this.name = DATA_ROW;\n  this.length = length;\n  this.fieldCount = fieldCount;\n  this.fields = [];\n};\n\n\n//extremely hot-path code\nConnection.prototype.parseD = function(buffer, length) {\n  var fieldCount = this.parseInt16(buffer);\n  var msg = new DataRowMessage(length, fieldCount);\n  for(var i = 0; i < fieldCount; i++) {\n    msg.fields.push(this._readValue(buffer));\n  }\n  return msg;\n};\n\n//extremely hot-path code\nConnection.prototype._readValue = function(buffer) {\n  var length = this.parseInt32(buffer);\n  if(length === -1) return null;\n  if(this._mode === TEXT_MODE) {\n    return this.readString(buffer, length);\n  }\n  return this.readBytes(buffer, length);\n};\n\n//parses error\nConnection.prototype.parseE = function(buffer, length) {\n  var fields = {};\n  var msg, item;\n  var input = new Message('error', length);\n  var fieldType = this.readString(buffer, 1);\n  while(fieldType != '\\0') {\n    fields[fieldType] = this.parseCString(buffer);\n    fieldType = this.readString(buffer, 1);\n  }\n  if(input.name === 'error') {\n    // the msg is an Error instance\n    msg = new Error(fields.M);\n    for (item in input) {\n      // copy input properties to the error\n      if(input.hasOwnProperty(item)) {\n        msg[item] = input[item];\n      }\n    }\n  } else {\n    // the msg is an object literal\n    msg = input;\n    msg.message = fields.M;\n  }\n  msg.severity = fields.S;\n  msg.code = fields.C;\n  msg.detail = fields.D;\n  msg.hint = fields.H;\n  msg.position = fields.P;\n  msg.internalPosition = fields.p;\n  msg.internalQuery = fields.q;\n  msg.where = fields.W;\n  msg.schema = fields.s;\n  msg.table = fields.t;\n  msg.column = fields.c;\n  msg.dataType = fields.d;\n  msg.constraint = fields.n;\n  msg.file = fields.F;\n  msg.line = fields.L;\n  msg.routine = fields.R;\n  return msg;\n};\n\n//same thing, different name\nConnection.prototype.parseN = function(buffer, length) {\n  var msg = this.parseE(buffer, length);\n  msg.name = 'notice';\n  return msg;\n};\n\nConnection.prototype.parseA = function(buffer, length) {\n  var msg = new Message('notification', length);\n  msg.processId = this.parseInt32(buffer);\n  msg.channel = this.parseCString(buffer);\n  msg.payload = this.parseCString(buffer);\n  return msg;\n};\n\nConnection.prototype.parseG = function (buffer, length) {\n  var msg = new Message('copyInResponse', length);\n  return this.parseGH(buffer, msg);\n};\n\nConnection.prototype.parseH = function(buffer, length) {\n  var msg = new Message('copyOutResponse', length);\n  return this.parseGH(buffer, msg);\n};\n\nConnection.prototype.parseGH = function (buffer, msg) {\n  var isBinary = buffer[this.offset] !== 0;\n  this.offset++;\n  msg.binary = isBinary;\n  var columnCount = this.parseInt16(buffer);\n  msg.columnTypes = [];\n  for(var i = 0; i<columnCount; i++) {\n    msg.columnTypes.push(this.parseInt16(buffer));\n  }\n  return msg;\n};\n\nConnection.prototype.parsed = function (buffer, length) {\n  var msg = new Message('copyData', length);\n  msg.chunk = this.readBytes(buffer, msg.length - 4);\n  return msg;\n};\n\nConnection.prototype.parseInt32 = function(buffer) {\n  var value = buffer.readInt32BE(this.offset, true);\n  this.offset += 4;\n  return value;\n};\n\nConnection.prototype.parseInt16 = function(buffer) {\n  var value = buffer.readInt16BE(this.offset, true);\n  this.offset += 2;\n  return value;\n};\n\nConnection.prototype.readString = function(buffer, length) {\n  return buffer.toString(this.encoding, this.offset, (this.offset += length));\n};\n\nConnection.prototype.readBytes = function(buffer, length) {\n  return buffer.slice(this.offset, this.offset += length);\n};\n\nConnection.prototype.parseCString = function(buffer) {\n  var start = this.offset;\n  while(buffer[this.offset++] !== 0) { }\n  return buffer.toString(this.encoding, start, this.offset - 1);\n};\n//end parsing methods\nmodule.exports = Connection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/~/pg/lib/connection.js\n// module id = 70\n// module chunks = 0","var Native = require('pg-native');\nvar TypeOverrides = require('../type-overrides');\nvar semver = require('semver');\nvar pkg = require('../../package.json');\nvar assert = require('assert');\nvar EventEmitter = require('events').EventEmitter;\nvar util = require('util');\nvar ConnectionParameters = require('../connection-parameters');\n\nvar msg = 'Version >= ' + pkg.minNativeVersion + ' of pg-native required.';\nassert(semver.gte(Native.version, pkg.minNativeVersion), msg);\n\nvar NativeQuery = require('./query');\n\nvar Client = module.exports = function(config) {\n  EventEmitter.call(this);\n  config = config || {};\n\n  this._types = new TypeOverrides(config.types);\n\n  this.native = new Native({\n    types: this._types\n  });\n\n  this._queryQueue = [];\n  this._connected = false;\n\n  //keep these on the object for legacy reasons\n  //for the time being. TODO: deprecate all this jazz\n  var cp = this.connectionParameters = new ConnectionParameters(config);\n  this.user = cp.user;\n  this.password = cp.password;\n  this.database = cp.database;\n  this.host = cp.host;\n  this.port = cp.port;\n\n  //a hash to hold named queries\n  this.namedQueries = {};\n};\n\nutil.inherits(Client, EventEmitter);\n\n//connect to the backend\n//pass an optional callback to be called once connected\n//or with an error if there was a connection error\n//if no callback is passed and there is a connection error\n//the client will emit an error event.\nClient.prototype.connect = function(cb) {\n  var self = this;\n\n  var onError = function(err) {\n    if(cb) return cb(err);\n    return self.emit('error', err);\n  };\n\n  this.connectionParameters.getLibpqConnectionString(function(err, conString) {\n    if(err) return onError(err);\n    self.native.connect(conString, function(err) {\n      if(err) return onError(err);\n\n      //set internal states to connected\n      self._connected = true;\n\n      //handle connection errors from the native layer\n      self.native.on('error', function(err) {\n        //error will be handled by active query\n        if(self._activeQuery && self._activeQuery.state != 'end') {\n          return;\n        }\n        self.emit('error', err);\n      });\n\n      self.native.on('notification', function(msg) {\n        self.emit('notification', {\n          channel: msg.relname,\n          payload: msg.extra\n        });\n      });\n\n      //signal we are connected now\n      self.emit('connect');\n      self._pulseQueryQueue(true);\n\n      //possibly call the optional callback\n      if(cb) cb();\n    });\n  });\n};\n\n//send a query to the server\n//this method is highly overloaded to take\n//1) string query, optional array of parameters, optional function callback\n//2) object query with {\n//    string query\n//    optional array values,\n//    optional function callback instead of as a separate parameter\n//    optional string name to name & cache the query plan\n//    optional string rowMode = 'array' for an array of results\n//  }\nClient.prototype.query = function(config, values, callback) {\n  var query = new NativeQuery(this.native);\n\n  //support query('text', ...) style calls\n  if(typeof config == 'string') {\n    query.text = config;\n  }\n\n  //support passing everything in via a config object\n  if(typeof config == 'object') {\n    query.text = config.text;\n    query.values = config.values;\n    query.name = config.name;\n    query.callback = config.callback;\n    query._arrayMode = config.rowMode == 'array';\n  }\n\n  //support query({...}, function() {}) style calls\n  //& support query(..., ['values'], ...) style calls\n  if(typeof values == 'function') {\n    query.callback = values;\n  }\n  else if(util.isArray(values)) {\n    query.values = values;\n  }\n  if(typeof callback == 'function') {\n    query.callback = callback;\n  }\n\n  this._queryQueue.push(query);\n  this._pulseQueryQueue();\n  return query;\n};\n\n//disconnect from the backend server\nClient.prototype.end = function(cb) {\n  var self = this;\n  if(!this._connected) {\n    this.once('connect', this.end.bind(this, cb));\n  }\n  this.native.end(function() {\n    //send an error to the active query\n    if(self._hasActiveQuery()) {\n      var msg = 'Connection terminated';\n      self._queryQueue.length = 0;\n      self._activeQuery.handleError(new Error(msg));\n    }\n    self.emit('end');\n    if(cb) cb();\n  });\n};\n\nClient.prototype._hasActiveQuery = function() {\n  return this._activeQuery && this._activeQuery.state != 'error' && this._activeQuery.state != 'end';\n};\n\nClient.prototype._pulseQueryQueue = function(initialConnection) {\n  if(!this._connected) {\n    return;\n  }\n  if(this._hasActiveQuery()) {\n    return;\n  }\n  var query = this._queryQueue.shift();\n  if(!query) {\n    if(!initialConnection) {\n      this.emit('drain');\n    }\n    return;\n  }\n  this._activeQuery = query;\n  query.submit(this);\n  var self = this;\n  query.once('_done', function() {\n    self._pulseQueryQueue();\n  });\n};\n\n//attempt to cancel an in-progress query\nClient.prototype.cancel = function(query) {\n  if(this._activeQuery == query) {\n    this.native.cancel(function() {});\n  } else if (this._queryQueue.indexOf(query) != -1) {\n    this._queryQueue.splice(this._queryQueue.indexOf(query), 1);\n  }\n};\n\nClient.prototype.setTypeParser = function(oid, format, parseFn) {\n  return this._types.setTypeParser(oid, format, parseFn);\n};\n\nClient.prototype.getTypeParser = function(oid, format) {\n  return this._types.getTypeParser(oid, format);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/~/pg/lib/native/index.js\n// module id = 71\n// module chunks = 0","var types = require('pg-types');\n\nfunction TypeOverrides(userTypes) {\n  this._types = userTypes || types;\n  this.text = {};\n  this.binary = {};\n}\n\nTypeOverrides.prototype.getOverrides = function(format) {\n  switch(format) {\n    case 'text': return this.text;\n    case 'binary': return this.binary;\n    default: return {};\n  }\n};\n\nTypeOverrides.prototype.setTypeParser = function(oid, format, parseFn) {\n  if(typeof format == 'function') {\n    parseFn = format;\n    format = 'text';\n  }\n  this.getOverrides(format)[oid] = parseFn;\n};\n\nTypeOverrides.prototype.getTypeParser = function(oid, format) {\n  format = format || 'text';\n  return this.getOverrides(format)[oid] || this._types.getTypeParser(oid, format);\n};\n\nmodule.exports = TypeOverrides;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/~/pg/lib/type-overrides.js\n// module id = 72\n// module chunks = 0","module.exports = {\n\t\"_args\": [\n\t\t[\n\t\t\t{\n\t\t\t\t\"raw\": \"pg-promise@^5.6.0\",\n\t\t\t\t\"scope\": null,\n\t\t\t\t\"escapedName\": \"pg-promise\",\n\t\t\t\t\"name\": \"pg-promise\",\n\t\t\t\t\"rawSpec\": \"^5.6.0\",\n\t\t\t\t\"spec\": \">=5.6.0 <6.0.0\",\n\t\t\t\t\"type\": \"range\"\n\t\t\t},\n\t\t\t\"/home/neil/DevGit/zf2dbmodelgen/modgen\"\n\t\t]\n\t],\n\t\"_from\": \"pg-promise@>=5.6.0 <6.0.0\",\n\t\"_id\": \"pg-promise@5.6.2\",\n\t\"_inCache\": true,\n\t\"_location\": \"/pg-promise\",\n\t\"_nodeVersion\": \"7.6.0\",\n\t\"_npmOperationalInternal\": {\n\t\t\"host\": \"packages-18-east.internal.npmjs.com\",\n\t\t\"tmp\": \"tmp/pg-promise-5.6.2.tgz_1488139788158_0.16624677297659218\"\n\t},\n\t\"_npmUser\": {\n\t\t\"name\": \"vitaly.tomilov\",\n\t\t\"email\": \"vitaly.tomilov@gmail.com\"\n\t},\n\t\"_npmVersion\": \"4.1.2\",\n\t\"_phantomChildren\": {\n\t\t\"buffer-writer\": \"1.0.1\",\n\t\t\"generic-pool\": \"2.4.2\",\n\t\t\"packet-reader\": \"0.2.0\",\n\t\t\"pg-connection-string\": \"0.1.3\",\n\t\t\"pg-types\": \"1.11.0\",\n\t\t\"split\": \"1.0.0\"\n\t},\n\t\"_requested\": {\n\t\t\"raw\": \"pg-promise@^5.6.0\",\n\t\t\"scope\": null,\n\t\t\"escapedName\": \"pg-promise\",\n\t\t\"name\": \"pg-promise\",\n\t\t\"rawSpec\": \"^5.6.0\",\n\t\t\"spec\": \">=5.6.0 <6.0.0\",\n\t\t\"type\": \"range\"\n\t},\n\t\"_requiredBy\": [\n\t\t\"/\"\n\t],\n\t\"_resolved\": \"https://registry.npmjs.org/pg-promise/-/pg-promise-5.6.2.tgz\",\n\t\"_shasum\": \"bdceb2936af10df5810600481e16955f12f32bb9\",\n\t\"_shrinkwrap\": null,\n\t\"_spec\": \"pg-promise@^5.6.0\",\n\t\"_where\": \"/home/neil/DevGit/zf2dbmodelgen/modgen\",\n\t\"author\": {\n\t\t\"name\": \"Vitaly Tomilov\",\n\t\t\"email\": \"vitaly.tomilov@gmail.com\"\n\t},\n\t\"bugs\": {\n\t\t\"url\": \"https://github.com/vitaly-t/pg-promise/issues\",\n\t\t\"email\": \"vitaly.tomilov@gmail.com\"\n\t},\n\t\"dependencies\": {\n\t\t\"manakin\": \"0.4\",\n\t\t\"pg\": \"5.1\",\n\t\t\"pg-minify\": \"0.4\",\n\t\t\"spex\": \"1.2\"\n\t},\n\t\"description\": \"Promises interface for PostgreSQL\",\n\t\"devDependencies\": {\n\t\t\"@types/node\": \"6.x\",\n\t\t\"JSONStream\": \"1.x\",\n\t\t\"bluebird\": \"3.x\",\n\t\t\"coveralls\": \"2.x\",\n\t\t\"eslint\": \"3.x\",\n\t\t\"istanbul\": \"0.4\",\n\t\t\"jasmine-node\": \"1.x\",\n\t\t\"jsdoc\": \"3.x\",\n\t\t\"pg-query-stream\": \"1.x\",\n\t\t\"typescript\": \"2.x\"\n\t},\n\t\"directories\": {},\n\t\"dist\": {\n\t\t\"shasum\": \"bdceb2936af10df5810600481e16955f12f32bb9\",\n\t\t\"tarball\": \"https://registry.npmjs.org/pg-promise/-/pg-promise-5.6.2.tgz\"\n\t},\n\t\"engines\": {\n\t\t\"node\": \">=4.0\",\n\t\t\"npm\": \">=2.15\"\n\t},\n\t\"files\": [\n\t\t\"lib\",\n\t\t\"typescript\"\n\t],\n\t\"gitHead\": \"4798828dd674321e961e9aabb66964968663d3a1\",\n\t\"homepage\": \"https://github.com/vitaly-t/pg-promise\",\n\t\"keywords\": [\n\t\t\"pg\",\n\t\t\"promise\",\n\t\t\"postgres\"\n\t],\n\t\"license\": \"MIT\",\n\t\"main\": \"lib/index.js\",\n\t\"maintainers\": [\n\t\t{\n\t\t\t\"name\": \"vitaly.tomilov\",\n\t\t\t\"email\": \"vitaly.tomilov@gmail.com\"\n\t\t}\n\t],\n\t\"name\": \"pg-promise\",\n\t\"optionalDependencies\": {},\n\t\"readme\": \"ERROR: No README data found!\",\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"git+https://github.com/vitaly-t/pg-promise.git\"\n\t},\n\t\"scripts\": {\n\t\t\"coverage\": \"istanbul cover ./node_modules/jasmine-node/bin/jasmine-node test\",\n\t\t\"doc\": \"jsdoc -c ./jsdoc/jsDoc.json ./jsdoc/README.md\",\n\t\t\"lint\": \"eslint ./lib\",\n\t\t\"test\": \"jasmine-node test\",\n\t\t\"test-native\": \"jasmine-node test --config PG_NATIVE true\",\n\t\t\"travis\": \"npm run lint && istanbul cover ./node_modules/jasmine-node/bin/jasmine-node test --captureExceptions && cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js && rm -rf ./coverage\"\n\t},\n\t\"typings\": \"typescript/pg-promise.d.ts\",\n\t\"version\": \"5.6.2\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/package.json\n// module id = 73\n// module chunks = 0","var array = require('postgres-array');\n\nmodule.exports = {\n  create: function (source, transform) {\n    return {\n      parse: function() {\n        return array.parse(source, transform);\n      }\n    };\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-types/lib/arrayParser.js\n// module id = 74\n// module chunks = 0","'use strict'\n\nexports.parse = function (source, transform) {\n  return new ArrayParser(source, transform).parse()\n}\n\nfunction ArrayParser (source, transform) {\n  this.source = source\n  this.transform = transform || identity\n  this.position = 0\n  this.entries = []\n  this.recorded = []\n  this.dimension = 0\n}\n\nArrayParser.prototype.isEof = function () {\n  return this.position >= this.source.length\n}\n\nArrayParser.prototype.nextCharacter = function () {\n  var character = this.source[this.position++]\n  if (character === '\\\\') {\n    return {\n      value: this.source[this.position++],\n      escaped: true\n    }\n  }\n  return {\n    value: character,\n    escaped: false\n  }\n}\n\nArrayParser.prototype.record = function (character) {\n  this.recorded.push(character)\n}\n\nArrayParser.prototype.newEntry = function (includeEmpty) {\n  var entry\n  if (this.recorded.length > 0 || includeEmpty) {\n    entry = this.recorded.join('')\n    if (entry === 'NULL' && !includeEmpty) {\n      entry = null\n    }\n    if (entry !== null) entry = this.transform(entry)\n    this.entries.push(entry)\n    this.recorded = []\n  }\n}\n\nArrayParser.prototype.parse = function (nested) {\n  var character, parser, quote\n  while (!this.isEof()) {\n    character = this.nextCharacter()\n    if (character.value === '{' && !quote) {\n      this.dimension++\n      if (this.dimension > 1) {\n        parser = new ArrayParser(this.source.substr(this.position - 1), this.transform)\n        this.entries.push(parser.parse(true))\n        this.position += parser.position - 2\n      }\n    } else if (character.value === '}' && !quote) {\n      this.dimension--\n      if (!this.dimension) {\n        this.newEntry()\n        if (nested) return this.entries\n      }\n    } else if (character.value === '\"' && !character.escaped) {\n      if (quote) this.newEntry(true)\n      quote = !quote\n    } else if (character.value === ',' && !quote) {\n      this.newEntry()\n    } else {\n      this.record(character.value)\n    }\n  }\n  if (this.dimension !== 0) {\n    throw new Error('array dimension not balanced')\n  }\n  return this.entries\n}\n\nfunction identity (value) {\n  return value\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/postgres-array/index.js\n// module id = 75\n// module chunks = 0","'use strict';\r\n\r\nvar $npm = {\r\n    u: require('util'),\r\n    os: require('os'),\r\n    utils: require('../utils/static')\r\n};\r\n\r\n/**\r\n * @interface errors.BatchError\r\n * @augments external:Error\r\n * @description\r\n * This type represents all errors rejected by method {@link batch}, except for {@link external:TypeError TypeError}\r\n * when the method receives invalid input parameters.\r\n *\r\n * @property {string} name\r\n * Standard {@link external:Error Error} property - error type name = `BatchError`.\r\n *\r\n * @property {string} message\r\n * Standard {@link external:Error Error} property - the error message.\r\n *\r\n * It represents the message of the first error encountered in the batch, and is a safe\r\n * version of using `first.message`.\r\n *\r\n * @property {string} stack\r\n * Standard {@link external:Error Error} property - the stack trace.\r\n *\r\n * @property {array} data\r\n * Array of objects `{success, result, [origin]}`:\r\n * - `success` = true/false, indicates whether the corresponding value in the input array was resolved.\r\n * - `result` = resolved data, if `success`=`true`, or else the rejection reason.\r\n * - `origin` - set only when failed as a result of an unsuccessful call into the notification callback\r\n *    (parameter `cb` of method {@link batch})\r\n *\r\n * The array has the same size as the input one that was passed into method {@link batch}, providing direct mapping.\r\n *\r\n * @property {} stat\r\n * Resolution Statistics.\r\n *\r\n * @property {number} stat.total\r\n * Total number of elements in the batch.\r\n *\r\n * @property {number} stat.succeeded\r\n * Number of resolved values in the batch.\r\n *\r\n * @property {number} stat.failed\r\n * Number of rejected values in the batch.\r\n *\r\n * @property {number} stat.duration\r\n * Time in milliseconds it took to settle all values.\r\n *\r\n * @property {} first\r\n * The very first error within the batch, with support for nested batch results, it is also the same error\r\n * as $[promise.all] would provide.\r\n *\r\n * @see {@link batch}\r\n *\r\n */\r\nfunction BatchError(result, errors, duration) {\r\n\r\n    this.data = result;\r\n\r\n    /**\r\n     * @method errors.BatchError.getErrors\r\n     * @description\r\n     * Returns the complete list of errors only.\r\n     *\r\n     * It supports nested batch results, presented as a sub-array.\r\n     *\r\n     * @returns {array}\r\n     */\r\n    this.getErrors = function () {\r\n        var err = new Array(errors.length);\r\n        for (var i = 0; i < errors.length; i++) {\r\n            err[i] = result[errors[i]].result;\r\n            if (err[i] instanceof BatchError) {\r\n                err[i] = err[i].getErrors();\r\n            }\r\n        }\r\n        $npm.utils.extend(err, '$isErrorList', true);\r\n        return err;\r\n    };\r\n\r\n    var e = this.getErrors(),\r\n        first = e[0];\r\n\r\n    while (first && first.$isErrorList) {\r\n        first = first[0];\r\n    }\r\n\r\n    // we do not show it within the inspect, because when the error\r\n    // happens for a nested result, the output becomes a mess.\r\n    this.first = first;\r\n\r\n    if (first instanceof Error) {\r\n        this.message = first.message;\r\n    } else {\r\n        if (typeof first !== 'string') {\r\n            first = $npm.u.inspect(first);\r\n        }\r\n        this.message = first;\r\n    }\r\n\r\n    this.stat = {\r\n        total: result.length,\r\n        succeeded: result.length - e.length,\r\n        failed: e.length,\r\n        duration: duration\r\n    };\r\n\r\n    Error.captureStackTrace(this, BatchError);\r\n\r\n}\r\n\r\n$npm.u.inherits(BatchError, Error);\r\nBatchError.prototype.name = 'BatchError';\r\n\r\n/**\r\n * @method errors.BatchError.toString\r\n * @description\r\n * Creates a well-formatted multi-line string that represents the error.\r\n *\r\n * It is called automatically when writing the object into the console.\r\n *\r\n * The output is an abbreviated version of the error, because the complete error\r\n * is often too much for displaying or even logging, as a batch can be of any size.\r\n * Therefore, only errors are rendered from the `data` property, alongside their indexes,\r\n * and only up to the first 5, to avoid polluting the screen or the log file.\r\n *\r\n * @param {number} [level=0]\r\n * Nested output level, to provide visual offset.\r\n *\r\n * @returns {string}\r\n */\r\nBatchError.prototype.toString = function (level) {\r\n    level = level > 0 ? parseInt(level) : 0;\r\n    var gap0 = $npm.utils.messageGap(level),\r\n        gap1 = $npm.utils.messageGap(level + 1),\r\n        gap2 = $npm.utils.messageGap(level + 2),\r\n        lines = [\r\n            'BatchError {',\r\n            gap1 + 'stat: { total: ' + this.stat.total + ', succeeded: ' + this.stat.succeeded +\r\n            ', failed: ' + this.stat.failed + ', duration: ' + this.stat.duration + ' }',\r\n            gap1 + 'errors: ['\r\n        ];\r\n\r\n    // In order to avoid polluting the error log or the console, \r\n    // we limit the log output to the top 5 errors:\r\n    var counter = 0, maxErrors = 5;\r\n    this.data.forEach(function (d, index) {\r\n        if (!d.success && counter < maxErrors) {\r\n            lines.push(gap2 + index + ': ' + $npm.utils.formatError(d.result, level + 2));\r\n            counter++;\r\n        }\r\n    });\r\n    lines.push(gap1 + ']');\r\n    lines.push(gap0 + '}');\r\n    return lines.join($npm.os.EOL);\r\n};\r\n\r\nBatchError.prototype.inspect = function () {\r\n    return this.toString();\r\n};\r\n\r\nmodule.exports = BatchError;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/spex/lib/errors/batch.js\n// module id = 76\n// module chunks = 0","'use strict';\r\n\r\nvar $npm = {\r\n    u: require('util'),\r\n    os: require('os'),\r\n    utils: require('../utils/static')\r\n};\r\n\r\nvar errorReasons = {\r\n    0: \"Page with index %d rejected.\",\r\n    1: \"Source %s returned a rejection at index %d.\",\r\n    2: \"Source %s threw an error at index %d.\",\r\n    3: \"Destination %s returned a rejection at index %d.\",\r\n    4: \"Destination %s threw an error at index %d.\",\r\n    5: \"Source %s returned a non-array value at index %d.\"\r\n};\r\n\r\n/**\r\n * @interface errors.PageError\r\n * @augments external:Error\r\n * @description\r\n * This type represents all errors rejected by method {@link page}, except for {@link external:TypeError TypeError}\r\n * when the method receives invalid input parameters.\r\n *\r\n * @property {string} name\r\n * Standard {@link external:Error Error} property - error type name = `PageError`.\r\n *\r\n * @property {string} message\r\n * Standard {@link external:Error Error} property - the error message.\r\n *\r\n * @property {string} stack\r\n * Standard {@link external:Error Error} property - the stack trace.\r\n *\r\n * @property {} error\r\n * The error that was thrown, or the rejection reason.\r\n *\r\n * @property {number} index\r\n * Index of the element in the sequence for which the error/rejection occurred.\r\n *\r\n * @property {number} duration\r\n * Duration (in milliseconds) of processing until the error/rejection occurred.\r\n *\r\n * @property {string} reason\r\n * Textual explanation of why the method failed.\r\n *\r\n * @property {} source\r\n * Resolved `data` parameter that was passed into the `source` function.\r\n *\r\n * It is only set when the error/rejection occurred inside the `source` function.\r\n *\r\n * @property {} dest\r\n * Resolved `data` parameter that was passed into the `dest` function.\r\n *\r\n * It is only set when the error/rejection occurred inside the `dest` function.\r\n *\r\n * @see\r\n * {@link page},\r\n * {@link batch}\r\n *\r\n */\r\nfunction PageError(e, code, cbName, duration) {\r\n\r\n    this.index = e.index;\r\n    this.duration = duration;\r\n    this.error = e.error;\r\n\r\n    if ('source' in e) {\r\n        this.source = e.source;\r\n    }\r\n\r\n    if ('dest' in e) {\r\n        this.dest = e.dest;\r\n    }\r\n\r\n    if (this.error instanceof Error) {\r\n        this.message = this.error.message;\r\n    } else {\r\n        this.message = this.error;\r\n        if (typeof this.message !== 'string') {\r\n            this.message = $npm.u.inspect(this.message);\r\n        }\r\n    }\r\n\r\n    if (code) {\r\n        cbName = cbName ? (\"'\" + cbName + \"'\") : '<anonymous>';\r\n        this.reason = $npm.u.format(errorReasons[code], cbName, e.index);\r\n    } else {\r\n        this.reason = $npm.u.format(errorReasons[code], e.index);\r\n    }\r\n\r\n    Error.captureStackTrace(this, PageError);\r\n\r\n}\r\n\r\n$npm.u.inherits(PageError, Error);\r\nPageError.prototype.name = 'PageError';\r\n\r\n/**\r\n * @method errors.PageError.toString\r\n * @description\r\n * Creates a well-formatted multi-line string that represents the error.\r\n *\r\n * It is called automatically when writing the object into the console.\r\n *\r\n * @param {number} [level=0]\r\n * Nested output level, to provide visual offset.\r\n *\r\n * @returns {string}\r\n */\r\nPageError.prototype.toString = function (level) {\r\n\r\n    level = level > 0 ? parseInt(level) : 0;\r\n\r\n    var gap0 = $npm.utils.messageGap(level),\r\n        gap1 = $npm.utils.messageGap(level + 1),\r\n        lines = [\r\n            'PageError {',\r\n            gap1 + 'message: ' + JSON.stringify(this.message),\r\n            gap1 + 'reason: ' + this.reason,\r\n            gap1 + 'index: ' + this.index,\r\n            gap1 + 'duration: ' + this.duration\r\n        ];\r\n\r\n    lines.push(gap1 + 'error: ' + $npm.utils.formatError(this.error, level + 1));\r\n    lines.push(gap0 + '}');\r\n    return lines.join($npm.os.EOL);\r\n};\r\n\r\nPageError.prototype.inspect = function () {\r\n    return this.toString();\r\n};\r\n\r\nmodule.exports = PageError;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/spex/lib/errors/page.js\n// module id = 77\n// module chunks = 0","'use strict';\r\n\r\nvar $npm = {\r\n    u: require('util'),\r\n    os: require('os'),\r\n    utils: require('../utils/static')\r\n};\r\n\r\nvar errorReasons = {\r\n    0: \"Source %s returned a rejection at index %d.\",\r\n    1: \"Source %s threw an error at index %d.\",\r\n    2: \"Destination %s returned a rejection at index %d.\",\r\n    3: \"Destination %s threw an error at index %d.\"\r\n};\r\n\r\n/**\r\n * @interface errors.SequenceError\r\n * @augments external:Error\r\n * @description\r\n * This type represents all errors rejected by method {@link sequence}, except for {@link external:TypeError TypeError}\r\n * when the method receives invalid input parameters.\r\n *\r\n * @property {string} name\r\n * Standard {@link external:Error Error} property - error type name = `SequenceError`.\r\n *\r\n * @property {string} message\r\n * Standard {@link external:Error Error} property - the error message.\r\n *\r\n * @property {string} stack\r\n * Standard {@link external:Error Error} property - the stack trace.\r\n *\r\n * @property {} error\r\n * The error that was thrown or the rejection reason.\r\n *\r\n * @property {number} index\r\n * Index of the element in the sequence for which the error/rejection occurred.\r\n *\r\n * @property {number} duration\r\n * Duration (in milliseconds) of processing until the error/rejection occurred.\r\n *\r\n * @property {string} reason\r\n * Textual explanation of why the method failed.\r\n *\r\n * @property {} source\r\n * Resolved `data` parameter that was passed into the `source` function.\r\n *\r\n * It is only set when the error/rejection occurred inside the `source` function.\r\n *\r\n * @property {} dest\r\n * Resolved `data` parameter that was passed into the `dest` function.\r\n *\r\n * It is only set when the error/rejection occurred inside the `dest` function.\r\n *\r\n * @see {@link sequence}\r\n *\r\n */\r\nfunction SequenceError(e, code, cbName, duration) {\r\n\r\n    this.index = e.index;\r\n    this.duration = duration;\r\n    this.error = e.error;\r\n\r\n    if (this.error instanceof Error) {\r\n        this.message = this.error.message;\r\n    } else {\r\n        this.message = this.error;\r\n        if (typeof this.message !== 'string') {\r\n            this.message = $npm.u.inspect(this.message);\r\n        }\r\n    }\r\n\r\n    if ('source' in e) {\r\n        this.source = e.source;\r\n    } else {\r\n        this.dest = e.dest;\r\n    }\r\n\r\n    cbName = cbName ? (\"'\" + cbName + \"'\") : '<anonymous>';\r\n    this.reason = $npm.u.format(errorReasons[code], cbName, e.index);\r\n\r\n    Error.captureStackTrace(this, SequenceError);\r\n}\r\n\r\n$npm.u.inherits(SequenceError, Error);\r\nSequenceError.prototype.name = 'SequenceError';\r\n\r\n/**\r\n * @method errors.SequenceError.toString\r\n * @description\r\n * Creates a well-formatted multi-line string that represents the error.\r\n *\r\n * It is called automatically when writing the object into the console.\r\n *\r\n * @param {number} [level=0]\r\n * Nested output level, to provide visual offset.\r\n *\r\n * @returns {string}\r\n */\r\nSequenceError.prototype.toString = function (level) {\r\n\r\n    level = level > 0 ? parseInt(level) : 0;\r\n\r\n    var gap0 = $npm.utils.messageGap(level),\r\n        gap1 = $npm.utils.messageGap(level + 1),\r\n        lines = [\r\n            'SequenceError {',\r\n            gap1 + 'message: ' + JSON.stringify(this.message),\r\n            gap1 + 'reason: ' + this.reason,\r\n            gap1 + 'index: ' + this.index,\r\n            gap1 + 'duration: ' + this.duration\r\n        ];\r\n\r\n    lines.push(gap1 + 'error: ' + $npm.utils.formatError(this.error, level + 1));\r\n    lines.push(gap0 + '}');\r\n    return lines.join($npm.os.EOL);\r\n};\r\n\r\nSequenceError.prototype.inspect = function () {\r\n    return this.toString();\r\n};\r\n\r\nmodule.exports = SequenceError;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/spex/lib/errors/sequence.js\n// module id = 78\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar Buffer = require('buffer').Buffer;\n\nvar isBufferEncoding = Buffer.isEncoding\n  || function(encoding) {\n       switch (encoding && encoding.toLowerCase()) {\n         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n         default: return false;\n       }\n     }\n\n\nfunction assertEncoding(encoding) {\n  if (encoding && !isBufferEncoding(encoding)) {\n    throw new Error('Unknown encoding: ' + encoding);\n  }\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters. CESU-8 is handled as part of the UTF-8 encoding.\n//\n// @TODO Handling all encodings inside a single object makes it very difficult\n// to reason about this code, so it should be split up in the future.\n// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n// points as used by CESU-8.\nvar StringDecoder = exports.StringDecoder = function(encoding) {\n  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n  assertEncoding(encoding);\n  switch (this.encoding) {\n    case 'utf8':\n      // CESU-8 represents each of Surrogate Pair by 3-bytes\n      this.surrogateSize = 3;\n      break;\n    case 'ucs2':\n    case 'utf16le':\n      // UTF-16 represents each of Surrogate Pair by 2-bytes\n      this.surrogateSize = 2;\n      this.detectIncompleteChar = utf16DetectIncompleteChar;\n      break;\n    case 'base64':\n      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n      this.surrogateSize = 3;\n      this.detectIncompleteChar = base64DetectIncompleteChar;\n      break;\n    default:\n      this.write = passThroughWrite;\n      return;\n  }\n\n  // Enough space to store all bytes of a single character. UTF-8 needs 4\n  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n  this.charBuffer = new Buffer(6);\n  // Number of bytes received for the current incomplete multi-byte character.\n  this.charReceived = 0;\n  // Number of bytes expected for the current incomplete multi-byte character.\n  this.charLength = 0;\n};\n\n\n// write decodes the given buffer and returns it as JS string that is\n// guaranteed to not contain any partial multi-byte characters. Any partial\n// character found at the end of the buffer is buffered up, and will be\n// returned when calling write again with the remaining bytes.\n//\n// Note: Converting a Buffer containing an orphan surrogate to a String\n// currently works, but converting a String to a Buffer (via `new Buffer`, or\n// Buffer#write) will replace incomplete surrogates with the unicode\n// replacement character. See https://codereview.chromium.org/121173009/ .\nStringDecoder.prototype.write = function(buffer) {\n  var charStr = '';\n  // if our last write ended with an incomplete multibyte character\n  while (this.charLength) {\n    // determine how many remaining bytes this buffer has to offer for this char\n    var available = (buffer.length >= this.charLength - this.charReceived) ?\n        this.charLength - this.charReceived :\n        buffer.length;\n\n    // add the new bytes to the char buffer\n    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n    this.charReceived += available;\n\n    if (this.charReceived < this.charLength) {\n      // still not enough chars in this buffer? wait for more ...\n      return '';\n    }\n\n    // remove bytes belonging to the current character from the buffer\n    buffer = buffer.slice(available, buffer.length);\n\n    // get the character that was split\n    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\n    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n    var charCode = charStr.charCodeAt(charStr.length - 1);\n    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n      this.charLength += this.surrogateSize;\n      charStr = '';\n      continue;\n    }\n    this.charReceived = this.charLength = 0;\n\n    // if there are no more bytes in this buffer, just emit our char\n    if (buffer.length === 0) {\n      return charStr;\n    }\n    break;\n  }\n\n  // determine and set charLength / charReceived\n  this.detectIncompleteChar(buffer);\n\n  var end = buffer.length;\n  if (this.charLength) {\n    // buffer the incomplete character bytes we got\n    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n    end -= this.charReceived;\n  }\n\n  charStr += buffer.toString(this.encoding, 0, end);\n\n  var end = charStr.length - 1;\n  var charCode = charStr.charCodeAt(end);\n  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n    var size = this.surrogateSize;\n    this.charLength += size;\n    this.charReceived += size;\n    this.charBuffer.copy(this.charBuffer, size, 0, size);\n    buffer.copy(this.charBuffer, 0, 0, size);\n    return charStr.substring(0, end);\n  }\n\n  // or just emit the charStr\n  return charStr;\n};\n\n// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n// the end of the given buffer. If so, it sets this.charLength to the byte\n// length that character, and sets this.charReceived to the number of bytes\n// that are available for this character.\nStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n  // determine how many bytes we have to check at the end of this buffer\n  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\n  // Figure out if one of the last i bytes of our buffer announces an\n  // incomplete char.\n  for (; i > 0; i--) {\n    var c = buffer[buffer.length - i];\n\n    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\n    // 110XXXXX\n    if (i == 1 && c >> 5 == 0x06) {\n      this.charLength = 2;\n      break;\n    }\n\n    // 1110XXXX\n    if (i <= 2 && c >> 4 == 0x0E) {\n      this.charLength = 3;\n      break;\n    }\n\n    // 11110XXX\n    if (i <= 3 && c >> 3 == 0x1E) {\n      this.charLength = 4;\n      break;\n    }\n  }\n  this.charReceived = i;\n};\n\nStringDecoder.prototype.end = function(buffer) {\n  var res = '';\n  if (buffer && buffer.length)\n    res = this.write(buffer);\n\n  if (this.charReceived) {\n    var cr = this.charReceived;\n    var buf = this.charBuffer;\n    var enc = this.encoding;\n    res += buf.slice(0, cr).toString(enc);\n  }\n\n  return res;\n};\n\nfunction passThroughWrite(buffer) {\n  return buffer.toString(this.encoding);\n}\n\nfunction utf16DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 2;\n  this.charLength = this.charReceived ? 2 : 0;\n}\n\nfunction base64DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 3;\n  this.charLength = this.charReceived ? 3 : 0;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/string_decoder/index.js\n// module id = 79\n// module chunks = 0","module.exports = require(\"net\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"net\"\n// module id = 80\n// module chunks = 0","module.exports = require(\"tls\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"tls\"\n// module id = 81\n// module chunks = 0","/**\n * -----------------------------------------------------------------------------\n * Class        : configService.ts\n * Description  : Generic configuration class.\n * Parameters   :\n * Usage        :\n * Notes        :\n * Created      : @author Neil Smith <Neil.Smith@WebTarget.co.uk>\n * Created Date : 19 Feb 2017\n * -----------------------------------------------------------------------------\n * Date?        Whom?       Notes\n * _____________________________________________________________________________\n */\n\nimport { dbConn } from './db/dbConn';\n\nexport class configService {\n\n    private cf = require(\"../dbconfig.json\");\n    private _ns: string;\n    private _table: string;\n    private _alias: string;\n    private _datecreated: string;\n    private _author: string;\n    private _fileroot: string;\n    private _outputfolder: string;\n    private _connection: string;\n    private _rows: string[];\n\n    constructor(_clArgs: any) {\n        try {\n            this._ns = _clArgs[\"namespace\"] == null ? 'Application' : _clArgs[\"namespace\"];\n            this._table = _clArgs[\"tablename\"] == null ? 't_user' : _clArgs[\"tablename\"];\n            this._alias = _clArgs[\"tablealias\"] == null ? this._table : _clArgs[\"tablealias\"];\n            this._datecreated = _clArgs[\"datecreated\"];\n            this._author = _clArgs[\"author\"] == null ? this.getParam(\"author\") : _clArgs[\"author\"];\n            this._fileroot = this.getParam(\"fileroot\");\n            this._outputfolder = this.getParam(\"outputfolder\");\n            this._connection = _clArgs[\"connection\"] == undefined ? this.cf.default : _clArgs[\"connection\"];\n        } catch (err) {\n            console.log(\"Error creating configService :: \" + err);\n        }\n    }\n\n    public setRows(_rows: string[]): void { this._rows = _rows; }\n    public getDateCreated(): string { return this._datecreated; }\n    public getNamespace(): string { return this._ns; }\n    public getTable(): string { return this._table; }\n    public getAlias(): string { return this._alias; }\n    public getAuthor(): string { return this._author; }\n    public getFileroot(): string { return this._fileroot; }\n    public getOutputfolder(): string { return this._outputfolder; }\n    public getParam(_key: string): string { return this.cf[_key]; }\n    public getDBParams(_key?: string): dbConn {\n        if (_key === undefined) { _key = this._connection; }\n        return this.cf[_key];\n    }\n\n    // Generating functions start here ---------------------------------------------\n\n    /**\n     * -----------------------------------------------------------------------------\n     * Method       : @method generateFilename\n     * Description  : @description Replace the blank 'X' with the table name\n     * Notes        : \n     * Created      : @author Neil Smith <Neil.Smith@WebTarget.co.uk>\n     * Created Date : 28 Feb 2017\n     * -----------------------------------------------------------------------------\n     * Date?        Whom?           Notes\n     * _____________________________________________________________________________\n     */\n    public generateFilename(_filename: string): string {\n        try {\n            return _filename.replace(\"X\", this.getAlias());\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    /**\n     * -----------------------------------------------------------------------------\n     * Method       : @method createPublics\n     * Description  : @description Creates a list of public variables representing \n     *                  the columns of the table\n     * Notes        : \n     * Created      : @author Neil Smith <Neil.Smith@WebTarget.co.uk>\n     * Created Date : 28 Feb 2017\n     * -----------------------------------------------------------------------------\n     * Date?        Whom?           Notes\n     * _____________________________________________________________________________\n     */\n    public createPublics(_fields: string[]): string {\n        let _varList: string = \"\";\n        for (var field of _fields) {\n            _varList += '\\t' + \"public $\" + field + ';\\n';\n        }\n        return _varList;\n    }\n\n    /**\n      * -----------------------------------------------------------------------------\n      * Method       : @method createExchangeArray\n      * Description  : @description Creates an exchange array from columns \n      * Notes        : \n      * Created      : @author Neil Smith <Neil.Smith@WebTarget.co.uk>\n      * Created Date : 28 Feb 2017\n      * -----------------------------------------------------------------------------\n      * Date?        Whom?           Notes\n      * _____________________________________________________________________________\n      */\n    public createExchangeArray(_fields: string[]): string {\n        let _varList: string = \"\";\n        for (var field of _fields) {\n            _varList += `\\t\\t $this->${field} = $data[defs::${field.toUpperCase()}]; \\n`;\n        }\n        return _varList;\n    }\n\n    /**\n     * -----------------------------------------------------------------------------\n     * Method       : @method createConsts\n     * Description  : @description Creates constants for definitions from columns\n     * Notes        : \n     * Created      : @author Neil Smith <Neil.Smith@WebTarget.co.uk>\n     * Created Date : 28 Feb 2017\n     * -----------------------------------------------------------------------------\n     * Date?        Whom?           Notes\n     * _____________________________________________________________________________\n     */\n    public createConsts(_fields: string[]) {\n        let _varList: string = `\\n\\t const TABLENAME = '${this.getTable()}'\\n`;\n        for (var field of _fields) {\n            _varList += `\\t const ${field.toUpperCase()} = '${field}'; \\n`;\n        }\n        return _varList;\n    }\n\n    // Generating functions end  here -----------------------------------------------\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/configService.ts","import { configService } from './configService';\nimport { db } from './db';\nimport { Replace } from './replace';\n\n/**\n * -----------------------------------------------------------------------------\n * Name         : Cycle\n * Description  : The Cycle module is the engine\n * Notes        : .\n * Created      : @author Neil Smith <Neil.Smith@WebTarget.co.uk>\n * Created Date : 28 Feb 2017\n * -----------------------------------------------------------------------------\n * Date?        Whom?           Notes\n * _____________________________________________________________________________\n */\nexport class Cycle {\n\n    private _db: db;\n    private _columns: string[];\n    private _replace: Replace;\n\n    /**\n     * -----------------------------------------------------------------------------\n     * Method       : @constructor\n     * Description  : @description Sets up kicks off the replace services\n     * Notes        : \n     * Created      : @author Neil Smith <Neil.Smith@WebTarget.co.uk>\n     * Created Date : 28 Feb 2017\n     * -----------------------------------------------------------------------------\n     * Date?        Whom?           Notes\n     * _____________________________________________________________________________\n     */\n    public constructor(private _confService: configService) {\n        try {\n            this._db = new db(_confService);\n            this.setupOutput();\n            this.run();\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    /**\n     * -----------------------------------------------------------------------------\n     * Method       : @method process\n     * Description  : @description Called from the run() callback after retrieving\n     *                  database columns, this wrapper function executes all of the\n     *                  replacement funcions in this class\n     * Notes        : \n     * Created      : @author Neil Smith <Neil.Smith@WebTarget.co.uk>\n     * Created Date : 28 Feb 2017\n     * -----------------------------------------------------------------------------\n     * Date?        Whom?           Notes\n     * _____________________________________________________________________________\n     */\n    public process(_columns: string[]): void {\n\n        console.log(`doTable status :  ${this.doTable()}`);\n        console.log(`doEntity status :  ${this.doEntity(_columns)}`);\n        console.log(`doDefs status :  ${this.doDefs(_columns)}`);\n        console.log(`doFactory status :  ${this.doFactory()}`);\n    }\n\n    /**\n     * -----------------------------------------------------------------------------\n     * Method       : @method run\n     * Description  : @description A Promise that gets DB columns for our table.\n     * Notes        : \n     * Created      : @author Neil Smith <Neil.Smith@WebTarget.co.uk>\n     * Created Date : 28 Feb 2017\n     * -----------------------------------------------------------------------------\n     * Date?        Whom?           Notes\n     * _____________________________________________________________________________\n     */\n    public run(): void {\n        let g = new Promise((resolve, reject) => {\n            resolve(this._db.getColumns());\n        }).then((res: string[]) => {\n            this.process(res);\n        });\n\n    }\n\n\n    /**\n     * -----------------------------------------------------------------------------\n     * Method       : @method setupOutput\n     * Description  : @description Create the output folders ready to receive definitions\n     * Notes        : Uses template strings and paths from the configService     \n     * Created      : @author Neil Smith <Neil.Smith@WebTarget.co.uk>\n     * Created Date : 28 Feb 2017\n     * -----------------------------------------------------------------------------\n     * Date?        Whom?           Notes\n     * _____________________________________________________________________________\n     */\n    private setupOutput() {\n        try {\n            let _mkdirp = require('mkdirp');\n            let _folder = `${this._confService.getOutputfolder()}${this._confService.getAlias()}/Definitions`;\n            _mkdirp.sync(_folder);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    /**\n     * -----------------------------------------------------------------------------\n     * Method       : @method doTable\n     * Description  : @description Calls replace function for 'XTable.php'\n     * Notes        :      \n     * Created      : @author Neil Smith <Neil.Smith@WebTarget.co.uk>\n     * Created Date : 28 Feb 2017\n     * -----------------------------------------------------------------------------\n     * Date?        Whom?           Notes\n     * _____________________________________________________________________________\n     */\n    private doTable(): boolean {\n        let _oFile = `${this._confService.getOutputfolder()}${this._confService.getAlias()}/${this._confService.generateFilename('XTable.php')}`;\n        return new Replace(this._confService.getFileroot() + 'XTable.php', _oFile,\n            {\n                table: this._confService.getAlias(),\n                namespace: this._confService.getNamespace(),\n                created: this._confService.getDateCreated(),\n                author: this._confService.getAuthor()\n            }\n        ).createFile();\n\n    }\n\n    /**\n     * -----------------------------------------------------------------------------\n     * Method       : @method doEntity\n     * Description  : @description Calls replace function for 'X.php'\n     * Notes        :      \n     * Created      : @author Neil Smith <Neil.Smith@WebTarget.co.uk>\n     * Created Date : 28 Feb 2017\n     * -----------------------------------------------------------------------------\n     * Date?        Whom?           Notes\n     * _____________________________________________________________________________\n     */\n    private doEntity(_columns: string[]): boolean {\n        let _oFile = `${this._confService.getOutputfolder()}${this._confService.getAlias()}/${this._confService.generateFilename('X.php')}`;\n        return new Replace(this._confService.getFileroot() + 'X.php', _oFile,\n            {\n                table: this._confService.getAlias(),\n                namespace: this._confService.getNamespace(),\n                created: this._confService.getDateCreated(),\n                author: this._confService.getAuthor(),\n                publics: this._confService.createPublics(_columns),\n                exchangearray: this._confService.createExchangeArray(_columns)\n            }\n        ).createFile();\n    }\n\n    /**\n     * -----------------------------------------------------------------------------\n     * Method       : @method doDefs\n     * Description  : @description Calls replace function for 'defX.php'\n     * Notes        :      \n     * Created      : @author Neil Smith <Neil.Smith@WebTarget.co.uk>\n     * Created Date : 28 Feb 2017\n     * -----------------------------------------------------------------------------\n     * Date?        Whom?           Notes\n     * _____________________________________________________________________________\n     */\n\n    private doDefs(_columns: string[]): boolean {\n        let _oFile = `${this._confService.getOutputfolder()}${this._confService.getAlias()}/Definitions/${this._confService.generateFilename('defX.php')}`;\n        return new Replace(this._confService.getFileroot() + 'defX.php',\n            _oFile,\n            {\n                table: this._confService.getAlias(),\n                namespace: this._confService.getNamespace(),\n                created: this._confService.getDateCreated(),\n                author: this._confService.getAuthor(),\n                consts: this._confService.createConsts(_columns)\n            }\n        ).createFile();\n    }\n\n    /**\n     * -----------------------------------------------------------------------------\n     * Method       : @method doFactory\n     * Description  : @description Calls replace function for 'factory.php'\n     * Notes        :      \n     * Created      : @author Neil Smith <Neil.Smith@WebTarget.co.uk>\n     * Created Date : 28 Feb 2017\n     * -----------------------------------------------------------------------------\n     * Date?        Whom?           Notes\n     * _____________________________________________________________________________\n     */\n\n    private doFactory(): boolean {\n        let _oFile = `${this._confService.getOutputfolder()}${this._confService.getAlias()}/${this._confService.generateFilename('factoryX.php')}`;\n        return new Replace(this._confService.getFileroot() + 'factory.php',\n            _oFile,\n            {\n                table: this._confService.getAlias(),\n                namespace: this._confService.getNamespace(),\n                tablename: this._confService.getTable()\n            }\n        ).createFile();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/cycle.ts","/**\n * Module dependencies.\n */\n\nvar EventEmitter = require('events').EventEmitter;\nvar spawn = require('child_process').spawn;\nvar readlink = require('graceful-readlink').readlinkSync;\nvar path = require('path');\nvar dirname = path.dirname;\nvar basename = path.basename;\nvar fs = require('fs');\n\n/**\n * Expose the root command.\n */\n\nexports = module.exports = new Command();\n\n/**\n * Expose `Command`.\n */\n\nexports.Command = Command;\n\n/**\n * Expose `Option`.\n */\n\nexports.Option = Option;\n\n/**\n * Initialize a new `Option` with the given `flags` and `description`.\n *\n * @param {String} flags\n * @param {String} description\n * @api public\n */\n\nfunction Option(flags, description) {\n  this.flags = flags;\n  this.required = ~flags.indexOf('<');\n  this.optional = ~flags.indexOf('[');\n  this.bool = !~flags.indexOf('-no-');\n  flags = flags.split(/[ ,|]+/);\n  if (flags.length > 1 && !/^[[<]/.test(flags[1])) this.short = flags.shift();\n  this.long = flags.shift();\n  this.description = description || '';\n}\n\n/**\n * Return option name.\n *\n * @return {String}\n * @api private\n */\n\nOption.prototype.name = function() {\n  return this.long\n    .replace('--', '')\n    .replace('no-', '');\n};\n\n/**\n * Check if `arg` matches the short or long flag.\n *\n * @param {String} arg\n * @return {Boolean}\n * @api private\n */\n\nOption.prototype.is = function(arg) {\n  return arg == this.short || arg == this.long;\n};\n\n/**\n * Initialize a new `Command`.\n *\n * @param {String} name\n * @api public\n */\n\nfunction Command(name) {\n  this.commands = [];\n  this.options = [];\n  this._execs = {};\n  this._allowUnknownOption = false;\n  this._args = [];\n  this._name = name || '';\n}\n\n/**\n * Inherit from `EventEmitter.prototype`.\n */\n\nCommand.prototype.__proto__ = EventEmitter.prototype;\n\n/**\n * Add command `name`.\n *\n * The `.action()` callback is invoked when the\n * command `name` is specified via __ARGV__,\n * and the remaining arguments are applied to the\n * function for access.\n *\n * When the `name` is \"*\" an un-matched command\n * will be passed as the first arg, followed by\n * the rest of __ARGV__ remaining.\n *\n * Examples:\n *\n *      program\n *        .version('0.0.1')\n *        .option('-C, --chdir <path>', 'change the working directory')\n *        .option('-c, --config <path>', 'set config path. defaults to ./deploy.conf')\n *        .option('-T, --no-tests', 'ignore test hook')\n *\n *      program\n *        .command('setup')\n *        .description('run remote setup commands')\n *        .action(function() {\n *          console.log('setup');\n *        });\n *\n *      program\n *        .command('exec <cmd>')\n *        .description('run the given remote command')\n *        .action(function(cmd) {\n *          console.log('exec \"%s\"', cmd);\n *        });\n *\n *      program\n *        .command('teardown <dir> [otherDirs...]')\n *        .description('run teardown commands')\n *        .action(function(dir, otherDirs) {\n *          console.log('dir \"%s\"', dir);\n *          if (otherDirs) {\n *            otherDirs.forEach(function (oDir) {\n *              console.log('dir \"%s\"', oDir);\n *            });\n *          }\n *        });\n *\n *      program\n *        .command('*')\n *        .description('deploy the given env')\n *        .action(function(env) {\n *          console.log('deploying \"%s\"', env);\n *        });\n *\n *      program.parse(process.argv);\n  *\n * @param {String} name\n * @param {String} [desc] for git-style sub-commands\n * @return {Command} the new command\n * @api public\n */\n\nCommand.prototype.command = function(name, desc, opts) {\n  opts = opts || {};\n  var args = name.split(/ +/);\n  var cmd = new Command(args.shift());\n\n  if (desc) {\n    cmd.description(desc);\n    this.executables = true;\n    this._execs[cmd._name] = true;\n    if (opts.isDefault) this.defaultExecutable = cmd._name;\n  }\n\n  cmd._noHelp = !!opts.noHelp;\n  this.commands.push(cmd);\n  cmd.parseExpectedArgs(args);\n  cmd.parent = this;\n\n  if (desc) return this;\n  return cmd;\n};\n\n/**\n * Define argument syntax for the top-level command.\n *\n * @api public\n */\n\nCommand.prototype.arguments = function (desc) {\n  return this.parseExpectedArgs(desc.split(/ +/));\n};\n\n/**\n * Add an implicit `help [cmd]` subcommand\n * which invokes `--help` for the given command.\n *\n * @api private\n */\n\nCommand.prototype.addImplicitHelpCommand = function() {\n  this.command('help [cmd]', 'display help for [cmd]');\n};\n\n/**\n * Parse expected `args`.\n *\n * For example `[\"[type]\"]` becomes `[{ required: false, name: 'type' }]`.\n *\n * @param {Array} args\n * @return {Command} for chaining\n * @api public\n */\n\nCommand.prototype.parseExpectedArgs = function(args) {\n  if (!args.length) return;\n  var self = this;\n  args.forEach(function(arg) {\n    var argDetails = {\n      required: false,\n      name: '',\n      variadic: false\n    };\n\n    switch (arg[0]) {\n      case '<':\n        argDetails.required = true;\n        argDetails.name = arg.slice(1, -1);\n        break;\n      case '[':\n        argDetails.name = arg.slice(1, -1);\n        break;\n    }\n\n    if (argDetails.name.length > 3 && argDetails.name.slice(-3) === '...') {\n      argDetails.variadic = true;\n      argDetails.name = argDetails.name.slice(0, -3);\n    }\n    if (argDetails.name) {\n      self._args.push(argDetails);\n    }\n  });\n  return this;\n};\n\n/**\n * Register callback `fn` for the command.\n *\n * Examples:\n *\n *      program\n *        .command('help')\n *        .description('display verbose help')\n *        .action(function() {\n *           // output help here\n *        });\n *\n * @param {Function} fn\n * @return {Command} for chaining\n * @api public\n */\n\nCommand.prototype.action = function(fn) {\n  var self = this;\n  var listener = function(args, unknown) {\n    // Parse any so-far unknown options\n    args = args || [];\n    unknown = unknown || [];\n\n    var parsed = self.parseOptions(unknown);\n\n    // Output help if necessary\n    outputHelpIfNecessary(self, parsed.unknown);\n\n    // If there are still any unknown options, then we simply\n    // die, unless someone asked for help, in which case we give it\n    // to them, and then we die.\n    if (parsed.unknown.length > 0) {\n      self.unknownOption(parsed.unknown[0]);\n    }\n\n    // Leftover arguments need to be pushed back. Fixes issue #56\n    if (parsed.args.length) args = parsed.args.concat(args);\n\n    self._args.forEach(function(arg, i) {\n      if (arg.required && null == args[i]) {\n        self.missingArgument(arg.name);\n      } else if (arg.variadic) {\n        if (i !== self._args.length - 1) {\n          self.variadicArgNotLast(arg.name);\n        }\n\n        args[i] = args.splice(i);\n      }\n    });\n\n    // Always append ourselves to the end of the arguments,\n    // to make sure we match the number of arguments the user\n    // expects\n    if (self._args.length) {\n      args[self._args.length] = self;\n    } else {\n      args.push(self);\n    }\n\n    fn.apply(self, args);\n  };\n  var parent = this.parent || this;\n  var name = parent === this ? '*' : this._name;\n  parent.on(name, listener);\n  if (this._alias) parent.on(this._alias, listener);\n  return this;\n};\n\n/**\n * Define option with `flags`, `description` and optional\n * coercion `fn`.\n *\n * The `flags` string should contain both the short and long flags,\n * separated by comma, a pipe or space. The following are all valid\n * all will output this way when `--help` is used.\n *\n *    \"-p, --pepper\"\n *    \"-p|--pepper\"\n *    \"-p --pepper\"\n *\n * Examples:\n *\n *     // simple boolean defaulting to false\n *     program.option('-p, --pepper', 'add pepper');\n *\n *     --pepper\n *     program.pepper\n *     // => Boolean\n *\n *     // simple boolean defaulting to true\n *     program.option('-C, --no-cheese', 'remove cheese');\n *\n *     program.cheese\n *     // => true\n *\n *     --no-cheese\n *     program.cheese\n *     // => false\n *\n *     // required argument\n *     program.option('-C, --chdir <path>', 'change the working directory');\n *\n *     --chdir /tmp\n *     program.chdir\n *     // => \"/tmp\"\n *\n *     // optional argument\n *     program.option('-c, --cheese [type]', 'add cheese [marble]');\n *\n * @param {String} flags\n * @param {String} description\n * @param {Function|Mixed} fn or default\n * @param {Mixed} defaultValue\n * @return {Command} for chaining\n * @api public\n */\n\nCommand.prototype.option = function(flags, description, fn, defaultValue) {\n  var self = this\n    , option = new Option(flags, description)\n    , oname = option.name()\n    , name = camelcase(oname);\n\n  // default as 3rd arg\n  if (typeof fn != 'function') {\n    if (fn instanceof RegExp) {\n      var regex = fn;\n      fn = function(val, def) {\n        var m = regex.exec(val);\n        return m ? m[0] : def;\n      }\n    }\n    else {\n      defaultValue = fn;\n      fn = null;\n    }\n  }\n\n  // preassign default value only for --no-*, [optional], or <required>\n  if (false == option.bool || option.optional || option.required) {\n    // when --no-* we make sure default is true\n    if (false == option.bool) defaultValue = true;\n    // preassign only if we have a default\n    if (undefined !== defaultValue) self[name] = defaultValue;\n  }\n\n  // register the option\n  this.options.push(option);\n\n  // when it's passed assign the value\n  // and conditionally invoke the callback\n  this.on(oname, function(val) {\n    // coercion\n    if (null !== val && fn) val = fn(val, undefined === self[name]\n      ? defaultValue\n      : self[name]);\n\n    // unassigned or bool\n    if ('boolean' == typeof self[name] || 'undefined' == typeof self[name]) {\n      // if no value, bool true, and we have a default, then use it!\n      if (null == val) {\n        self[name] = option.bool\n          ? defaultValue || true\n          : false;\n      } else {\n        self[name] = val;\n      }\n    } else if (null !== val) {\n      // reassign\n      self[name] = val;\n    }\n  });\n\n  return this;\n};\n\n/**\n * Allow unknown options on the command line.\n *\n * @param {Boolean} arg if `true` or omitted, no error will be thrown\n * for unknown options.\n * @api public\n */\nCommand.prototype.allowUnknownOption = function(arg) {\n    this._allowUnknownOption = arguments.length === 0 || arg;\n    return this;\n};\n\n/**\n * Parse `argv`, settings options and invoking commands when defined.\n *\n * @param {Array} argv\n * @return {Command} for chaining\n * @api public\n */\n\nCommand.prototype.parse = function(argv) {\n  // implicit help\n  if (this.executables) this.addImplicitHelpCommand();\n\n  // store raw args\n  this.rawArgs = argv;\n\n  // guess name\n  this._name = this._name || basename(argv[1], '.js');\n\n  // github-style sub-commands with no sub-command\n  if (this.executables && argv.length < 3 && !this.defaultExecutable) {\n    // this user needs help\n    argv.push('--help');\n  }\n\n  // process argv\n  var parsed = this.parseOptions(this.normalize(argv.slice(2)));\n  var args = this.args = parsed.args;\n\n  var result = this.parseArgs(this.args, parsed.unknown);\n\n  // executable sub-commands\n  var name = result.args[0];\n  if (this._execs[name] && typeof this._execs[name] != \"function\") {\n    return this.executeSubCommand(argv, args, parsed.unknown);\n  } else if (this.defaultExecutable) {\n    // use the default subcommand\n    args.unshift(name = this.defaultExecutable);\n    return this.executeSubCommand(argv, args, parsed.unknown);\n  }\n\n  return result;\n};\n\n/**\n * Execute a sub-command executable.\n *\n * @param {Array} argv\n * @param {Array} args\n * @param {Array} unknown\n * @api private\n */\n\nCommand.prototype.executeSubCommand = function(argv, args, unknown) {\n  args = args.concat(unknown);\n\n  if (!args.length) this.help();\n  if ('help' == args[0] && 1 == args.length) this.help();\n\n  // <cmd> --help\n  if ('help' == args[0]) {\n    args[0] = args[1];\n    args[1] = '--help';\n  }\n\n  // executable\n  var f = argv[1];\n  // name of the subcommand, link `pm-install`\n  var bin = basename(f, '.js') + '-' + args[0];\n\n\n  // In case of globally installed, get the base dir where executable\n  //  subcommand file should be located at\n  var baseDir\n    , link = readlink(f);\n\n  // when symbolink is relative path\n  if (link !== f && link.charAt(0) !== '/') {\n    link = path.join(dirname(f), link)\n  }\n  baseDir = dirname(link);\n\n  // prefer local `./<bin>` to bin in the $PATH\n  var localBin = path.join(baseDir, bin);\n\n  // whether bin file is a js script with explicit `.js` extension\n  var isExplicitJS = false;\n  if (exists(localBin + '.js')) {\n    bin = localBin + '.js';\n    isExplicitJS = true;\n  } else if (exists(localBin)) {\n    bin = localBin;\n  }\n\n  args = args.slice(1);\n\n  var proc;\n  if (process.platform !== 'win32') {\n    if (isExplicitJS) {\n      args.unshift(localBin);\n      // add executable arguments to spawn\n      args = (process.execArgv || []).concat(args);\n\n      proc = spawn('node', args, { stdio: 'inherit', customFds: [0, 1, 2] });\n    } else {\n      proc = spawn(bin, args, { stdio: 'inherit', customFds: [0, 1, 2] });\n    }\n  } else {\n    args.unshift(localBin);\n    proc = spawn(process.execPath, args, { stdio: 'inherit'});\n  }\n\n  proc.on('close', process.exit.bind(process));\n  proc.on('error', function(err) {\n    if (err.code == \"ENOENT\") {\n      console.error('\\n  %s(1) does not exist, try --help\\n', bin);\n    } else if (err.code == \"EACCES\") {\n      console.error('\\n  %s(1) not executable. try chmod or run with root\\n', bin);\n    }\n    process.exit(1);\n  });\n\n  // Store the reference to the child process\n  this.runningCommand = proc;\n};\n\n/**\n * Normalize `args`, splitting joined short flags. For example\n * the arg \"-abc\" is equivalent to \"-a -b -c\".\n * This also normalizes equal sign and splits \"--abc=def\" into \"--abc def\".\n *\n * @param {Array} args\n * @return {Array}\n * @api private\n */\n\nCommand.prototype.normalize = function(args) {\n  var ret = []\n    , arg\n    , lastOpt\n    , index;\n\n  for (var i = 0, len = args.length; i < len; ++i) {\n    arg = args[i];\n    if (i > 0) {\n      lastOpt = this.optionFor(args[i-1]);\n    }\n\n    if (arg === '--') {\n      // Honor option terminator\n      ret = ret.concat(args.slice(i));\n      break;\n    } else if (lastOpt && lastOpt.required) {\n      ret.push(arg);\n    } else if (arg.length > 1 && '-' == arg[0] && '-' != arg[1]) {\n      arg.slice(1).split('').forEach(function(c) {\n        ret.push('-' + c);\n      });\n    } else if (/^--/.test(arg) && ~(index = arg.indexOf('='))) {\n      ret.push(arg.slice(0, index), arg.slice(index + 1));\n    } else {\n      ret.push(arg);\n    }\n  }\n\n  return ret;\n};\n\n/**\n * Parse command `args`.\n *\n * When listener(s) are available those\n * callbacks are invoked, otherwise the \"*\"\n * event is emitted and those actions are invoked.\n *\n * @param {Array} args\n * @return {Command} for chaining\n * @api private\n */\n\nCommand.prototype.parseArgs = function(args, unknown) {\n  var name;\n\n  if (args.length) {\n    name = args[0];\n    if (this.listeners(name).length) {\n      this.emit(args.shift(), args, unknown);\n    } else {\n      this.emit('*', args);\n    }\n  } else {\n    outputHelpIfNecessary(this, unknown);\n\n    // If there were no args and we have unknown options,\n    // then they are extraneous and we need to error.\n    if (unknown.length > 0) {\n      this.unknownOption(unknown[0]);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return an option matching `arg` if any.\n *\n * @param {String} arg\n * @return {Option}\n * @api private\n */\n\nCommand.prototype.optionFor = function(arg) {\n  for (var i = 0, len = this.options.length; i < len; ++i) {\n    if (this.options[i].is(arg)) {\n      return this.options[i];\n    }\n  }\n};\n\n/**\n * Parse options from `argv` returning `argv`\n * void of these options.\n *\n * @param {Array} argv\n * @return {Array}\n * @api public\n */\n\nCommand.prototype.parseOptions = function(argv) {\n  var args = []\n    , len = argv.length\n    , literal\n    , option\n    , arg;\n\n  var unknownOptions = [];\n\n  // parse options\n  for (var i = 0; i < len; ++i) {\n    arg = argv[i];\n\n    // literal args after --\n    if ('--' == arg) {\n      literal = true;\n      continue;\n    }\n\n    if (literal) {\n      args.push(arg);\n      continue;\n    }\n\n    // find matching Option\n    option = this.optionFor(arg);\n\n    // option is defined\n    if (option) {\n      // requires arg\n      if (option.required) {\n        arg = argv[++i];\n        if (null == arg) return this.optionMissingArgument(option);\n        this.emit(option.name(), arg);\n      // optional arg\n      } else if (option.optional) {\n        arg = argv[i+1];\n        if (null == arg || ('-' == arg[0] && '-' != arg)) {\n          arg = null;\n        } else {\n          ++i;\n        }\n        this.emit(option.name(), arg);\n      // bool\n      } else {\n        this.emit(option.name());\n      }\n      continue;\n    }\n\n    // looks like an option\n    if (arg.length > 1 && '-' == arg[0]) {\n      unknownOptions.push(arg);\n\n      // If the next argument looks like it might be\n      // an argument for this option, we pass it on.\n      // If it isn't, then it'll simply be ignored\n      if (argv[i+1] && '-' != argv[i+1][0]) {\n        unknownOptions.push(argv[++i]);\n      }\n      continue;\n    }\n\n    // arg\n    args.push(arg);\n  }\n\n  return { args: args, unknown: unknownOptions };\n};\n\n/**\n * Return an object containing options as key-value pairs\n *\n * @return {Object}\n * @api public\n */\nCommand.prototype.opts = function() {\n  var result = {}\n    , len = this.options.length;\n\n  for (var i = 0 ; i < len; i++) {\n    var key = camelcase(this.options[i].name());\n    result[key] = key === 'version' ? this._version : this[key];\n  }\n  return result;\n};\n\n/**\n * Argument `name` is missing.\n *\n * @param {String} name\n * @api private\n */\n\nCommand.prototype.missingArgument = function(name) {\n  console.error();\n  console.error(\"  error: missing required argument `%s'\", name);\n  console.error();\n  process.exit(1);\n};\n\n/**\n * `Option` is missing an argument, but received `flag` or nothing.\n *\n * @param {String} option\n * @param {String} flag\n * @api private\n */\n\nCommand.prototype.optionMissingArgument = function(option, flag) {\n  console.error();\n  if (flag) {\n    console.error(\"  error: option `%s' argument missing, got `%s'\", option.flags, flag);\n  } else {\n    console.error(\"  error: option `%s' argument missing\", option.flags);\n  }\n  console.error();\n  process.exit(1);\n};\n\n/**\n * Unknown option `flag`.\n *\n * @param {String} flag\n * @api private\n */\n\nCommand.prototype.unknownOption = function(flag) {\n  if (this._allowUnknownOption) return;\n  console.error();\n  console.error(\"  error: unknown option `%s'\", flag);\n  console.error();\n  process.exit(1);\n};\n\n/**\n * Variadic argument with `name` is not the last argument as required.\n *\n * @param {String} name\n * @api private\n */\n\nCommand.prototype.variadicArgNotLast = function(name) {\n  console.error();\n  console.error(\"  error: variadic arguments must be last `%s'\", name);\n  console.error();\n  process.exit(1);\n};\n\n/**\n * Set the program version to `str`.\n *\n * This method auto-registers the \"-V, --version\" flag\n * which will print the version number when passed.\n *\n * @param {String} str\n * @param {String} flags\n * @return {Command} for chaining\n * @api public\n */\n\nCommand.prototype.version = function(str, flags) {\n  if (0 == arguments.length) return this._version;\n  this._version = str;\n  flags = flags || '-V, --version';\n  this.option(flags, 'output the version number');\n  this.on('version', function() {\n    process.stdout.write(str + '\\n');\n    process.exit(0);\n  });\n  return this;\n};\n\n/**\n * Set the description to `str`.\n *\n * @param {String} str\n * @return {String|Command}\n * @api public\n */\n\nCommand.prototype.description = function(str) {\n  if (0 === arguments.length) return this._description;\n  this._description = str;\n  return this;\n};\n\n/**\n * Set an alias for the command\n *\n * @param {String} alias\n * @return {String|Command}\n * @api public\n */\n\nCommand.prototype.alias = function(alias) {\n  if (0 == arguments.length) return this._alias;\n  this._alias = alias;\n  return this;\n};\n\n/**\n * Set / get the command usage `str`.\n *\n * @param {String} str\n * @return {String|Command}\n * @api public\n */\n\nCommand.prototype.usage = function(str) {\n  var args = this._args.map(function(arg) {\n    return humanReadableArgName(arg);\n  });\n\n  var usage = '[options]'\n    + (this.commands.length ? ' [command]' : '')\n    + (this._args.length ? ' ' + args.join(' ') : '');\n\n  if (0 == arguments.length) return this._usage || usage;\n  this._usage = str;\n\n  return this;\n};\n\n/**\n * Get the name of the command\n *\n * @param {String} name\n * @return {String|Command}\n * @api public\n */\n\nCommand.prototype.name = function() {\n  return this._name;\n};\n\n/**\n * Return the largest option length.\n *\n * @return {Number}\n * @api private\n */\n\nCommand.prototype.largestOptionLength = function() {\n  return this.options.reduce(function(max, option) {\n    return Math.max(max, option.flags.length);\n  }, 0);\n};\n\n/**\n * Return help for options.\n *\n * @return {String}\n * @api private\n */\n\nCommand.prototype.optionHelp = function() {\n  var width = this.largestOptionLength();\n\n  // Prepend the help information\n  return [pad('-h, --help', width) + '  ' + 'output usage information']\n      .concat(this.options.map(function(option) {\n        return pad(option.flags, width) + '  ' + option.description;\n      }))\n      .join('\\n');\n};\n\n/**\n * Return command help documentation.\n *\n * @return {String}\n * @api private\n */\n\nCommand.prototype.commandHelp = function() {\n  if (!this.commands.length) return '';\n\n  var commands = this.commands.filter(function(cmd) {\n    return !cmd._noHelp;\n  }).map(function(cmd) {\n    var args = cmd._args.map(function(arg) {\n      return humanReadableArgName(arg);\n    }).join(' ');\n\n    return [\n      cmd._name\n        + (cmd._alias ? '|' + cmd._alias : '')\n        + (cmd.options.length ? ' [options]' : '')\n        + ' ' + args\n      , cmd.description()\n    ];\n  });\n\n  var width = commands.reduce(function(max, command) {\n    return Math.max(max, command[0].length);\n  }, 0);\n\n  return [\n    ''\n    , '  Commands:'\n    , ''\n    , commands.map(function(cmd) {\n      var desc = cmd[1] ? '  ' + cmd[1] : '';\n      return pad(cmd[0], width) + desc;\n    }).join('\\n').replace(/^/gm, '    ')\n    , ''\n  ].join('\\n');\n};\n\n/**\n * Return program help documentation.\n *\n * @return {String}\n * @api private\n */\n\nCommand.prototype.helpInformation = function() {\n  var desc = [];\n  if (this._description) {\n    desc = [\n      '  ' + this._description\n      , ''\n    ];\n  }\n\n  var cmdName = this._name;\n  if (this._alias) {\n    cmdName = cmdName + '|' + this._alias;\n  }\n  var usage = [\n    ''\n    ,'  Usage: ' + cmdName + ' ' + this.usage()\n    , ''\n  ];\n\n  var cmds = [];\n  var commandHelp = this.commandHelp();\n  if (commandHelp) cmds = [commandHelp];\n\n  var options = [\n    '  Options:'\n    , ''\n    , '' + this.optionHelp().replace(/^/gm, '    ')\n    , ''\n    , ''\n  ];\n\n  return usage\n    .concat(cmds)\n    .concat(desc)\n    .concat(options)\n    .join('\\n');\n};\n\n/**\n * Output help information for this command\n *\n * @api public\n */\n\nCommand.prototype.outputHelp = function(cb) {\n  if (!cb) {\n    cb = function(passthru) {\n      return passthru;\n    }\n  }\n  process.stdout.write(cb(this.helpInformation()));\n  this.emit('--help');\n};\n\n/**\n * Output help information and exit.\n *\n * @api public\n */\n\nCommand.prototype.help = function(cb) {\n  this.outputHelp(cb);\n  process.exit();\n};\n\n/**\n * Camel-case the given `flag`\n *\n * @param {String} flag\n * @return {String}\n * @api private\n */\n\nfunction camelcase(flag) {\n  return flag.split('-').reduce(function(str, word) {\n    return str + word[0].toUpperCase() + word.slice(1);\n  });\n}\n\n/**\n * Pad `str` to `width`.\n *\n * @param {String} str\n * @param {Number} width\n * @return {String}\n * @api private\n */\n\nfunction pad(str, width) {\n  var len = Math.max(0, width - str.length);\n  return str + Array(len + 1).join(' ');\n}\n\n/**\n * Output help information if necessary\n *\n * @param {Command} command to output help for\n * @param {Array} array of options to search for -h or --help\n * @api private\n */\n\nfunction outputHelpIfNecessary(cmd, options) {\n  options = options || [];\n  for (var i = 0; i < options.length; i++) {\n    if (options[i] == '--help' || options[i] == '-h') {\n      cmd.outputHelp();\n      process.exit(0);\n    }\n  }\n}\n\n/**\n * Takes an argument an returns its human readable equivalent for help usage.\n *\n * @param {Object} arg\n * @return {String}\n * @api private\n */\n\nfunction humanReadableArgName(arg) {\n  var nameOutput = arg.name + (arg.variadic === true ? '...' : '');\n\n  return arg.required\n    ? '<' + nameOutput + '>'\n    : '[' + nameOutput + ']'\n}\n\n// for versions before node v0.8 when there weren't `fs.existsSync`\nfunction exists(file) {\n  try {\n    if (fs.statSync(file).isFile()) {\n      return true;\n    }\n  } catch (e) {\n    return false;\n  }\n}\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/commander/index.js\n// module id = 84\n// module chunks = 0","module.exports = {\n\t\"rimacondb\": {\n\t\t\"type\": \"pg\",\n\t\t\"server\": \"192.168.77.2\",\n\t\t\"port\": \"5432\",\n\t\t\"username\": \"postgres\",\n\t\t\"password\": \"postgres\",\n\t\t\"dbname\": \"RiMaConDB\"\n\t},\n\t\"steeldb\": {\n\t\t\"type\": \"mysql\",\n\t\t\"server\": \"192.168.84.2\",\n\t\t\"port\": \"3306\",\n\t\t\"username\": \"root\",\n\t\t\"password\": \"p33l\",\n\t\t\"dbname\": \"machforms\"\n\t},\n\t\"default\": \"rimacondb\",\n\t\"author\": \"Neil.Smith@WebTarget.co.uk\",\n\t\"fileroot\": \"../templates/src/\",\n\t\"outputfolder\": \"../output/\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dbconfig.json\n// module id = 85\n// module chunks = 0","exports = module.exports = ap;\nfunction ap (args, fn) {\n    return function () {\n        var rest = [].slice.call(arguments)\n            , first = args.slice()\n        first.push.apply(first, rest)\n        return fn.apply(this, first);\n    };\n}\n\nexports.pa = pa;\nfunction pa (args, fn) {\n    return function () {\n        var rest = [].slice.call(arguments)\n        rest.push.apply(rest, args)\n        return fn.apply(this, rest);\n    };\n}\n\nexports.apa = apa;\nfunction apa (left, right, fn) {\n    return function () {\n        return fn.apply(this,\n            left.concat.apply(left, arguments).concat(right)\n        );\n    };\n}\n\nexports.partial = partial;\nfunction partial (fn) {\n    var args = [].slice.call(arguments, 1);\n    return ap(args, fn);\n}\n\nexports.partialRight = partialRight;\nfunction partialRight (fn) {\n    var args = [].slice.call(arguments, 1);\n    return pa(args, fn);\n}\n\nexports.curry = curry;\nfunction curry (fn) {\n    return partial(partial, fn);\n}\n\nexports.curryRight = function curryRight (fn) {\n    return partial(partialRight, fn);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ap/index.js\n// module id = 86\n// module chunks = 0","/**\n * -----------------------------------------------------------------------------\n * Class        : db.ts\n * Description  :\n * Notes        :\n * Created      : @author Neil Smith <Neil.SMith@Computors.com>\n * Created Date : 17 Feb 2017\n * -----------------------------------------------------------------------------\n * Date?        Whom?       Notes\n * _____________________________________________________________________________\n */\n\nimport { connPgSQL } from './db/types/connPgSQL';\nimport { connMysql } from './db/types/connMysql';\nimport { configService } from './configService';\n\nexport class db {\n\n    private client: any;\n    private _dbInstance: any;\n    private _thingy: string;\n    private _rows:string[];\n\n    constructor(private _configService: configService) {        \n        try {\n            console.log(\"TYPE\" + this._configService.getDBParams()[\"type\"]);\n            switch (this._configService.getDBParams()[\"type\"]) {\n                case 'pg':\n                    this._dbInstance = new connPgSQL(_configService);\n                    break;\n                case 'mysql':\n                    this._dbInstance = new connMysql(_configService);\n                    break;\n                default:\n            }\n        } catch (error) {\n            console.log(`Error in db::constructor :: ${error}`);\n        }\n        return;\n    }\n    getColumns():Promise<string[]> {\n        return new Promise((resolve, reject) => {\n            resolve(this._dbInstance.getColumns());\n        }).then((res) => {\n            console.log(res);\n            return this._dbInstance.parseResults(res);        \n        }).catch((error) => {\n            console.log(`Error in db::getColumns :: ${error}`);\n        });                \n    }\n    \n    private dbInstance() {\n        return this._dbInstance;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/db.ts","// https://github.com/mysqljs/mysql\n// https://www.npmjs.com/package/promise-mysql\n\nimport { Idb } from '.././Idb';\nimport { dbConn } from '.././dbConn';\nimport { configService } from '../../configService';\n\nexport class connMysql implements Idb {\n    private _pConn: dbConn;\n    private _mysql = require('mysql');\n    private _db: Object;\n\n    constructor(private _cs: configService) {\n        try {\n            console.log(\"WOOHOO\");\n            this._pConn = this._cs.getDBParams();\n            this._db = this._mysql.createConnection(this.getConnectString());\n        }\n        catch (error) {\n            console.log(`Error in constructor :: ${error}`);\n        }\n    }\n    public getColumns(): string[] {\n        return this._db.query(this.getQuery());\n    }\n    public testConnection(): boolean {\n        return true;\n    }\n\n\n    /**\n     * -----------------------------------------------------------------------------\n     * Method       : @method parseResults\n     * Description  : @description Takes the results that come in as {column_name: 'user_id'}\n     *                  and makes them into a string array of just columns.\n     * Notes        : \n     * Created      : @author Neil Smith <Neil.Smith@WebTarget.co.uk>\n     * Created Date : 28 Feb 2017\n     * -----------------------------------------------------------------------------\n     * Date?        Whom?           Notes\n     * _____________________________________________________________________________\n     */\n    public parseResults(_results: string[]): string[] {\n        let _columns: string[] = [];\n        try {\n            for (var column of _results) {\n                _columns.push(column[\"column_name\"]);\n            }\n        } catch (error) {\n            console.log(`Error in parseResults :: ${error}`);\n        }\n        console.log(\"Have returned these columns::\" + JSON.stringify(_columns));\n        return _columns;\n\n    }\n\n    /**\n      * -----------------------------------------------------------------------------\n      * Method       : @method getConnectString\n      * Description  : @description Builds a connection string from our config service\n      * Notes        : \n      * Created      : @author Neil Smith <Neil.Smith@WebTarget.co.uk>\n      * Created Date : 28 Feb 2017\n      * -----------------------------------------------------------------------------\n      * Date?        Whom?           Notes\n      * _____________________________________________________________________________\n      */\n    private getConnectString(): string {\n        try {\n            return `mysql://${this._pConn.username}:${this._pConn.password}@${this._pConn.server}/${this._pConn.dbname}`;\n        }\n        catch (error) {\n            console.log(`Error in getConnectString :: ${error}`);\n        }\n    }\n\n    /**\n    * -----------------------------------------------------------------------------\n    * Method       : @method getQuery\n    * Description  : @description The query that gets the column names\n    * Notes        : \n    * Created      : @author Neil Smith <Neil.Smith@WebTarget.co.uk>\n    * Created Date : 28 Feb 2017\n    * -----------------------------------------------------------------------------\n    * Date?        Whom?           Notes\n    * _____________________________________________________________________________\n    */\n    private getQuery(_tableName?: string): string {\n        return `select column_name from information_schema.columns where table_name='${this._cs.getTable()}';`;\n    }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/db/types/connMysql.ts","import { configService } from '../../configService';\nimport { dbConn } from '.././dbConn';\nimport { Idb } from '../Idb';\n\nexport class connPgSQL implements Idb {\n\n    private _pConn: dbConn;\n    private _pgp = require('pg-promise')({});\n    private _db: Object;\n\n    constructor(private _cs: configService) {\n        try {\n            this.configure();\n        }\n        catch (error) {\n            console.log(`Error in constructor :: ${error}`);\n        }\n    }\n    public getColumns(): string[] {\n        return this._db.query(this.getQuery());\n    }\n    public testConnection(): boolean {\n        return true;\n    }\n\n    /**\n     * -----------------------------------------------------------------------------\n     * Method       : @method configure\n     * Description  : @description Sets up the PgSQL db connection\n     * Notes        : \n     * Created      : @author Neil Smith <Neil.Smith@WebTarget.co.uk>\n     * Created Date : 28 Feb 2017\n     * -----------------------------------------------------------------------------\n     * Date?        Whom?           Notes\n     * _____________________________________________________________________________\n     */\n    private configure() {\n        try {\n            this._pConn = this._cs.getDBParams();\n            this._db = this._pgp(this.getConnectString());\n        } catch (error) {\n            console.log(`Error in configure :: ${error}`);\n        }\n    }\n\n    /**\n     * -----------------------------------------------------------------------------\n     * Method       : @method getConnectString\n     * Description  : @description Builds a connection string from our config service\n     * Notes        : \n     * Created      : @author Neil Smith <Neil.Smith@WebTarget.co.uk>\n     * Created Date : 28 Feb 2017\n     * -----------------------------------------------------------------------------\n     * Date?        Whom?           Notes\n     * _____________________________________________________________________________\n     */\n    private getConnectString(): string {\n        try {\n            return `postgres://${this._pConn.username}:${this._pConn.password}@${this._pConn.server}/${this._pConn.dbname}`;\n        }\n        catch (error) {\n            console.log(`Error in getConnectString :: ${error}`);\n        }\n    }\n\n    /**\n     * -----------------------------------------------------------------------------\n     * Method       : @method parseResults\n     * Description  : @description Takes the results that come in as {column_name: 'user_id'}\n     *                  and makes them into a string array of just columns.\n     * Notes        : \n     * Created      : @author Neil Smith <Neil.Smith@WebTarget.co.uk>\n     * Created Date : 28 Feb 2017\n     * -----------------------------------------------------------------------------\n     * Date?        Whom?           Notes\n     * _____________________________________________________________________________\n     */\n    public parseResults(_results: string[]): string[] {\n        let _columns: string[] = [];\n        try {\n            for (var column of _results) {\n                _columns.push(column[\"column_name\"]);\n            }\n        } catch (error) {\n            console.log(`Error in parseResults :: ${error}`);\n        }\n        console.log(\"Have returned these columns::\" + JSON.stringify(_columns));\n        return _columns;\n\n    }\n\n    /**\n    * -----------------------------------------------------------------------------\n    * Method       : @method getQuery\n    * Description  : @description The query that gets the column names\n    * Notes        : \n    * Created      : @author Neil Smith <Neil.Smith@WebTarget.co.uk>\n    * Created Date : 28 Feb 2017\n    * -----------------------------------------------------------------------------\n    * Date?        Whom?           Notes\n    * _____________________________________________________________________________\n    */\n    private getQuery(_tableName?: string): string {\n        return `select column_name from information_schema.columns where table_name='${this._cs.getTable()}';`;\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/db/types/connPgSQL.ts","/**\n * -----------------------------------------------------------------------------\n * Name         : @class Replace\n * Description  : The Replace module does the substituting.\n * Notes        : \n * Created      : @author Neil Smith <Neil.Smith@WebTarget.co.uk>\n * Created Date : 28 Feb 2017\n * -----------------------------------------------------------------------------\n * Date?        Whom?           Notes\n * _____________________________________________________________________________\n */\nexport class Replace {\n\n    public _file: string;\n    private _fs = require('fs');\n    private _template = require('es6-template-strings');\n\n    /**\n     * -----------------------------------------------------------------------------\n     * Method       : @constructor\n     * Description  : \n     * Notes        : \n     * Created      : @author Neil Smith <Neil.Smith@WebTarget.co.uk>\n     * Created Date : 28 Feb 2017\n     * -----------------------------------------------------------------------------\n     * Date?        Whom?           Notes\n     * _____________________________________________________________________________\n     */\n    constructor(private _filename: string, private _outputfilename: string, private _data: Object) {\n        try {\n        }\n        catch (err) {\n            console.log(err);\n        }\n    }\n\n    /**\n     * -----------------------------------------------------------------------------\n     * Method       : @method createFile\n     * Description  : @description Create the output file\n     * Notes        : Uses template strings and paths from the configService\n     * Created      : @author Neil Smith <Neil.Smith@WebTarget.co.uk>\n     * Created Date : 28 Feb 2017\n     * -----------------------------------------------------------------------------\n     * Date?        Whom?           Notes\n     * _____________________________________________________________________________\n     */\n    public createFile(): boolean {\n        try {\n            let compile = require('es6-template-strings/compile'),\n                resolveToString = require('es6-template-strings/resolve-to-string');\n            this._file = this._fs.readFileSync(this._filename, 'utf8');\n            let _compiled = compile(this._file);\n            let _contents = (resolveToString(_compiled, this._data));\n            this._fs.writeFileSync(this._outputfilename, _contents);\n            return true;\n        } catch (error) {\n            console.log(error);\n            return false;\n        }\n    }\n\n    /**\n     * -----------------------------------------------------------------------------\n     * Method       : @method getFile\n     * Description  : @description Syncronously loads a file from the disk\n     * Notes        : \n     * Created      : @author Neil Smith <Neil.Smith@WebTarget.co.uk>\n     * Created Date : 28 Feb 2017\n     * -----------------------------------------------------------------------------\n     * Date?        Whom?           Notes\n     * _____________________________________________________________________________\n     */\n    public getFile(): string {\n        var contents = this._fs.readFileSync(this._filename, 'utf8');\n        console.log(\"Some things :: \" + contents);\n        return contents;\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/replace.ts","/*! bignumber.js v3.1.2 https://github.com/MikeMcl/bignumber.js/LICENCE */\r\n\r\n;(function (globalObj) {\r\n    'use strict';\r\n\r\n    /*\r\n      bignumber.js v3.1.2\r\n      A JavaScript library for arbitrary-precision arithmetic.\r\n      https://github.com/MikeMcl/bignumber.js\r\n      Copyright (c) 2016 Michael Mclaughlin <M8ch88l@gmail.com>\r\n      MIT Expat Licence\r\n    */\r\n\r\n\r\n    var BigNumber,\r\n        isNumeric = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n        mathceil = Math.ceil,\r\n        mathfloor = Math.floor,\r\n        notBool = ' not a boolean or binary digit',\r\n        roundingMode = 'rounding mode',\r\n        tooManyDigits = 'number type has more than 15 significant digits',\r\n        ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_',\r\n        BASE = 1e14,\r\n        LOG_BASE = 14,\r\n        MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n        // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n        POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n        SQRT_BASE = 1e7,\r\n\r\n        /*\r\n         * The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n         * the arguments to toExponential, toFixed, toFormat, and toPrecision, beyond which an\r\n         * exception is thrown (if ERRORS is true).\r\n         */\r\n        MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n    /*\r\n     * Create and return a BigNumber constructor.\r\n     */\r\n    function constructorFactory(configObj) {\r\n        var div, parseNumeric,\r\n\r\n            // id tracks the caller function, so its name can be included in error messages.\r\n            id = 0,\r\n            P = BigNumber.prototype,\r\n            ONE = new BigNumber(1),\r\n\r\n\r\n            /********************************* EDITABLE DEFAULTS **********************************/\r\n\r\n\r\n            /*\r\n             * The default values below must be integers within the inclusive ranges stated.\r\n             * The values can also be changed at run-time using BigNumber.config.\r\n             */\r\n\r\n            // The maximum number of decimal places for operations involving division.\r\n            DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n            /*\r\n             * The rounding mode used when rounding to the above decimal places, and when using\r\n             * toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n             * UP         0 Away from zero.\r\n             * DOWN       1 Towards zero.\r\n             * CEIL       2 Towards +Infinity.\r\n             * FLOOR      3 Towards -Infinity.\r\n             * HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n             * HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n             * HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n             * HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n             * HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n             */\r\n            ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n            // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n            // The exponent value at and beneath which toString returns exponential notation.\r\n            // Number type: -7\r\n            TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n            // The exponent value at and above which toString returns exponential notation.\r\n            // Number type: 21\r\n            TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n            // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n            // The minimum exponent value, beneath which underflow to zero occurs.\r\n            // Number type: -324  (5e-324)\r\n            MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n            // The maximum exponent value, above which overflow to Infinity occurs.\r\n            // Number type:  308  (1.7976931348623157e+308)\r\n            // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n            MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n            // Whether BigNumber Errors are ever thrown.\r\n            ERRORS = true,                           // true or false\r\n\r\n            // Change to intValidatorNoErrors if ERRORS is false.\r\n            isValidInt = intValidatorWithErrors,     // intValidatorWithErrors/intValidatorNoErrors\r\n\r\n            // Whether to use cryptographically-secure random number generation, if available.\r\n            CRYPTO = false,                          // true or false\r\n\r\n            /*\r\n             * The modulo mode used when calculating the modulus: a mod n.\r\n             * The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n             * The remainder (r) is calculated as: r = a - n * q.\r\n             *\r\n             * UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n             * DOWN      1 The remainder has the same sign as the dividend.\r\n             *             This modulo mode is commonly known as 'truncated division' and is\r\n             *             equivalent to (a % n) in JavaScript.\r\n             * FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n             * HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n             * EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n             *             The remainder is always positive.\r\n             *\r\n             * The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n             * modes are commonly used for the modulus operation.\r\n             * Although the other rounding modes can also be used, they may not give useful results.\r\n             */\r\n            MODULO_MODE = 1,                         // 0 to 9\r\n\r\n            // The maximum number of significant digits of the result of the toPower operation.\r\n            // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n            POW_PRECISION = 0,                       // 0 to MAX\r\n\r\n            // The format specification used by the BigNumber.prototype.toFormat method.\r\n            FORMAT = {\r\n                decimalSeparator: '.',\r\n                groupSeparator: ',',\r\n                groupSize: 3,\r\n                secondaryGroupSize: 0,\r\n                fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n                fractionGroupSize: 0\r\n            };\r\n\r\n\r\n        /******************************************************************************************/\r\n\r\n\r\n        // CONSTRUCTOR\r\n\r\n\r\n        /*\r\n         * The BigNumber constructor and exported function.\r\n         * Create and return a new instance of a BigNumber object.\r\n         *\r\n         * n {number|string|BigNumber} A numeric value.\r\n         * [b] {number} The base of n. Integer, 2 to 64 inclusive.\r\n         */\r\n        function BigNumber( n, b ) {\r\n            var c, e, i, num, len, str,\r\n                x = this;\r\n\r\n            // Enable constructor usage without new.\r\n            if ( !( x instanceof BigNumber ) ) {\r\n\r\n                // 'BigNumber() constructor call without new: {n}'\r\n                if (ERRORS) raise( 26, 'constructor call without new', n );\r\n                return new BigNumber( n, b );\r\n            }\r\n\r\n            // 'new BigNumber() base not an integer: {b}'\r\n            // 'new BigNumber() base out of range: {b}'\r\n            if ( b == null || !isValidInt( b, 2, 64, id, 'base' ) ) {\r\n\r\n                // Duplicate.\r\n                if ( n instanceof BigNumber ) {\r\n                    x.s = n.s;\r\n                    x.e = n.e;\r\n                    x.c = ( n = n.c ) ? n.slice() : n;\r\n                    id = 0;\r\n                    return;\r\n                }\r\n\r\n                if ( ( num = typeof n == 'number' ) && n * 0 == 0 ) {\r\n                    x.s = 1 / n < 0 ? ( n = -n, -1 ) : 1;\r\n\r\n                    // Fast path for integers.\r\n                    if ( n === ~~n ) {\r\n                        for ( e = 0, i = n; i >= 10; i /= 10, e++ );\r\n                        x.e = e;\r\n                        x.c = [n];\r\n                        id = 0;\r\n                        return;\r\n                    }\r\n\r\n                    str = n + '';\r\n                } else {\r\n                    if ( !isNumeric.test( str = n + '' ) ) return parseNumeric( x, str, num );\r\n                    x.s = str.charCodeAt(0) === 45 ? ( str = str.slice(1), -1 ) : 1;\r\n                }\r\n            } else {\r\n                b = b | 0;\r\n                str = n + '';\r\n\r\n                // Ensure return value is rounded to DECIMAL_PLACES as with other bases.\r\n                // Allow exponential notation to be used with base 10 argument.\r\n                if ( b == 10 ) {\r\n                    x = new BigNumber( n instanceof BigNumber ? n : str );\r\n                    return round( x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE );\r\n                }\r\n\r\n                // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n                // Any number in exponential form will fail due to the [Ee][+-].\r\n                if ( ( num = typeof n == 'number' ) && n * 0 != 0 ||\r\n                  !( new RegExp( '^-?' + ( c = '[' + ALPHABET.slice( 0, b ) + ']+' ) +\r\n                    '(?:\\\\.' + c + ')?$',b < 37 ? 'i' : '' ) ).test(str) ) {\r\n                    return parseNumeric( x, str, num, b );\r\n                }\r\n\r\n                if (num) {\r\n                    x.s = 1 / n < 0 ? ( str = str.slice(1), -1 ) : 1;\r\n\r\n                    if ( ERRORS && str.replace( /^0\\.0*|\\./, '' ).length > 15 ) {\r\n\r\n                        // 'new BigNumber() number type has more than 15 significant digits: {n}'\r\n                        raise( id, tooManyDigits, n );\r\n                    }\r\n\r\n                    // Prevent later check for length on converted number.\r\n                    num = false;\r\n                } else {\r\n                    x.s = str.charCodeAt(0) === 45 ? ( str = str.slice(1), -1 ) : 1;\r\n                }\r\n\r\n                str = convertBase( str, 10, b, x.s );\r\n            }\r\n\r\n            // Decimal point?\r\n            if ( ( e = str.indexOf('.') ) > -1 ) str = str.replace( '.', '' );\r\n\r\n            // Exponential form?\r\n            if ( ( i = str.search( /e/i ) ) > 0 ) {\r\n\r\n                // Determine exponent.\r\n                if ( e < 0 ) e = i;\r\n                e += +str.slice( i + 1 );\r\n                str = str.substring( 0, i );\r\n            } else if ( e < 0 ) {\r\n\r\n                // Integer.\r\n                e = str.length;\r\n            }\r\n\r\n            // Determine leading zeros.\r\n            for ( i = 0; str.charCodeAt(i) === 48; i++ );\r\n\r\n            // Determine trailing zeros.\r\n            for ( len = str.length; str.charCodeAt(--len) === 48; );\r\n            str = str.slice( i, len + 1 );\r\n\r\n            if (str) {\r\n                len = str.length;\r\n\r\n                // Disallow numbers with over 15 significant digits if number type.\r\n                // 'new BigNumber() number type has more than 15 significant digits: {n}'\r\n                if ( num && ERRORS && len > 15 && ( n > MAX_SAFE_INTEGER || n !== mathfloor(n) ) ) {\r\n                    raise( id, tooManyDigits, x.s * n );\r\n                }\r\n\r\n                e = e - i - 1;\r\n\r\n                 // Overflow?\r\n                if ( e > MAX_EXP ) {\r\n\r\n                    // Infinity.\r\n                    x.c = x.e = null;\r\n\r\n                // Underflow?\r\n                } else if ( e < MIN_EXP ) {\r\n\r\n                    // Zero.\r\n                    x.c = [ x.e = 0 ];\r\n                } else {\r\n                    x.e = e;\r\n                    x.c = [];\r\n\r\n                    // Transform base\r\n\r\n                    // e is the base 10 exponent.\r\n                    // i is where to slice str to get the first element of the coefficient array.\r\n                    i = ( e + 1 ) % LOG_BASE;\r\n                    if ( e < 0 ) i += LOG_BASE;\r\n\r\n                    if ( i < len ) {\r\n                        if (i) x.c.push( +str.slice( 0, i ) );\r\n\r\n                        for ( len -= LOG_BASE; i < len; ) {\r\n                            x.c.push( +str.slice( i, i += LOG_BASE ) );\r\n                        }\r\n\r\n                        str = str.slice(i);\r\n                        i = LOG_BASE - str.length;\r\n                    } else {\r\n                        i -= len;\r\n                    }\r\n\r\n                    for ( ; i--; str += '0' );\r\n                    x.c.push( +str );\r\n                }\r\n            } else {\r\n\r\n                // Zero.\r\n                x.c = [ x.e = 0 ];\r\n            }\r\n\r\n            id = 0;\r\n        }\r\n\r\n\r\n        // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n        BigNumber.another = constructorFactory;\r\n\r\n        BigNumber.ROUND_UP = 0;\r\n        BigNumber.ROUND_DOWN = 1;\r\n        BigNumber.ROUND_CEIL = 2;\r\n        BigNumber.ROUND_FLOOR = 3;\r\n        BigNumber.ROUND_HALF_UP = 4;\r\n        BigNumber.ROUND_HALF_DOWN = 5;\r\n        BigNumber.ROUND_HALF_EVEN = 6;\r\n        BigNumber.ROUND_HALF_CEIL = 7;\r\n        BigNumber.ROUND_HALF_FLOOR = 8;\r\n        BigNumber.EUCLID = 9;\r\n\r\n\r\n        /*\r\n         * Configure infrequently-changing library-wide settings.\r\n         *\r\n         * Accept an object or an argument list, with one or many of the following properties or\r\n         * parameters respectively:\r\n         *\r\n         *   DECIMAL_PLACES  {number}  Integer, 0 to MAX inclusive\r\n         *   ROUNDING_MODE   {number}  Integer, 0 to 8 inclusive\r\n         *   EXPONENTIAL_AT  {number|number[]}  Integer, -MAX to MAX inclusive or\r\n         *                                      [integer -MAX to 0 incl., 0 to MAX incl.]\r\n         *   RANGE           {number|number[]}  Non-zero integer, -MAX to MAX inclusive or\r\n         *                                      [integer -MAX to -1 incl., integer 1 to MAX incl.]\r\n         *   ERRORS          {boolean|number}   true, false, 1 or 0\r\n         *   CRYPTO          {boolean|number}   true, false, 1 or 0\r\n         *   MODULO_MODE     {number}           0 to 9 inclusive\r\n         *   POW_PRECISION   {number}           0 to MAX inclusive\r\n         *   FORMAT          {object}           See BigNumber.prototype.toFormat\r\n         *      decimalSeparator       {string}\r\n         *      groupSeparator         {string}\r\n         *      groupSize              {number}\r\n         *      secondaryGroupSize     {number}\r\n         *      fractionGroupSeparator {string}\r\n         *      fractionGroupSize      {number}\r\n         *\r\n         * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n         *\r\n         * E.g.\r\n         * BigNumber.config(20, 4) is equivalent to\r\n         * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n         *\r\n         * Ignore properties/parameters set to null or undefined.\r\n         * Return an object with the properties current values.\r\n         */\r\n        BigNumber.config = BigNumber.set = function () {\r\n            var v, p,\r\n                i = 0,\r\n                r = {},\r\n                a = arguments,\r\n                o = a[0],\r\n                has = o && typeof o == 'object'\r\n                  ? function () { if ( o.hasOwnProperty(p) ) return ( v = o[p] ) != null; }\r\n                  : function () { if ( a.length > i ) return ( v = a[i++] ) != null; };\r\n\r\n            // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n            // 'config() DECIMAL_PLACES not an integer: {v}'\r\n            // 'config() DECIMAL_PLACES out of range: {v}'\r\n            if ( has( p = 'DECIMAL_PLACES' ) && isValidInt( v, 0, MAX, 2, p ) ) {\r\n                DECIMAL_PLACES = v | 0;\r\n            }\r\n            r[p] = DECIMAL_PLACES;\r\n\r\n            // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n            // 'config() ROUNDING_MODE not an integer: {v}'\r\n            // 'config() ROUNDING_MODE out of range: {v}'\r\n            if ( has( p = 'ROUNDING_MODE' ) && isValidInt( v, 0, 8, 2, p ) ) {\r\n                ROUNDING_MODE = v | 0;\r\n            }\r\n            r[p] = ROUNDING_MODE;\r\n\r\n            // EXPONENTIAL_AT {number|number[]}\r\n            // Integer, -MAX to MAX inclusive or [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n            // 'config() EXPONENTIAL_AT not an integer: {v}'\r\n            // 'config() EXPONENTIAL_AT out of range: {v}'\r\n            if ( has( p = 'EXPONENTIAL_AT' ) ) {\r\n\r\n                if ( isArray(v) ) {\r\n                    if ( isValidInt( v[0], -MAX, 0, 2, p ) && isValidInt( v[1], 0, MAX, 2, p ) ) {\r\n                        TO_EXP_NEG = v[0] | 0;\r\n                        TO_EXP_POS = v[1] | 0;\r\n                    }\r\n                } else if ( isValidInt( v, -MAX, MAX, 2, p ) ) {\r\n                    TO_EXP_NEG = -( TO_EXP_POS = ( v < 0 ? -v : v ) | 0 );\r\n                }\r\n            }\r\n            r[p] = [ TO_EXP_NEG, TO_EXP_POS ];\r\n\r\n            // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n            // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n            // 'config() RANGE not an integer: {v}'\r\n            // 'config() RANGE cannot be zero: {v}'\r\n            // 'config() RANGE out of range: {v}'\r\n            if ( has( p = 'RANGE' ) ) {\r\n\r\n                if ( isArray(v) ) {\r\n                    if ( isValidInt( v[0], -MAX, -1, 2, p ) && isValidInt( v[1], 1, MAX, 2, p ) ) {\r\n                        MIN_EXP = v[0] | 0;\r\n                        MAX_EXP = v[1] | 0;\r\n                    }\r\n                } else if ( isValidInt( v, -MAX, MAX, 2, p ) ) {\r\n                    if ( v | 0 ) MIN_EXP = -( MAX_EXP = ( v < 0 ? -v : v ) | 0 );\r\n                    else if (ERRORS) raise( 2, p + ' cannot be zero', v );\r\n                }\r\n            }\r\n            r[p] = [ MIN_EXP, MAX_EXP ];\r\n\r\n            // ERRORS {boolean|number} true, false, 1 or 0.\r\n            // 'config() ERRORS not a boolean or binary digit: {v}'\r\n            if ( has( p = 'ERRORS' ) ) {\r\n\r\n                if ( v === !!v || v === 1 || v === 0 ) {\r\n                    id = 0;\r\n                    isValidInt = ( ERRORS = !!v ) ? intValidatorWithErrors : intValidatorNoErrors;\r\n                } else if (ERRORS) {\r\n                    raise( 2, p + notBool, v );\r\n                }\r\n            }\r\n            r[p] = ERRORS;\r\n\r\n            // CRYPTO {boolean|number} true, false, 1 or 0.\r\n            // 'config() CRYPTO not a boolean or binary digit: {v}'\r\n            // 'config() crypto unavailable: {crypto}'\r\n            if ( has( p = 'CRYPTO' ) ) {\r\n\r\n                if ( v === true || v === false || v === 1 || v === 0 ) {\r\n                    if (v) {\r\n                        v = typeof crypto == 'undefined';\r\n                        if ( !v && crypto && (crypto.getRandomValues || crypto.randomBytes)) {\r\n                            CRYPTO = true;\r\n                        } else if (ERRORS) {\r\n                            raise( 2, 'crypto unavailable', v ? void 0 : crypto );\r\n                        } else {\r\n                            CRYPTO = false;\r\n                        }\r\n                    } else {\r\n                        CRYPTO = false;\r\n                    }\r\n                } else if (ERRORS) {\r\n                    raise( 2, p + notBool, v );\r\n                }\r\n            }\r\n            r[p] = CRYPTO;\r\n\r\n            // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n            // 'config() MODULO_MODE not an integer: {v}'\r\n            // 'config() MODULO_MODE out of range: {v}'\r\n            if ( has( p = 'MODULO_MODE' ) && isValidInt( v, 0, 9, 2, p ) ) {\r\n                MODULO_MODE = v | 0;\r\n            }\r\n            r[p] = MODULO_MODE;\r\n\r\n            // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n            // 'config() POW_PRECISION not an integer: {v}'\r\n            // 'config() POW_PRECISION out of range: {v}'\r\n            if ( has( p = 'POW_PRECISION' ) && isValidInt( v, 0, MAX, 2, p ) ) {\r\n                POW_PRECISION = v | 0;\r\n            }\r\n            r[p] = POW_PRECISION;\r\n\r\n            // FORMAT {object}\r\n            // 'config() FORMAT not an object: {v}'\r\n            if ( has( p = 'FORMAT' ) ) {\r\n\r\n                if ( typeof v == 'object' ) {\r\n                    FORMAT = v;\r\n                } else if (ERRORS) {\r\n                    raise( 2, p + ' not an object', v );\r\n                }\r\n            }\r\n            r[p] = FORMAT;\r\n\r\n            return r;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return true if value v is a BigNumber instance, otherwise return false.\r\n         *\r\n         * v {any} A value that may or may not be a BigNumber instance.\r\n         */\r\n        BigNumber.isBigNumber = isBigNumber;\r\n\r\n\r\n        /*\r\n         * Return a new BigNumber whose value is the maximum of the arguments.\r\n         *\r\n         * arguments {number|string|BigNumber}\r\n         */\r\n        BigNumber.max = function () { return maxOrMin( arguments, P.lt ); };\r\n\r\n\r\n        /*\r\n         * Return a new BigNumber whose value is the minimum of the arguments.\r\n         *\r\n         * arguments {number|string|BigNumber}\r\n         */\r\n        BigNumber.min = function () { return maxOrMin( arguments, P.gt ); };\r\n\r\n\r\n        /*\r\n         * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n         * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n         * zeros are produced).\r\n         *\r\n         * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n         *\r\n         * 'random() decimal places not an integer: {dp}'\r\n         * 'random() decimal places out of range: {dp}'\r\n         * 'random() crypto unavailable: {crypto}'\r\n         */\r\n        BigNumber.random = (function () {\r\n            var pow2_53 = 0x20000000000000;\r\n\r\n            // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n            // Check if Math.random() produces more than 32 bits of randomness.\r\n            // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n            // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n            var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n              ? function () { return mathfloor( Math.random() * pow2_53 ); }\r\n              : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n                  (Math.random() * 0x800000 | 0); };\r\n\r\n            return function (dp) {\r\n                var a, b, e, k, v,\r\n                    i = 0,\r\n                    c = [],\r\n                    rand = new BigNumber(ONE);\r\n\r\n                dp = dp == null || !isValidInt( dp, 0, MAX, 14 ) ? DECIMAL_PLACES : dp | 0;\r\n                k = mathceil( dp / LOG_BASE );\r\n\r\n                if (CRYPTO) {\r\n\r\n                    // Browsers supporting crypto.getRandomValues.\r\n                    if (crypto.getRandomValues) {\r\n\r\n                        a = crypto.getRandomValues( new Uint32Array( k *= 2 ) );\r\n\r\n                        for ( ; i < k; ) {\r\n\r\n                            // 53 bits:\r\n                            // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n                            // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n                            // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n                            //                                     11111 11111111 11111111\r\n                            // 0x20000 is 2^21.\r\n                            v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n                            // Rejection sampling:\r\n                            // 0 <= v < 9007199254740992\r\n                            // Probability that v >= 9e15, is\r\n                            // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n                            if ( v >= 9e15 ) {\r\n                                b = crypto.getRandomValues( new Uint32Array(2) );\r\n                                a[i] = b[0];\r\n                                a[i + 1] = b[1];\r\n                            } else {\r\n\r\n                                // 0 <= v <= 8999999999999999\r\n                                // 0 <= (v % 1e14) <= 99999999999999\r\n                                c.push( v % 1e14 );\r\n                                i += 2;\r\n                            }\r\n                        }\r\n                        i = k / 2;\r\n\r\n                    // Node.js supporting crypto.randomBytes.\r\n                    } else if (crypto.randomBytes) {\r\n\r\n                        // buffer\r\n                        a = crypto.randomBytes( k *= 7 );\r\n\r\n                        for ( ; i < k; ) {\r\n\r\n                            // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n                            // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n                            // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n                            // 0 <= v < 9007199254740992\r\n                            v = ( ( a[i] & 31 ) * 0x1000000000000 ) + ( a[i + 1] * 0x10000000000 ) +\r\n                                  ( a[i + 2] * 0x100000000 ) + ( a[i + 3] * 0x1000000 ) +\r\n                                  ( a[i + 4] << 16 ) + ( a[i + 5] << 8 ) + a[i + 6];\r\n\r\n                            if ( v >= 9e15 ) {\r\n                                crypto.randomBytes(7).copy( a, i );\r\n                            } else {\r\n\r\n                                // 0 <= (v % 1e14) <= 99999999999999\r\n                                c.push( v % 1e14 );\r\n                                i += 7;\r\n                            }\r\n                        }\r\n                        i = k / 7;\r\n                    } else {\r\n                        CRYPTO = false;\r\n                        if (ERRORS) raise( 14, 'crypto unavailable', crypto );\r\n                    }\r\n                }\r\n\r\n                // Use Math.random.\r\n                if (!CRYPTO) {\r\n\r\n                    for ( ; i < k; ) {\r\n                        v = random53bitInt();\r\n                        if ( v < 9e15 ) c[i++] = v % 1e14;\r\n                    }\r\n                }\r\n\r\n                k = c[--i];\r\n                dp %= LOG_BASE;\r\n\r\n                // Convert trailing digits to zeros according to dp.\r\n                if ( k && dp ) {\r\n                    v = POWS_TEN[LOG_BASE - dp];\r\n                    c[i] = mathfloor( k / v ) * v;\r\n                }\r\n\r\n                // Remove trailing elements which are zero.\r\n                for ( ; c[i] === 0; c.pop(), i-- );\r\n\r\n                // Zero?\r\n                if ( i < 0 ) {\r\n                    c = [ e = 0 ];\r\n                } else {\r\n\r\n                    // Remove leading elements which are zero and adjust exponent accordingly.\r\n                    for ( e = -1 ; c[0] === 0; c.shift(), e -= LOG_BASE);\r\n\r\n                    // Count the digits of the first element of c to determine leading zeros, and...\r\n                    for ( i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n                    // adjust the exponent accordingly.\r\n                    if ( i < LOG_BASE ) e -= LOG_BASE - i;\r\n                }\r\n\r\n                rand.e = e;\r\n                rand.c = c;\r\n                return rand;\r\n            };\r\n        })();\r\n\r\n\r\n        // PRIVATE FUNCTIONS\r\n\r\n\r\n        // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n        function convertBase( str, baseOut, baseIn, sign ) {\r\n            var d, e, k, r, x, xc, y,\r\n                i = str.indexOf( '.' ),\r\n                dp = DECIMAL_PLACES,\r\n                rm = ROUNDING_MODE;\r\n\r\n            if ( baseIn < 37 ) str = str.toLowerCase();\r\n\r\n            // Non-integer.\r\n            if ( i >= 0 ) {\r\n                k = POW_PRECISION;\r\n\r\n                // Unlimited precision.\r\n                POW_PRECISION = 0;\r\n                str = str.replace( '.', '' );\r\n                y = new BigNumber(baseIn);\r\n                x = y.pow( str.length - i );\r\n                POW_PRECISION = k;\r\n\r\n                // Convert str as if an integer, then restore the fraction part by dividing the\r\n                // result by its base raised to a power.\r\n                y.c = toBaseOut( toFixedPoint( coeffToString( x.c ), x.e ), 10, baseOut );\r\n                y.e = y.c.length;\r\n            }\r\n\r\n            // Convert the number as integer.\r\n            xc = toBaseOut( str, baseIn, baseOut );\r\n            e = k = xc.length;\r\n\r\n            // Remove trailing zeros.\r\n            for ( ; xc[--k] == 0; xc.pop() );\r\n            if ( !xc[0] ) return '0';\r\n\r\n            if ( i < 0 ) {\r\n                --e;\r\n            } else {\r\n                x.c = xc;\r\n                x.e = e;\r\n\r\n                // sign is needed for correct rounding.\r\n                x.s = sign;\r\n                x = div( x, y, dp, rm, baseOut );\r\n                xc = x.c;\r\n                r = x.r;\r\n                e = x.e;\r\n            }\r\n\r\n            d = e + dp + 1;\r\n\r\n            // The rounding digit, i.e. the digit to the right of the digit that may be rounded up.\r\n            i = xc[d];\r\n            k = baseOut / 2;\r\n            r = r || d < 0 || xc[d + 1] != null;\r\n\r\n            r = rm < 4 ? ( i != null || r ) && ( rm == 0 || rm == ( x.s < 0 ? 3 : 2 ) )\r\n                       : i > k || i == k &&( rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n                         rm == ( x.s < 0 ? 8 : 7 ) );\r\n\r\n            if ( d < 1 || !xc[0] ) {\r\n\r\n                // 1^-dp or 0.\r\n                str = r ? toFixedPoint( '1', -dp ) : '0';\r\n            } else {\r\n                xc.length = d;\r\n\r\n                if (r) {\r\n\r\n                    // Rounding up may mean the previous digit has to be rounded up and so on.\r\n                    for ( --baseOut; ++xc[--d] > baseOut; ) {\r\n                        xc[d] = 0;\r\n\r\n                        if ( !d ) {\r\n                            ++e;\r\n                            xc.unshift(1);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Determine trailing zeros.\r\n                for ( k = xc.length; !xc[--k]; );\r\n\r\n                // E.g. [4, 11, 15] becomes 4bf.\r\n                for ( i = 0, str = ''; i <= k; str += ALPHABET.charAt( xc[i++] ) );\r\n                str = toFixedPoint( str, e );\r\n            }\r\n\r\n            // The caller will add the sign.\r\n            return str;\r\n        }\r\n\r\n\r\n        // Perform division in the specified base. Called by div and convertBase.\r\n        div = (function () {\r\n\r\n            // Assume non-zero x and k.\r\n            function multiply( x, k, base ) {\r\n                var m, temp, xlo, xhi,\r\n                    carry = 0,\r\n                    i = x.length,\r\n                    klo = k % SQRT_BASE,\r\n                    khi = k / SQRT_BASE | 0;\r\n\r\n                for ( x = x.slice(); i--; ) {\r\n                    xlo = x[i] % SQRT_BASE;\r\n                    xhi = x[i] / SQRT_BASE | 0;\r\n                    m = khi * xlo + xhi * klo;\r\n                    temp = klo * xlo + ( ( m % SQRT_BASE ) * SQRT_BASE ) + carry;\r\n                    carry = ( temp / base | 0 ) + ( m / SQRT_BASE | 0 ) + khi * xhi;\r\n                    x[i] = temp % base;\r\n                }\r\n\r\n                if (carry) x.unshift(carry);\r\n\r\n                return x;\r\n            }\r\n\r\n            function compare( a, b, aL, bL ) {\r\n                var i, cmp;\r\n\r\n                if ( aL != bL ) {\r\n                    cmp = aL > bL ? 1 : -1;\r\n                } else {\r\n\r\n                    for ( i = cmp = 0; i < aL; i++ ) {\r\n\r\n                        if ( a[i] != b[i] ) {\r\n                            cmp = a[i] > b[i] ? 1 : -1;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                return cmp;\r\n            }\r\n\r\n            function subtract( a, b, aL, base ) {\r\n                var i = 0;\r\n\r\n                // Subtract b from a.\r\n                for ( ; aL--; ) {\r\n                    a[aL] -= i;\r\n                    i = a[aL] < b[aL] ? 1 : 0;\r\n                    a[aL] = i * base + a[aL] - b[aL];\r\n                }\r\n\r\n                // Remove leading zeros.\r\n                for ( ; !a[0] && a.length > 1; a.shift() );\r\n            }\r\n\r\n            // x: dividend, y: divisor.\r\n            return function ( x, y, dp, rm, base ) {\r\n                var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n                    yL, yz,\r\n                    s = x.s == y.s ? 1 : -1,\r\n                    xc = x.c,\r\n                    yc = y.c;\r\n\r\n                // Either NaN, Infinity or 0?\r\n                if ( !xc || !xc[0] || !yc || !yc[0] ) {\r\n\r\n                    return new BigNumber(\r\n\r\n                      // Return NaN if either NaN, or both Infinity or 0.\r\n                      !x.s || !y.s || ( xc ? yc && xc[0] == yc[0] : !yc ) ? NaN :\r\n\r\n                        // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n                        xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n                    );\r\n                }\r\n\r\n                q = new BigNumber(s);\r\n                qc = q.c = [];\r\n                e = x.e - y.e;\r\n                s = dp + e + 1;\r\n\r\n                if ( !base ) {\r\n                    base = BASE;\r\n                    e = bitFloor( x.e / LOG_BASE ) - bitFloor( y.e / LOG_BASE );\r\n                    s = s / LOG_BASE | 0;\r\n                }\r\n\r\n                // Result exponent may be one less then the current value of e.\r\n                // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n                for ( i = 0; yc[i] == ( xc[i] || 0 ); i++ );\r\n                if ( yc[i] > ( xc[i] || 0 ) ) e--;\r\n\r\n                if ( s < 0 ) {\r\n                    qc.push(1);\r\n                    more = true;\r\n                } else {\r\n                    xL = xc.length;\r\n                    yL = yc.length;\r\n                    i = 0;\r\n                    s += 2;\r\n\r\n                    // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n                    n = mathfloor( base / ( yc[0] + 1 ) );\r\n\r\n                    // Not necessary, but to handle odd bases where yc[0] == ( base / 2 ) - 1.\r\n                    // if ( n > 1 || n++ == 1 && yc[0] < base / 2 ) {\r\n                    if ( n > 1 ) {\r\n                        yc = multiply( yc, n, base );\r\n                        xc = multiply( xc, n, base );\r\n                        yL = yc.length;\r\n                        xL = xc.length;\r\n                    }\r\n\r\n                    xi = yL;\r\n                    rem = xc.slice( 0, yL );\r\n                    remL = rem.length;\r\n\r\n                    // Add zeros to make remainder as long as divisor.\r\n                    for ( ; remL < yL; rem[remL++] = 0 );\r\n                    yz = yc.slice();\r\n                    yz.unshift(0);\r\n                    yc0 = yc[0];\r\n                    if ( yc[1] >= base / 2 ) yc0++;\r\n                    // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n                    // else if ( base == 3 && yc0 == 1 ) yc0 = 1 + 1e-15;\r\n\r\n                    do {\r\n                        n = 0;\r\n\r\n                        // Compare divisor and remainder.\r\n                        cmp = compare( yc, rem, yL, remL );\r\n\r\n                        // If divisor < remainder.\r\n                        if ( cmp < 0 ) {\r\n\r\n                            // Calculate trial digit, n.\r\n\r\n                            rem0 = rem[0];\r\n                            if ( yL != remL ) rem0 = rem0 * base + ( rem[1] || 0 );\r\n\r\n                            // n is how many times the divisor goes into the current remainder.\r\n                            n = mathfloor( rem0 / yc0 );\r\n\r\n                            //  Algorithm:\r\n                            //  1. product = divisor * trial digit (n)\r\n                            //  2. if product > remainder: product -= divisor, n--\r\n                            //  3. remainder -= product\r\n                            //  4. if product was < remainder at 2:\r\n                            //    5. compare new remainder and divisor\r\n                            //    6. If remainder > divisor: remainder -= divisor, n++\r\n\r\n                            if ( n > 1 ) {\r\n\r\n                                // n may be > base only when base is 3.\r\n                                if (n >= base) n = base - 1;\r\n\r\n                                // product = divisor * trial digit.\r\n                                prod = multiply( yc, n, base );\r\n                                prodL = prod.length;\r\n                                remL = rem.length;\r\n\r\n                                // Compare product and remainder.\r\n                                // If product > remainder.\r\n                                // Trial digit n too high.\r\n                                // n is 1 too high about 5% of the time, and is not known to have\r\n                                // ever been more than 1 too high.\r\n                                while ( compare( prod, rem, prodL, remL ) == 1 ) {\r\n                                    n--;\r\n\r\n                                    // Subtract divisor from product.\r\n                                    subtract( prod, yL < prodL ? yz : yc, prodL, base );\r\n                                    prodL = prod.length;\r\n                                    cmp = 1;\r\n                                }\r\n                            } else {\r\n\r\n                                // n is 0 or 1, cmp is -1.\r\n                                // If n is 0, there is no need to compare yc and rem again below,\r\n                                // so change cmp to 1 to avoid it.\r\n                                // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n                                if ( n == 0 ) {\r\n\r\n                                    // divisor < remainder, so n must be at least 1.\r\n                                    cmp = n = 1;\r\n                                }\r\n\r\n                                // product = divisor\r\n                                prod = yc.slice();\r\n                                prodL = prod.length;\r\n                            }\r\n\r\n                            if ( prodL < remL ) prod.unshift(0);\r\n\r\n                            // Subtract product from remainder.\r\n                            subtract( rem, prod, remL, base );\r\n                            remL = rem.length;\r\n\r\n                             // If product was < remainder.\r\n                            if ( cmp == -1 ) {\r\n\r\n                                // Compare divisor and new remainder.\r\n                                // If divisor < new remainder, subtract divisor from remainder.\r\n                                // Trial digit n too low.\r\n                                // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n                                while ( compare( yc, rem, yL, remL ) < 1 ) {\r\n                                    n++;\r\n\r\n                                    // Subtract divisor from remainder.\r\n                                    subtract( rem, yL < remL ? yz : yc, remL, base );\r\n                                    remL = rem.length;\r\n                                }\r\n                            }\r\n                        } else if ( cmp === 0 ) {\r\n                            n++;\r\n                            rem = [0];\r\n                        } // else cmp === 1 and n will be 0\r\n\r\n                        // Add the next digit, n, to the result array.\r\n                        qc[i++] = n;\r\n\r\n                        // Update the remainder.\r\n                        if ( rem[0] ) {\r\n                            rem[remL++] = xc[xi] || 0;\r\n                        } else {\r\n                            rem = [ xc[xi] ];\r\n                            remL = 1;\r\n                        }\r\n                    } while ( ( xi++ < xL || rem[0] != null ) && s-- );\r\n\r\n                    more = rem[0] != null;\r\n\r\n                    // Leading zero?\r\n                    if ( !qc[0] ) qc.shift();\r\n                }\r\n\r\n                if ( base == BASE ) {\r\n\r\n                    // To calculate q.e, first get the number of digits of qc[0].\r\n                    for ( i = 1, s = qc[0]; s >= 10; s /= 10, i++ );\r\n                    round( q, dp + ( q.e = i + e * LOG_BASE - 1 ) + 1, rm, more );\r\n\r\n                // Caller is convertBase.\r\n                } else {\r\n                    q.e = e;\r\n                    q.r = +more;\r\n                }\r\n\r\n                return q;\r\n            };\r\n        })();\r\n\r\n\r\n        /*\r\n         * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n         * notation rounded to the specified decimal places or significant digits.\r\n         *\r\n         * n is a BigNumber.\r\n         * i is the index of the last digit required (i.e. the digit that may be rounded up).\r\n         * rm is the rounding mode.\r\n         * caller is caller id: toExponential 19, toFixed 20, toFormat 21, toPrecision 24.\r\n         */\r\n        function format( n, i, rm, caller ) {\r\n            var c0, e, ne, len, str;\r\n\r\n            rm = rm != null && isValidInt( rm, 0, 8, caller, roundingMode )\r\n              ? rm | 0 : ROUNDING_MODE;\r\n\r\n            if ( !n.c ) return n.toString();\r\n            c0 = n.c[0];\r\n            ne = n.e;\r\n\r\n            if ( i == null ) {\r\n                str = coeffToString( n.c );\r\n                str = caller == 19 || caller == 24 && ne <= TO_EXP_NEG\r\n                  ? toExponential( str, ne )\r\n                  : toFixedPoint( str, ne );\r\n            } else {\r\n                n = round( new BigNumber(n), i, rm );\r\n\r\n                // n.e may have changed if the value was rounded up.\r\n                e = n.e;\r\n\r\n                str = coeffToString( n.c );\r\n                len = str.length;\r\n\r\n                // toPrecision returns exponential notation if the number of significant digits\r\n                // specified is less than the number of digits necessary to represent the integer\r\n                // part of the value in fixed-point notation.\r\n\r\n                // Exponential notation.\r\n                if ( caller == 19 || caller == 24 && ( i <= e || e <= TO_EXP_NEG ) ) {\r\n\r\n                    // Append zeros?\r\n                    for ( ; len < i; str += '0', len++ );\r\n                    str = toExponential( str, e );\r\n\r\n                // Fixed-point notation.\r\n                } else {\r\n                    i -= ne;\r\n                    str = toFixedPoint( str, e );\r\n\r\n                    // Append zeros?\r\n                    if ( e + 1 > len ) {\r\n                        if ( --i > 0 ) for ( str += '.'; i--; str += '0' );\r\n                    } else {\r\n                        i += e - len;\r\n                        if ( i > 0 ) {\r\n                            if ( e + 1 == len ) str += '.';\r\n                            for ( ; i--; str += '0' );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return n.s < 0 && c0 ? '-' + str : str;\r\n        }\r\n\r\n\r\n        // Handle BigNumber.max and BigNumber.min.\r\n        function maxOrMin( args, method ) {\r\n            var m, n,\r\n                i = 0;\r\n\r\n            if ( isArray( args[0] ) ) args = args[0];\r\n            m = new BigNumber( args[0] );\r\n\r\n            for ( ; ++i < args.length; ) {\r\n                n = new BigNumber( args[i] );\r\n\r\n                // If any number is NaN, return NaN.\r\n                if ( !n.s ) {\r\n                    m = n;\r\n                    break;\r\n                } else if ( method.call( m, n ) ) {\r\n                    m = n;\r\n                }\r\n            }\r\n\r\n            return m;\r\n        }\r\n\r\n\r\n        /*\r\n         * Return true if n is an integer in range, otherwise throw.\r\n         * Use for argument validation when ERRORS is true.\r\n         */\r\n        function intValidatorWithErrors( n, min, max, caller, name ) {\r\n            if ( n < min || n > max || n != truncate(n) ) {\r\n                raise( caller, ( name || 'decimal places' ) +\r\n                  ( n < min || n > max ? ' out of range' : ' not an integer' ), n );\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n\r\n        /*\r\n         * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n         * Called by minus, plus and times.\r\n         */\r\n        function normalise( n, c, e ) {\r\n            var i = 1,\r\n                j = c.length;\r\n\r\n             // Remove trailing zeros.\r\n            for ( ; !c[--j]; c.pop() );\r\n\r\n            // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n            for ( j = c[0]; j >= 10; j /= 10, i++ );\r\n\r\n            // Overflow?\r\n            if ( ( e = i + e * LOG_BASE - 1 ) > MAX_EXP ) {\r\n\r\n                // Infinity.\r\n                n.c = n.e = null;\r\n\r\n            // Underflow?\r\n            } else if ( e < MIN_EXP ) {\r\n\r\n                // Zero.\r\n                n.c = [ n.e = 0 ];\r\n            } else {\r\n                n.e = e;\r\n                n.c = c;\r\n            }\r\n\r\n            return n;\r\n        }\r\n\r\n\r\n        // Handle values that fail the validity test in BigNumber.\r\n        parseNumeric = (function () {\r\n            var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n                dotAfter = /^([^.]+)\\.$/,\r\n                dotBefore = /^\\.([^.]+)$/,\r\n                isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n                whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n            return function ( x, str, num, b ) {\r\n                var base,\r\n                    s = num ? str : str.replace( whitespaceOrPlus, '' );\r\n\r\n                // No exception on ±Infinity or NaN.\r\n                if ( isInfinityOrNaN.test(s) ) {\r\n                    x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n                } else {\r\n                    if ( !num ) {\r\n\r\n                        // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n                        s = s.replace( basePrefix, function ( m, p1, p2 ) {\r\n                            base = ( p2 = p2.toLowerCase() ) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n                            return !b || b == base ? p1 : m;\r\n                        });\r\n\r\n                        if (b) {\r\n                            base = b;\r\n\r\n                            // E.g. '1.' to '1', '.1' to '0.1'\r\n                            s = s.replace( dotAfter, '$1' ).replace( dotBefore, '0.$1' );\r\n                        }\r\n\r\n                        if ( str != s ) return new BigNumber( s, base );\r\n                    }\r\n\r\n                    // 'new BigNumber() not a number: {n}'\r\n                    // 'new BigNumber() not a base {b} number: {n}'\r\n                    if (ERRORS) raise( id, 'not a' + ( b ? ' base ' + b : '' ) + ' number', str );\r\n                    x.s = null;\r\n                }\r\n\r\n                x.c = x.e = null;\r\n                id = 0;\r\n            }\r\n        })();\r\n\r\n\r\n        // Throw a BigNumber Error.\r\n        function raise( caller, msg, val ) {\r\n            var error = new Error( [\r\n                'new BigNumber',     // 0\r\n                'cmp',               // 1\r\n                'config',            // 2\r\n                'div',               // 3\r\n                'divToInt',          // 4\r\n                'eq',                // 5\r\n                'gt',                // 6\r\n                'gte',               // 7\r\n                'lt',                // 8\r\n                'lte',               // 9\r\n                'minus',             // 10\r\n                'mod',               // 11\r\n                'plus',              // 12\r\n                'precision',         // 13\r\n                'random',            // 14\r\n                'round',             // 15\r\n                'shift',             // 16\r\n                'times',             // 17\r\n                'toDigits',          // 18\r\n                'toExponential',     // 19\r\n                'toFixed',           // 20\r\n                'toFormat',          // 21\r\n                'toFraction',        // 22\r\n                'pow',               // 23\r\n                'toPrecision',       // 24\r\n                'toString',          // 25\r\n                'BigNumber'          // 26\r\n            ][caller] + '() ' + msg + ': ' + val );\r\n\r\n            error.name = 'BigNumber Error';\r\n            id = 0;\r\n            throw error;\r\n        }\r\n\r\n\r\n        /*\r\n         * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n         * If r is truthy, it is known that there are more digits after the rounding digit.\r\n         */\r\n        function round( x, sd, rm, r ) {\r\n            var d, i, j, k, n, ni, rd,\r\n                xc = x.c,\r\n                pows10 = POWS_TEN;\r\n\r\n            // if x is not Infinity or NaN...\r\n            if (xc) {\r\n\r\n                // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n                // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n                // ni is the index of n within x.c.\r\n                // d is the number of digits of n.\r\n                // i is the index of rd within n including leading zeros.\r\n                // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n                out: {\r\n\r\n                    // Get the number of digits of the first element of xc.\r\n                    for ( d = 1, k = xc[0]; k >= 10; k /= 10, d++ );\r\n                    i = sd - d;\r\n\r\n                    // If the rounding digit is in the first element of xc...\r\n                    if ( i < 0 ) {\r\n                        i += LOG_BASE;\r\n                        j = sd;\r\n                        n = xc[ ni = 0 ];\r\n\r\n                        // Get the rounding digit at index j of n.\r\n                        rd = n / pows10[ d - j - 1 ] % 10 | 0;\r\n                    } else {\r\n                        ni = mathceil( ( i + 1 ) / LOG_BASE );\r\n\r\n                        if ( ni >= xc.length ) {\r\n\r\n                            if (r) {\r\n\r\n                                // Needed by sqrt.\r\n                                for ( ; xc.length <= ni; xc.push(0) );\r\n                                n = rd = 0;\r\n                                d = 1;\r\n                                i %= LOG_BASE;\r\n                                j = i - LOG_BASE + 1;\r\n                            } else {\r\n                                break out;\r\n                            }\r\n                        } else {\r\n                            n = k = xc[ni];\r\n\r\n                            // Get the number of digits of n.\r\n                            for ( d = 1; k >= 10; k /= 10, d++ );\r\n\r\n                            // Get the index of rd within n.\r\n                            i %= LOG_BASE;\r\n\r\n                            // Get the index of rd within n, adjusted for leading zeros.\r\n                            // The number of leading zeros of n is given by LOG_BASE - d.\r\n                            j = i - LOG_BASE + d;\r\n\r\n                            // Get the rounding digit at index j of n.\r\n                            rd = j < 0 ? 0 : n / pows10[ d - j - 1 ] % 10 | 0;\r\n                        }\r\n                    }\r\n\r\n                    r = r || sd < 0 ||\r\n\r\n                    // Are there any non-zero digits after the rounding digit?\r\n                    // The expression  n % pows10[ d - j - 1 ]  returns all digits of n to the right\r\n                    // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n                      xc[ni + 1] != null || ( j < 0 ? n : n % pows10[ d - j - 1 ] );\r\n\r\n                    r = rm < 4\r\n                      ? ( rd || r ) && ( rm == 0 || rm == ( x.s < 0 ? 3 : 2 ) )\r\n                      : rd > 5 || rd == 5 && ( rm == 4 || r || rm == 6 &&\r\n\r\n                        // Check whether the digit to the left of the rounding digit is odd.\r\n                        ( ( i > 0 ? j > 0 ? n / pows10[ d - j ] : 0 : xc[ni - 1] ) % 10 ) & 1 ||\r\n                          rm == ( x.s < 0 ? 8 : 7 ) );\r\n\r\n                    if ( sd < 1 || !xc[0] ) {\r\n                        xc.length = 0;\r\n\r\n                        if (r) {\r\n\r\n                            // Convert sd to decimal places.\r\n                            sd -= x.e + 1;\r\n\r\n                            // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n                            xc[0] = pows10[ ( LOG_BASE - sd % LOG_BASE ) % LOG_BASE ];\r\n                            x.e = -sd || 0;\r\n                        } else {\r\n\r\n                            // Zero.\r\n                            xc[0] = x.e = 0;\r\n                        }\r\n\r\n                        return x;\r\n                    }\r\n\r\n                    // Remove excess digits.\r\n                    if ( i == 0 ) {\r\n                        xc.length = ni;\r\n                        k = 1;\r\n                        ni--;\r\n                    } else {\r\n                        xc.length = ni + 1;\r\n                        k = pows10[ LOG_BASE - i ];\r\n\r\n                        // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n                        // j > 0 means i > number of leading zeros of n.\r\n                        xc[ni] = j > 0 ? mathfloor( n / pows10[ d - j ] % pows10[j] ) * k : 0;\r\n                    }\r\n\r\n                    // Round up?\r\n                    if (r) {\r\n\r\n                        for ( ; ; ) {\r\n\r\n                            // If the digit to be rounded up is in the first element of xc...\r\n                            if ( ni == 0 ) {\r\n\r\n                                // i will be the length of xc[0] before k is added.\r\n                                for ( i = 1, j = xc[0]; j >= 10; j /= 10, i++ );\r\n                                j = xc[0] += k;\r\n                                for ( k = 1; j >= 10; j /= 10, k++ );\r\n\r\n                                // if i != k the length has increased.\r\n                                if ( i != k ) {\r\n                                    x.e++;\r\n                                    if ( xc[0] == BASE ) xc[0] = 1;\r\n                                }\r\n\r\n                                break;\r\n                            } else {\r\n                                xc[ni] += k;\r\n                                if ( xc[ni] != BASE ) break;\r\n                                xc[ni--] = 0;\r\n                                k = 1;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Remove trailing zeros.\r\n                    for ( i = xc.length; xc[--i] === 0; xc.pop() );\r\n                }\r\n\r\n                // Overflow? Infinity.\r\n                if ( x.e > MAX_EXP ) {\r\n                    x.c = x.e = null;\r\n\r\n                // Underflow? Zero.\r\n                } else if ( x.e < MIN_EXP ) {\r\n                    x.c = [ x.e = 0 ];\r\n                }\r\n            }\r\n\r\n            return x;\r\n        }\r\n\r\n\r\n        // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n        /*\r\n         * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n         */\r\n        P.absoluteValue = P.abs = function () {\r\n            var x = new BigNumber(this);\r\n            if ( x.s < 0 ) x.s = 1;\r\n            return x;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a new BigNumber whose value is the value of this BigNumber rounded to a whole\r\n         * number in the direction of Infinity.\r\n         */\r\n        P.ceil = function () {\r\n            return round( new BigNumber(this), this.e + 1, 2 );\r\n        };\r\n\r\n\r\n        /*\r\n         * Return\r\n         * 1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n         * -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n         * 0 if they have the same value,\r\n         * or null if the value of either is NaN.\r\n         */\r\n        P.comparedTo = P.cmp = function ( y, b ) {\r\n            id = 1;\r\n            return compare( this, new BigNumber( y, b ) );\r\n        };\r\n\r\n\r\n        /*\r\n         * Return the number of decimal places of the value of this BigNumber, or null if the value\r\n         * of this BigNumber is ±Infinity or NaN.\r\n         */\r\n        P.decimalPlaces = P.dp = function () {\r\n            var n, v,\r\n                c = this.c;\r\n\r\n            if ( !c ) return null;\r\n            n = ( ( v = c.length - 1 ) - bitFloor( this.e / LOG_BASE ) ) * LOG_BASE;\r\n\r\n            // Subtract the number of trailing zeros of the last number.\r\n            if ( v = c[v] ) for ( ; v % 10 == 0; v /= 10, n-- );\r\n            if ( n < 0 ) n = 0;\r\n\r\n            return n;\r\n        };\r\n\r\n\r\n        /*\r\n         *  n / 0 = I\r\n         *  n / N = N\r\n         *  n / I = 0\r\n         *  0 / n = 0\r\n         *  0 / 0 = N\r\n         *  0 / N = N\r\n         *  0 / I = 0\r\n         *  N / n = N\r\n         *  N / 0 = N\r\n         *  N / N = N\r\n         *  N / I = N\r\n         *  I / n = I\r\n         *  I / 0 = I\r\n         *  I / N = N\r\n         *  I / I = N\r\n         *\r\n         * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n         * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n         */\r\n        P.dividedBy = P.div = function ( y, b ) {\r\n            id = 3;\r\n            return div( this, new BigNumber( y, b ), DECIMAL_PLACES, ROUNDING_MODE );\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n         * BigNumber by the value of BigNumber(y, b).\r\n         */\r\n        P.dividedToIntegerBy = P.divToInt = function ( y, b ) {\r\n            id = 4;\r\n            return div( this, new BigNumber( y, b ), 0, 1 );\r\n        };\r\n\r\n\r\n        /*\r\n         * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n         * otherwise returns false.\r\n         */\r\n        P.equals = P.eq = function ( y, b ) {\r\n            id = 5;\r\n            return compare( this, new BigNumber( y, b ) ) === 0;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a new BigNumber whose value is the value of this BigNumber rounded to a whole\r\n         * number in the direction of -Infinity.\r\n         */\r\n        P.floor = function () {\r\n            return round( new BigNumber(this), this.e + 1, 3 );\r\n        };\r\n\r\n\r\n        /*\r\n         * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n         * otherwise returns false.\r\n         */\r\n        P.greaterThan = P.gt = function ( y, b ) {\r\n            id = 6;\r\n            return compare( this, new BigNumber( y, b ) ) > 0;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return true if the value of this BigNumber is greater than or equal to the value of\r\n         * BigNumber(y, b), otherwise returns false.\r\n         */\r\n        P.greaterThanOrEqualTo = P.gte = function ( y, b ) {\r\n            id = 7;\r\n            return ( b = compare( this, new BigNumber( y, b ) ) ) === 1 || b === 0;\r\n\r\n        };\r\n\r\n\r\n        /*\r\n         * Return true if the value of this BigNumber is a finite number, otherwise returns false.\r\n         */\r\n        P.isFinite = function () {\r\n            return !!this.c;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n         */\r\n        P.isInteger = P.isInt = function () {\r\n            return !!this.c && bitFloor( this.e / LOG_BASE ) > this.c.length - 2;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return true if the value of this BigNumber is NaN, otherwise returns false.\r\n         */\r\n        P.isNaN = function () {\r\n            return !this.s;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return true if the value of this BigNumber is negative, otherwise returns false.\r\n         */\r\n        P.isNegative = P.isNeg = function () {\r\n            return this.s < 0;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return true if the value of this BigNumber is 0 or -0, otherwise returns false.\r\n         */\r\n        P.isZero = function () {\r\n            return !!this.c && this.c[0] == 0;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n         * otherwise returns false.\r\n         */\r\n        P.lessThan = P.lt = function ( y, b ) {\r\n            id = 8;\r\n            return compare( this, new BigNumber( y, b ) ) < 0;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return true if the value of this BigNumber is less than or equal to the value of\r\n         * BigNumber(y, b), otherwise returns false.\r\n         */\r\n        P.lessThanOrEqualTo = P.lte = function ( y, b ) {\r\n            id = 9;\r\n            return ( b = compare( this, new BigNumber( y, b ) ) ) === -1 || b === 0;\r\n        };\r\n\r\n\r\n        /*\r\n         *  n - 0 = n\r\n         *  n - N = N\r\n         *  n - I = -I\r\n         *  0 - n = -n\r\n         *  0 - 0 = 0\r\n         *  0 - N = N\r\n         *  0 - I = -I\r\n         *  N - n = N\r\n         *  N - 0 = N\r\n         *  N - N = N\r\n         *  N - I = N\r\n         *  I - n = I\r\n         *  I - 0 = I\r\n         *  I - N = N\r\n         *  I - I = N\r\n         *\r\n         * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n         * BigNumber(y, b).\r\n         */\r\n        P.minus = P.sub = function ( y, b ) {\r\n            var i, j, t, xLTy,\r\n                x = this,\r\n                a = x.s;\r\n\r\n            id = 10;\r\n            y = new BigNumber( y, b );\r\n            b = y.s;\r\n\r\n            // Either NaN?\r\n            if ( !a || !b ) return new BigNumber(NaN);\r\n\r\n            // Signs differ?\r\n            if ( a != b ) {\r\n                y.s = -b;\r\n                return x.plus(y);\r\n            }\r\n\r\n            var xe = x.e / LOG_BASE,\r\n                ye = y.e / LOG_BASE,\r\n                xc = x.c,\r\n                yc = y.c;\r\n\r\n            if ( !xe || !ye ) {\r\n\r\n                // Either Infinity?\r\n                if ( !xc || !yc ) return xc ? ( y.s = -b, y ) : new BigNumber( yc ? x : NaN );\r\n\r\n                // Either zero?\r\n                if ( !xc[0] || !yc[0] ) {\r\n\r\n                    // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n                    return yc[0] ? ( y.s = -b, y ) : new BigNumber( xc[0] ? x :\r\n\r\n                      // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n                      ROUNDING_MODE == 3 ? -0 : 0 );\r\n                }\r\n            }\r\n\r\n            xe = bitFloor(xe);\r\n            ye = bitFloor(ye);\r\n            xc = xc.slice();\r\n\r\n            // Determine which is the bigger number.\r\n            if ( a = xe - ye ) {\r\n\r\n                if ( xLTy = a < 0 ) {\r\n                    a = -a;\r\n                    t = xc;\r\n                } else {\r\n                    ye = xe;\r\n                    t = yc;\r\n                }\r\n\r\n                t.reverse();\r\n\r\n                // Prepend zeros to equalise exponents.\r\n                for ( b = a; b--; t.push(0) );\r\n                t.reverse();\r\n            } else {\r\n\r\n                // Exponents equal. Check digit by digit.\r\n                j = ( xLTy = ( a = xc.length ) < ( b = yc.length ) ) ? a : b;\r\n\r\n                for ( a = b = 0; b < j; b++ ) {\r\n\r\n                    if ( xc[b] != yc[b] ) {\r\n                        xLTy = xc[b] < yc[b];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // x < y? Point xc to the array of the bigger number.\r\n            if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\r\n\r\n            b = ( j = yc.length ) - ( i = xc.length );\r\n\r\n            // Append zeros to xc if shorter.\r\n            // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n            if ( b > 0 ) for ( ; b--; xc[i++] = 0 );\r\n            b = BASE - 1;\r\n\r\n            // Subtract yc from xc.\r\n            for ( ; j > a; ) {\r\n\r\n                if ( xc[--j] < yc[j] ) {\r\n                    for ( i = j; i && !xc[--i]; xc[i] = b );\r\n                    --xc[i];\r\n                    xc[j] += BASE;\r\n                }\r\n\r\n                xc[j] -= yc[j];\r\n            }\r\n\r\n            // Remove leading zeros and adjust exponent accordingly.\r\n            for ( ; xc[0] == 0; xc.shift(), --ye );\r\n\r\n            // Zero?\r\n            if ( !xc[0] ) {\r\n\r\n                // Following IEEE 754 (2008) 6.3,\r\n                // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n                y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n                y.c = [ y.e = 0 ];\r\n                return y;\r\n            }\r\n\r\n            // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n            // for finite x and y.\r\n            return normalise( y, xc, ye );\r\n        };\r\n\r\n\r\n        /*\r\n         *   n % 0 =  N\r\n         *   n % N =  N\r\n         *   n % I =  n\r\n         *   0 % n =  0\r\n         *  -0 % n = -0\r\n         *   0 % 0 =  N\r\n         *   0 % N =  N\r\n         *   0 % I =  0\r\n         *   N % n =  N\r\n         *   N % 0 =  N\r\n         *   N % N =  N\r\n         *   N % I =  N\r\n         *   I % n =  N\r\n         *   I % 0 =  N\r\n         *   I % N =  N\r\n         *   I % I =  N\r\n         *\r\n         * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n         * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n         */\r\n        P.modulo = P.mod = function ( y, b ) {\r\n            var q, s,\r\n                x = this;\r\n\r\n            id = 11;\r\n            y = new BigNumber( y, b );\r\n\r\n            // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n            if ( !x.c || !y.s || y.c && !y.c[0] ) {\r\n                return new BigNumber(NaN);\r\n\r\n            // Return x if y is Infinity or x is zero.\r\n            } else if ( !y.c || x.c && !x.c[0] ) {\r\n                return new BigNumber(x);\r\n            }\r\n\r\n            if ( MODULO_MODE == 9 ) {\r\n\r\n                // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n                // r = x - qy    where  0 <= r < abs(y)\r\n                s = y.s;\r\n                y.s = 1;\r\n                q = div( x, y, 0, 3 );\r\n                y.s = s;\r\n                q.s *= s;\r\n            } else {\r\n                q = div( x, y, 0, MODULO_MODE );\r\n            }\r\n\r\n            return x.minus( q.times(y) );\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n         * i.e. multiplied by -1.\r\n         */\r\n        P.negated = P.neg = function () {\r\n            var x = new BigNumber(this);\r\n            x.s = -x.s || null;\r\n            return x;\r\n        };\r\n\r\n\r\n        /*\r\n         *  n + 0 = n\r\n         *  n + N = N\r\n         *  n + I = I\r\n         *  0 + n = n\r\n         *  0 + 0 = 0\r\n         *  0 + N = N\r\n         *  0 + I = I\r\n         *  N + n = N\r\n         *  N + 0 = N\r\n         *  N + N = N\r\n         *  N + I = N\r\n         *  I + n = I\r\n         *  I + 0 = I\r\n         *  I + N = N\r\n         *  I + I = I\r\n         *\r\n         * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n         * BigNumber(y, b).\r\n         */\r\n        P.plus = P.add = function ( y, b ) {\r\n            var t,\r\n                x = this,\r\n                a = x.s;\r\n\r\n            id = 12;\r\n            y = new BigNumber( y, b );\r\n            b = y.s;\r\n\r\n            // Either NaN?\r\n            if ( !a || !b ) return new BigNumber(NaN);\r\n\r\n            // Signs differ?\r\n             if ( a != b ) {\r\n                y.s = -b;\r\n                return x.minus(y);\r\n            }\r\n\r\n            var xe = x.e / LOG_BASE,\r\n                ye = y.e / LOG_BASE,\r\n                xc = x.c,\r\n                yc = y.c;\r\n\r\n            if ( !xe || !ye ) {\r\n\r\n                // Return ±Infinity if either ±Infinity.\r\n                if ( !xc || !yc ) return new BigNumber( a / 0 );\r\n\r\n                // Either zero?\r\n                // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n                if ( !xc[0] || !yc[0] ) return yc[0] ? y : new BigNumber( xc[0] ? x : a * 0 );\r\n            }\r\n\r\n            xe = bitFloor(xe);\r\n            ye = bitFloor(ye);\r\n            xc = xc.slice();\r\n\r\n            // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n            if ( a = xe - ye ) {\r\n                if ( a > 0 ) {\r\n                    ye = xe;\r\n                    t = yc;\r\n                } else {\r\n                    a = -a;\r\n                    t = xc;\r\n                }\r\n\r\n                t.reverse();\r\n                for ( ; a--; t.push(0) );\r\n                t.reverse();\r\n            }\r\n\r\n            a = xc.length;\r\n            b = yc.length;\r\n\r\n            // Point xc to the longer array, and b to the shorter length.\r\n            if ( a - b < 0 ) t = yc, yc = xc, xc = t, b = a;\r\n\r\n            // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n            for ( a = 0; b; ) {\r\n                a = ( xc[--b] = xc[b] + yc[b] + a ) / BASE | 0;\r\n                xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n            }\r\n\r\n            if (a) {\r\n                xc.unshift(a);\r\n                ++ye;\r\n            }\r\n\r\n            // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n            // ye = MAX_EXP + 1 possible\r\n            return normalise( y, xc, ye );\r\n        };\r\n\r\n\r\n        /*\r\n         * Return the number of significant digits of the value of this BigNumber.\r\n         *\r\n         * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\r\n         */\r\n        P.precision = P.sd = function (z) {\r\n            var n, v,\r\n                x = this,\r\n                c = x.c;\r\n\r\n            // 'precision() argument not a boolean or binary digit: {z}'\r\n            if ( z != null && z !== !!z && z !== 1 && z !== 0 ) {\r\n                if (ERRORS) raise( 13, 'argument' + notBool, z );\r\n                if ( z != !!z ) z = null;\r\n            }\r\n\r\n            if ( !c ) return null;\r\n            v = c.length - 1;\r\n            n = v * LOG_BASE + 1;\r\n\r\n            if ( v = c[v] ) {\r\n\r\n                // Subtract the number of trailing zeros of the last element.\r\n                for ( ; v % 10 == 0; v /= 10, n-- );\r\n\r\n                // Add the number of digits of the first element.\r\n                for ( v = c[0]; v >= 10; v /= 10, n++ );\r\n            }\r\n\r\n            if ( z && x.e + 1 > n ) n = x.e + 1;\r\n\r\n            return n;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a new BigNumber whose value is the value of this BigNumber rounded to a maximum of\r\n         * dp decimal places using rounding mode rm, or to 0 and ROUNDING_MODE respectively if\r\n         * omitted.\r\n         *\r\n         * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n         * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n         *\r\n         * 'round() decimal places out of range: {dp}'\r\n         * 'round() decimal places not an integer: {dp}'\r\n         * 'round() rounding mode not an integer: {rm}'\r\n         * 'round() rounding mode out of range: {rm}'\r\n         */\r\n        P.round = function ( dp, rm ) {\r\n            var n = new BigNumber(this);\r\n\r\n            if ( dp == null || isValidInt( dp, 0, MAX, 15 ) ) {\r\n                round( n, ~~dp + this.e + 1, rm == null ||\r\n                  !isValidInt( rm, 0, 8, 15, roundingMode ) ? ROUNDING_MODE : rm | 0 );\r\n            }\r\n\r\n            return n;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n         * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n         *\r\n         * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n         *\r\n         * If k is out of range and ERRORS is false, the result will be ±0 if k < 0, or ±Infinity\r\n         * otherwise.\r\n         *\r\n         * 'shift() argument not an integer: {k}'\r\n         * 'shift() argument out of range: {k}'\r\n         */\r\n        P.shift = function (k) {\r\n            var n = this;\r\n            return isValidInt( k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER, 16, 'argument' )\r\n\r\n              // k < 1e+21, or truncate(k) will produce exponential notation.\r\n              ? n.times( '1e' + truncate(k) )\r\n              : new BigNumber( n.c && n.c[0] && ( k < -MAX_SAFE_INTEGER || k > MAX_SAFE_INTEGER )\r\n                ? n.s * ( k < 0 ? 0 : 1 / 0 )\r\n                : n );\r\n        };\r\n\r\n\r\n        /*\r\n         *  sqrt(-n) =  N\r\n         *  sqrt( N) =  N\r\n         *  sqrt(-I) =  N\r\n         *  sqrt( I) =  I\r\n         *  sqrt( 0) =  0\r\n         *  sqrt(-0) = -0\r\n         *\r\n         * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n         * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n         */\r\n        P.squareRoot = P.sqrt = function () {\r\n            var m, n, r, rep, t,\r\n                x = this,\r\n                c = x.c,\r\n                s = x.s,\r\n                e = x.e,\r\n                dp = DECIMAL_PLACES + 4,\r\n                half = new BigNumber('0.5');\r\n\r\n            // Negative/NaN/Infinity/zero?\r\n            if ( s !== 1 || !c || !c[0] ) {\r\n                return new BigNumber( !s || s < 0 && ( !c || c[0] ) ? NaN : c ? x : 1 / 0 );\r\n            }\r\n\r\n            // Initial estimate.\r\n            s = Math.sqrt( +x );\r\n\r\n            // Math.sqrt underflow/overflow?\r\n            // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n            if ( s == 0 || s == 1 / 0 ) {\r\n                n = coeffToString(c);\r\n                if ( ( n.length + e ) % 2 == 0 ) n += '0';\r\n                s = Math.sqrt(n);\r\n                e = bitFloor( ( e + 1 ) / 2 ) - ( e < 0 || e % 2 );\r\n\r\n                if ( s == 1 / 0 ) {\r\n                    n = '1e' + e;\r\n                } else {\r\n                    n = s.toExponential();\r\n                    n = n.slice( 0, n.indexOf('e') + 1 ) + e;\r\n                }\r\n\r\n                r = new BigNumber(n);\r\n            } else {\r\n                r = new BigNumber( s + '' );\r\n            }\r\n\r\n            // Check for zero.\r\n            // r could be zero if MIN_EXP is changed after the this value was created.\r\n            // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n            // coeffToString to throw.\r\n            if ( r.c[0] ) {\r\n                e = r.e;\r\n                s = e + dp;\r\n                if ( s < 3 ) s = 0;\r\n\r\n                // Newton-Raphson iteration.\r\n                for ( ; ; ) {\r\n                    t = r;\r\n                    r = half.times( t.plus( div( x, t, dp, 1 ) ) );\r\n\r\n                    if ( coeffToString( t.c   ).slice( 0, s ) === ( n =\r\n                         coeffToString( r.c ) ).slice( 0, s ) ) {\r\n\r\n                        // The exponent of r may here be one less than the final result exponent,\r\n                        // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n                        // are indexed correctly.\r\n                        if ( r.e < e ) --s;\r\n                        n = n.slice( s - 3, s + 1 );\r\n\r\n                        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n                        // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n                        // iteration.\r\n                        if ( n == '9999' || !rep && n == '4999' ) {\r\n\r\n                            // On the first iteration only, check to see if rounding up gives the\r\n                            // exact result as the nines may infinitely repeat.\r\n                            if ( !rep ) {\r\n                                round( t, t.e + DECIMAL_PLACES + 2, 0 );\r\n\r\n                                if ( t.times(t).eq(x) ) {\r\n                                    r = t;\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            dp += 4;\r\n                            s += 4;\r\n                            rep = 1;\r\n                        } else {\r\n\r\n                            // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n                            // result. If not, then there are further digits and m will be truthy.\r\n                            if ( !+n || !+n.slice(1) && n.charAt(0) == '5' ) {\r\n\r\n                                // Truncate to the first rounding digit.\r\n                                round( r, r.e + DECIMAL_PLACES + 2, 1 );\r\n                                m = !r.times(r).eq(x);\r\n                            }\r\n\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return round( r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m );\r\n        };\r\n\r\n\r\n        /*\r\n         *  n * 0 = 0\r\n         *  n * N = N\r\n         *  n * I = I\r\n         *  0 * n = 0\r\n         *  0 * 0 = 0\r\n         *  0 * N = N\r\n         *  0 * I = N\r\n         *  N * n = N\r\n         *  N * 0 = N\r\n         *  N * N = N\r\n         *  N * I = N\r\n         *  I * n = I\r\n         *  I * 0 = N\r\n         *  I * N = N\r\n         *  I * I = I\r\n         *\r\n         * Return a new BigNumber whose value is the value of this BigNumber times the value of\r\n         * BigNumber(y, b).\r\n         */\r\n        P.times = P.mul = function ( y, b ) {\r\n            var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n                base, sqrtBase,\r\n                x = this,\r\n                xc = x.c,\r\n                yc = ( id = 17, y = new BigNumber( y, b ) ).c;\r\n\r\n            // Either NaN, ±Infinity or ±0?\r\n            if ( !xc || !yc || !xc[0] || !yc[0] ) {\r\n\r\n                // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n                if ( !x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc ) {\r\n                    y.c = y.e = y.s = null;\r\n                } else {\r\n                    y.s *= x.s;\r\n\r\n                    // Return ±Infinity if either is ±Infinity.\r\n                    if ( !xc || !yc ) {\r\n                        y.c = y.e = null;\r\n\r\n                    // Return ±0 if either is ±0.\r\n                    } else {\r\n                        y.c = [0];\r\n                        y.e = 0;\r\n                    }\r\n                }\r\n\r\n                return y;\r\n            }\r\n\r\n            e = bitFloor( x.e / LOG_BASE ) + bitFloor( y.e / LOG_BASE );\r\n            y.s *= x.s;\r\n            xcL = xc.length;\r\n            ycL = yc.length;\r\n\r\n            // Ensure xc points to longer array and xcL to its length.\r\n            if ( xcL < ycL ) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;\r\n\r\n            // Initialise the result array with zeros.\r\n            for ( i = xcL + ycL, zc = []; i--; zc.push(0) );\r\n\r\n            base = BASE;\r\n            sqrtBase = SQRT_BASE;\r\n\r\n            for ( i = ycL; --i >= 0; ) {\r\n                c = 0;\r\n                ylo = yc[i] % sqrtBase;\r\n                yhi = yc[i] / sqrtBase | 0;\r\n\r\n                for ( k = xcL, j = i + k; j > i; ) {\r\n                    xlo = xc[--k] % sqrtBase;\r\n                    xhi = xc[k] / sqrtBase | 0;\r\n                    m = yhi * xlo + xhi * ylo;\r\n                    xlo = ylo * xlo + ( ( m % sqrtBase ) * sqrtBase ) + zc[j] + c;\r\n                    c = ( xlo / base | 0 ) + ( m / sqrtBase | 0 ) + yhi * xhi;\r\n                    zc[j--] = xlo % base;\r\n                }\r\n\r\n                zc[j] = c;\r\n            }\r\n\r\n            if (c) {\r\n                ++e;\r\n            } else {\r\n                zc.shift();\r\n            }\r\n\r\n            return normalise( y, zc, e );\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a new BigNumber whose value is the value of this BigNumber rounded to a maximum of\r\n         * sd significant digits using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n         *\r\n         * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n         * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n         *\r\n         * 'toDigits() precision out of range: {sd}'\r\n         * 'toDigits() precision not an integer: {sd}'\r\n         * 'toDigits() rounding mode not an integer: {rm}'\r\n         * 'toDigits() rounding mode out of range: {rm}'\r\n         */\r\n        P.toDigits = function ( sd, rm ) {\r\n            var n = new BigNumber(this);\r\n            sd = sd == null || !isValidInt( sd, 1, MAX, 18, 'precision' ) ? null : sd | 0;\r\n            rm = rm == null || !isValidInt( rm, 0, 8, 18, roundingMode ) ? ROUNDING_MODE : rm | 0;\r\n            return sd ? round( n, sd, rm ) : n;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a string representing the value of this BigNumber in exponential notation and\r\n         * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n         *\r\n         * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n         * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n         *\r\n         * 'toExponential() decimal places not an integer: {dp}'\r\n         * 'toExponential() decimal places out of range: {dp}'\r\n         * 'toExponential() rounding mode not an integer: {rm}'\r\n         * 'toExponential() rounding mode out of range: {rm}'\r\n         */\r\n        P.toExponential = function ( dp, rm ) {\r\n            return format( this,\r\n              dp != null && isValidInt( dp, 0, MAX, 19 ) ? ~~dp + 1 : null, rm, 19 );\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n         * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n         *\r\n         * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n         * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n         *\r\n         * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n         * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n         *\r\n         * 'toFixed() decimal places not an integer: {dp}'\r\n         * 'toFixed() decimal places out of range: {dp}'\r\n         * 'toFixed() rounding mode not an integer: {rm}'\r\n         * 'toFixed() rounding mode out of range: {rm}'\r\n         */\r\n        P.toFixed = function ( dp, rm ) {\r\n            return format( this, dp != null && isValidInt( dp, 0, MAX, 20 )\r\n              ? ~~dp + this.e + 1 : null, rm, 20 );\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n         * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n         * of the FORMAT object (see BigNumber.config).\r\n         *\r\n         * FORMAT = {\r\n         *      decimalSeparator : '.',\r\n         *      groupSeparator : ',',\r\n         *      groupSize : 3,\r\n         *      secondaryGroupSize : 0,\r\n         *      fractionGroupSeparator : '\\xA0',    // non-breaking space\r\n         *      fractionGroupSize : 0\r\n         * };\r\n         *\r\n         * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n         * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n         *\r\n         * 'toFormat() decimal places not an integer: {dp}'\r\n         * 'toFormat() decimal places out of range: {dp}'\r\n         * 'toFormat() rounding mode not an integer: {rm}'\r\n         * 'toFormat() rounding mode out of range: {rm}'\r\n         */\r\n        P.toFormat = function ( dp, rm ) {\r\n            var str = format( this, dp != null && isValidInt( dp, 0, MAX, 21 )\r\n              ? ~~dp + this.e + 1 : null, rm, 21 );\r\n\r\n            if ( this.c ) {\r\n                var i,\r\n                    arr = str.split('.'),\r\n                    g1 = +FORMAT.groupSize,\r\n                    g2 = +FORMAT.secondaryGroupSize,\r\n                    groupSeparator = FORMAT.groupSeparator,\r\n                    intPart = arr[0],\r\n                    fractionPart = arr[1],\r\n                    isNeg = this.s < 0,\r\n                    intDigits = isNeg ? intPart.slice(1) : intPart,\r\n                    len = intDigits.length;\r\n\r\n                if (g2) i = g1, g1 = g2, g2 = i, len -= i;\r\n\r\n                if ( g1 > 0 && len > 0 ) {\r\n                    i = len % g1 || g1;\r\n                    intPart = intDigits.substr( 0, i );\r\n\r\n                    for ( ; i < len; i += g1 ) {\r\n                        intPart += groupSeparator + intDigits.substr( i, g1 );\r\n                    }\r\n\r\n                    if ( g2 > 0 ) intPart += groupSeparator + intDigits.slice(i);\r\n                    if (isNeg) intPart = '-' + intPart;\r\n                }\r\n\r\n                str = fractionPart\r\n                  ? intPart + FORMAT.decimalSeparator + ( ( g2 = +FORMAT.fractionGroupSize )\r\n                    ? fractionPart.replace( new RegExp( '\\\\d{' + g2 + '}\\\\B', 'g' ),\r\n                      '$&' + FORMAT.fractionGroupSeparator )\r\n                    : fractionPart )\r\n                  : intPart;\r\n            }\r\n\r\n            return str;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a string array representing the value of this BigNumber as a simple fraction with\r\n         * an integer numerator and an integer denominator. The denominator will be a positive\r\n         * non-zero value less than or equal to the specified maximum denominator. If a maximum\r\n         * denominator is not specified, the denominator will be the lowest value necessary to\r\n         * represent the number exactly.\r\n         *\r\n         * [md] {number|string|BigNumber} Integer >= 1 and < Infinity. The maximum denominator.\r\n         *\r\n         * 'toFraction() max denominator not an integer: {md}'\r\n         * 'toFraction() max denominator out of range: {md}'\r\n         */\r\n        P.toFraction = function (md) {\r\n            var arr, d0, d2, e, exp, n, n0, q, s,\r\n                k = ERRORS,\r\n                x = this,\r\n                xc = x.c,\r\n                d = new BigNumber(ONE),\r\n                n1 = d0 = new BigNumber(ONE),\r\n                d1 = n0 = new BigNumber(ONE);\r\n\r\n            if ( md != null ) {\r\n                ERRORS = false;\r\n                n = new BigNumber(md);\r\n                ERRORS = k;\r\n\r\n                if ( !( k = n.isInt() ) || n.lt(ONE) ) {\r\n\r\n                    if (ERRORS) {\r\n                        raise( 22,\r\n                          'max denominator ' + ( k ? 'out of range' : 'not an integer' ), md );\r\n                    }\r\n\r\n                    // ERRORS is false:\r\n                    // If md is a finite non-integer >= 1, round it to an integer and use it.\r\n                    md = !k && n.c && round( n, n.e + 1, 1 ).gte(ONE) ? n : null;\r\n                }\r\n            }\r\n\r\n            if ( !xc ) return x.toString();\r\n            s = coeffToString(xc);\r\n\r\n            // Determine initial denominator.\r\n            // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n            e = d.e = s.length - x.e - 1;\r\n            d.c[0] = POWS_TEN[ ( exp = e % LOG_BASE ) < 0 ? LOG_BASE + exp : exp ];\r\n            md = !md || n.cmp(d) > 0 ? ( e > 0 ? d : n1 ) : n;\r\n\r\n            exp = MAX_EXP;\r\n            MAX_EXP = 1 / 0;\r\n            n = new BigNumber(s);\r\n\r\n            // n0 = d1 = 0\r\n            n0.c[0] = 0;\r\n\r\n            for ( ; ; )  {\r\n                q = div( n, d, 0, 1 );\r\n                d2 = d0.plus( q.times(d1) );\r\n                if ( d2.cmp(md) == 1 ) break;\r\n                d0 = d1;\r\n                d1 = d2;\r\n                n1 = n0.plus( q.times( d2 = n1 ) );\r\n                n0 = d2;\r\n                d = n.minus( q.times( d2 = d ) );\r\n                n = d2;\r\n            }\r\n\r\n            d2 = div( md.minus(d0), d1, 0, 1 );\r\n            n0 = n0.plus( d2.times(n1) );\r\n            d0 = d0.plus( d2.times(d1) );\r\n            n0.s = n1.s = x.s;\r\n            e *= 2;\r\n\r\n            // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n            arr = div( n1, d1, e, ROUNDING_MODE ).minus(x).abs().cmp(\r\n                  div( n0, d0, e, ROUNDING_MODE ).minus(x).abs() ) < 1\r\n                    ? [ n1.toString(), d1.toString() ]\r\n                    : [ n0.toString(), d0.toString() ];\r\n\r\n            MAX_EXP = exp;\r\n            return arr;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return the value of this BigNumber converted to a number primitive.\r\n         */\r\n        P.toNumber = function () {\r\n            return +this;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a BigNumber whose value is the value of this BigNumber raised to the power n.\r\n         * If m is present, return the result modulo m.\r\n         * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n         * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using\r\n         * ROUNDING_MODE.\r\n         *\r\n         * The modular power operation works efficiently when x, n, and m are positive integers,\r\n         * otherwise it is equivalent to calculating x.toPower(n).modulo(m) (with POW_PRECISION 0).\r\n         *\r\n         * n {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n         * [m] {number|string|BigNumber} The modulus.\r\n         *\r\n         * 'pow() exponent not an integer: {n}'\r\n         * 'pow() exponent out of range: {n}'\r\n         *\r\n         * Performs 54 loop iterations for n of 9007199254740991.\r\n         */\r\n        P.toPower = P.pow = function ( n, m ) {\r\n            var k, y, z,\r\n                i = mathfloor( n < 0 ? -n : +n ),\r\n                x = this;\r\n\r\n            if ( m != null ) {\r\n                id = 23;\r\n                m = new BigNumber(m);\r\n            }\r\n\r\n            // Pass ±Infinity to Math.pow if exponent is out of range.\r\n            if ( !isValidInt( n, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER, 23, 'exponent' ) &&\r\n              ( !isFinite(n) || i > MAX_SAFE_INTEGER && ( n /= 0 ) ||\r\n                parseFloat(n) != n && !( n = NaN ) ) || n == 0 ) {\r\n                k = Math.pow( +x, n );\r\n                return new BigNumber( m ? k % m : k );\r\n            }\r\n\r\n            if (m) {\r\n                if ( n > 1 && x.gt(ONE) && x.isInt() && m.gt(ONE) && m.isInt() ) {\r\n                    x = x.mod(m);\r\n                } else {\r\n                    z = m;\r\n\r\n                    // Nullify m so only a single mod operation is performed at the end.\r\n                    m = null;\r\n                }\r\n            } else if (POW_PRECISION) {\r\n\r\n                // Truncating each coefficient array to a length of k after each multiplication\r\n                // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n                // i.e. there will be a minimum of 28 guard digits retained.\r\n                // (Using + 1.5 would give [9, 21] guard digits.)\r\n                k = mathceil( POW_PRECISION / LOG_BASE + 2 );\r\n            }\r\n\r\n            y = new BigNumber(ONE);\r\n\r\n            for ( ; ; ) {\r\n                if ( i % 2 ) {\r\n                    y = y.times(x);\r\n                    if ( !y.c ) break;\r\n                    if (k) {\r\n                        if ( y.c.length > k ) y.c.length = k;\r\n                    } else if (m) {\r\n                        y = y.mod(m);\r\n                    }\r\n                }\r\n\r\n                i = mathfloor( i / 2 );\r\n                if ( !i ) break;\r\n                x = x.times(x);\r\n                if (k) {\r\n                    if ( x.c && x.c.length > k ) x.c.length = k;\r\n                } else if (m) {\r\n                    x = x.mod(m);\r\n                }\r\n            }\r\n\r\n            if (m) return y;\r\n            if ( n < 0 ) y = ONE.div(y);\r\n\r\n            return z ? y.mod(z) : k ? round( y, POW_PRECISION, ROUNDING_MODE ) : y;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n         * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n         * necessary to represent the integer part of the value in fixed-point notation, then use\r\n         * exponential notation.\r\n         *\r\n         * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n         * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n         *\r\n         * 'toPrecision() precision not an integer: {sd}'\r\n         * 'toPrecision() precision out of range: {sd}'\r\n         * 'toPrecision() rounding mode not an integer: {rm}'\r\n         * 'toPrecision() rounding mode out of range: {rm}'\r\n         */\r\n        P.toPrecision = function ( sd, rm ) {\r\n            return format( this, sd != null && isValidInt( sd, 1, MAX, 24, 'precision' )\r\n              ? sd | 0 : null, rm, 24 );\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n         * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n         * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n         * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n         * TO_EXP_NEG, return exponential notation.\r\n         *\r\n         * [b] {number} Integer, 2 to 64 inclusive.\r\n         *\r\n         * 'toString() base not an integer: {b}'\r\n         * 'toString() base out of range: {b}'\r\n         */\r\n        P.toString = function (b) {\r\n            var str,\r\n                n = this,\r\n                s = n.s,\r\n                e = n.e;\r\n\r\n            // Infinity or NaN?\r\n            if ( e === null ) {\r\n\r\n                if (s) {\r\n                    str = 'Infinity';\r\n                    if ( s < 0 ) str = '-' + str;\r\n                } else {\r\n                    str = 'NaN';\r\n                }\r\n            } else {\r\n                str = coeffToString( n.c );\r\n\r\n                if ( b == null || !isValidInt( b, 2, 64, 25, 'base' ) ) {\r\n                    str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n                      ? toExponential( str, e )\r\n                      : toFixedPoint( str, e );\r\n                } else {\r\n                    str = convertBase( toFixedPoint( str, e ), b | 0, 10, s );\r\n                }\r\n\r\n                if ( s < 0 && n.c[0] ) str = '-' + str;\r\n            }\r\n\r\n            return str;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a new BigNumber whose value is the value of this BigNumber truncated to a whole\r\n         * number.\r\n         */\r\n        P.truncated = P.trunc = function () {\r\n            return round( new BigNumber(this), this.e + 1, 1 );\r\n        };\r\n\r\n\r\n        /*\r\n         * Return as toString, but do not accept a base argument, and include the minus sign for\r\n         * negative zero.\r\n         */\r\n        P.valueOf = P.toJSON = function () {\r\n            var str,\r\n                n = this,\r\n                e = n.e;\r\n\r\n            if ( e === null ) return n.toString();\r\n\r\n            str = coeffToString( n.c );\r\n\r\n            str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n                ? toExponential( str, e )\r\n                : toFixedPoint( str, e );\r\n\r\n            return n.s < 0 ? '-' + str : str;\r\n        };\r\n\r\n\r\n        if ( configObj != null ) BigNumber.config(configObj);\r\n\r\n        return BigNumber;\r\n    }\r\n\r\n\r\n    // PRIVATE HELPER FUNCTIONS\r\n\r\n\r\n    function bitFloor(n) {\r\n        var i = n | 0;\r\n        return n > 0 || n === i ? i : i - 1;\r\n    }\r\n\r\n\r\n    // Return a coefficient array as a string of base 10 digits.\r\n    function coeffToString(a) {\r\n        var s, z,\r\n            i = 1,\r\n            j = a.length,\r\n            r = a[0] + '';\r\n\r\n        for ( ; i < j; ) {\r\n            s = a[i++] + '';\r\n            z = LOG_BASE - s.length;\r\n            for ( ; z--; s = '0' + s );\r\n            r += s;\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for ( j = r.length; r.charCodeAt(--j) === 48; );\r\n        return r.slice( 0, j + 1 || 1 );\r\n    }\r\n\r\n\r\n    // Compare the value of BigNumbers x and y.\r\n    function compare( x, y ) {\r\n        var a, b,\r\n            xc = x.c,\r\n            yc = y.c,\r\n            i = x.s,\r\n            j = y.s,\r\n            k = x.e,\r\n            l = y.e;\r\n\r\n        // Either NaN?\r\n        if ( !i || !j ) return null;\r\n\r\n        a = xc && !xc[0];\r\n        b = yc && !yc[0];\r\n\r\n        // Either zero?\r\n        if ( a || b ) return a ? b ? 0 : -j : i;\r\n\r\n        // Signs differ?\r\n        if ( i != j ) return i;\r\n\r\n        a = i < 0;\r\n        b = k == l;\r\n\r\n        // Either Infinity?\r\n        if ( !xc || !yc ) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n        // Compare exponents.\r\n        if ( !b ) return k > l ^ a ? 1 : -1;\r\n\r\n        j = ( k = xc.length ) < ( l = yc.length ) ? k : l;\r\n\r\n        // Compare digit by digit.\r\n        for ( i = 0; i < j; i++ ) if ( xc[i] != yc[i] ) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n        // Compare lengths.\r\n        return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n    }\r\n\r\n\r\n    /*\r\n     * Return true if n is a valid number in range, otherwise false.\r\n     * Use for argument validation when ERRORS is false.\r\n     * Note: parseInt('1e+1') == 1 but parseFloat('1e+1') == 10.\r\n     */\r\n    function intValidatorNoErrors( n, min, max ) {\r\n        return ( n = truncate(n) ) >= min && n <= max;\r\n    }\r\n\r\n\r\n    function isArray(obj) {\r\n        return Object.prototype.toString.call(obj) == '[object Array]';\r\n    }\r\n\r\n\r\n    function isBigNumber(v) {\r\n      return !!( v && v.constructor && v.constructor.isBigNumber === isBigNumber );\r\n    }\r\n\r\n\r\n    /*\r\n     * Convert string of baseIn to an array of numbers of baseOut.\r\n     * Eg. convertBase('255', 10, 16) returns [15, 15].\r\n     * Eg. convertBase('ff', 16, 10) returns [2, 5, 5].\r\n     */\r\n    function toBaseOut( str, baseIn, baseOut ) {\r\n        var j,\r\n            arr = [0],\r\n            arrL,\r\n            i = 0,\r\n            len = str.length;\r\n\r\n        for ( ; i < len; ) {\r\n            for ( arrL = arr.length; arrL--; arr[arrL] *= baseIn );\r\n            arr[ j = 0 ] += ALPHABET.indexOf( str.charAt( i++ ) );\r\n\r\n            for ( ; j < arr.length; j++ ) {\r\n\r\n                if ( arr[j] > baseOut - 1 ) {\r\n                    if ( arr[j + 1] == null ) arr[j + 1] = 0;\r\n                    arr[j + 1] += arr[j] / baseOut | 0;\r\n                    arr[j] %= baseOut;\r\n                }\r\n            }\r\n        }\r\n\r\n        return arr.reverse();\r\n    }\r\n\r\n\r\n    function toExponential( str, e ) {\r\n        return ( str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str ) +\r\n          ( e < 0 ? 'e' : 'e+' ) + e;\r\n    }\r\n\r\n\r\n    function toFixedPoint( str, e ) {\r\n        var len, z;\r\n\r\n        // Negative exponent?\r\n        if ( e < 0 ) {\r\n\r\n            // Prepend zeros.\r\n            for ( z = '0.'; ++e; z += '0' );\r\n            str = z + str;\r\n\r\n        // Positive exponent\r\n        } else {\r\n            len = str.length;\r\n\r\n            // Append zeros.\r\n            if ( ++e > len ) {\r\n                for ( z = '0', e -= len; --e; z += '0' );\r\n                str += z;\r\n            } else if ( e < len ) {\r\n                str = str.slice( 0, e ) + '.' + str.slice(e);\r\n            }\r\n        }\r\n\r\n        return str;\r\n    }\r\n\r\n\r\n    function truncate(n) {\r\n        n = parseFloat(n);\r\n        return n < 0 ? mathceil(n) : mathfloor(n);\r\n    }\r\n\r\n\r\n    // EXPORT\r\n\r\n\r\n    BigNumber = constructorFactory();\r\n    BigNumber.default = BigNumber.BigNumber = BigNumber;\r\n\r\n\r\n    // AMD.\r\n    if ( typeof define == 'function' && define.amd ) {\r\n        define( function () { return BigNumber; } );\r\n\r\n    // Node.js and other environments that support module.exports.\r\n    } else if ( typeof module != 'undefined' && module.exports ) {\r\n        module.exports = BigNumber;\r\n\r\n    // Browser.\r\n    } else {\r\n        if ( !globalObj ) globalObj = typeof self != 'undefined' ? self : Function('return this')();\r\n        globalObj.BigNumber = BigNumber;\r\n    }\r\n})(this);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bignumber.js/bignumber.js\n// module id = 91\n// module chunks = 0","\n/**\n * Module dependencies.\n */\n\nvar fs = require('fs')\n  , path = require('path')\n  , join = path.join\n  , dirname = path.dirname\n  , exists = fs.existsSync || path.existsSync\n  , defaults = {\n        arrow: process.env.NODE_BINDINGS_ARROW || ' → '\n      , compiled: process.env.NODE_BINDINGS_COMPILED_DIR || 'compiled'\n      , platform: process.platform\n      , arch: process.arch\n      , version: process.versions.node\n      , bindings: 'bindings.node'\n      , try: [\n          // node-gyp's linked version in the \"build\" dir\n          [ 'module_root', 'build', 'bindings' ]\n          // node-waf and gyp_addon (a.k.a node-gyp)\n        , [ 'module_root', 'build', 'Debug', 'bindings' ]\n        , [ 'module_root', 'build', 'Release', 'bindings' ]\n          // Debug files, for development (legacy behavior, remove for node v0.9)\n        , [ 'module_root', 'out', 'Debug', 'bindings' ]\n        , [ 'module_root', 'Debug', 'bindings' ]\n          // Release files, but manually compiled (legacy behavior, remove for node v0.9)\n        , [ 'module_root', 'out', 'Release', 'bindings' ]\n        , [ 'module_root', 'Release', 'bindings' ]\n          // Legacy from node-waf, node <= 0.4.x\n        , [ 'module_root', 'build', 'default', 'bindings' ]\n          // Production \"Release\" buildtype binary (meh...)\n        , [ 'module_root', 'compiled', 'version', 'platform', 'arch', 'bindings' ]\n        ]\n    }\n\n/**\n * The main `bindings()` function loads the compiled bindings for a given module.\n * It uses V8's Error API to determine the parent filename that this function is\n * being invoked from, which is then used to find the root directory.\n */\n\nfunction bindings (opts) {\n\n  // Argument surgery\n  if (typeof opts == 'string') {\n    opts = { bindings: opts }\n  } else if (!opts) {\n    opts = {}\n  }\n  opts.__proto__ = defaults\n\n  // Get the module root\n  if (!opts.module_root) {\n    opts.module_root = exports.getRoot(exports.getFileName())\n  }\n\n  // Ensure the given bindings name ends with .node\n  if (path.extname(opts.bindings) != '.node') {\n    opts.bindings += '.node'\n  }\n\n  var tries = []\n    , i = 0\n    , l = opts.try.length\n    , n\n    , b\n    , err\n\n  for (; i<l; i++) {\n    n = join.apply(null, opts.try[i].map(function (p) {\n      return opts[p] || p\n    }))\n    tries.push(n)\n    try {\n      b = opts.path ? require.resolve(n) : require(n)\n      if (!opts.path) {\n        b.path = n\n      }\n      return b\n    } catch (e) {\n      if (!/not find/i.test(e.message)) {\n        throw e\n      }\n    }\n  }\n\n  err = new Error('Could not locate the bindings file. Tried:\\n'\n    + tries.map(function (a) { return opts.arrow + a }).join('\\n'))\n  err.tries = tries\n  throw err\n}\nmodule.exports = exports = bindings\n\n\n/**\n * Gets the filename of the JavaScript file that invokes this function.\n * Used to help find the root directory of a module.\n * Optionally accepts an filename argument to skip when searching for the invoking filename\n */\n\nexports.getFileName = function getFileName (calling_file) {\n  var origPST = Error.prepareStackTrace\n    , origSTL = Error.stackTraceLimit\n    , dummy = {}\n    , fileName\n\n  Error.stackTraceLimit = 10\n\n  Error.prepareStackTrace = function (e, st) {\n    for (var i=0, l=st.length; i<l; i++) {\n      fileName = st[i].getFileName()\n      if (fileName !== __filename) {\n        if (calling_file) {\n            if (fileName !== calling_file) {\n              return\n            }\n        } else {\n          return\n        }\n      }\n    }\n  }\n\n  // run the 'prepareStackTrace' function above\n  Error.captureStackTrace(dummy)\n  dummy.stack\n\n  // cleanup\n  Error.prepareStackTrace = origPST\n  Error.stackTraceLimit = origSTL\n\n  return fileName\n}\n\n/**\n * Gets the root directory of a module, given an arbitrary filename\n * somewhere in the module tree. The \"root directory\" is the directory\n * containing the `package.json` file.\n *\n *   In:  /home/nate/node-native-module/lib/index.js\n *   Out: /home/nate/node-native-module\n */\n\nexports.getRoot = function getRoot (file) {\n  var dir = dirname(file)\n    , prev\n  while (true) {\n    if (dir === '.') {\n      // Avoids an infinite loop in rare cases, like the REPL\n      dir = process.cwd()\n    }\n    if (exists(join(dir, 'package.json')) || exists(join(dir, 'node_modules'))) {\n      // Found the 'package.json' file or 'node_modules' dir; we're done\n      return dir\n    }\n    if (prev === dir) {\n      // Got to the top\n      throw new Error('Could not find module root given file: \"' + file\n                    + '\". Do you have a `package.json` file? ')\n    }\n    // Try the parent dir next\n    prev = dir\n    dir = join(dir, '..')\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bindings/bindings.js\n// module id = 92\n// module chunks = 0","//binary data writer tuned for creating\n//postgres message packets as effeciently as possible by reusing the\n//same buffer to avoid memcpy and limit memory allocations\nvar Writer = module.exports = function(size) {\n  this.size = size || 1024;\n  this.buffer = Buffer(this.size + 5);\n  this.offset = 5;\n  this.headerPosition = 0;\n};\n\n//resizes internal buffer if not enough size left\nWriter.prototype._ensure = function(size) {\n  var remaining = this.buffer.length - this.offset;\n  if(remaining < size) {\n    var oldBuffer = this.buffer;\n    // exponential growth factor of around ~ 1.5\n    // https://stackoverflow.com/questions/2269063/buffer-growth-strategy\n    var newSize = oldBuffer.length + (oldBuffer.length >> 1) + size;\n    this.buffer = new Buffer(newSize);\n    oldBuffer.copy(this.buffer);\n  }\n};\n\nWriter.prototype.addInt32 = function(num) {\n  this._ensure(4);\n  this.buffer[this.offset++] = (num >>> 24 & 0xFF);\n  this.buffer[this.offset++] = (num >>> 16 & 0xFF);\n  this.buffer[this.offset++] = (num >>>  8 & 0xFF);\n  this.buffer[this.offset++] = (num >>>  0 & 0xFF);\n  return this;\n};\n\nWriter.prototype.addInt16 = function(num) {\n  this._ensure(2);\n  this.buffer[this.offset++] = (num >>>  8 & 0xFF);\n  this.buffer[this.offset++] = (num >>>  0 & 0xFF);\n  return this;\n};\n\n//for versions of node requiring 'length' as 3rd argument to buffer.write\nvar writeString = function(buffer, string, offset, len) {\n  buffer.write(string, offset, len);\n};\n\n//overwrite function for older versions of node\nif(Buffer.prototype.write.length === 3) {\n  writeString = function(buffer, string, offset, len) {\n    buffer.write(string, offset);\n  };\n}\n\nWriter.prototype.addCString = function(string) {\n  //just write a 0 for empty or null strings\n  if(!string) {\n    this._ensure(1);\n  } else {\n    var len = Buffer.byteLength(string);\n    this._ensure(len + 1); //+1 for null terminator\n    writeString(this.buffer, string, this.offset, len);\n    this.offset += len;\n  }\n\n  this.buffer[this.offset++] = 0; // null terminator\n  return this;\n};\n\nWriter.prototype.addChar = function(c) {\n  this._ensure(1);\n  writeString(this.buffer, c, this.offset, 1);\n  this.offset++;\n  return this;\n};\n\nWriter.prototype.addString = function(string) {\n  string = string || \"\";\n  var len = Buffer.byteLength(string);\n  this._ensure(len);\n  this.buffer.write(string, this.offset);\n  this.offset += len;\n  return this;\n};\n\nWriter.prototype.getByteLength = function() {\n  return this.offset - 5;\n};\n\nWriter.prototype.add = function(otherBuffer) {\n  this._ensure(otherBuffer.length);\n  otherBuffer.copy(this.buffer, this.offset);\n  this.offset += otherBuffer.length;\n  return this;\n};\n\nWriter.prototype.clear = function() {\n  this.offset = 5;\n  this.headerPosition = 0;\n  this.lastEnd = 0;\n};\n\n//appends a header block to all the written data since the last\n//subsequent header or to the beginning if there is only one data block\nWriter.prototype.addHeader = function(code, last) {\n  var origOffset = this.offset;\n  this.offset = this.headerPosition;\n  this.buffer[this.offset++] = code;\n  //length is everything in this packet minus the code\n  this.addInt32(origOffset - (this.headerPosition+1));\n  //set next header position\n  this.headerPosition = origOffset;\n  //make space for next header\n  this.offset = origOffset;\n  if(!last) {\n    this._ensure(5);\n    this.offset += 5;\n  }\n};\n\nWriter.prototype.join = function(code) {\n  if(code) {\n    this.addHeader(code, true);\n  }\n  return this.buffer.slice(code ? 0 : 5, this.offset);\n};\n\nWriter.prototype.flush = function(code) {\n  var result = this.join(code);\n  this.clear();\n  return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/buffer-writer/index.js\n// module id = 93\n// module chunks = 0","'use strict';\n\nvar assign        = require('es5-ext/object/assign')\n  , normalizeOpts = require('es5-ext/object/normalize-options')\n  , isCallable    = require('es5-ext/object/is-callable')\n  , contains      = require('es5-ext/string/#/contains')\n\n  , d;\n\nd = module.exports = function (dscr, value/*, options*/) {\n\tvar c, e, w, options, desc;\n\tif ((arguments.length < 2) || (typeof dscr !== 'string')) {\n\t\toptions = value;\n\t\tvalue = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[2];\n\t}\n\tif (dscr == null) {\n\t\tc = w = true;\n\t\te = false;\n\t} else {\n\t\tc = contains.call(dscr, 'c');\n\t\te = contains.call(dscr, 'e');\n\t\tw = contains.call(dscr, 'w');\n\t}\n\n\tdesc = { value: value, configurable: c, enumerable: e, writable: w };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n};\n\nd.gs = function (dscr, get, set/*, options*/) {\n\tvar c, e, options, desc;\n\tif (typeof dscr !== 'string') {\n\t\toptions = set;\n\t\tset = get;\n\t\tget = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[3];\n\t}\n\tif (get == null) {\n\t\tget = undefined;\n\t} else if (!isCallable(get)) {\n\t\toptions = get;\n\t\tget = set = undefined;\n\t} else if (set == null) {\n\t\tset = undefined;\n\t} else if (!isCallable(set)) {\n\t\toptions = set;\n\t\tset = undefined;\n\t}\n\tif (dscr == null) {\n\t\tc = true;\n\t\te = false;\n\t} else {\n\t\tc = contains.call(dscr, 'c');\n\t\te = contains.call(dscr, 'e');\n\t}\n\n\tdesc = { get: get, set: set, configurable: c, enumerable: e };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d/index.js\n// module id = 94\n// module chunks = 0","'use strict';\n\nmodule.exports = function () {\n\tvar from = Array.from, arr, result;\n\tif (typeof from !== 'function') return false;\n\tarr = ['raz', 'dwa'];\n\tresult = from(arr);\n\treturn Boolean(result && (result !== arr) && (result[1] === 'dwa'));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/array/from/is-implemented.js\n// module id = 95\n// module chunks = 0","'use strict';\n\nvar iteratorSymbol = require('es6-symbol').iterator\n  , isArguments    = require('../../function/is-arguments')\n  , isFunction     = require('../../function/is-function')\n  , toPosInt       = require('../../number/to-pos-integer')\n  , callable       = require('../../object/valid-callable')\n  , validValue     = require('../../object/valid-value')\n  , isString       = require('../../string/is-string')\n\n  , isArray = Array.isArray, call = Function.prototype.call\n  , desc = { configurable: true, enumerable: true, writable: true, value: null }\n  , defineProperty = Object.defineProperty;\n\nmodule.exports = function (arrayLike/*, mapFn, thisArg*/) {\n\tvar mapFn = arguments[1], thisArg = arguments[2], Constructor, i, j, arr, l, code, iterator\n\t  , result, getIterator, value;\n\n\tarrayLike = Object(validValue(arrayLike));\n\n\tif (mapFn != null) callable(mapFn);\n\tif (!this || (this === Array) || !isFunction(this)) {\n\t\t// Result: Plain array\n\t\tif (!mapFn) {\n\t\t\tif (isArguments(arrayLike)) {\n\t\t\t\t// Source: Arguments\n\t\t\t\tl = arrayLike.length;\n\t\t\t\tif (l !== 1) return Array.apply(null, arrayLike);\n\t\t\t\tarr = new Array(1);\n\t\t\t\tarr[0] = arrayLike[0];\n\t\t\t\treturn arr;\n\t\t\t}\n\t\t\tif (isArray(arrayLike)) {\n\t\t\t\t// Source: Array\n\t\t\t\tarr = new Array(l = arrayLike.length);\n\t\t\t\tfor (i = 0; i < l; ++i) arr[i] = arrayLike[i];\n\t\t\t\treturn arr;\n\t\t\t}\n\t\t}\n\t\tarr = [];\n\t} else {\n\t\t// Result: Non plain array\n\t\tConstructor = this;\n\t}\n\n\tif (!isArray(arrayLike)) {\n\t\tif ((getIterator = arrayLike[iteratorSymbol]) !== undefined) {\n\t\t\t// Source: Iterator\n\t\t\titerator = callable(getIterator).call(arrayLike);\n\t\t\tif (Constructor) arr = new Constructor();\n\t\t\tresult = iterator.next();\n\t\t\ti = 0;\n\t\t\twhile (!result.done) {\n\t\t\t\tvalue = mapFn ? call.call(mapFn, thisArg, result.value, i) : result.value;\n\t\t\t\tif (!Constructor) {\n\t\t\t\t\tarr[i] = value;\n\t\t\t\t} else {\n\t\t\t\t\tdesc.value = value;\n\t\t\t\t\tdefineProperty(arr, i, desc);\n\t\t\t\t}\n\t\t\t\tresult = iterator.next();\n\t\t\t\t++i;\n\t\t\t}\n\t\t\tl = i;\n\t\t} else if (isString(arrayLike)) {\n\t\t\t// Source: String\n\t\t\tl = arrayLike.length;\n\t\t\tif (Constructor) arr = new Constructor();\n\t\t\tfor (i = 0, j = 0; i < l; ++i) {\n\t\t\t\tvalue = arrayLike[i];\n\t\t\t\tif ((i + 1) < l) {\n\t\t\t\t\tcode = value.charCodeAt(0);\n\t\t\t\t\tif ((code >= 0xD800) && (code <= 0xDBFF)) value += arrayLike[++i];\n\t\t\t\t}\n\t\t\t\tvalue = mapFn ? call.call(mapFn, thisArg, value, j) : value;\n\t\t\t\tif (!Constructor) {\n\t\t\t\t\tarr[j] = value;\n\t\t\t\t} else {\n\t\t\t\t\tdesc.value = value;\n\t\t\t\t\tdefineProperty(arr, j, desc);\n\t\t\t\t}\n\t\t\t\t++j;\n\t\t\t}\n\t\t\tl = j;\n\t\t}\n\t}\n\tif (l === undefined) {\n\t\t// Source: array or array-like\n\t\tl = toPosInt(arrayLike.length);\n\t\tif (Constructor) arr = new Constructor(l);\n\t\tfor (i = 0; i < l; ++i) {\n\t\t\tvalue = mapFn ? call.call(mapFn, thisArg, arrayLike[i], i) : arrayLike[i];\n\t\t\tif (!Constructor) {\n\t\t\t\tarr[i] = value;\n\t\t\t} else {\n\t\t\t\tdesc.value = value;\n\t\t\t\tdefineProperty(arr, i, desc);\n\t\t\t}\n\t\t}\n\t}\n\tif (Constructor) {\n\t\tdesc.value = null;\n\t\tarr.length = l;\n\t}\n\treturn arr;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/array/from/shim.js\n// module id = 96\n// module chunks = 0","'use strict';\n\nvar toString = Object.prototype.toString\n\n  , id = toString.call((function () { return arguments; }()));\n\nmodule.exports = function (x) { return (toString.call(x) === id); };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/function/is-arguments.js\n// module id = 97\n// module chunks = 0","'use strict';\n\nvar toString = Object.prototype.toString\n\n  , id = toString.call(require('./noop'));\n\nmodule.exports = function (f) {\n\treturn (typeof f === \"function\") && (toString.call(f) === id);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/function/is-function.js\n// module id = 98\n// module chunks = 0","'use strict';\n\nmodule.exports = function () {};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/function/noop.js\n// module id = 99\n// module chunks = 0","'use strict';\n\nmodule.exports = require('./is-implemented')()\n\t? Math.sign\n\t: require('./shim');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/math/sign/index.js\n// module id = 100\n// module chunks = 0","'use strict';\n\nmodule.exports = function () {\n\tvar sign = Math.sign;\n\tif (typeof sign !== 'function') return false;\n\treturn ((sign(10) === 1) && (sign(-20) === -1));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/math/sign/is-implemented.js\n// module id = 101\n// module chunks = 0","'use strict';\n\nmodule.exports = function (value) {\n\tvalue = Number(value);\n\tif (isNaN(value) || (value === 0)) return value;\n\treturn (value > 0) ? 1 : -1;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/math/sign/shim.js\n// module id = 102\n// module chunks = 0","'use strict';\n\nvar sign = require('../math/sign')\n\n  , abs = Math.abs, floor = Math.floor;\n\nmodule.exports = function (value) {\n\tif (isNaN(value)) return 0;\n\tvalue = Number(value);\n\tif ((value === 0) || !isFinite(value)) return value;\n\treturn sign(value) * floor(abs(value));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/number/to-integer.js\n// module id = 103\n// module chunks = 0","'use strict';\n\nvar toInteger = require('./to-integer')\n\n  , max = Math.max;\n\nmodule.exports = function (value) { return max(0, toInteger(value)); };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/number/to-pos-integer.js\n// module id = 104\n// module chunks = 0","'use strict';\n\nmodule.exports = function () {\n\tvar assign = Object.assign, obj;\n\tif (typeof assign !== 'function') return false;\n\tobj = { foo: 'raz' };\n\tassign(obj, { bar: 'dwa' }, { trzy: 'trzy' });\n\treturn (obj.foo + obj.bar + obj.trzy) === 'razdwatrzy';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/object/assign/is-implemented.js\n// module id = 105\n// module chunks = 0","'use strict';\n\nvar keys  = require('../keys')\n  , value = require('../valid-value')\n\n  , max = Math.max;\n\nmodule.exports = function (dest, src/*, …srcn*/) {\n\tvar error, i, l = max(arguments.length, 2), assign;\n\tdest = Object(value(dest));\n\tassign = function (key) {\n\t\ttry { dest[key] = src[key]; } catch (e) {\n\t\t\tif (!error) error = e;\n\t\t}\n\t};\n\tfor (i = 1; i < l; ++i) {\n\t\tsrc = arguments[i];\n\t\tkeys(src).forEach(assign);\n\t}\n\tif (error !== undefined) throw error;\n\treturn dest;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/object/assign/shim.js\n// module id = 106\n// module chunks = 0","'use strict';\n\nmodule.exports = require('./is-implemented')()\n\t? Object.keys\n\t: require('./shim');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/object/keys/index.js\n// module id = 107\n// module chunks = 0","'use strict';\n\nmodule.exports = function () {\n\ttry {\n\t\tObject.keys('primitive');\n\t\treturn true;\n\t} catch (e) { return false; }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/object/keys/is-implemented.js\n// module id = 108\n// module chunks = 0","'use strict';\n\nvar keys = Object.keys;\n\nmodule.exports = function (object) {\n\treturn keys(object == null ? object : Object(object));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/object/keys/shim.js\n// module id = 109\n// module chunks = 0","'use strict';\n\nvar str = 'razdwatrzy';\n\nmodule.exports = function () {\n\tif (typeof str.contains !== 'function') return false;\n\treturn ((str.contains('dwa') === true) && (str.contains('foo') === false));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/string/#/contains/is-implemented.js\n// module id = 110\n// module chunks = 0","'use strict';\n\nvar indexOf = String.prototype.indexOf;\n\nmodule.exports = function (searchString/*, position*/) {\n\treturn indexOf.call(this, searchString, arguments[1]) > -1;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/string/#/contains/shim.js\n// module id = 111\n// module chunks = 0","'use strict';\n\nvar toString = Object.prototype.toString\n\n  , id = toString.call('');\n\nmodule.exports = function (x) {\n\treturn (typeof x === 'string') || (x && (typeof x === 'object') &&\n\t\t((x instanceof String) || (toString.call(x) === id))) || false;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/string/is-string.js\n// module id = 112\n// module chunks = 0","'use strict';\n\nmodule.exports = require('./is-implemented')() ? Symbol : require('./polyfill');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es6-symbol/index.js\n// module id = 113\n// module chunks = 0","'use strict';\n\nvar validTypes = { object: true, symbol: true };\n\nmodule.exports = function () {\n\tvar symbol;\n\tif (typeof Symbol !== 'function') return false;\n\tsymbol = Symbol('test symbol');\n\ttry { String(symbol); } catch (e) { return false; }\n\n\t// Return 'true' also for polyfills\n\tif (!validTypes[typeof Symbol.iterator]) return false;\n\tif (!validTypes[typeof Symbol.toPrimitive]) return false;\n\tif (!validTypes[typeof Symbol.toStringTag]) return false;\n\n\treturn true;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es6-symbol/is-implemented.js\n// module id = 114\n// module chunks = 0","'use strict';\n\nmodule.exports = function (x) {\n\tif (!x) return false;\n\tif (typeof x === 'symbol') return true;\n\tif (!x.constructor) return false;\n\tif (x.constructor.name !== 'Symbol') return false;\n\treturn (x[x.constructor.toStringTag] === 'Symbol');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es6-symbol/is-symbol.js\n// module id = 115\n// module chunks = 0","// ES2015 Symbol polyfill for environments that do not support it (or partially support it)\n\n'use strict';\n\nvar d              = require('d')\n  , validateSymbol = require('./validate-symbol')\n\n  , create = Object.create, defineProperties = Object.defineProperties\n  , defineProperty = Object.defineProperty, objPrototype = Object.prototype\n  , NativeSymbol, SymbolPolyfill, HiddenSymbol, globalSymbols = create(null)\n  , isNativeSafe;\n\nif (typeof Symbol === 'function') {\n\tNativeSymbol = Symbol;\n\ttry {\n\t\tString(NativeSymbol());\n\t\tisNativeSafe = true;\n\t} catch (ignore) {}\n}\n\nvar generateName = (function () {\n\tvar created = create(null);\n\treturn function (desc) {\n\t\tvar postfix = 0, name, ie11BugWorkaround;\n\t\twhile (created[desc + (postfix || '')]) ++postfix;\n\t\tdesc += (postfix || '');\n\t\tcreated[desc] = true;\n\t\tname = '@@' + desc;\n\t\tdefineProperty(objPrototype, name, d.gs(null, function (value) {\n\t\t\t// For IE11 issue see:\n\t\t\t// https://connect.microsoft.com/IE/feedbackdetail/view/1928508/\n\t\t\t//    ie11-broken-getters-on-dom-objects\n\t\t\t// https://github.com/medikoo/es6-symbol/issues/12\n\t\t\tif (ie11BugWorkaround) return;\n\t\t\tie11BugWorkaround = true;\n\t\t\tdefineProperty(this, name, d(value));\n\t\t\tie11BugWorkaround = false;\n\t\t}));\n\t\treturn name;\n\t};\n}());\n\n// Internal constructor (not one exposed) for creating Symbol instances.\n// This one is used to ensure that `someSymbol instanceof Symbol` always return false\nHiddenSymbol = function Symbol(description) {\n\tif (this instanceof HiddenSymbol) throw new TypeError('TypeError: Symbol is not a constructor');\n\treturn SymbolPolyfill(description);\n};\n\n// Exposed `Symbol` constructor\n// (returns instances of HiddenSymbol)\nmodule.exports = SymbolPolyfill = function Symbol(description) {\n\tvar symbol;\n\tif (this instanceof Symbol) throw new TypeError('TypeError: Symbol is not a constructor');\n\tif (isNativeSafe) return NativeSymbol(description);\n\tsymbol = create(HiddenSymbol.prototype);\n\tdescription = (description === undefined ? '' : String(description));\n\treturn defineProperties(symbol, {\n\t\t__description__: d('', description),\n\t\t__name__: d('', generateName(description))\n\t});\n};\ndefineProperties(SymbolPolyfill, {\n\tfor: d(function (key) {\n\t\tif (globalSymbols[key]) return globalSymbols[key];\n\t\treturn (globalSymbols[key] = SymbolPolyfill(String(key)));\n\t}),\n\tkeyFor: d(function (s) {\n\t\tvar key;\n\t\tvalidateSymbol(s);\n\t\tfor (key in globalSymbols) if (globalSymbols[key] === s) return key;\n\t}),\n\n\t// If there's native implementation of given symbol, let's fallback to it\n\t// to ensure proper interoperability with other native functions e.g. Array.from\n\thasInstance: d('', (NativeSymbol && NativeSymbol.hasInstance) || SymbolPolyfill('hasInstance')),\n\tisConcatSpreadable: d('', (NativeSymbol && NativeSymbol.isConcatSpreadable) ||\n\t\tSymbolPolyfill('isConcatSpreadable')),\n\titerator: d('', (NativeSymbol && NativeSymbol.iterator) || SymbolPolyfill('iterator')),\n\tmatch: d('', (NativeSymbol && NativeSymbol.match) || SymbolPolyfill('match')),\n\treplace: d('', (NativeSymbol && NativeSymbol.replace) || SymbolPolyfill('replace')),\n\tsearch: d('', (NativeSymbol && NativeSymbol.search) || SymbolPolyfill('search')),\n\tspecies: d('', (NativeSymbol && NativeSymbol.species) || SymbolPolyfill('species')),\n\tsplit: d('', (NativeSymbol && NativeSymbol.split) || SymbolPolyfill('split')),\n\ttoPrimitive: d('', (NativeSymbol && NativeSymbol.toPrimitive) || SymbolPolyfill('toPrimitive')),\n\ttoStringTag: d('', (NativeSymbol && NativeSymbol.toStringTag) || SymbolPolyfill('toStringTag')),\n\tunscopables: d('', (NativeSymbol && NativeSymbol.unscopables) || SymbolPolyfill('unscopables'))\n});\n\n// Internal tweaks for real symbol producer\ndefineProperties(HiddenSymbol.prototype, {\n\tconstructor: d(SymbolPolyfill),\n\ttoString: d('', function () { return this.__name__; })\n});\n\n// Proper implementation of methods exposed on Symbol.prototype\n// They won't be accessible on produced symbol instances as they derive from HiddenSymbol.prototype\ndefineProperties(SymbolPolyfill.prototype, {\n\ttoString: d(function () { return 'Symbol (' + validateSymbol(this).__description__ + ')'; }),\n\tvalueOf: d(function () { return validateSymbol(this); })\n});\ndefineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toPrimitive, d('', function () {\n\tvar symbol = validateSymbol(this);\n\tif (typeof symbol === 'symbol') return symbol;\n\treturn symbol.toString();\n}));\ndefineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toStringTag, d('c', 'Symbol'));\n\n// Proper implementaton of toPrimitive and toStringTag for returned symbol instances\ndefineProperty(HiddenSymbol.prototype, SymbolPolyfill.toStringTag,\n\td('c', SymbolPolyfill.prototype[SymbolPolyfill.toStringTag]));\n\n// Note: It's important to define `toPrimitive` as last one, as some implementations\n// implement `toPrimitive` natively without implementing `toStringTag` (or other specified symbols)\n// And that may invoke error in definition flow:\n// See: https://github.com/medikoo/es6-symbol/issues/13#issuecomment-164146149\ndefineProperty(HiddenSymbol.prototype, SymbolPolyfill.toPrimitive,\n\td('c', SymbolPolyfill.prototype[SymbolPolyfill.toPrimitive]));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es6-symbol/polyfill.js\n// module id = 116\n// module chunks = 0","'use strict';\n\nvar isSymbol = require('./is-symbol');\n\nmodule.exports = function (value) {\n\tif (!isSymbol(value)) throw new TypeError(value + \" is not a symbol\");\n\treturn value;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es6-symbol/validate-symbol.js\n// module id = 117\n// module chunks = 0","'use strict';\n\nvar compile = require('./compile')\n  , resolve = require('./resolve-to-string');\n\nmodule.exports = function (template, context/*, options*/) {\n\treturn resolve(compile(template), context, arguments[2]);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es6-template-strings/index.js\n// module id = 118\n// module chunks = 0","'use strict';\n\nvar reduce = Array.prototype.reduce;\n\nmodule.exports = function (literals/*, …substitutions*/) {\n\tvar args = arguments;\n\treturn reduce.call(literals, function (a, b, i) {\n\t\treturn a + ((args[i] === undefined) ? '' :  String(args[i])) + b;\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es6-template-strings/passthru.js\n// module id = 119\n// module chunks = 0","'use strict';\n\nvar value          = require('es5-ext/object/valid-value')\n  , normalize      = require('es5-ext/object/normalize-options')\n  , isVarNameValid = require('esniff/is-var-name-valid')\n\n  , map = Array.prototype.map, keys = Object.keys\n  , stringify = JSON.stringify;\n\nmodule.exports = function (data, context/*, options*/) {\n\tvar names, argNames, argValues, options = Object(arguments[2]);\n\n\t(value(data) && value(data.literals) && value(data.substitutions));\n\tcontext = normalize(context);\n\tnames = keys(context).filter(isVarNameValid);\n\targNames = names.join(', ');\n\targValues = names.map(function (name) { return context[name]; });\n\treturn [data.literals].concat(map.call(data.substitutions, function (expr) {\n\t\tvar resolver;\n\t\tif (!expr) return undefined;\n\t\ttry {\n\t\t\tresolver = new Function(argNames, 'return (' + expr + ')');\n\t\t} catch (e) {\n\t\t\tthrow new TypeError(\"Unable to compile expression:\\n\\targs: \" + stringify(argNames) +\n\t\t\t\t\"\\n\\tbody: \" + stringify(expr) + \"\\n\\terror: \" + e.stack);\n\t\t}\n\t\ttry {\n\t\t\treturn resolver.apply(null, argValues);\n\t\t} catch (e) {\n\t\t\tif (options.partial) return '${' + expr + '}';\n\t\t\tthrow new TypeError(\"Unable to resolve expression:\\n\\targs: \" + stringify(argNames) +\n\t\t\t\t\"\\n\\tbody: \" + stringify(expr) + \"\\n\\terror: \" + e.stack);\n\t\t}\n\t}));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es6-template-strings/resolve.js\n// module id = 120\n// module chunks = 0","'use strict';\n\nvar from         = require('es5-ext/array/from')\n  , primitiveSet = require('es5-ext/object/primitive-set')\n  , value        = require('es5-ext/object/valid-value')\n  , callable     = require('es5-ext/object/valid-callable')\n  , d            = require('d')\n  , eolSet       = require('./lib/ws-eol')\n  , wsSet        = require('./lib/ws')\n\n  , hasOwnProperty = Object.prototype.hasOwnProperty\n  , preRegExpSet = primitiveSet.apply(null, from(';{=([,<>+-*/%&|^!~?:}'))\n  , nonNameSet = primitiveSet.apply(null, from(';{=([,<>+-*/%&|^!~?:})].'))\n\n  , move, startCollect, endCollect, collectNest\n  , $ws, $common, $string, $comment, $multiComment, $regExp\n\n  , i, char, line, columnIndex, afterWs, previousChar\n  , nest, nestedTokens, results\n  , userCode, userTriggerChar, isUserTriggerOperatorChar, userCallback\n\n  , quote\n  , collectIndex, data, nestRelease;\n\nmove = function (j) {\n\tif (!char) return;\n\tif (i >= j) return;\n\twhile (i !== j) {\n\t\tif (!char) return;\n\t\tif (hasOwnProperty.call(wsSet, char)) {\n\t\t\tif (hasOwnProperty.call(eolSet, char)) {\n\t\t\t\tcolumnIndex = i;\n\t\t\t\t++line;\n\t\t\t}\n\t\t} else {\n\t\t\tpreviousChar = char;\n\t\t}\n\t\tchar = userCode[++i];\n\t}\n};\n\nstartCollect = function (oldNestRelease) {\n\tif (collectIndex != null) nestedTokens.push([data, collectIndex, oldNestRelease]);\n\tdata = { point: i + 1, line: line, column: i + 1 - columnIndex };\n\tcollectIndex = i;\n};\n\nendCollect = function () {\n\tvar previous;\n\tdata.raw = userCode.slice(collectIndex, i);\n\tresults.push(data);\n\tif (nestedTokens.length) {\n\t\tprevious = nestedTokens.pop();\n\t\tdata = previous[0];\n\t\tcollectIndex = previous[1];\n\t\tnestRelease = previous[2];\n\t\treturn;\n\t}\n\tdata = null;\n\tcollectIndex = null;\n\tnestRelease = null;\n};\n\ncollectNest = function () {\n\tvar old = nestRelease;\n\tnestRelease = nest;\n\t++nest;\n\tmove(i + 1);\n\tstartCollect(old);\n\treturn $ws;\n};\n\n$common = function () {\n\tif ((char === '\\'') || (char === '\"')) {\n\t\tquote = char;\n\t\tchar = userCode[++i];\n\t\treturn $string;\n\t}\n\tif ((char === '(') || (char === '{') || (char === '[')) {\n\t\t++nest;\n\t} else if ((char === ')') || (char === '}') || (char === ']')) {\n\t\tif (nestRelease === --nest) endCollect();\n\t} else if (char === '/') {\n\t\tif (hasOwnProperty.call(preRegExpSet, previousChar)) {\n\t\t\tchar = userCode[++i];\n\t\t\treturn $regExp;\n\t\t}\n\t}\n\tif ((char !== userTriggerChar) || (!isUserTriggerOperatorChar && previousChar && !afterWs &&\n\t\t\t!hasOwnProperty.call(nonNameSet, previousChar))) {\n\t\tpreviousChar = char;\n\t\tchar = userCode[++i];\n\t\treturn $ws;\n\t}\n\n\treturn userCallback(i, previousChar, nest);\n};\n\n$comment = function () {\n\twhile (true) {\n\t\tif (!char) return;\n\t\tif (hasOwnProperty.call(eolSet, char)) {\n\t\t\tcolumnIndex = i + 1;\n\t\t\t++line;\n\t\t\treturn;\n\t\t}\n\t\tchar = userCode[++i];\n\t}\n};\n\n$multiComment = function () {\n\twhile (true) {\n\t\tif (!char) return;\n\t\tif (char === '*') {\n\t\t\tchar = userCode[++i];\n\t\t\tif (char === '/') return;\n\t\t\tcontinue;\n\t\t}\n\t\tif (hasOwnProperty.call(eolSet, char)) {\n\t\t\tcolumnIndex = i + 1;\n\t\t\t++line;\n\t\t}\n\t\tchar = userCode[++i];\n\t}\n};\n\n$ws = function () {\n\tvar next;\n\tafterWs = false;\n\twhile (true) {\n\t\tif (!char) return;\n\t\tif (hasOwnProperty.call(wsSet, char)) {\n\t\t\tafterWs = true;\n\t\t\tif (hasOwnProperty.call(eolSet, char)) {\n\t\t\t\tcolumnIndex = i + 1;\n\t\t\t\t++line;\n\t\t\t}\n\t\t} else if (char === '/') {\n\t\t\tnext = userCode[i + 1];\n\t\t\tif (next === '/') {\n\t\t\t\tchar = userCode[i += 2];\n\t\t\t\tafterWs = true;\n\t\t\t\t$comment();\n\t\t\t} else if (next === '*') {\n\t\t\t\tchar = userCode[i += 2];\n\t\t\t\tafterWs = true;\n\t\t\t\t$multiComment();\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t\tchar = userCode[++i];\n\t}\n\treturn $common;\n};\n\n$string = function () {\n\twhile (true) {\n\t\tif (!char) return;\n\t\tif (char === quote) {\n\t\t\tchar = userCode[++i];\n\t\t\tpreviousChar = quote;\n\t\t\treturn $ws;\n\t\t}\n\t\tif (char === '\\\\') {\n\t\t\tif (hasOwnProperty.call(eolSet, userCode[++i])) {\n\t\t\t\tcolumnIndex = i + 1;\n\t\t\t\t++line;\n\t\t\t}\n\t\t}\n\t\tchar = userCode[++i];\n\t}\n};\n\n$regExp = function () {\n\twhile (true) {\n\t\tif (!char) return;\n\t\tif (char === '/') {\n\t\t\tpreviousChar = '/';\n\t\t\tchar = userCode[++i];\n\t\t\treturn $ws;\n\t\t}\n\t\tif (char === '\\\\') ++i;\n\t\tchar = userCode[++i];\n\t}\n};\n\nmodule.exports = exports = function (code, triggerChar, callback) {\n\tvar state;\n\n\tuserCode = String(value(code));\n\tuserTriggerChar = String(value(triggerChar));\n\tif (userTriggerChar.length !== 1) {\n\t\tthrow new TypeError(userTriggerChar + \" should be one character long string\");\n\t}\n\tuserCallback = callable(callback);\n\tisUserTriggerOperatorChar = hasOwnProperty.call(nonNameSet, userTriggerChar);\n\ti = 0;\n\tchar = userCode[i];\n\tline = 1;\n\tcolumnIndex = 0;\n\tafterWs = false;\n\tpreviousChar = null;\n\tnest = 0;\n\tnestedTokens = [];\n\tresults = [];\n\texports.forceStop = false;\n\tstate = $ws;\n\twhile (state) state = state();\n\treturn results;\n};\n\nObject.defineProperties(exports, {\n\t$ws: d($ws),\n\t$common: d($common),\n\tcollectNest: d(collectNest),\n\tmove: d(move),\n\tindex: d.gs(function () { return i; }),\n\tline: d.gs(function () { return line; }),\n\tnest: d.gs(function () { return nest; }),\n\tcolumnIndex: d.gs(function () { return columnIndex; }),\n\tnext: d(function (step) {\n\t\tif (!char) return;\n\t\tmove(i + (step || 1));\n\t\treturn $ws();\n\t}),\n\tresume: d(function () { return $common; })\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/esniff/index.js\n// module id = 121\n// module chunks = 0","// Credit: Mathias Bynens -> https://mathiasbynens.be/demo/javascript-identifier-regex\n\n'use strict';\n\nmodule.exports = RegExp.prototype.test.bind(/^(?!(?:do|if|in|for|let|new|try|var|case|else|enum|eval|null|this|true|void|with|await|break|catch|class|const|false|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$)(?:[\\$A-Z_a-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D])(?:[\\$0-9A-Z_a-z\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC59\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F\\uDFE0]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6\\uDD00-\\uDD4A\\uDD50-\\uDD59]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF])*$/);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/esniff/is-var-name-valid.js\n// module id = 122\n// module chunks = 0","'use strict';\n\nvar from         = require('es5-ext/array/from')\n  , primitiveSet = require('es5-ext/object/primitive-set');\n\nmodule.exports = primitiveSet.apply(null, from(' \\f\\t\\v​\\u00a0\\u1680​\\u180e' +\n\t'\\u2000​\\u2001\\u2002​\\u2003\\u2004​\\u2005\\u2006​\\u2007\\u2008​\\u2009\\u200a' +\n\t'​​​\\u202f\\u205f​\\u3000'));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/esniff/lib/ws-inline.js\n// module id = 123\n// module chunks = 0","'use strict';\n\nvar primitiveSet = require('es5-ext/object/primitive-set')\n  , eol          = require('./ws-eol')\n  , inline       = require('./ws-inline');\n\nmodule.exports = primitiveSet.apply(null,\n\tObject.keys(eol).concat(Object.keys(inline)));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/esniff/lib/ws.js\n// module id = 124\n// module chunks = 0","'use strict';\n\nvar assign        = require('es5-ext/object/assign')\n  , normalizeOpts = require('es5-ext/object/normalize-options')\n  , isCallable    = require('es5-ext/object/is-callable')\n  , contains      = require('es5-ext/string/#/contains')\n\n  , d;\n\nd = module.exports = function (dscr, value/*, options*/) {\n\tvar c, e, w, options, desc;\n\tif ((arguments.length < 2) || (typeof dscr !== 'string')) {\n\t\toptions = value;\n\t\tvalue = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[2];\n\t}\n\tif (dscr == null) {\n\t\tc = w = true;\n\t\te = false;\n\t} else {\n\t\tc = contains.call(dscr, 'c');\n\t\te = contains.call(dscr, 'e');\n\t\tw = contains.call(dscr, 'w');\n\t}\n\n\tdesc = { value: value, configurable: c, enumerable: e, writable: w };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n};\n\nd.gs = function (dscr, get, set/*, options*/) {\n\tvar c, e, options, desc;\n\tif (typeof dscr !== 'string') {\n\t\toptions = set;\n\t\tset = get;\n\t\tget = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[3];\n\t}\n\tif (get == null) {\n\t\tget = undefined;\n\t} else if (!isCallable(get)) {\n\t\toptions = get;\n\t\tget = set = undefined;\n\t} else if (set == null) {\n\t\tset = undefined;\n\t} else if (!isCallable(set)) {\n\t\toptions = set;\n\t\tset = undefined;\n\t}\n\tif (dscr == null) {\n\t\tc = true;\n\t\te = false;\n\t} else {\n\t\tc = contains.call(dscr, 'c');\n\t\te = contains.call(dscr, 'e');\n\t}\n\n\tdesc = { get: get, set: set, configurable: c, enumerable: e };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/esniff/~/d/index.js\n// module id = 125\n// module chunks = 0","/**\n * @class\n * @private\n */\nfunction PriorityQueue (size) {\n  if (!(this instanceof PriorityQueue)) {\n    return new PriorityQueue()\n  }\n\n  this._size = size\n  this._slots = null\n  this._total = null\n\n  // initialize arrays to hold queue elements\n  size = Math.max(+size | 0, 1)\n  this._slots = []\n  for (var i = 0; i < size; i += 1) {\n    this._slots.push([])\n  }\n}\n\nPriorityQueue.prototype.size = function size () {\n  if (this._total === null) {\n    this._total = 0\n    for (var i = 0; i < this._size; i += 1) {\n      this._total += this._slots[i].length\n    }\n  }\n  return this._total\n}\n\nPriorityQueue.prototype.enqueue = function enqueue (obj, priority) {\n  var priorityOrig\n\n  // Convert to integer with a default value of 0.\n  priority = priority && +priority | 0 || 0\n\n  // Clear cache for total.\n  this._total = null\n  if (priority) {\n    priorityOrig = priority\n    if (priority < 0 || priority >= this._size) {\n      priority = (this._size - 1)\n      // put obj at the end of the line\n      console.error('invalid priority: ' + priorityOrig + ' must be between 0 and ' + priority)\n    }\n  }\n\n  this._slots[priority].push(obj)\n}\n\nPriorityQueue.prototype.dequeue = function dequeue (callback) {\n  var obj = null\n  // Clear cache for total.\n  this._total = null\n  for (var i = 0, sl = this._slots.length; i < sl; i += 1) {\n    if (this._slots[i].length) {\n      obj = this._slots[i].shift()\n      break\n    }\n  }\n  return obj\n}\n\nfunction doWhileAsync (conditionFn, iterateFn, callbackFn) {\n  var next = function () {\n    if (conditionFn()) {\n      iterateFn(next)\n    } else {\n      callbackFn()\n    }\n  }\n  next()\n}\n\n/**\n * Generate an Object pool with a specified `factory`.\n *\n * @class\n * @param {Object} factory\n *   Factory to be used for generating and destorying the items.\n * @param {String} factory.name\n *   Name of the factory. Serves only logging purposes.\n * @param {Function} factory.create\n *   Should create the item to be acquired,\n *   and call it's first callback argument with the generated item as it's argument.\n * @param {Function} factory.destroy\n *   Should gently close any resources that the item is using.\n *   Called before the items is destroyed.\n * @param {Function} factory.validate\n *   Should return true if connection is still valid and false\n *   If it should be removed from pool. Called before item is\n *   acquired from pool.\n * @param {Function} factory.validateAsync\n *   Asynchronous validate function. Receives a callback function\n *   as its second argument, that should be called with a single\n *   boolean argument being true if the item is still valid and false\n *   if it should be removed from pool. Called before item is\n *   acquired from pool. Only one of validate/validateAsync may be specified\n * @param {Number} factory.max\n *   Maximum number of items that can exist at the same time.  Default: 1.\n *   Any further acquire requests will be pushed to the waiting list.\n * @param {Number} factory.min\n *   Minimum number of items in pool (including in-use). Default: 0.\n *   When the pool is created, or a resource destroyed, this minimum will\n *   be checked. If the pool resource count is below the minimum, a new\n *   resource will be created and added to the pool.\n * @param {Number} factory.idleTimeoutMillis\n *   Delay in milliseconds after the idle items in the pool will be destroyed.\n *   And idle item is that is not acquired yet. Waiting items doesn't count here.\n * @param {Number} factory.reapIntervalMillis\n *   Cleanup is scheduled in every `factory.reapIntervalMillis` milliseconds.\n * @param {Boolean|Function} factory.log\n *   Whether the pool should log activity. If function is specified,\n *   that will be used instead. The function expects the arguments msg, loglevel\n * @param {Number} factory.priorityRange\n *   The range from 1 to be treated as a valid priority\n * @param {RefreshIdle} factory.refreshIdle\n *   Should idle resources be destroyed and recreated every idleTimeoutMillis? Default: true.\n * @param {Bool} [factory.returnToHead=false]\n *   Returns released object to head of available objects list\n */\nfunction Pool (factory) {\n  if (!(this instanceof Pool)) {\n    return new Pool(factory)\n  }\n\n  if (factory.validate && factory.validateAsync) {\n    throw new Error('Only one of validate or validateAsync may be specified')\n  }\n\n  // defaults\n  factory.idleTimeoutMillis = factory.idleTimeoutMillis || 30000\n  factory.returnToHead = factory.returnToHead || false\n  factory.refreshIdle = ('refreshIdle' in factory) ? factory.refreshIdle : true\n  factory.reapInterval = factory.reapIntervalMillis || 1000\n  factory.priorityRange = factory.priorityRange || 1\n  factory.validate = factory.validate || function () { return true }\n\n  factory.max = parseInt(factory.max, 10)\n  factory.min = parseInt(factory.min, 10)\n\n  factory.max = Math.max(isNaN(factory.max) ? 1 : factory.max, 1)\n  factory.min = Math.min(isNaN(factory.min) ? 0 : factory.min, factory.max - 1)\n\n  this._factory = factory\n  this._inUseObjects = []\n  this._draining = false\n  this._waitingClients = new PriorityQueue(factory.priorityRange)\n  this._availableObjects = []\n  this._count = 0\n  this._removeIdleTimer = null\n  this._removeIdleScheduled = false\n\n  // create initial resources (if factory.min > 0)\n  this._ensureMinimum()\n}\n\n/**\n * logs to console or user defined log function\n * @private\n * @param {string} str\n * @param {string} level\n */\nPool.prototype._log = function log (str, level) {\n  if (typeof this._factory.log === 'function') {\n    this._factory.log(str, level)\n  } else if (this._factory.log) {\n    console.log(level.toUpperCase() + ' pool ' + this._factory.name + ' - ' + str)\n  }\n}\n\n/**\n * Request the client to be destroyed. The factory's destroy handler\n * will also be called.\n *\n * This should be called within an acquire() block as an alternative to release().\n *\n * @param {Object} obj\n *   The acquired item to be destoyed.\n */\nPool.prototype.destroy = function destroy (obj) {\n  this._count -= 1\n  if (this._count < 0) this._count = 0\n  this._availableObjects = this._availableObjects.filter(function (objWithTimeout) {\n    return (objWithTimeout.obj !== obj)\n  })\n\n  this._inUseObjects = this._inUseObjects.filter(function (objInUse) {\n    return (objInUse !== obj)\n  })\n\n  this._factory.destroy(obj)\n\n  this._ensureMinimum()\n}\n\n/**\n * Checks and removes the available (idle) clients that have timed out.\n * @private\n */\nPool.prototype._removeIdle = function removeIdle () {\n  var toRemove = []\n  var now = new Date().getTime()\n  var i\n  var al\n  var tr\n  var timeout\n\n  this._removeIdleScheduled = false\n\n  // Go through the available (idle) items,\n  // check if they have timed out\n  for (i = 0, al = this._availableObjects.length; i < al && (this._factory.refreshIdle && (this._count - this._factory.min > toRemove.length)); i += 1) {\n    timeout = this._availableObjects[i].timeout\n    if (now >= timeout) {\n      // Client timed out, so destroy it.\n      this._log('removeIdle() destroying obj - now:' + now + ' timeout:' + timeout, 'verbose')\n      toRemove.push(this._availableObjects[i].obj)\n    }\n  }\n\n  for (i = 0, tr = toRemove.length; i < tr; i += 1) {\n    this.destroy(toRemove[i])\n  }\n\n  // Replace the available items with the ones to keep.\n  al = this._availableObjects.length\n\n  if (al > 0) {\n    this._log('this._availableObjects.length=' + al, 'verbose')\n    this._scheduleRemoveIdle()\n  } else {\n    this._log('removeIdle() all objects removed', 'verbose')\n  }\n}\n\n/**\n * Schedule removal of idle items in the pool.\n *\n * More schedules cannot run concurrently.\n */\nPool.prototype._scheduleRemoveIdle = function scheduleRemoveIdle () {\n  var self = this\n  if (!this._removeIdleScheduled) {\n    this._removeIdleScheduled = true\n    this._removeIdleTimer = setTimeout(function () {\n      self._removeIdle()\n    }, this._factory.reapInterval)\n  }\n}\n\n/**\n * Try to get a new client to work, and clean up pool unused (idle) items.\n *\n *  - If there are available clients waiting, shift the first one out (LIFO),\n *    and call its callback.\n *  - If there are no waiting clients, try to create one if it won't exceed\n *    the maximum number of clients.\n *  - If creating a new client would exceed the maximum, add the client to\n *    the wait list.\n * @private\n */\nPool.prototype._dispense = function dispense () {\n  var self = this\n  var objWithTimeout = null\n  var err = null\n  var clientCb = null\n  var waitingCount = this._waitingClients.size()\n\n  this._log('dispense() clients=' + waitingCount + ' available=' + this._availableObjects.length, 'info')\n  if (waitingCount > 0) {\n    if (this._factory.validateAsync) {\n      doWhileAsync(function () {\n        return self._availableObjects.length > 0\n      }, function (next) {\n        self._log('dispense() - reusing obj', 'verbose')\n        objWithTimeout = self._availableObjects[0]\n\n        self._factory.validateAsync(objWithTimeout.obj, function (valid) {\n          if (!valid) {\n            self.destroy(objWithTimeout.obj)\n            next()\n          } else {\n            self._availableObjects.shift()\n            self._inUseObjects.push(objWithTimeout.obj)\n            clientCb = self._waitingClients.dequeue()\n            clientCb(err, objWithTimeout.obj)\n          }\n        })\n      }, function () {\n        if (self._count < self._factory.max) {\n          self._createResource()\n        }\n      })\n\n      return\n    }\n\n    while (this._availableObjects.length > 0) {\n      this._log('dispense() - reusing obj', 'verbose')\n      objWithTimeout = this._availableObjects[0]\n      if (!this._factory.validate(objWithTimeout.obj)) {\n        this.destroy(objWithTimeout.obj)\n        continue\n      }\n      this._availableObjects.shift()\n      this._inUseObjects.push(objWithTimeout.obj)\n      clientCb = this._waitingClients.dequeue()\n      return clientCb(err, objWithTimeout.obj)\n    }\n    if (this._count < this._factory.max) {\n      this._createResource()\n    }\n  }\n}\n\n/**\n * @private\n */\nPool.prototype._createResource = function _createResource () {\n  this._count += 1\n  this._log('createResource() - creating obj - count=' + this._count + ' min=' + this._factory.min + ' max=' + this._factory.max, 'verbose')\n  var self = this\n  this._factory.create(function () {\n    var err, obj\n    var clientCb = self._waitingClients.dequeue()\n    if (arguments.length > 1) {\n      err = arguments[0]\n      obj = arguments[1]\n    } else {\n      err = (arguments[0] instanceof Error) ? arguments[0] : null\n      obj = (arguments[0] instanceof Error) ? null : arguments[0]\n    }\n    if (err) {\n      self._count -= 1\n      if (self._count < 0) self._count = 0\n      if (clientCb) {\n        clientCb(err, obj)\n      }\n      process.nextTick(function () {\n        self._dispense()\n      })\n    } else {\n      self._inUseObjects.push(obj)\n      if (clientCb) {\n        clientCb(err, obj)\n      } else {\n        self.release(obj)\n      }\n    }\n  })\n}\n\n/**\n * @private\n */\nPool.prototype._ensureMinimum = function _ensureMinimum () {\n  var i, diff\n  if (!this._draining && (this._count < this._factory.min)) {\n    diff = this._factory.min - this._count\n    for (i = 0; i < diff; i++) {\n      this._createResource()\n    }\n  }\n}\n\n/**\n * Request a new client. The callback will be called,\n * when a new client will be availabe, passing the client to it.\n *\n * @param {Function} callback\n *   Callback function to be called after the acquire is successful.\n *   The function will receive the acquired item as the first parameter.\n *\n * @param {Number} priority\n *   Optional.  Integer between 0 and (priorityRange - 1).  Specifies the priority\n *   of the caller if there are no available resources.  Lower numbers mean higher\n *   priority.\n *\n * @returns {boolean} `true` if the pool is not fully utilized, `false` otherwise.\n */\nPool.prototype.acquire = function acquire (callback, priority) {\n  if (this._draining) {\n    throw new Error('pool is draining and cannot accept work')\n  }\n  this._waitingClients.enqueue(callback, priority)\n  this._dispense()\n  return (this._count < this._factory.max)\n}\n\n/**\n * @deprecated\n */\nPool.prototype.borrow = function borrow (callback, priority) {\n  this._log('borrow() is deprecated. use acquire() instead', 'warn')\n  this.acquire(callback, priority)\n}\n\n/**\n * Return the client to the pool, in case it is no longer required.\n *\n * @param {Object} obj\n *   The acquired object to be put back to the pool.\n */\nPool.prototype.release = function release (obj) {\n  // check to see if this object has already been released (i.e., is back in the pool of this._availableObjects)\n  if (this._availableObjects.some(function (objWithTimeout) { return (objWithTimeout.obj === obj) })) {\n    this._log('release called twice for the same resource: ' + (new Error().stack), 'error')\n    return\n  }\n\n  // check to see if this object exists in the `in use` list and remove it\n  var index = this._inUseObjects.indexOf(obj)\n  if (index < 0) {\n    this._log('attempt to release an invalid resource: ' + (new Error().stack), 'error')\n    return\n  }\n\n  // this._log(\"return to pool\")\n  this._inUseObjects.splice(index, 1)\n  var objWithTimeout = { obj: obj, timeout: (new Date().getTime() + this._factory.idleTimeoutMillis) }\n  if (this._factory.returnToHead) {\n    this._availableObjects.splice(0, 0, objWithTimeout)\n  } else {\n    this._availableObjects.push(objWithTimeout)\n  }\n  this._log('timeout: ' + objWithTimeout.timeout, 'verbose')\n  this._dispense()\n  this._scheduleRemoveIdle()\n}\n\n/**\n * @deprecated\n */\nPool.prototype.returnToPool = function returnToPool (obj) {\n  this._log('returnToPool() is deprecated. use release() instead', 'warn')\n  this.release(obj)\n}\n\n/**\n * Disallow any new requests and let the request backlog dissapate.\n *\n * @param {Function} callback\n *   Optional. Callback invoked when all work is done and all clients have been\n *   released.\n */\nPool.prototype.drain = function drain (callback) {\n  this._log('draining', 'info')\n\n  // disable the ability to put more work on the queue.\n  this._draining = true\n\n  var self = this\n  var check = function () {\n    if (self._waitingClients.size() > 0) {\n      // wait until all client requests have been satisfied.\n      setTimeout(check, 100)\n    } else if (self._availableObjects.length !== self._count) {\n      // wait until all objects have been released.\n      setTimeout(check, 100)\n    } else if (callback) {\n      callback()\n    }\n  }\n  check()\n}\n\n/**\n * Forcibly destroys all clients regardless of timeout.  Intended to be\n * invoked as part of a drain.  Does not prevent the creation of new\n * clients as a result of subsequent calls to acquire.\n *\n * Note that if factory.min > 0, the pool will destroy all idle resources\n * in the pool, but replace them with newly created resources up to the\n * specified factory.min value.  If this is not desired, set factory.min\n * to zero before calling destroyAllNow()\n *\n * @param {Function} callback\n *   Optional. Callback invoked after all existing clients are destroyed.\n */\nPool.prototype.destroyAllNow = function destroyAllNow (callback) {\n  this._log('force destroying all objects', 'info')\n  var willDie = this._availableObjects\n  this._availableObjects = []\n  var obj = willDie.shift()\n  while (obj !== null && obj !== undefined) {\n    this.destroy(obj.obj)\n    obj = willDie.shift()\n  }\n  this._removeIdleScheduled = false\n  clearTimeout(this._removeIdleTimer)\n  if (callback) {\n    callback()\n  }\n}\n\n/**\n * Decorates a function to use a acquired client from the object pool when called.\n *\n * @param {Function} decorated\n *   The decorated function, accepting a client as the first argument and\n *   (optionally) a callback as the final argument.\n *\n * @param {Number} priority\n *   Optional.  Integer between 0 and (priorityRange - 1).  Specifies the priority\n *   of the caller if there are no available resources.  Lower numbers mean higher\n *   priority.\n */\nPool.prototype.pooled = function pooled (decorated, priority) {\n  var self = this\n  return function () {\n    var callerArgs = arguments\n    var callerCallback = callerArgs[callerArgs.length - 1]\n    var callerHasCallback = typeof callerCallback === 'function'\n    self.acquire(function (err, client) {\n      if (err) {\n        if (callerHasCallback) {\n          callerCallback(err)\n        }\n        return\n      }\n\n      var args = [client].concat(Array.prototype.slice.call(callerArgs, 0, callerHasCallback ? -1 : undefined))\n      args.push(function () {\n        self.release(client)\n        if (callerHasCallback) {\n          callerCallback.apply(null, arguments)\n        }\n      })\n\n      decorated.apply(null, args)\n    }, priority)\n  }\n}\n\nPool.prototype.getPoolSize = function getPoolSize () {\n  return this._count\n}\n\nPool.prototype.getName = function getName () {\n  return this._factory.name\n}\n\nPool.prototype.availableObjectsCount = function availableObjectsCount () {\n  return this._availableObjects.length\n}\n\nPool.prototype.inUseObjectsCount = function inUseObjectsCount () {\n  return this._inUseObjects.length\n}\n\nPool.prototype.waitingClientsCount = function waitingClientsCount () {\n  return this._waitingClients.size()\n}\n\nPool.prototype.getMaxPoolSize = function getMaxPoolSize () {\n  return this._factory.max\n}\n\nPool.prototype.getMinPoolSize = function getMinPoolSize () {\n  return this._factory.min\n}\n\nexports.Pool = Pool\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/generic-pool/lib/generic-pool.js\n// module id = 126\n// module chunks = 0","var fs = require('fs')\n  , lstat = fs.lstatSync;\n\nexports.readlinkSync = function (p) {\n  if (lstat(p).isSymbolicLink()) {\n    return fs.readlinkSync(p);\n  } else {\n    return p;\n  }\n};\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/graceful-readlink/index.js\n// module id = 127\n// module chunks = 0","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/inherits/inherits_browser.js\n// module id = 128\n// module chunks = 0","var PQ = module.exports = require('bindings')('addon.node').PQ;\n\n//print out the include dir\n//if you want to include this in a binding.gyp file\nif(!module.parent) {\n  var path = require('path');\n  console.log(path.normalize(__dirname + '/src'));\n}\n\nvar EventEmitter = require('events').EventEmitter;\nvar assert = require('assert');\n\nfor(var key in EventEmitter.prototype) {\n  PQ.prototype[key] = EventEmitter.prototype[key];\n}\n\n//SYNC connects to the server\n//throws an exception in the event of a connection error\nPQ.prototype.connectSync = function(paramString) {\n  this.connected = true;\n  if(!paramString) {\n    paramString = '';\n  }\n  var connected = this.$connectSync(paramString);\n  if(!connected) {\n    var err = new Error(this.errorMessage());\n    this.finish();\n    throw err;\n  }\n};\n\n//connects async using a background thread\n//calls the callback with an error if there was one\nPQ.prototype.connect = function(paramString, cb) {\n  this.connected = true;\n  if(typeof paramString == 'function') {\n    cb = paramString;\n    paramString = '';\n  }\n  if(!paramString) {\n    paramString = '';\n  }\n  assert(cb, 'Must provide a connection callback');\n  if(process.domain) {\n    cb = process.domain.bind(cb);\n  }\n  this.$connect(paramString, cb);\n};\n\nPQ.prototype.errorMessage = function() {\n  return this.$getLastErrorMessage();\n};\n\n//returns an int for the fd of the socket\nPQ.prototype.socket = function() {\n  return this.$socket();\n};\n\n// return server version number e.g. 90300\nPQ.prototype.serverVersion = function () {\n  return this.$serverVersion();\n};\n\n//finishes the connection & closes it\nPQ.prototype.finish = function() {\n  this.connected = false;\n  this.$finish();\n};\n\n////SYNC executes a plain text query\n//immediately stores the results within the PQ object for consumption with\n//ntuples, getvalue, etc...\n//returns false if there was an error\n//consume additional error details via PQ#errorMessage & friends\nPQ.prototype.exec = function(commandText) {\n  if(!commandText) {\n    commandText = '';\n  }\n  this.$exec(commandText);\n};\n\n//SYNC executes a query with parameters\n//immediately stores the results within the PQ object for consumption with\n//ntuples, getvalue, etc...\n//returns false if there was an error\n//consume additional error details via PQ#errorMessage & friends\nPQ.prototype.execParams = function(commandText, parameters) {\n  if(!commandText) {\n    commandText = '';\n  }\n  if(!parameters) {\n    parameters = [];\n  }\n  this.$execParams(commandText, parameters);\n};\n\n//SYNC prepares a named query and stores the result\n//immediately stores the results within the PQ object for consumption with\n//ntuples, getvalue, etc...\n//returns false if there was an error\n//consume additional error details via PQ#errorMessage & friends\nPQ.prototype.prepare = function(statementName, commandText, nParams) {\n  assert.equal(arguments.length, 3, 'Must supply 3 arguments');\n  if(!statementName) {\n    statementName = '';\n  }\n  if(!commandText) {\n    commandText = '';\n  }\n  nParams = Number(nParams) || 0;\n  this.$prepare(statementName, commandText, nParams);\n};\n\n//SYNC executes a named, prepared query and stores the result\n//immediately stores the results within the PQ object for consumption with\n//ntuples, getvalue, etc...\n//returns false if there was an error\n//consume additional error details via PQ#errorMessage & friends\nPQ.prototype.execPrepared = function(statementName, parameters) {\n  if(!statementName) {\n    statementName = '';\n  }\n  if(!parameters) {\n    parameters = [];\n  }\n  this.$execPrepared(statementName, parameters);\n};\n\n//send a command to begin executing a query in async mode\n//returns true if sent, or false if there was a send failure\nPQ.prototype.sendQuery = function(commandText) {\n  if(!commandText) {\n    commandText = '';\n  }\n  return this.$sendQuery(commandText);\n};\n\n//send a command to begin executing a query with parameters in async mode\n//returns true if sent, or false if there was a send failure\nPQ.prototype.sendQueryParams = function(commandText, parameters) {\n  if(!commandText) {\n    commandText = '';\n  }\n  if(!parameters) {\n    parameters = [];\n  }\n  return this.$sendQueryParams(commandText, parameters);\n};\n\n//send a command to prepare a named query in async mode\n//returns true if sent, or false if there was a send failure\nPQ.prototype.sendPrepare = function(statementName, commandText, nParams) {\n  assert.equal(arguments.length, 3, 'Must supply 3 arguments');\n  if(!statementName) {\n    statementName = '';\n  }\n  if(!commandText) {\n    commandText = '';\n  }\n  nParams = Number(nParams) || 0;\n  return this.$sendPrepare(statementName, commandText, nParams);\n};\n\n//send a command to execute a named query in async mode\n//returns true if sent, or false if there was a send failure\nPQ.prototype.sendQueryPrepared = function(statementName, parameters) {\n  if(!statementName) {\n    statementName = '';\n  }\n  if(!parameters) {\n    parameters = [];\n  }\n  return this.$sendQueryPrepared(statementName, parameters);\n};\n\n//'pops' a result out of the buffered\n//response data read during async command execution\n//and stores it on the c/c++ object so you can consume\n//the data from it.  returns true if there was a pending result\n//or false if there was no pending result. if there was no pending result\n//the last found result is not overwritten so you can call getResult as many\n//times as you want, and you'll always have the last available result for consumption\nPQ.prototype.getResult = function() {\n  return this.$getResult();\n};\n\n//returns a text of the enum associated with the result\n//usually just PGRES_COMMAND_OK or PGRES_FATAL_ERROR\nPQ.prototype.resultStatus = function() {\n  return this.$resultStatus();\n};\n\nPQ.prototype.resultErrorMessage = function() {\n  return this.$resultErrorMessage();\n};\n\nPQ.prototype.resultErrorFields = function() {\n  return this.$resultErrorFields();\n};\n\n//free the memory associated with a result\n//this is somewhat handled for you within the c/c++ code\n//by never allowing the code to 'leak' a result. still,\n//if you absolutely want to free it yourself, you can use this.\nPQ.prototype.clear = function() {\n  this.$clear();\n};\n\n//returns the number of tuples (rows) in the result set\nPQ.prototype.ntuples = function() {\n  return this.$ntuples();\n};\n\n//returns the number of fields (columns) in the result set\nPQ.prototype.nfields = function() {\n  return this.$nfields();\n};\n\n//returns the name of the field (column) at the given offset\nPQ.prototype.fname = function(offset) {\n  return this.$fname(offset);\n};\n\n//returns the Oid of the type for the given field\nPQ.prototype.ftype = function(offset) {\n  return this.$ftype(offset);\n};\n\n//returns a text value at the given row/col\n//if the value is null this still returns empty string\n//so you need to use PQ#getisnull to determine\nPQ.prototype.getvalue = function(row, col) {\n  return this.$getvalue(row, col);\n};\n\n//returns true/false if the value is null\nPQ.prototype.getisnull = function(row, col) {\n  return this.$getisnull(row, col);\n};\n\n//returns the status of the command\nPQ.prototype.cmdStatus = function() {\n  return this.$cmdStatus();\n};\n\n//returns the tuples in the command\nPQ.prototype.cmdTuples = function() {\n  return this.$cmdTuples();\n};\n\n//starts the 'read ready' libuv socket listener.\n//Once the socket becomes readable, the PQ instance starts\n//emitting 'readable' events.  Similar to how node's readable-stream\n//works except to clear the SELECT() notification you need to call\n//PQ#consumeInput instead of letting node pull the data off the socket\n//http://www.postgresql.org/docs/9.1/static/libpq-async.html\nPQ.prototype.startReader = function() {\n  assert(this.connected, 'Must be connected to start reader');\n  this.$startRead();\n};\n\n//suspends the libuv socket 'read ready' listener\nPQ.prototype.stopReader = function() {\n  this.$stopRead();\n};\n\nPQ.prototype.writable = function(cb) {\n  assert(this.connected, 'Must be connected to start writer');\n  this.$startWrite();\n  return this.once('writable', cb);\n};\n\n//returns boolean - false indicates an error condition\n//e.g. a failure to consume input\nPQ.prototype.consumeInput = function() {\n  return this.$consumeInput();\n};\n\n//returns true if PQ#getResult would cause\n//the process to block waiting on results\n//false indicates PQ#getResult can be called\n//with an assurance of not blocking\nPQ.prototype.isBusy = function() {\n  return this.$isBusy();\n};\n\n//toggles the socket blocking on outgoing writes\nPQ.prototype.setNonBlocking = function(truthy) {\n  return this.$setNonBlocking(truthy ? 1 : 0);\n};\n\n//returns true if the connection is non-blocking on writes, otherwise false\n//note: connection is always non-blocking on reads if using the send* methods\nPQ.prototype.isNonBlocking = function() {\n  return this.$isNonBlocking();\n};\n\n//returns 1 if socket is not write-ready\n//returns 0 if all data flushed to socket\n//returns -1 if there is an error\nPQ.prototype.flush = function() {\n  return this.$flush();\n};\n\n//escapes a literal and returns the escaped string\n//I'm not 100% sure this doesn't do any I/O...need to check that\nPQ.prototype.escapeLiteral = function(input) {\n  if(!input) return input;\n  return this.$escapeLiteral(input);\n};\n\nPQ.prototype.escapeIdentifier = function(input) {\n  if(!input) return input;\n  return this.$escapeIdentifier(input);\n};\n\n//Checks for any notifications which may have arrivied\n//and returns them as a javascript object: {relname: 'string', extra: 'string', be_pid: int}\n//if there are no pending notifications this returns undefined\nPQ.prototype.notifies = function() {\n  return this.$notifies();\n};\n\n//Sends a buffer of binary data to the server\n//returns 1 if the command was sent successfully\n//returns 0 if the command would block (use PQ#writable here if so)\n//returns -1 if there was an error\nPQ.prototype.putCopyData = function(buffer) {\n  assert(buffer instanceof Buffer);\n  return this.$putCopyData(buffer);\n};\n\n//Sends a command to 'finish' the copy\n//if an error message is passed, it will be sent to the\n//backend and signal a request to cancel the copy in\n//returns 1 if sent succesfully\n//returns 0 if the command would block\n//returns -1 if there was an error\nPQ.prototype.putCopyEnd = function(errorMessage) {\n  if(errorMessage) {\n    return this.$putCopyEnd(errorMessage);\n  }\n  return this.$putCopyEnd();\n};\n\n//Gets a buffer of data from a copy out command\n//if async is passed as true it will not block waiting\n//for the result, otherwise this will BLOCK for a result.\n//returns a buffer if successful\n//returns 0 if copy is still in process (async only)\n//returns -1 if the copy is done\n//returns -2 if there was an error\nPQ.prototype.getCopyData = function(async) {\n  return this.$getCopyData(!!async);\n};\n\nPQ.prototype.cancel = function() {\n  return this.$cancel();\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/libpq/index.js\n// module id = 129\n// module chunks = 0","'use strict';\r\n\r\nvar util = require('util');\r\n\r\nvar $def = {\r\n\r\n    // process.stdout:\r\n    log: console.log,\r\n    info: console.info,\r\n\r\n    // process.stderr:\r\n    error: console.error,\r\n    warn: console.warn\r\n};\r\n\r\nfunction colorize(value, color, isMsg) {\r\n    value = isMsg && typeof value === 'string' ? value : util.inspect(value);\r\n    return \"\\x1b[\" + color + 'm' + value + \"\\x1b[0m\";\r\n}\r\n\r\nfunction format(stream, values, color) {\r\n    if (stream.isTTY) {\r\n        if (values.length && typeof values[0] === 'string') {\r\n            return [colorize(util.format.apply(null, values), color, true)];\r\n        }\r\n        return Object.keys(values).map(function (key) {\r\n            return colorize(values[key], color);\r\n        });\r\n    }\r\n    return values;\r\n}\r\n\r\n/**\r\n * @class Writer\r\n * @param noLock\r\n */\r\nfunction Writer(noLock) {\r\n\r\n    var self = this;\r\n\r\n    /**\r\n     * @method Writer.log\r\n     * @description\r\n     * Formats and sends console.log into stdout.\r\n     */\r\n    this.log = function () {\r\n        $def.log.apply(null, format(process.stdout, arguments, getColor(self.log, 39, 97)));\r\n    };\r\n\r\n    /**\r\n     * @method Writer.error\r\n     * @description\r\n     * Formats and sends console.error into stderr.\r\n     */\r\n    this.error = function () {\r\n        $def.error.apply(null, format(process.stderr, arguments, getColor(self.error, 31, 91)));\r\n    };\r\n\r\n    /**\r\n     * @method Writer.warn\r\n     * @description\r\n     * Formats and sends console.log into stderr.\r\n     */\r\n    this.warn = function () {\r\n        $def.warn.apply(null, format(process.stderr, arguments, getColor(self.warn, 33, 93)));\r\n    };\r\n\r\n    /**\r\n     * @method Writer.info\r\n     * @description\r\n     * Formats and sends console.log into stdout.\r\n     */\r\n    this.info = function () {\r\n        $def.info.apply(null, format(process.stdout, arguments, getColor(self.info, 36, 96)));\r\n    };\r\n\r\n    /**\r\n     * @method Writer.log\r\n     * @description\r\n     * Formats and sends console.log into stdout.\r\n     */\r\n    this.success = function () {\r\n        $def.log.apply(null, format(process.stdout, arguments, getColor(self.success, 32, 92)));\r\n    };\r\n\r\n    /**\r\n     * @method Writer.write\r\n     * @description\r\n     * Formats and sends custom-color values either into stdout or stderr.\r\n     *\r\n     * @param {} values - output parameters\r\n     *\r\n     * @param {number} color - output color: 0 <= color <= 256\r\n     *\r\n     * @param {boolean}[isError=false] - sends console.error into stderr;\r\n     * By default, the method sends console.log into stdout.\r\n     *\r\n     */\r\n    this.write = function (values, color, isError) {\r\n        var method = $def.log, stream = process.stdout;\r\n        if (isError) {\r\n            method = $def.error;\r\n            stream = process.stderr;\r\n        }\r\n        if (color !== +color || color < 0 || color > 256) {\r\n            method.apply(null, values);\r\n        } else {\r\n            method.apply(null, format(stream, values, color));\r\n        }\r\n    };\r\n\r\n    addProperties('log');\r\n    addProperties('error');\r\n    addProperties('warn');\r\n    addProperties('info');\r\n    addProperties('success');\r\n\r\n    /**\r\n     * @method Writer.setBright\r\n     * @description\r\n     * Set brightness for all methods at once.\r\n     *\r\n     * @param {boolean} [bright=true]\r\n     * Indicates whether the color is to be set to be bright.\r\n     *\r\n     */\r\n    this.setBright = function (bright) {\r\n        // set to bright colors, if the flag is truthy or undefined;\r\n        // set to dim colors, if flag is falsy\r\n        bright = bright === undefined ? true : !!bright;\r\n\r\n        self.log.bright = bright;\r\n        self.error.bright = bright;\r\n        self.warn.bright = bright;\r\n        self.success.bright = bright;\r\n        self.info.bright = bright;\r\n    };\r\n\r\n    if (!noLock) {\r\n        Object.freeze(this);\r\n    }\r\n\r\n    function addProperties(name, color) {\r\n\r\n        // brightness for the predefined color:\r\n        Object.defineProperty(self[name], 'bright', {\r\n            value: false,\r\n            writable: true\r\n        });\r\n\r\n        // override for the predefined color:\r\n        Object.defineProperty(self[name], 'color', {\r\n            writable: true\r\n        });\r\n\r\n        Object.seal(self[name]);\r\n    }\r\n\r\n}\r\n\r\nfunction getColor(prop, normal, bright) {\r\n    var c = prop.color;\r\n    return (c === +c && c >= 0 && c <= 256) ? c : (prop.bright ? bright : normal);\r\n}\r\n\r\nmodule.exports = Writer;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/manakin/lib/writer.js\n// module id = 130\n// module chunks = 0","var path = require('path');\nvar fs = require('fs');\nvar _0777 = parseInt('0777', 8);\n\nmodule.exports = mkdirP.mkdirp = mkdirP.mkdirP = mkdirP;\n\nfunction mkdirP (p, opts, f, made) {\n    if (typeof opts === 'function') {\n        f = opts;\n        opts = {};\n    }\n    else if (!opts || typeof opts !== 'object') {\n        opts = { mode: opts };\n    }\n    \n    var mode = opts.mode;\n    var xfs = opts.fs || fs;\n    \n    if (mode === undefined) {\n        mode = _0777 & (~process.umask());\n    }\n    if (!made) made = null;\n    \n    var cb = f || function () {};\n    p = path.resolve(p);\n    \n    xfs.mkdir(p, mode, function (er) {\n        if (!er) {\n            made = made || p;\n            return cb(null, made);\n        }\n        switch (er.code) {\n            case 'ENOENT':\n                mkdirP(path.dirname(p), opts, function (er, made) {\n                    if (er) cb(er, made);\n                    else mkdirP(p, opts, cb, made);\n                });\n                break;\n\n            // In the case of any other error, just see if there's a dir\n            // there already.  If so, then hooray!  If not, then something\n            // is borked.\n            default:\n                xfs.stat(p, function (er2, stat) {\n                    // if the stat fails, then that's super weird.\n                    // let the original error be the failure reason.\n                    if (er2 || !stat.isDirectory()) cb(er, made)\n                    else cb(null, made);\n                });\n                break;\n        }\n    });\n}\n\nmkdirP.sync = function sync (p, opts, made) {\n    if (!opts || typeof opts !== 'object') {\n        opts = { mode: opts };\n    }\n    \n    var mode = opts.mode;\n    var xfs = opts.fs || fs;\n    \n    if (mode === undefined) {\n        mode = _0777 & (~process.umask());\n    }\n    if (!made) made = null;\n\n    p = path.resolve(p);\n\n    try {\n        xfs.mkdirSync(p, mode);\n        made = made || p;\n    }\n    catch (err0) {\n        switch (err0.code) {\n            case 'ENOENT' :\n                made = sync(path.dirname(p), opts, made);\n                sync(p, opts, made);\n                break;\n\n            // In the case of any other error, just see if there's a dir\n            // there already.  If so, then hooray!  If not, then something\n            // is borked.\n            default:\n                var stat;\n                try {\n                    stat = xfs.statSync(p);\n                }\n                catch (err1) {\n                    throw err0;\n                }\n                if (!stat.isDirectory()) throw err0;\n                break;\n        }\n    }\n\n    return made;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mkdirp/index.js\n// module id = 131\n// module chunks = 0","var Pool          = require('./Pool');\nvar PoolConfig    = require('./PoolConfig');\nvar PoolNamespace = require('./PoolNamespace');\nvar PoolSelector  = require('./PoolSelector');\nvar Util          = require('util');\nvar EventEmitter  = require('events').EventEmitter;\n\nmodule.exports = PoolCluster;\n\n/**\n * PoolCluster\n * @constructor\n * @param {object} [config] The pool cluster configuration\n * @public\n */\nfunction PoolCluster(config) {\n  EventEmitter.call(this);\n\n  config = config || {};\n  this._canRetry = typeof config.canRetry === 'undefined' ? true : config.canRetry;\n  this._defaultSelector = config.defaultSelector || 'RR';\n  this._removeNodeErrorCount = config.removeNodeErrorCount || 5;\n  this._restoreNodeTimeout = config.restoreNodeTimeout || 0;\n\n  this._closed = false;\n  this._findCaches = Object.create(null);\n  this._lastId = 0;\n  this._namespaces = Object.create(null);\n  this._nodes = Object.create(null);\n}\n\nUtil.inherits(PoolCluster, EventEmitter);\n\nPoolCluster.prototype.add = function add(id, config) {\n  if (this._closed) {\n    throw new Error('PoolCluster is closed.');\n  }\n\n  var nodeId = typeof id === 'object'\n    ? 'CLUSTER::' + (++this._lastId)\n    : String(id);\n\n  if (this._nodes[nodeId] !== undefined) {\n    throw new Error('Node ID \"' + nodeId + '\" is already defined in PoolCluster.');\n  }\n\n  var poolConfig = typeof id !== 'object'\n    ? new PoolConfig(config)\n    : new PoolConfig(id);\n\n  this._nodes[nodeId] = {\n    id            : nodeId,\n    errorCount    : 0,\n    pool          : new Pool({config: poolConfig}),\n    _offlineUntil : 0\n  };\n\n  this._clearFindCaches();\n};\n\nPoolCluster.prototype.end = function end(callback) {\n  var cb = callback !== undefined\n    ? callback\n    : _cb;\n\n  if (typeof cb !== 'function') {\n    throw TypeError('callback argument must be a function');\n  }\n\n  if (this._closed) {\n    process.nextTick(cb);\n    return;\n  }\n\n  this._closed = true;\n\n  var calledBack   = false;\n  var nodeIds      = Object.keys(this._nodes);\n  var waitingClose = 0;\n\n  function onEnd(err) {\n    if (!calledBack && (err || --waitingClose <= 0)) {\n      calledBack = true;\n      cb(err);\n    }\n  }\n\n  for (var i = 0; i < nodeIds.length; i++) {\n    var nodeId = nodeIds[i];\n    var node = this._nodes[nodeId];\n\n    waitingClose++;\n    node.pool.end(onEnd);\n  }\n\n  if (waitingClose === 0) {\n    process.nextTick(onEnd);\n  }\n};\n\nPoolCluster.prototype.of = function(pattern, selector) {\n  pattern = pattern || '*';\n\n  selector = selector || this._defaultSelector;\n  selector = selector.toUpperCase();\n  if (typeof PoolSelector[selector] === 'undefined') {\n    selector = this._defaultSelector;\n  }\n\n  var key = pattern + selector;\n\n  if (typeof this._namespaces[key] === 'undefined') {\n    this._namespaces[key] = new PoolNamespace(this, pattern, selector);\n  }\n\n  return this._namespaces[key];\n};\n\nPoolCluster.prototype.remove = function remove(pattern) {\n  var foundNodeIds = this._findNodeIds(pattern, true);\n\n  for (var i = 0; i < foundNodeIds.length; i++) {\n    var node = this._getNode(foundNodeIds[i]);\n\n    if (node) {\n      this._removeNode(node);\n    }\n  }\n};\n\nPoolCluster.prototype.getConnection = function(pattern, selector, cb) {\n  var namespace;\n  if (typeof pattern === 'function') {\n    cb = pattern;\n    namespace = this.of();\n  } else {\n    if (typeof selector === 'function') {\n      cb = selector;\n      selector = this._defaultSelector;\n    }\n\n    namespace = this.of(pattern, selector);\n  }\n\n  namespace.getConnection(cb);\n};\n\nPoolCluster.prototype._clearFindCaches = function _clearFindCaches() {\n  this._findCaches = Object.create(null);\n};\n\nPoolCluster.prototype._decreaseErrorCount = function _decreaseErrorCount(node) {\n  var errorCount = node.errorCount;\n\n  if (errorCount > this._removeNodeErrorCount) {\n    errorCount = this._removeNodeErrorCount;\n  }\n\n  if (errorCount < 1) {\n    errorCount = 1;\n  }\n\n  node.errorCount = errorCount - 1;\n\n  if (node._offlineUntil) {\n    node._offlineUntil = 0;\n    this.emit('online', node.id);\n  }\n};\n\nPoolCluster.prototype._findNodeIds = function _findNodeIds(pattern, includeOffline) {\n  var currentTime  = 0;\n  var foundNodeIds = this._findCaches[pattern];\n\n  if (foundNodeIds === undefined) {\n    var expression = patternRegExp(pattern);\n    var nodeIds    = Object.keys(this._nodes);\n\n    foundNodeIds = nodeIds.filter(function (id) {\n      return id.match(expression);\n    });\n\n    this._findCaches[pattern] = foundNodeIds;\n  }\n\n  if (includeOffline) {\n    return foundNodeIds;\n  }\n\n  return foundNodeIds.filter(function (nodeId) {\n    var node = this._getNode(nodeId);\n\n    if (!node._offlineUntil) {\n      return true;\n    }\n\n    if (!currentTime) {\n      currentTime = getMonotonicMilliseconds();\n    }\n\n    return node._offlineUntil <= currentTime;\n  }, this);\n};\n\nPoolCluster.prototype._getNode = function _getNode(id) {\n  return this._nodes[id] || null;\n};\n\nPoolCluster.prototype._increaseErrorCount = function _increaseErrorCount(node) {\n  var errorCount = ++node.errorCount;\n\n  if (this._removeNodeErrorCount > errorCount) {\n    return;\n  }\n\n  if (this._restoreNodeTimeout > 0) {\n    node._offlineUntil = getMonotonicMilliseconds() + this._restoreNodeTimeout;\n    this.emit('offline', node.id);\n    return;\n  }\n\n  this._removeNode(node);\n  this.emit('remove', node.id);\n};\n\nPoolCluster.prototype._getConnection = function(node, cb) {\n  var self = this;\n\n  node.pool.getConnection(function (err, connection) {\n    if (err) {\n      self._increaseErrorCount(node);\n      cb(err);\n      return;\n    } else {\n      self._decreaseErrorCount(node);\n    }\n\n    connection._clusterId = node.id;\n\n    cb(null, connection);\n  });\n};\n\nPoolCluster.prototype._removeNode = function _removeNode(node) {\n  delete this._nodes[node.id];\n\n  this._clearFindCaches();\n\n  node.pool.end(_noop);\n};\n\nfunction getMonotonicMilliseconds() {\n  var ms;\n\n  if (typeof process.hrtime === 'function') {\n    ms = process.hrtime();\n    ms = ms[0] * 1e3 + ms[1] * 1e-6;\n  } else {\n    ms = process.uptime() * 1000;\n  }\n\n  return Math.floor(ms);\n}\n\nfunction isRegExp(val) {\n  return typeof val === 'object'\n    && Object.prototype.toString.call(val) === '[object RegExp]';\n}\n\nfunction patternRegExp(pattern) {\n  if (isRegExp(pattern)) {\n    return pattern;\n  }\n\n  var source = pattern\n    .replace(/([.+?^=!:${}()|\\[\\]\\/\\\\])/g, '\\\\$1')\n    .replace(/\\*/g, '.*');\n\n  return new RegExp('^' + source + '$');\n}\n\nfunction _cb(err) {\n  if (err) {\n    throw err;\n  }\n}\n\nfunction _noop() {}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/PoolCluster.js\n// module id = 132\n// module chunks = 0","var inherits   = require('util').inherits;\nvar Connection = require('./Connection');\nvar Events     = require('events');\n\nmodule.exports = PoolConnection;\ninherits(PoolConnection, Connection);\n\nfunction PoolConnection(pool, options) {\n  Connection.call(this, options);\n  this._pool  = pool;\n\n  // Bind connection to pool domain\n  if (Events.usingDomains) {\n    this.domain = pool.domain;\n  }\n\n  // When a fatal error occurs the connection's protocol ends, which will cause\n  // the connection to end as well, thus we only need to watch for the end event\n  // and we will be notified of disconnects.\n  this.on('end', this._removeFromPool);\n  this.on('error', function (err) {\n    if (err.fatal) {\n      this._removeFromPool();\n    }\n  });\n}\n\nPoolConnection.prototype.release = function release() {\n  var pool = this._pool;\n\n  if (!pool || pool._closed) {\n    return undefined;\n  }\n\n  return pool.releaseConnection(this);\n};\n\n// TODO: Remove this when we are removing PoolConnection#end\nPoolConnection.prototype._realEnd = Connection.prototype.end;\n\nPoolConnection.prototype.end = function () {\n  console.warn( 'Calling conn.end() to release a pooled connection is '\n              + 'deprecated. In next version calling conn.end() will be '\n              + 'restored to default conn.end() behavior. Use '\n              + 'conn.release() instead.'\n              );\n  this.release();\n};\n\nPoolConnection.prototype.destroy = function () {\n  Connection.prototype.destroy.apply(this, arguments);\n  this._removeFromPool(this);\n};\n\nPoolConnection.prototype._removeFromPool = function _removeFromPool() {\n  if (!this._pool || this._pool._closed) {\n    return;\n  }\n\n  var pool = this._pool;\n  this._pool = null;\n\n  pool._purgeConnection(this);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/PoolConnection.js\n// module id = 133\n// module chunks = 0","var Connection   = require('./Connection');\nvar PoolSelector = require('./PoolSelector');\n\nmodule.exports = PoolNamespace;\n\n/**\n * PoolNamespace\n * @constructor\n * @param {PoolCluster} cluster The parent cluster for the namespace\n * @param {string} pattern The selection pattern to use\n * @param {string} selector The selector name to use\n * @public\n */\nfunction PoolNamespace(cluster, pattern, selector) {\n  this._cluster = cluster;\n  this._pattern = pattern;\n  this._selector = new PoolSelector[selector]();\n}\n\nPoolNamespace.prototype.getConnection = function(cb) {\n  var clusterNode = this._getClusterNode();\n  var cluster     = this._cluster;\n  var namespace   = this;\n\n  if (clusterNode === null) {\n    var err = null;\n\n    if (this._cluster._findNodeIds(this._pattern, true).length !== 0) {\n      err = new Error('Pool does not have online node.');\n      err.code = 'POOL_NONEONLINE';\n    } else {\n      err = new Error('Pool does not exist.');\n      err.code = 'POOL_NOEXIST';\n    }\n\n    cb(err);\n    return;\n  }\n\n  cluster._getConnection(clusterNode, function(err, connection) {\n    var retry = err && cluster._canRetry\n      && cluster._findNodeIds(namespace._pattern).length !== 0;\n\n    if (retry) {\n      namespace.getConnection(cb);\n      return;\n    }\n\n    if (err) {\n      cb(err);\n      return;\n    }\n\n    cb(null, connection);\n  });\n};\n\nPoolNamespace.prototype.query = function (sql, values, cb) {\n  var cluster     = this._cluster;\n  var clusterNode = this._getClusterNode();\n  var query       = Connection.createQuery(sql, values, cb);\n  var namespace   = this;\n\n  if (clusterNode === null) {\n    var err = null;\n\n    if (this._cluster._findNodeIds(this._pattern, true).length !== 0) {\n      err = new Error('Pool does not have online node.');\n      err.code = 'POOL_NONEONLINE';\n    } else {\n      err = new Error('Pool does not exist.');\n      err.code = 'POOL_NOEXIST';\n    }\n\n    process.nextTick(function () {\n      query.on('error', function () {});\n      query.end(err);\n    });\n    return query;\n  }\n\n  if (!(typeof sql === 'object' && 'typeCast' in sql)) {\n    query.typeCast = clusterNode.pool.config.connectionConfig.typeCast;\n  }\n\n  if (clusterNode.pool.config.connectionConfig.trace) {\n    // Long stack trace support\n    query._callSite = new Error();\n  }\n\n  cluster._getConnection(clusterNode, function (err, conn) {\n    var retry = err && cluster._canRetry\n      && cluster._findNodeIds(namespace._pattern).length !== 0;\n\n    if (retry) {\n      namespace.query(query);\n      return;\n    }\n\n    if (err) {\n      query.on('error', function () {});\n      query.end(err);\n      return;\n    }\n\n    // Release connection based off event\n    query.once('end', function() {\n      conn.release();\n    });\n\n    conn.query(query);\n  });\n\n  return query;\n};\n\nPoolNamespace.prototype._getClusterNode = function _getClusterNode() {\n  var foundNodeIds = this._cluster._findNodeIds(this._pattern);\n  var nodeId;\n\n  switch (foundNodeIds.length) {\n    case 0:\n      nodeId = null;\n      break;\n    case 1:\n      nodeId = foundNodeIds[0];\n      break;\n    default:\n      nodeId = this._selector(foundNodeIds);\n      break;\n  }\n\n  return nodeId !== null\n    ? this._cluster._getNode(nodeId)\n    : null;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/PoolNamespace.js\n// module id = 134\n// module chunks = 0","\nmodule.exports = BufferList;\nfunction BufferList() {\n  this.bufs = [];\n  this.size = 0;\n}\n\nBufferList.prototype.shift = function shift() {\n  var buf = this.bufs.shift();\n\n  if (buf) {\n    this.size -= buf.length;\n  }\n\n  return buf;\n};\n\nBufferList.prototype.push = function push(buf) {\n  if (!buf || !buf.length) {\n    return;\n  }\n\n  this.bufs.push(buf);\n  this.size += buf.length;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/protocol/BufferList.js\n// module id = 135\n// module chunks = 0","module.exports = PacketHeader;\nfunction PacketHeader(length, number) {\n  this.length = length;\n  this.number = number;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/protocol/PacketHeader.js\n// module id = 136\n// module chunks = 0","var BIT_16            = Math.pow(2, 16);\nvar BIT_24            = Math.pow(2, 24);\nvar BUFFER_ALLOC_SIZE = Math.pow(2, 8);\n// The maximum precision JS Numbers can hold precisely\n// Don't panic: Good enough to represent byte values up to 8192 TB\nvar IEEE_754_BINARY_64_PRECISION = Math.pow(2, 53);\nvar MAX_PACKET_LENGTH            = Math.pow(2, 24) - 1;\n\nmodule.exports = PacketWriter;\nfunction PacketWriter() {\n  this._buffer = null;\n  this._offset = 0;\n}\n\nPacketWriter.prototype.toBuffer = function toBuffer(parser) {\n  if (!this._buffer) {\n    this._buffer = new Buffer(0);\n    this._offset = 0;\n  }\n\n  var buffer  = this._buffer;\n  var length  = this._offset;\n  var packets = Math.floor(length / MAX_PACKET_LENGTH) + 1;\n\n  this._buffer = new Buffer(length + packets * 4);\n  this._offset = 0;\n\n  for (var packet = 0; packet < packets; packet++) {\n    var isLast = (packet + 1 === packets);\n    var packetLength = (isLast)\n      ? length % MAX_PACKET_LENGTH\n      : MAX_PACKET_LENGTH;\n\n    var packetNumber = parser.incrementPacketNumber();\n\n    this.writeUnsignedNumber(3, packetLength);\n    this.writeUnsignedNumber(1, packetNumber);\n\n    var start = packet * MAX_PACKET_LENGTH;\n    var end   = start + packetLength;\n\n    this.writeBuffer(buffer.slice(start, end));\n  }\n\n  return this._buffer;\n};\n\nPacketWriter.prototype.writeUnsignedNumber = function(bytes, value) {\n  this._allocate(bytes);\n\n  for (var i = 0; i < bytes; i++) {\n    this._buffer[this._offset++] = (value >> (i * 8)) & 0xff;\n  }\n};\n\nPacketWriter.prototype.writeFiller = function(bytes) {\n  this._allocate(bytes);\n\n  for (var i = 0; i < bytes; i++) {\n    this._buffer[this._offset++] = 0x00;\n  }\n};\n\nPacketWriter.prototype.writeNullTerminatedString = function(value, encoding) {\n  // Typecast undefined into '' and numbers into strings\n  value = value || '';\n  value = value + '';\n\n  var bytes = Buffer.byteLength(value, encoding || 'utf-8') + 1;\n  this._allocate(bytes);\n\n  this._buffer.write(value, this._offset, encoding);\n  this._buffer[this._offset + bytes - 1] = 0x00;\n\n  this._offset += bytes;\n};\n\nPacketWriter.prototype.writeString = function(value) {\n  // Typecast undefined into '' and numbers into strings\n  value = value || '';\n  value = value + '';\n\n  var bytes = Buffer.byteLength(value, 'utf-8');\n  this._allocate(bytes);\n\n  this._buffer.write(value, this._offset, 'utf-8');\n\n  this._offset += bytes;\n};\n\nPacketWriter.prototype.writeBuffer = function(value) {\n  var bytes = value.length;\n\n  this._allocate(bytes);\n  value.copy(this._buffer, this._offset);\n  this._offset += bytes;\n};\n\nPacketWriter.prototype.writeLengthCodedNumber = function(value) {\n  if (value === null) {\n    this._allocate(1);\n    this._buffer[this._offset++] = 251;\n    return;\n  }\n\n  if (value <= 250) {\n    this._allocate(1);\n    this._buffer[this._offset++] = value;\n    return;\n  }\n\n  if (value > IEEE_754_BINARY_64_PRECISION) {\n    throw new Error(\n      'writeLengthCodedNumber: JS precision range exceeded, your ' +\n      'number is > 53 bit: \"' + value + '\"'\n    );\n  }\n\n  if (value < BIT_16) {\n    this._allocate(3);\n    this._buffer[this._offset++] = 252;\n  } else if (value < BIT_24) {\n    this._allocate(4);\n    this._buffer[this._offset++] = 253;\n  } else {\n    this._allocate(9);\n    this._buffer[this._offset++] = 254;\n  }\n\n  // 16 Bit\n  this._buffer[this._offset++] = value & 0xff;\n  this._buffer[this._offset++] = (value >> 8) & 0xff;\n\n  if (value < BIT_16) {\n    return;\n  }\n\n  // 24 Bit\n  this._buffer[this._offset++] = (value >> 16) & 0xff;\n\n  if (value < BIT_24) {\n    return;\n  }\n\n  this._buffer[this._offset++] = (value >> 24) & 0xff;\n\n  // Hack: Get the most significant 32 bit (JS bitwise operators are 32 bit)\n  value = value.toString(2);\n  value = value.substr(0, value.length - 32);\n  value = parseInt(value, 2);\n\n  this._buffer[this._offset++] = value & 0xff;\n  this._buffer[this._offset++] = (value >> 8) & 0xff;\n  this._buffer[this._offset++] = (value >> 16) & 0xff;\n\n  // Set last byte to 0, as we can only support 53 bits in JS (see above)\n  this._buffer[this._offset++] = 0;\n};\n\nPacketWriter.prototype.writeLengthCodedBuffer = function(value) {\n  var bytes = value.length;\n  this.writeLengthCodedNumber(bytes);\n  this.writeBuffer(value);\n};\n\nPacketWriter.prototype.writeNullTerminatedBuffer = function(value) {\n  this.writeBuffer(value);\n  this.writeFiller(1); // 0x00 terminator\n};\n\nPacketWriter.prototype.writeLengthCodedString = function(value) {\n  if (value === null) {\n    this.writeLengthCodedNumber(null);\n    return;\n  }\n\n  value = (value === undefined)\n    ? ''\n    : String(value);\n\n  var bytes = Buffer.byteLength(value, 'utf-8');\n  this.writeLengthCodedNumber(bytes);\n\n  if (!bytes) {\n    return;\n  }\n\n  this._allocate(bytes);\n  this._buffer.write(value, this._offset, 'utf-8');\n  this._offset += bytes;\n};\n\nPacketWriter.prototype._allocate = function _allocate(bytes) {\n  if (!this._buffer) {\n    this._buffer = new Buffer(Math.max(BUFFER_ALLOC_SIZE, bytes));\n    this._offset = 0;\n    return;\n  }\n\n  var bytesRemaining = this._buffer.length - this._offset;\n  if (bytesRemaining >= bytes) {\n    return;\n  }\n\n  var newSize   = this._buffer.length + Math.max(BUFFER_ALLOC_SIZE, bytes);\n  var oldBuffer = this._buffer;\n\n  this._buffer = new Buffer(newSize);\n  oldBuffer.copy(this._buffer);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/protocol/PacketWriter.js\n// module id = 137\n// module chunks = 0","var MAX_PACKET_LENGTH = Math.pow(2, 24) - 1;\nvar MUL_32BIT         = Math.pow(2, 32);\nvar PacketHeader      = require('./PacketHeader');\nvar BigNumber         = require('bignumber.js');\nvar BufferList        = require('./BufferList');\n\nmodule.exports = Parser;\nfunction Parser(options) {\n  options = options || {};\n\n  this._supportBigNumbers = options.config && options.config.supportBigNumbers;\n  this._buffer            = new Buffer(0);\n  this._nextBuffers       = new BufferList();\n  this._longPacketBuffers = new BufferList();\n  this._offset            = 0;\n  this._packetEnd         = null;\n  this._packetHeader      = null;\n  this._packetOffset      = null;\n  this._onError           = options.onError || function(err) { throw err; };\n  this._onPacket          = options.onPacket || function() {};\n  this._nextPacketNumber  = 0;\n  this._encoding          = 'utf-8';\n  this._paused            = false;\n}\n\nParser.prototype.write = function write(chunk) {\n  this._nextBuffers.push(chunk);\n\n  while (!this._paused) {\n    if (!this._packetHeader) {\n      if (!this._combineNextBuffers(4)) {\n        break;\n      }\n\n      this._packetHeader = new PacketHeader(\n        this.parseUnsignedNumber(3),\n        this.parseUnsignedNumber(1)\n      );\n\n      if (this._packetHeader.number !== this._nextPacketNumber) {\n        var err = new Error(\n          'Packets out of order. Got: ' + this._packetHeader.number + ' ' +\n          'Expected: ' + this._nextPacketNumber\n        );\n\n        err.code  = 'PROTOCOL_PACKETS_OUT_OF_ORDER';\n        err.fatal = true;\n\n        this._onError(err);\n      }\n\n      this.incrementPacketNumber();\n    }\n\n    if (!this._combineNextBuffers(this._packetHeader.length)) {\n      break;\n    }\n\n    this._packetEnd    = this._offset + this._packetHeader.length;\n    this._packetOffset = this._offset;\n\n    if (this._packetHeader.length === MAX_PACKET_LENGTH) {\n      this._longPacketBuffers.push(this._buffer.slice(this._packetOffset, this._packetEnd));\n\n      this._advanceToNextPacket();\n      continue;\n    }\n\n    this._combineLongPacketBuffers();\n\n    // Try...finally to ensure exception safety. Unfortunately this is costing\n    // us up to ~10% performance in some benchmarks.\n    var hadException = true;\n    try {\n      this._onPacket(this._packetHeader);\n      hadException = false;\n    } catch (err) {\n      if (!err || typeof err.code !== 'string' || err.code.substr(0, 7) !== 'PARSER_') {\n        throw err; // Rethrow non-MySQL errors\n      }\n\n      // Pass down parser errors\n      this._onError(err);\n      hadException = false;\n    } finally {\n      this._advanceToNextPacket();\n\n      // If we had an exception, the parser while loop will be broken out\n      // of after the finally block. So we need to make sure to re-enter it\n      // to continue parsing any bytes that may already have been received.\n      if (hadException) {\n        process.nextTick(this.write.bind(this));\n      }\n    }\n  }\n};\n\nParser.prototype.append = function append(chunk) {\n  if (!chunk || chunk.length === 0) {\n    return;\n  }\n\n  // Calculate slice ranges\n  var sliceEnd    = this._buffer.length;\n  var sliceStart  = this._packetOffset === null\n    ? this._offset\n    : this._packetOffset;\n  var sliceLength = sliceEnd - sliceStart;\n\n  // Get chunk data\n  var buffer = null;\n  var chunks = !(chunk instanceof Array || Array.isArray(chunk)) ? [chunk] : chunk;\n  var length = 0;\n  var offset = 0;\n\n  for (var i = 0; i < chunks.length; i++) {\n    length += chunks[i].length;\n  }\n\n  if (sliceLength !== 0) {\n    // Create a new Buffer\n    buffer = new Buffer(sliceLength + length);\n    offset = 0;\n\n    // Copy data slice\n    offset += this._buffer.copy(buffer, 0, sliceStart, sliceEnd);\n\n    // Copy chunks\n    for (var i = 0; i < chunks.length; i++) {\n      offset += chunks[i].copy(buffer, offset);\n    }\n  } else if (chunks.length > 1) {\n    // Create a new Buffer\n    buffer = new Buffer(length);\n    offset = 0;\n\n    // Copy chunks\n    for (var i = 0; i < chunks.length; i++) {\n      offset += chunks[i].copy(buffer, offset);\n    }\n  } else {\n    // Buffer is the only chunk\n    buffer = chunks[0];\n  }\n\n  // Adjust data-tracking pointers\n  this._buffer       = buffer;\n  this._offset       = this._offset - sliceStart;\n  this._packetEnd    = this._packetEnd !== null\n    ? this._packetEnd - sliceStart\n    : null;\n  this._packetOffset = this._packetOffset !== null\n    ? this._packetOffset - sliceStart\n    : null;\n};\n\nParser.prototype.pause = function() {\n  this._paused = true;\n};\n\nParser.prototype.resume = function() {\n  this._paused = false;\n\n  // nextTick() to avoid entering write() multiple times within the same stack\n  // which would cause problems as write manipulates the state of the object.\n  process.nextTick(this.write.bind(this));\n};\n\nParser.prototype.peak = function() {\n  return this._buffer[this._offset];\n};\n\nParser.prototype.parseUnsignedNumber = function parseUnsignedNumber(bytes) {\n  if (bytes === 1) {\n    return this._buffer[this._offset++];\n  }\n\n  var buffer = this._buffer;\n  var offset = this._offset + bytes - 1;\n  var value  = 0;\n\n  if (bytes > 4) {\n    var err    = new Error('parseUnsignedNumber: Supports only up to 4 bytes');\n    err.offset = (this._offset - this._packetOffset - 1);\n    err.code   = 'PARSER_UNSIGNED_TOO_LONG';\n    throw err;\n  }\n\n  while (offset >= this._offset) {\n    value = ((value << 8) | buffer[offset]) >>> 0;\n    offset--;\n  }\n\n  this._offset += bytes;\n\n  return value;\n};\n\nParser.prototype.parseLengthCodedString = function() {\n  var length = this.parseLengthCodedNumber();\n\n  if (length === null) {\n    return null;\n  }\n\n  return this.parseString(length);\n};\n\nParser.prototype.parseLengthCodedBuffer = function() {\n  var length = this.parseLengthCodedNumber();\n\n  if (length === null) {\n    return null;\n  }\n\n  return this.parseBuffer(length);\n};\n\nParser.prototype.parseLengthCodedNumber = function parseLengthCodedNumber() {\n  if (this._offset >= this._buffer.length) {\n    var err    = new Error('Parser: read past end');\n    err.offset = (this._offset - this._packetOffset);\n    err.code   = 'PARSER_READ_PAST_END';\n    throw err;\n  }\n\n  var bits = this._buffer[this._offset++];\n\n  if (bits <= 250) {\n    return bits;\n  }\n\n  switch (bits) {\n    case 251:\n      return null;\n    case 252:\n      return this.parseUnsignedNumber(2);\n    case 253:\n      return this.parseUnsignedNumber(3);\n    case 254:\n      break;\n    default:\n      var err    = new Error('Unexpected first byte' + (bits ? ': 0x' + bits.toString(16) : ''));\n      err.offset = (this._offset - this._packetOffset - 1);\n      err.code   = 'PARSER_BAD_LENGTH_BYTE';\n      throw err;\n  }\n\n  var low = this.parseUnsignedNumber(4);\n  var high = this.parseUnsignedNumber(4);\n  var value;\n\n  if (high >>> 21) {\n    value = (new BigNumber(low)).plus((new BigNumber(MUL_32BIT)).times(high)).toString();\n\n    if (this._supportBigNumbers) {\n      return value;\n    }\n\n    var err    = new Error(\n      'parseLengthCodedNumber: JS precision range exceeded, ' +\n      'number is >= 53 bit: \"' + value + '\"'\n    );\n    err.offset = (this._offset - this._packetOffset - 8);\n    err.code   = 'PARSER_JS_PRECISION_RANGE_EXCEEDED';\n    throw err;\n  }\n\n  value = low + (MUL_32BIT * high);\n\n  return value;\n};\n\nParser.prototype.parseFiller = function(length) {\n  return this.parseBuffer(length);\n};\n\nParser.prototype.parseNullTerminatedBuffer = function() {\n  var end      = this._nullByteOffset();\n  var value    = this._buffer.slice(this._offset, end);\n  this._offset = end + 1;\n\n  return value;\n};\n\nParser.prototype.parseNullTerminatedString = function() {\n  var end      = this._nullByteOffset();\n  var value    = this._buffer.toString(this._encoding, this._offset, end);\n  this._offset = end + 1;\n\n  return value;\n};\n\nParser.prototype._nullByteOffset = function() {\n  var offset = this._offset;\n\n  while (this._buffer[offset] !== 0x00) {\n    offset++;\n\n    if (offset >= this._buffer.length) {\n      var err    = new Error('Offset of null terminated string not found.');\n      err.offset = (this._offset - this._packetOffset);\n      err.code   = 'PARSER_MISSING_NULL_BYTE';\n      throw err;\n    }\n  }\n\n  return offset;\n};\n\nParser.prototype.parsePacketTerminatedString = function() {\n  var length = this._packetEnd - this._offset;\n  return this.parseString(length);\n};\n\nParser.prototype.parseBuffer = function(length) {\n  var response = new Buffer(length);\n  this._buffer.copy(response, 0, this._offset, this._offset + length);\n\n  this._offset += length;\n  return response;\n};\n\nParser.prototype.parseString = function(length) {\n  var offset = this._offset;\n  var end = offset + length;\n  var value = this._buffer.toString(this._encoding, offset, end);\n\n  this._offset = end;\n  return value;\n};\n\nParser.prototype.parseGeometryValue = function() {\n  var buffer = this.parseLengthCodedBuffer();\n  var offset = 4;\n\n  if (buffer === null || !buffer.length) {\n    return null;\n  }\n\n  function parseGeometry() {\n    var result = null;\n    var byteOrder = buffer.readUInt8(offset); offset += 1;\n    var wkbType = byteOrder ? buffer.readUInt32LE(offset) : buffer.readUInt32BE(offset); offset += 4;\n    switch(wkbType) {\n      case 1: // WKBPoint\n        var x = byteOrder ? buffer.readDoubleLE(offset) : buffer.readDoubleBE(offset); offset += 8;\n        var y = byteOrder ? buffer.readDoubleLE(offset) : buffer.readDoubleBE(offset); offset += 8;\n        result = {x: x, y: y};\n        break;\n      case 2: // WKBLineString\n        var numPoints = byteOrder ? buffer.readUInt32LE(offset) : buffer.readUInt32BE(offset); offset += 4;\n        result = [];\n        for(var i = numPoints; i > 0; i--) {\n          var x = byteOrder ? buffer.readDoubleLE(offset) : buffer.readDoubleBE(offset); offset += 8;\n          var y = byteOrder ? buffer.readDoubleLE(offset) : buffer.readDoubleBE(offset); offset += 8;\n          result.push({x: x, y: y});\n        }\n        break;\n      case 3: // WKBPolygon\n        var numRings = byteOrder ? buffer.readUInt32LE(offset) : buffer.readUInt32BE(offset); offset += 4;\n        result = [];\n        for(var i = numRings; i > 0; i--) {\n          var numPoints = byteOrder ? buffer.readUInt32LE(offset) : buffer.readUInt32BE(offset); offset += 4;\n          var line = [];\n          for(var j = numPoints; j > 0; j--) {\n            var x = byteOrder ? buffer.readDoubleLE(offset) : buffer.readDoubleBE(offset); offset += 8;\n            var y = byteOrder ? buffer.readDoubleLE(offset) : buffer.readDoubleBE(offset); offset += 8;\n            line.push({x: x, y: y});\n          }\n          result.push(line);\n        }\n        break;\n      case 4: // WKBMultiPoint\n      case 5: // WKBMultiLineString\n      case 6: // WKBMultiPolygon\n      case 7: // WKBGeometryCollection\n        var num = byteOrder ? buffer.readUInt32LE(offset) : buffer.readUInt32BE(offset); offset += 4;\n        var result = [];\n        for(var i = num; i > 0; i--) {\n          result.push(parseGeometry());\n        }\n        break;\n    }\n    return result;\n  }\n  return parseGeometry();\n};\n\nParser.prototype.reachedPacketEnd = function() {\n  return this._offset === this._packetEnd;\n};\n\nParser.prototype.incrementPacketNumber = function() {\n  var currentPacketNumber = this._nextPacketNumber;\n  this._nextPacketNumber = (this._nextPacketNumber + 1) % 256;\n\n  return currentPacketNumber;\n};\n\nParser.prototype.resetPacketNumber = function() {\n  this._nextPacketNumber = 0;\n};\n\nParser.prototype.packetLength = function packetLength() {\n  if (!this._packetHeader) {\n    return null;\n  }\n\n  return this._packetHeader.length + this._longPacketBuffers.size;\n};\n\nParser.prototype._combineNextBuffers = function _combineNextBuffers(bytes) {\n  var length = this._buffer.length - this._offset;\n\n  if (length >= bytes) {\n    return true;\n  }\n\n  if ((length + this._nextBuffers.size) < bytes) {\n    return false;\n  }\n\n  var buffers     = [];\n  var bytesNeeded = bytes - length;\n\n  while (bytesNeeded > 0) {\n    var buffer = this._nextBuffers.shift();\n    buffers.push(buffer);\n    bytesNeeded -= buffer.length;\n  }\n\n  this.append(buffers);\n  return true;\n};\n\nParser.prototype._combineLongPacketBuffers = function _combineLongPacketBuffers() {\n  if (!this._longPacketBuffers.size) {\n    return;\n  }\n\n  // Calculate bytes\n  var remainingBytes      = this._buffer.length - this._offset;\n  var trailingPacketBytes = this._buffer.length - this._packetEnd;\n\n  // Create buffer\n  var buf    = null;\n  var buffer = new Buffer(remainingBytes + this._longPacketBuffers.size);\n  var offset = 0;\n\n  // Copy long buffers\n  while ((buf = this._longPacketBuffers.shift())) {\n    offset += buf.copy(buffer, offset);\n  }\n\n  // Copy remaining bytes\n  this._buffer.copy(buffer, offset, this._offset);\n\n  this._buffer       = buffer;\n  this._offset       = 0;\n  this._packetEnd    = this._buffer.length - trailingPacketBytes;\n  this._packetOffset = 0;\n};\n\nParser.prototype._advanceToNextPacket = function() {\n  this._offset       = this._packetEnd;\n  this._packetHeader = null;\n  this._packetEnd    = null;\n  this._packetOffset = null;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/protocol/Parser.js\n// module id = 138\n// module chunks = 0","var Parser       = require('./Parser');\nvar Sequences    = require('./sequences');\nvar Packets      = require('./packets');\nvar Timers       = require('timers');\nvar Stream       = require('stream').Stream;\nvar Util         = require('util');\nvar PacketWriter = require('./PacketWriter');\n\nmodule.exports = Protocol;\nUtil.inherits(Protocol, Stream);\nfunction Protocol(options) {\n  Stream.call(this);\n\n  options = options || {};\n\n  this.readable = true;\n  this.writable = true;\n\n  this._config                        = options.config || {};\n  this._connection                    = options.connection;\n  this._callback                      = null;\n  this._fatalError                    = null;\n  this._quitSequence                  = null;\n  this._handshakeSequence             = null;\n  this._handshaked                    = false;\n  this._ended                         = false;\n  this._destroyed                     = false;\n  this._queue                         = [];\n  this._handshakeInitializationPacket = null;\n\n  this._parser = new Parser({\n    onError  : this.handleParserError.bind(this),\n    onPacket : this._parsePacket.bind(this),\n    config   : this._config\n  });\n}\n\nProtocol.prototype.write = function(buffer) {\n  this._parser.write(buffer);\n  return true;\n};\n\nProtocol.prototype.handshake = function handshake(options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n  options.config = this._config;\n\n  return this._handshakeSequence = this._enqueue(new Sequences.Handshake(options, callback));\n};\n\nProtocol.prototype.query = function query(options, callback) {\n  return this._enqueue(new Sequences.Query(options, callback));\n};\n\nProtocol.prototype.changeUser = function changeUser(options, callback) {\n  return this._enqueue(new Sequences.ChangeUser(options, callback));\n};\n\nProtocol.prototype.ping = function ping(options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  return this._enqueue(new Sequences.Ping(options, callback));\n};\n\nProtocol.prototype.stats = function stats(options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  return this._enqueue(new Sequences.Statistics(options, callback));\n};\n\nProtocol.prototype.quit = function quit(options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  var self     = this;\n  var sequence = this._enqueue(new Sequences.Quit(options, callback));\n\n  sequence.on('end', function () {\n    self.end();\n  });\n\n  return this._quitSequence = sequence;\n};\n\nProtocol.prototype.end = function() {\n  if(this._ended) {\n    return;\n  }\n  this._ended = true;\n\n  if (this._quitSequence && (this._quitSequence._ended || this._queue[0] === this._quitSequence)) {\n    this._quitSequence.end();\n    this.emit('end');\n    return;\n  }\n\n  var err = new Error('Connection lost: The server closed the connection.');\n  err.fatal = true;\n  err.code = 'PROTOCOL_CONNECTION_LOST';\n\n  this._delegateError(err);\n};\n\nProtocol.prototype.pause = function() {\n  this._parser.pause();\n  // Since there is a file stream in query, we must transmit pause/resume event to current sequence.\n  var seq = this._queue[0];\n  if (seq && seq.emit) {\n    seq.emit('pause');\n  }\n};\n\nProtocol.prototype.resume = function() {\n  this._parser.resume();\n  // Since there is a file stream in query, we must transmit pause/resume event to current sequence.\n  var seq = this._queue[0];\n  if (seq && seq.emit) {\n    seq.emit('resume');\n  }\n};\n\nProtocol.prototype._enqueue = function(sequence) {\n  if (!this._validateEnqueue(sequence)) {\n    return sequence;\n  }\n\n  if (this._config.trace) {\n    // Long stack trace support\n    sequence._callSite = sequence._callSite || new Error();\n  }\n\n  this._queue.push(sequence);\n  this.emit('enqueue', sequence);\n\n  var self = this;\n  sequence\n    .on('error', function(err) {\n      self._delegateError(err, sequence);\n    })\n    .on('packet', function(packet) {\n      Timers.active(sequence);\n      self._emitPacket(packet);\n    })\n    .on('end', function() {\n      self._dequeue(sequence);\n    })\n    .on('timeout', function() {\n      var err = new Error(sequence.constructor.name + ' inactivity timeout');\n\n      err.code    = 'PROTOCOL_SEQUENCE_TIMEOUT';\n      err.fatal   = true;\n      err.timeout = sequence._timeout;\n\n      self._delegateError(err, sequence);\n    })\n    .on('start-tls', function() {\n      Timers.active(sequence);\n      self._connection._startTLS(function(err) {\n        if (err) {\n          // SSL negotiation error are fatal\n          err.code  = 'HANDSHAKE_SSL_ERROR';\n          err.fatal = true;\n          sequence.end(err);\n          return;\n        }\n\n        Timers.active(sequence);\n        sequence._tlsUpgradeCompleteHandler();\n      });\n    });\n\n  if (this._queue.length === 1) {\n    this._parser.resetPacketNumber();\n    this._startSequence(sequence);\n  }\n\n  return sequence;\n};\n\nProtocol.prototype._validateEnqueue = function _validateEnqueue(sequence) {\n  var err;\n  var prefix = 'Cannot enqueue ' + sequence.constructor.name;\n  var prefixBefore = prefix + ' before ';\n  var prefixAfter = prefix + ' after ';\n\n  if (this._fatalError) {\n    err      = new Error(prefixAfter + 'fatal error.');\n    err.code = 'PROTOCOL_ENQUEUE_AFTER_FATAL_ERROR';\n  } else if (this._quitSequence) {\n    err      = new Error(prefixAfter + 'invoking quit.');\n    err.code = 'PROTOCOL_ENQUEUE_AFTER_QUIT';\n  } else if (this._destroyed) {\n    err      = new Error(prefixAfter + 'being destroyed.');\n    err.code = 'PROTOCOL_ENQUEUE_AFTER_DESTROY';\n  } else if (this._handshakeSequence && sequence.constructor === Sequences.Handshake) {\n    err      = new Error(prefixAfter + 'already enqueuing a Handshake.');\n    err.code = 'PROTOCOL_ENQUEUE_HANDSHAKE_TWICE';\n  } else if (!this._handshakeSequence && sequence.constructor === Sequences.ChangeUser) {\n    err      = new Error(prefixBefore + 'a Handshake.');\n    err.code = 'PROTOCOL_ENQUEUE_BEFORE_HANDSHAKE';\n  } else {\n    return true;\n  }\n\n  var self  = this;\n  err.fatal = false;\n\n  // add error handler\n  sequence.on('error', function (err) {\n    self._delegateError(err, sequence);\n  });\n\n  process.nextTick(function () {\n    sequence.end(err);\n  });\n\n  return false;\n};\n\nProtocol.prototype._parsePacket = function() {\n  var sequence = this._queue[0];\n\n  if (!sequence) {\n    var err   = new Error('Received packet with no active sequence.');\n    err.code  = 'PROTOCOL_STRAY_PACKET';\n    err.fatal = true;\n\n    this._delegateError(err);\n    return;\n  }\n\n  var Packet     = this._determinePacket(sequence);\n  var packet     = new Packet({protocol41: this._config.protocol41});\n  var packetName = Packet.name;\n\n  // Special case: Faster dispatch, and parsing done inside sequence\n  if (Packet === Packets.RowDataPacket) {\n    sequence.RowDataPacket(packet, this._parser, this._connection);\n\n    if (this._config.debug) {\n      this._debugPacket(true, packet);\n    }\n\n    return;\n  }\n\n  if (this._config.debug) {\n    this._parsePacketDebug(packet);\n  } else {\n    packet.parse(this._parser);\n  }\n\n  if (Packet === Packets.HandshakeInitializationPacket) {\n    this._handshakeInitializationPacket = packet;\n  }\n\n  Timers.active(sequence);\n\n  if (!sequence[packetName]) {\n    var err   = new Error('Received packet in the wrong sequence.');\n    err.code  = 'PROTOCOL_INCORRECT_PACKET_SEQUENCE';\n    err.fatal = true;\n\n    this._delegateError(err);\n    return;\n  }\n\n  sequence[packetName](packet);\n};\n\nProtocol.prototype._parsePacketDebug = function _parsePacketDebug(packet) {\n  try {\n    packet.parse(this._parser);\n  } finally {\n    this._debugPacket(true, packet);\n  }\n};\n\nProtocol.prototype._emitPacket = function(packet) {\n  var packetWriter = new PacketWriter();\n  packet.write(packetWriter);\n  this.emit('data', packetWriter.toBuffer(this._parser));\n\n  if (this._config.debug) {\n    this._debugPacket(false, packet);\n  }\n};\n\nProtocol.prototype._determinePacket = function(sequence) {\n  var firstByte = this._parser.peak();\n\n  if (sequence.determinePacket) {\n    var Packet = sequence.determinePacket(firstByte, this._parser);\n    if (Packet) {\n      return Packet;\n    }\n  }\n\n  switch (firstByte) {\n    case 0x00:\n      if (!this._handshaked) {\n        this._handshaked = true;\n        this.emit('handshake', this._handshakeInitializationPacket);\n      }\n      return Packets.OkPacket;\n    case 0xfe: return Packets.EofPacket;\n    case 0xff: return Packets.ErrorPacket;\n  }\n\n  throw new Error('Could not determine packet, firstByte = ' + firstByte);\n};\n\nProtocol.prototype._dequeue = function(sequence) {\n  Timers.unenroll(sequence);\n\n  // No point in advancing the queue, we are dead\n  if (this._fatalError) {\n    return;\n  }\n\n  this._queue.shift();\n\n  var sequence = this._queue[0];\n  if (!sequence) {\n    this.emit('drain');\n    return;\n  }\n\n  this._parser.resetPacketNumber();\n\n  this._startSequence(sequence);\n};\n\nProtocol.prototype._startSequence = function(sequence) {\n  if (sequence._timeout > 0 && isFinite(sequence._timeout)) {\n    Timers.enroll(sequence, sequence._timeout);\n    Timers.active(sequence);\n  }\n\n  if (sequence.constructor === Sequences.ChangeUser) {\n    sequence.start(this._handshakeInitializationPacket);\n  } else {\n    sequence.start();\n  }\n};\n\nProtocol.prototype.handleNetworkError = function(err) {\n  err.fatal = true;\n\n  var sequence = this._queue[0];\n  if (sequence) {\n    sequence.end(err);\n  } else {\n    this._delegateError(err);\n  }\n};\n\nProtocol.prototype.handleParserError = function handleParserError(err) {\n  var sequence = this._queue[0];\n  if (sequence) {\n    sequence.end(err);\n  } else {\n    this._delegateError(err);\n  }\n};\n\nProtocol.prototype._delegateError = function(err, sequence) {\n  // Stop delegating errors after the first fatal error\n  if (this._fatalError) {\n    return;\n  }\n\n  if (err.fatal) {\n    this._fatalError = err;\n  }\n\n  if (this._shouldErrorBubbleUp(err, sequence)) {\n    // Can't use regular 'error' event here as that always destroys the pipe\n    // between socket and protocol which is not what we want (unless the\n    // exception was fatal).\n    this.emit('unhandledError', err);\n  } else if (err.fatal) {\n    // Send fatal error to all sequences in the queue\n    var queue = this._queue;\n    process.nextTick(function () {\n      queue.forEach(function (sequence) {\n        sequence.end(err);\n      });\n      queue.length = 0;\n    });\n  }\n\n  // Make sure the stream we are piping to is getting closed\n  if (err.fatal) {\n    this.emit('end', err);\n  }\n};\n\nProtocol.prototype._shouldErrorBubbleUp = function(err, sequence) {\n  if (sequence) {\n    if (sequence.hasErrorHandler()) {\n      return false;\n    } else if (!err.fatal) {\n      return true;\n    }\n  }\n\n  return (err.fatal && !this._hasPendingErrorHandlers());\n};\n\nProtocol.prototype._hasPendingErrorHandlers = function() {\n  return this._queue.some(function(sequence) {\n    return sequence.hasErrorHandler();\n  });\n};\n\nProtocol.prototype.destroy = function() {\n  this._destroyed = true;\n  this._parser.pause();\n\n  if (this._connection.state !== 'disconnected') {\n    if(!this._ended) {\n      this.end();\n    }\n  }\n};\n\nProtocol.prototype._debugPacket = function(incoming, packet) {\n  var headline = (incoming)\n    ? '<-- '\n    : '--> ';\n\n  headline = headline + packet.constructor.name;\n\n  // check for debug packet restriction\n  if (Array.isArray(this._config.debug) && this._config.debug.indexOf(packet.constructor.name) === -1) {\n    return;\n  }\n\n  console.log(headline);\n  console.log(packet);\n  console.log('');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/protocol/Protocol.js\n// module id = 139\n// module chunks = 0","module.exports = ResultSet;\nfunction ResultSet(resultSetHeaderPacket) {\n  this.resultSetHeaderPacket = resultSetHeaderPacket;\n  this.fieldPackets          = [];\n  this.eofPackets            = [];\n  this.rows                  = [];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/protocol/ResultSet.js\n// module id = 140\n// module chunks = 0","/**\n * MySQL error constants\n *\n * Extracted from version 5.7.17\n *\n * !! Generated by generate-error-constants.js, do not modify by hand !!\n */\n\nexports.EE_CANTCREATEFILE                                                                = 1;\nexports.EE_READ                                                                          = 2;\nexports.EE_WRITE                                                                         = 3;\nexports.EE_BADCLOSE                                                                      = 4;\nexports.EE_OUTOFMEMORY                                                                   = 5;\nexports.EE_DELETE                                                                        = 6;\nexports.EE_LINK                                                                          = 7;\nexports.EE_EOFERR                                                                        = 9;\nexports.EE_CANTLOCK                                                                      = 10;\nexports.EE_CANTUNLOCK                                                                    = 11;\nexports.EE_DIR                                                                           = 12;\nexports.EE_STAT                                                                          = 13;\nexports.EE_CANT_CHSIZE                                                                   = 14;\nexports.EE_CANT_OPEN_STREAM                                                              = 15;\nexports.EE_GETWD                                                                         = 16;\nexports.EE_SETWD                                                                         = 17;\nexports.EE_LINK_WARNING                                                                  = 18;\nexports.EE_OPEN_WARNING                                                                  = 19;\nexports.EE_DISK_FULL                                                                     = 20;\nexports.EE_CANT_MKDIR                                                                    = 21;\nexports.EE_UNKNOWN_CHARSET                                                               = 22;\nexports.EE_OUT_OF_FILERESOURCES                                                          = 23;\nexports.EE_CANT_READLINK                                                                 = 24;\nexports.EE_CANT_SYMLINK                                                                  = 25;\nexports.EE_REALPATH                                                                      = 26;\nexports.EE_SYNC                                                                          = 27;\nexports.EE_UNKNOWN_COLLATION                                                             = 28;\nexports.EE_FILENOTFOUND                                                                  = 29;\nexports.EE_FILE_NOT_CLOSED                                                               = 30;\nexports.EE_CHANGE_OWNERSHIP                                                              = 31;\nexports.EE_CHANGE_PERMISSIONS                                                            = 32;\nexports.EE_CANT_SEEK                                                                     = 33;\nexports.EE_CAPACITY_EXCEEDED                                                             = 34;\nexports.HA_ERR_KEY_NOT_FOUND                                                             = 120;\nexports.HA_ERR_FOUND_DUPP_KEY                                                            = 121;\nexports.HA_ERR_INTERNAL_ERROR                                                            = 122;\nexports.HA_ERR_RECORD_CHANGED                                                            = 123;\nexports.HA_ERR_WRONG_INDEX                                                               = 124;\nexports.HA_ERR_CRASHED                                                                   = 126;\nexports.HA_ERR_WRONG_IN_RECORD                                                           = 127;\nexports.HA_ERR_OUT_OF_MEM                                                                = 128;\nexports.HA_ERR_NOT_A_TABLE                                                               = 130;\nexports.HA_ERR_WRONG_COMMAND                                                             = 131;\nexports.HA_ERR_OLD_FILE                                                                  = 132;\nexports.HA_ERR_NO_ACTIVE_RECORD                                                          = 133;\nexports.HA_ERR_RECORD_DELETED                                                            = 134;\nexports.HA_ERR_RECORD_FILE_FULL                                                          = 135;\nexports.HA_ERR_INDEX_FILE_FULL                                                           = 136;\nexports.HA_ERR_END_OF_FILE                                                               = 137;\nexports.HA_ERR_UNSUPPORTED                                                               = 138;\nexports.HA_ERR_TOO_BIG_ROW                                                               = 139;\nexports.HA_WRONG_CREATE_OPTION                                                           = 140;\nexports.HA_ERR_FOUND_DUPP_UNIQUE                                                         = 141;\nexports.HA_ERR_UNKNOWN_CHARSET                                                           = 142;\nexports.HA_ERR_WRONG_MRG_TABLE_DEF                                                       = 143;\nexports.HA_ERR_CRASHED_ON_REPAIR                                                         = 144;\nexports.HA_ERR_CRASHED_ON_USAGE                                                          = 145;\nexports.HA_ERR_LOCK_WAIT_TIMEOUT                                                         = 146;\nexports.HA_ERR_LOCK_TABLE_FULL                                                           = 147;\nexports.HA_ERR_READ_ONLY_TRANSACTION                                                     = 148;\nexports.HA_ERR_LOCK_DEADLOCK                                                             = 149;\nexports.HA_ERR_CANNOT_ADD_FOREIGN                                                        = 150;\nexports.HA_ERR_NO_REFERENCED_ROW                                                         = 151;\nexports.HA_ERR_ROW_IS_REFERENCED                                                         = 152;\nexports.HA_ERR_NO_SAVEPOINT                                                              = 153;\nexports.HA_ERR_NON_UNIQUE_BLOCK_SIZE                                                     = 154;\nexports.HA_ERR_NO_SUCH_TABLE                                                             = 155;\nexports.HA_ERR_TABLE_EXIST                                                               = 156;\nexports.HA_ERR_NO_CONNECTION                                                             = 157;\nexports.HA_ERR_NULL_IN_SPATIAL                                                           = 158;\nexports.HA_ERR_TABLE_DEF_CHANGED                                                         = 159;\nexports.HA_ERR_NO_PARTITION_FOUND                                                        = 160;\nexports.HA_ERR_RBR_LOGGING_FAILED                                                        = 161;\nexports.HA_ERR_DROP_INDEX_FK                                                             = 162;\nexports.HA_ERR_FOREIGN_DUPLICATE_KEY                                                     = 163;\nexports.HA_ERR_TABLE_NEEDS_UPGRADE                                                       = 164;\nexports.HA_ERR_TABLE_READONLY                                                            = 165;\nexports.HA_ERR_AUTOINC_READ_FAILED                                                       = 166;\nexports.HA_ERR_AUTOINC_ERANGE                                                            = 167;\nexports.HA_ERR_GENERIC                                                                   = 168;\nexports.HA_ERR_RECORD_IS_THE_SAME                                                        = 169;\nexports.HA_ERR_LOGGING_IMPOSSIBLE                                                        = 170;\nexports.HA_ERR_CORRUPT_EVENT                                                             = 171;\nexports.HA_ERR_NEW_FILE                                                                  = 172;\nexports.HA_ERR_ROWS_EVENT_APPLY                                                          = 173;\nexports.HA_ERR_INITIALIZATION                                                            = 174;\nexports.HA_ERR_FILE_TOO_SHORT                                                            = 175;\nexports.HA_ERR_WRONG_CRC                                                                 = 176;\nexports.HA_ERR_TOO_MANY_CONCURRENT_TRXS                                                  = 177;\nexports.HA_ERR_NOT_IN_LOCK_PARTITIONS                                                    = 178;\nexports.HA_ERR_INDEX_COL_TOO_LONG                                                        = 179;\nexports.HA_ERR_INDEX_CORRUPT                                                             = 180;\nexports.HA_ERR_UNDO_REC_TOO_BIG                                                          = 181;\nexports.HA_FTS_INVALID_DOCID                                                             = 182;\nexports.HA_ERR_TABLE_IN_FK_CHECK                                                         = 183;\nexports.HA_ERR_TABLESPACE_EXISTS                                                         = 184;\nexports.HA_ERR_TOO_MANY_FIELDS                                                           = 185;\nexports.HA_ERR_ROW_IN_WRONG_PARTITION                                                    = 186;\nexports.HA_ERR_INNODB_READ_ONLY                                                          = 187;\nexports.HA_ERR_FTS_EXCEED_RESULT_CACHE_LIMIT                                             = 188;\nexports.HA_ERR_TEMP_FILE_WRITE_FAILURE                                                   = 189;\nexports.HA_ERR_INNODB_FORCED_RECOVERY                                                    = 190;\nexports.HA_ERR_FTS_TOO_MANY_WORDS_IN_PHRASE                                              = 191;\nexports.HA_ERR_FK_DEPTH_EXCEEDED                                                         = 192;\nexports.HA_MISSING_CREATE_OPTION                                                         = 193;\nexports.HA_ERR_SE_OUT_OF_MEMORY                                                          = 194;\nexports.HA_ERR_TABLE_CORRUPT                                                             = 195;\nexports.HA_ERR_QUERY_INTERRUPTED                                                         = 196;\nexports.HA_ERR_TABLESPACE_MISSING                                                        = 197;\nexports.HA_ERR_TABLESPACE_IS_NOT_EMPTY                                                   = 198;\nexports.HA_ERR_WRONG_FILE_NAME                                                           = 199;\nexports.HA_ERR_NOT_ALLOWED_COMMAND                                                       = 200;\nexports.HA_ERR_COMPUTE_FAILED                                                            = 201;\nexports.ER_HASHCHK                                                                       = 1000;\nexports.ER_NISAMCHK                                                                      = 1001;\nexports.ER_NO                                                                            = 1002;\nexports.ER_YES                                                                           = 1003;\nexports.ER_CANT_CREATE_FILE                                                              = 1004;\nexports.ER_CANT_CREATE_TABLE                                                             = 1005;\nexports.ER_CANT_CREATE_DB                                                                = 1006;\nexports.ER_DB_CREATE_EXISTS                                                              = 1007;\nexports.ER_DB_DROP_EXISTS                                                                = 1008;\nexports.ER_DB_DROP_DELETE                                                                = 1009;\nexports.ER_DB_DROP_RMDIR                                                                 = 1010;\nexports.ER_CANT_DELETE_FILE                                                              = 1011;\nexports.ER_CANT_FIND_SYSTEM_REC                                                          = 1012;\nexports.ER_CANT_GET_STAT                                                                 = 1013;\nexports.ER_CANT_GET_WD                                                                   = 1014;\nexports.ER_CANT_LOCK                                                                     = 1015;\nexports.ER_CANT_OPEN_FILE                                                                = 1016;\nexports.ER_FILE_NOT_FOUND                                                                = 1017;\nexports.ER_CANT_READ_DIR                                                                 = 1018;\nexports.ER_CANT_SET_WD                                                                   = 1019;\nexports.ER_CHECKREAD                                                                     = 1020;\nexports.ER_DISK_FULL                                                                     = 1021;\nexports.ER_DUP_KEY                                                                       = 1022;\nexports.ER_ERROR_ON_CLOSE                                                                = 1023;\nexports.ER_ERROR_ON_READ                                                                 = 1024;\nexports.ER_ERROR_ON_RENAME                                                               = 1025;\nexports.ER_ERROR_ON_WRITE                                                                = 1026;\nexports.ER_FILE_USED                                                                     = 1027;\nexports.ER_FILSORT_ABORT                                                                 = 1028;\nexports.ER_FORM_NOT_FOUND                                                                = 1029;\nexports.ER_GET_ERRNO                                                                     = 1030;\nexports.ER_ILLEGAL_HA                                                                    = 1031;\nexports.ER_KEY_NOT_FOUND                                                                 = 1032;\nexports.ER_NOT_FORM_FILE                                                                 = 1033;\nexports.ER_NOT_KEYFILE                                                                   = 1034;\nexports.ER_OLD_KEYFILE                                                                   = 1035;\nexports.ER_OPEN_AS_READONLY                                                              = 1036;\nexports.ER_OUTOFMEMORY                                                                   = 1037;\nexports.ER_OUT_OF_SORTMEMORY                                                             = 1038;\nexports.ER_UNEXPECTED_EOF                                                                = 1039;\nexports.ER_CON_COUNT_ERROR                                                               = 1040;\nexports.ER_OUT_OF_RESOURCES                                                              = 1041;\nexports.ER_BAD_HOST_ERROR                                                                = 1042;\nexports.ER_HANDSHAKE_ERROR                                                               = 1043;\nexports.ER_DBACCESS_DENIED_ERROR                                                         = 1044;\nexports.ER_ACCESS_DENIED_ERROR                                                           = 1045;\nexports.ER_NO_DB_ERROR                                                                   = 1046;\nexports.ER_UNKNOWN_COM_ERROR                                                             = 1047;\nexports.ER_BAD_NULL_ERROR                                                                = 1048;\nexports.ER_BAD_DB_ERROR                                                                  = 1049;\nexports.ER_TABLE_EXISTS_ERROR                                                            = 1050;\nexports.ER_BAD_TABLE_ERROR                                                               = 1051;\nexports.ER_NON_UNIQ_ERROR                                                                = 1052;\nexports.ER_SERVER_SHUTDOWN                                                               = 1053;\nexports.ER_BAD_FIELD_ERROR                                                               = 1054;\nexports.ER_WRONG_FIELD_WITH_GROUP                                                        = 1055;\nexports.ER_WRONG_GROUP_FIELD                                                             = 1056;\nexports.ER_WRONG_SUM_SELECT                                                              = 1057;\nexports.ER_WRONG_VALUE_COUNT                                                             = 1058;\nexports.ER_TOO_LONG_IDENT                                                                = 1059;\nexports.ER_DUP_FIELDNAME                                                                 = 1060;\nexports.ER_DUP_KEYNAME                                                                   = 1061;\nexports.ER_DUP_ENTRY                                                                     = 1062;\nexports.ER_WRONG_FIELD_SPEC                                                              = 1063;\nexports.ER_PARSE_ERROR                                                                   = 1064;\nexports.ER_EMPTY_QUERY                                                                   = 1065;\nexports.ER_NONUNIQ_TABLE                                                                 = 1066;\nexports.ER_INVALID_DEFAULT                                                               = 1067;\nexports.ER_MULTIPLE_PRI_KEY                                                              = 1068;\nexports.ER_TOO_MANY_KEYS                                                                 = 1069;\nexports.ER_TOO_MANY_KEY_PARTS                                                            = 1070;\nexports.ER_TOO_LONG_KEY                                                                  = 1071;\nexports.ER_KEY_COLUMN_DOES_NOT_EXITS                                                     = 1072;\nexports.ER_BLOB_USED_AS_KEY                                                              = 1073;\nexports.ER_TOO_BIG_FIELDLENGTH                                                           = 1074;\nexports.ER_WRONG_AUTO_KEY                                                                = 1075;\nexports.ER_READY                                                                         = 1076;\nexports.ER_NORMAL_SHUTDOWN                                                               = 1077;\nexports.ER_GOT_SIGNAL                                                                    = 1078;\nexports.ER_SHUTDOWN_COMPLETE                                                             = 1079;\nexports.ER_FORCING_CLOSE                                                                 = 1080;\nexports.ER_IPSOCK_ERROR                                                                  = 1081;\nexports.ER_NO_SUCH_INDEX                                                                 = 1082;\nexports.ER_WRONG_FIELD_TERMINATORS                                                       = 1083;\nexports.ER_BLOBS_AND_NO_TERMINATED                                                       = 1084;\nexports.ER_TEXTFILE_NOT_READABLE                                                         = 1085;\nexports.ER_FILE_EXISTS_ERROR                                                             = 1086;\nexports.ER_LOAD_INFO                                                                     = 1087;\nexports.ER_ALTER_INFO                                                                    = 1088;\nexports.ER_WRONG_SUB_KEY                                                                 = 1089;\nexports.ER_CANT_REMOVE_ALL_FIELDS                                                        = 1090;\nexports.ER_CANT_DROP_FIELD_OR_KEY                                                        = 1091;\nexports.ER_INSERT_INFO                                                                   = 1092;\nexports.ER_UPDATE_TABLE_USED                                                             = 1093;\nexports.ER_NO_SUCH_THREAD                                                                = 1094;\nexports.ER_KILL_DENIED_ERROR                                                             = 1095;\nexports.ER_NO_TABLES_USED                                                                = 1096;\nexports.ER_TOO_BIG_SET                                                                   = 1097;\nexports.ER_NO_UNIQUE_LOGFILE                                                             = 1098;\nexports.ER_TABLE_NOT_LOCKED_FOR_WRITE                                                    = 1099;\nexports.ER_TABLE_NOT_LOCKED                                                              = 1100;\nexports.ER_BLOB_CANT_HAVE_DEFAULT                                                        = 1101;\nexports.ER_WRONG_DB_NAME                                                                 = 1102;\nexports.ER_WRONG_TABLE_NAME                                                              = 1103;\nexports.ER_TOO_BIG_SELECT                                                                = 1104;\nexports.ER_UNKNOWN_ERROR                                                                 = 1105;\nexports.ER_UNKNOWN_PROCEDURE                                                             = 1106;\nexports.ER_WRONG_PARAMCOUNT_TO_PROCEDURE                                                 = 1107;\nexports.ER_WRONG_PARAMETERS_TO_PROCEDURE                                                 = 1108;\nexports.ER_UNKNOWN_TABLE                                                                 = 1109;\nexports.ER_FIELD_SPECIFIED_TWICE                                                         = 1110;\nexports.ER_INVALID_GROUP_FUNC_USE                                                        = 1111;\nexports.ER_UNSUPPORTED_EXTENSION                                                         = 1112;\nexports.ER_TABLE_MUST_HAVE_COLUMNS                                                       = 1113;\nexports.ER_RECORD_FILE_FULL                                                              = 1114;\nexports.ER_UNKNOWN_CHARACTER_SET                                                         = 1115;\nexports.ER_TOO_MANY_TABLES                                                               = 1116;\nexports.ER_TOO_MANY_FIELDS                                                               = 1117;\nexports.ER_TOO_BIG_ROWSIZE                                                               = 1118;\nexports.ER_STACK_OVERRUN                                                                 = 1119;\nexports.ER_WRONG_OUTER_JOIN                                                              = 1120;\nexports.ER_NULL_COLUMN_IN_INDEX                                                          = 1121;\nexports.ER_CANT_FIND_UDF                                                                 = 1122;\nexports.ER_CANT_INITIALIZE_UDF                                                           = 1123;\nexports.ER_UDF_NO_PATHS                                                                  = 1124;\nexports.ER_UDF_EXISTS                                                                    = 1125;\nexports.ER_CANT_OPEN_LIBRARY                                                             = 1126;\nexports.ER_CANT_FIND_DL_ENTRY                                                            = 1127;\nexports.ER_FUNCTION_NOT_DEFINED                                                          = 1128;\nexports.ER_HOST_IS_BLOCKED                                                               = 1129;\nexports.ER_HOST_NOT_PRIVILEGED                                                           = 1130;\nexports.ER_PASSWORD_ANONYMOUS_USER                                                       = 1131;\nexports.ER_PASSWORD_NOT_ALLOWED                                                          = 1132;\nexports.ER_PASSWORD_NO_MATCH                                                             = 1133;\nexports.ER_UPDATE_INFO                                                                   = 1134;\nexports.ER_CANT_CREATE_THREAD                                                            = 1135;\nexports.ER_WRONG_VALUE_COUNT_ON_ROW                                                      = 1136;\nexports.ER_CANT_REOPEN_TABLE                                                             = 1137;\nexports.ER_INVALID_USE_OF_NULL                                                           = 1138;\nexports.ER_REGEXP_ERROR                                                                  = 1139;\nexports.ER_MIX_OF_GROUP_FUNC_AND_FIELDS                                                  = 1140;\nexports.ER_NONEXISTING_GRANT                                                             = 1141;\nexports.ER_TABLEACCESS_DENIED_ERROR                                                      = 1142;\nexports.ER_COLUMNACCESS_DENIED_ERROR                                                     = 1143;\nexports.ER_ILLEGAL_GRANT_FOR_TABLE                                                       = 1144;\nexports.ER_GRANT_WRONG_HOST_OR_USER                                                      = 1145;\nexports.ER_NO_SUCH_TABLE                                                                 = 1146;\nexports.ER_NONEXISTING_TABLE_GRANT                                                       = 1147;\nexports.ER_NOT_ALLOWED_COMMAND                                                           = 1148;\nexports.ER_SYNTAX_ERROR                                                                  = 1149;\nexports.ER_DELAYED_CANT_CHANGE_LOCK                                                      = 1150;\nexports.ER_TOO_MANY_DELAYED_THREADS                                                      = 1151;\nexports.ER_ABORTING_CONNECTION                                                           = 1152;\nexports.ER_NET_PACKET_TOO_LARGE                                                          = 1153;\nexports.ER_NET_READ_ERROR_FROM_PIPE                                                      = 1154;\nexports.ER_NET_FCNTL_ERROR                                                               = 1155;\nexports.ER_NET_PACKETS_OUT_OF_ORDER                                                      = 1156;\nexports.ER_NET_UNCOMPRESS_ERROR                                                          = 1157;\nexports.ER_NET_READ_ERROR                                                                = 1158;\nexports.ER_NET_READ_INTERRUPTED                                                          = 1159;\nexports.ER_NET_ERROR_ON_WRITE                                                            = 1160;\nexports.ER_NET_WRITE_INTERRUPTED                                                         = 1161;\nexports.ER_TOO_LONG_STRING                                                               = 1162;\nexports.ER_TABLE_CANT_HANDLE_BLOB                                                        = 1163;\nexports.ER_TABLE_CANT_HANDLE_AUTO_INCREMENT                                              = 1164;\nexports.ER_DELAYED_INSERT_TABLE_LOCKED                                                   = 1165;\nexports.ER_WRONG_COLUMN_NAME                                                             = 1166;\nexports.ER_WRONG_KEY_COLUMN                                                              = 1167;\nexports.ER_WRONG_MRG_TABLE                                                               = 1168;\nexports.ER_DUP_UNIQUE                                                                    = 1169;\nexports.ER_BLOB_KEY_WITHOUT_LENGTH                                                       = 1170;\nexports.ER_PRIMARY_CANT_HAVE_NULL                                                        = 1171;\nexports.ER_TOO_MANY_ROWS                                                                 = 1172;\nexports.ER_REQUIRES_PRIMARY_KEY                                                          = 1173;\nexports.ER_NO_RAID_COMPILED                                                              = 1174;\nexports.ER_UPDATE_WITHOUT_KEY_IN_SAFE_MODE                                               = 1175;\nexports.ER_KEY_DOES_NOT_EXITS                                                            = 1176;\nexports.ER_CHECK_NO_SUCH_TABLE                                                           = 1177;\nexports.ER_CHECK_NOT_IMPLEMENTED                                                         = 1178;\nexports.ER_CANT_DO_THIS_DURING_AN_TRANSACTION                                            = 1179;\nexports.ER_ERROR_DURING_COMMIT                                                           = 1180;\nexports.ER_ERROR_DURING_ROLLBACK                                                         = 1181;\nexports.ER_ERROR_DURING_FLUSH_LOGS                                                       = 1182;\nexports.ER_ERROR_DURING_CHECKPOINT                                                       = 1183;\nexports.ER_NEW_ABORTING_CONNECTION                                                       = 1184;\nexports.ER_DUMP_NOT_IMPLEMENTED                                                          = 1185;\nexports.ER_FLUSH_MASTER_BINLOG_CLOSED                                                    = 1186;\nexports.ER_INDEX_REBUILD                                                                 = 1187;\nexports.ER_MASTER                                                                        = 1188;\nexports.ER_MASTER_NET_READ                                                               = 1189;\nexports.ER_MASTER_NET_WRITE                                                              = 1190;\nexports.ER_FT_MATCHING_KEY_NOT_FOUND                                                     = 1191;\nexports.ER_LOCK_OR_ACTIVE_TRANSACTION                                                    = 1192;\nexports.ER_UNKNOWN_SYSTEM_VARIABLE                                                       = 1193;\nexports.ER_CRASHED_ON_USAGE                                                              = 1194;\nexports.ER_CRASHED_ON_REPAIR                                                             = 1195;\nexports.ER_WARNING_NOT_COMPLETE_ROLLBACK                                                 = 1196;\nexports.ER_TRANS_CACHE_FULL                                                              = 1197;\nexports.ER_SLAVE_MUST_STOP                                                               = 1198;\nexports.ER_SLAVE_NOT_RUNNING                                                             = 1199;\nexports.ER_BAD_SLAVE                                                                     = 1200;\nexports.ER_MASTER_INFO                                                                   = 1201;\nexports.ER_SLAVE_THREAD                                                                  = 1202;\nexports.ER_TOO_MANY_USER_CONNECTIONS                                                     = 1203;\nexports.ER_SET_CONSTANTS_ONLY                                                            = 1204;\nexports.ER_LOCK_WAIT_TIMEOUT                                                             = 1205;\nexports.ER_LOCK_TABLE_FULL                                                               = 1206;\nexports.ER_READ_ONLY_TRANSACTION                                                         = 1207;\nexports.ER_DROP_DB_WITH_READ_LOCK                                                        = 1208;\nexports.ER_CREATE_DB_WITH_READ_LOCK                                                      = 1209;\nexports.ER_WRONG_ARGUMENTS                                                               = 1210;\nexports.ER_NO_PERMISSION_TO_CREATE_USER                                                  = 1211;\nexports.ER_UNION_TABLES_IN_DIFFERENT_DIR                                                 = 1212;\nexports.ER_LOCK_DEADLOCK                                                                 = 1213;\nexports.ER_TABLE_CANT_HANDLE_FT                                                          = 1214;\nexports.ER_CANNOT_ADD_FOREIGN                                                            = 1215;\nexports.ER_NO_REFERENCED_ROW                                                             = 1216;\nexports.ER_ROW_IS_REFERENCED                                                             = 1217;\nexports.ER_CONNECT_TO_MASTER                                                             = 1218;\nexports.ER_QUERY_ON_MASTER                                                               = 1219;\nexports.ER_ERROR_WHEN_EXECUTING_COMMAND                                                  = 1220;\nexports.ER_WRONG_USAGE                                                                   = 1221;\nexports.ER_WRONG_NUMBER_OF_COLUMNS_IN_SELECT                                             = 1222;\nexports.ER_CANT_UPDATE_WITH_READLOCK                                                     = 1223;\nexports.ER_MIXING_NOT_ALLOWED                                                            = 1224;\nexports.ER_DUP_ARGUMENT                                                                  = 1225;\nexports.ER_USER_LIMIT_REACHED                                                            = 1226;\nexports.ER_SPECIFIC_ACCESS_DENIED_ERROR                                                  = 1227;\nexports.ER_LOCAL_VARIABLE                                                                = 1228;\nexports.ER_GLOBAL_VARIABLE                                                               = 1229;\nexports.ER_NO_DEFAULT                                                                    = 1230;\nexports.ER_WRONG_VALUE_FOR_VAR                                                           = 1231;\nexports.ER_WRONG_TYPE_FOR_VAR                                                            = 1232;\nexports.ER_VAR_CANT_BE_READ                                                              = 1233;\nexports.ER_CANT_USE_OPTION_HERE                                                          = 1234;\nexports.ER_NOT_SUPPORTED_YET                                                             = 1235;\nexports.ER_MASTER_FATAL_ERROR_READING_BINLOG                                             = 1236;\nexports.ER_SLAVE_IGNORED_TABLE                                                           = 1237;\nexports.ER_INCORRECT_GLOBAL_LOCAL_VAR                                                    = 1238;\nexports.ER_WRONG_FK_DEF                                                                  = 1239;\nexports.ER_KEY_REF_DO_NOT_MATCH_TABLE_REF                                                = 1240;\nexports.ER_OPERAND_COLUMNS                                                               = 1241;\nexports.ER_SUBQUERY_NO_1_ROW                                                             = 1242;\nexports.ER_UNKNOWN_STMT_HANDLER                                                          = 1243;\nexports.ER_CORRUPT_HELP_DB                                                               = 1244;\nexports.ER_CYCLIC_REFERENCE                                                              = 1245;\nexports.ER_AUTO_CONVERT                                                                  = 1246;\nexports.ER_ILLEGAL_REFERENCE                                                             = 1247;\nexports.ER_DERIVED_MUST_HAVE_ALIAS                                                       = 1248;\nexports.ER_SELECT_REDUCED                                                                = 1249;\nexports.ER_TABLENAME_NOT_ALLOWED_HERE                                                    = 1250;\nexports.ER_NOT_SUPPORTED_AUTH_MODE                                                       = 1251;\nexports.ER_SPATIAL_CANT_HAVE_NULL                                                        = 1252;\nexports.ER_COLLATION_CHARSET_MISMATCH                                                    = 1253;\nexports.ER_SLAVE_WAS_RUNNING                                                             = 1254;\nexports.ER_SLAVE_WAS_NOT_RUNNING                                                         = 1255;\nexports.ER_TOO_BIG_FOR_UNCOMPRESS                                                        = 1256;\nexports.ER_ZLIB_Z_MEM_ERROR                                                              = 1257;\nexports.ER_ZLIB_Z_BUF_ERROR                                                              = 1258;\nexports.ER_ZLIB_Z_DATA_ERROR                                                             = 1259;\nexports.ER_CUT_VALUE_GROUP_CONCAT                                                        = 1260;\nexports.ER_WARN_TOO_FEW_RECORDS                                                          = 1261;\nexports.ER_WARN_TOO_MANY_RECORDS                                                         = 1262;\nexports.ER_WARN_NULL_TO_NOTNULL                                                          = 1263;\nexports.ER_WARN_DATA_OUT_OF_RANGE                                                        = 1264;\nexports.WARN_DATA_TRUNCATED                                                              = 1265;\nexports.ER_WARN_USING_OTHER_HANDLER                                                      = 1266;\nexports.ER_CANT_AGGREGATE_2COLLATIONS                                                    = 1267;\nexports.ER_DROP_USER                                                                     = 1268;\nexports.ER_REVOKE_GRANTS                                                                 = 1269;\nexports.ER_CANT_AGGREGATE_3COLLATIONS                                                    = 1270;\nexports.ER_CANT_AGGREGATE_NCOLLATIONS                                                    = 1271;\nexports.ER_VARIABLE_IS_NOT_STRUCT                                                        = 1272;\nexports.ER_UNKNOWN_COLLATION                                                             = 1273;\nexports.ER_SLAVE_IGNORED_SSL_PARAMS                                                      = 1274;\nexports.ER_SERVER_IS_IN_SECURE_AUTH_MODE                                                 = 1275;\nexports.ER_WARN_FIELD_RESOLVED                                                           = 1276;\nexports.ER_BAD_SLAVE_UNTIL_COND                                                          = 1277;\nexports.ER_MISSING_SKIP_SLAVE                                                            = 1278;\nexports.ER_UNTIL_COND_IGNORED                                                            = 1279;\nexports.ER_WRONG_NAME_FOR_INDEX                                                          = 1280;\nexports.ER_WRONG_NAME_FOR_CATALOG                                                        = 1281;\nexports.ER_WARN_QC_RESIZE                                                                = 1282;\nexports.ER_BAD_FT_COLUMN                                                                 = 1283;\nexports.ER_UNKNOWN_KEY_CACHE                                                             = 1284;\nexports.ER_WARN_HOSTNAME_WONT_WORK                                                       = 1285;\nexports.ER_UNKNOWN_STORAGE_ENGINE                                                        = 1286;\nexports.ER_WARN_DEPRECATED_SYNTAX                                                        = 1287;\nexports.ER_NON_UPDATABLE_TABLE                                                           = 1288;\nexports.ER_FEATURE_DISABLED                                                              = 1289;\nexports.ER_OPTION_PREVENTS_STATEMENT                                                     = 1290;\nexports.ER_DUPLICATED_VALUE_IN_TYPE                                                      = 1291;\nexports.ER_TRUNCATED_WRONG_VALUE                                                         = 1292;\nexports.ER_TOO_MUCH_AUTO_TIMESTAMP_COLS                                                  = 1293;\nexports.ER_INVALID_ON_UPDATE                                                             = 1294;\nexports.ER_UNSUPPORTED_PS                                                                = 1295;\nexports.ER_GET_ERRMSG                                                                    = 1296;\nexports.ER_GET_TEMPORARY_ERRMSG                                                          = 1297;\nexports.ER_UNKNOWN_TIME_ZONE                                                             = 1298;\nexports.ER_WARN_INVALID_TIMESTAMP                                                        = 1299;\nexports.ER_INVALID_CHARACTER_STRING                                                      = 1300;\nexports.ER_WARN_ALLOWED_PACKET_OVERFLOWED                                                = 1301;\nexports.ER_CONFLICTING_DECLARATIONS                                                      = 1302;\nexports.ER_SP_NO_RECURSIVE_CREATE                                                        = 1303;\nexports.ER_SP_ALREADY_EXISTS                                                             = 1304;\nexports.ER_SP_DOES_NOT_EXIST                                                             = 1305;\nexports.ER_SP_DROP_FAILED                                                                = 1306;\nexports.ER_SP_STORE_FAILED                                                               = 1307;\nexports.ER_SP_LILABEL_MISMATCH                                                           = 1308;\nexports.ER_SP_LABEL_REDEFINE                                                             = 1309;\nexports.ER_SP_LABEL_MISMATCH                                                             = 1310;\nexports.ER_SP_UNINIT_VAR                                                                 = 1311;\nexports.ER_SP_BADSELECT                                                                  = 1312;\nexports.ER_SP_BADRETURN                                                                  = 1313;\nexports.ER_SP_BADSTATEMENT                                                               = 1314;\nexports.ER_UPDATE_LOG_DEPRECATED_IGNORED                                                 = 1315;\nexports.ER_UPDATE_LOG_DEPRECATED_TRANSLATED                                              = 1316;\nexports.ER_QUERY_INTERRUPTED                                                             = 1317;\nexports.ER_SP_WRONG_NO_OF_ARGS                                                           = 1318;\nexports.ER_SP_COND_MISMATCH                                                              = 1319;\nexports.ER_SP_NORETURN                                                                   = 1320;\nexports.ER_SP_NORETURNEND                                                                = 1321;\nexports.ER_SP_BAD_CURSOR_QUERY                                                           = 1322;\nexports.ER_SP_BAD_CURSOR_SELECT                                                          = 1323;\nexports.ER_SP_CURSOR_MISMATCH                                                            = 1324;\nexports.ER_SP_CURSOR_ALREADY_OPEN                                                        = 1325;\nexports.ER_SP_CURSOR_NOT_OPEN                                                            = 1326;\nexports.ER_SP_UNDECLARED_VAR                                                             = 1327;\nexports.ER_SP_WRONG_NO_OF_FETCH_ARGS                                                     = 1328;\nexports.ER_SP_FETCH_NO_DATA                                                              = 1329;\nexports.ER_SP_DUP_PARAM                                                                  = 1330;\nexports.ER_SP_DUP_VAR                                                                    = 1331;\nexports.ER_SP_DUP_COND                                                                   = 1332;\nexports.ER_SP_DUP_CURS                                                                   = 1333;\nexports.ER_SP_CANT_ALTER                                                                 = 1334;\nexports.ER_SP_SUBSELECT_NYI                                                              = 1335;\nexports.ER_STMT_NOT_ALLOWED_IN_SF_OR_TRG                                                 = 1336;\nexports.ER_SP_VARCOND_AFTER_CURSHNDLR                                                    = 1337;\nexports.ER_SP_CURSOR_AFTER_HANDLER                                                       = 1338;\nexports.ER_SP_CASE_NOT_FOUND                                                             = 1339;\nexports.ER_FPARSER_TOO_BIG_FILE                                                          = 1340;\nexports.ER_FPARSER_BAD_HEADER                                                            = 1341;\nexports.ER_FPARSER_EOF_IN_COMMENT                                                        = 1342;\nexports.ER_FPARSER_ERROR_IN_PARAMETER                                                    = 1343;\nexports.ER_FPARSER_EOF_IN_UNKNOWN_PARAMETER                                              = 1344;\nexports.ER_VIEW_NO_EXPLAIN                                                               = 1345;\nexports.ER_FRM_UNKNOWN_TYPE                                                              = 1346;\nexports.ER_WRONG_OBJECT                                                                  = 1347;\nexports.ER_NONUPDATEABLE_COLUMN                                                          = 1348;\nexports.ER_VIEW_SELECT_DERIVED                                                           = 1349;\nexports.ER_VIEW_SELECT_CLAUSE                                                            = 1350;\nexports.ER_VIEW_SELECT_VARIABLE                                                          = 1351;\nexports.ER_VIEW_SELECT_TMPTABLE                                                          = 1352;\nexports.ER_VIEW_WRONG_LIST                                                               = 1353;\nexports.ER_WARN_VIEW_MERGE                                                               = 1354;\nexports.ER_WARN_VIEW_WITHOUT_KEY                                                         = 1355;\nexports.ER_VIEW_INVALID                                                                  = 1356;\nexports.ER_SP_NO_DROP_SP                                                                 = 1357;\nexports.ER_SP_GOTO_IN_HNDLR                                                              = 1358;\nexports.ER_TRG_ALREADY_EXISTS                                                            = 1359;\nexports.ER_TRG_DOES_NOT_EXIST                                                            = 1360;\nexports.ER_TRG_ON_VIEW_OR_TEMP_TABLE                                                     = 1361;\nexports.ER_TRG_CANT_CHANGE_ROW                                                           = 1362;\nexports.ER_TRG_NO_SUCH_ROW_IN_TRG                                                        = 1363;\nexports.ER_NO_DEFAULT_FOR_FIELD                                                          = 1364;\nexports.ER_DIVISION_BY_ZERO                                                              = 1365;\nexports.ER_TRUNCATED_WRONG_VALUE_FOR_FIELD                                               = 1366;\nexports.ER_ILLEGAL_VALUE_FOR_TYPE                                                        = 1367;\nexports.ER_VIEW_NONUPD_CHECK                                                             = 1368;\nexports.ER_VIEW_CHECK_FAILED                                                             = 1369;\nexports.ER_PROCACCESS_DENIED_ERROR                                                       = 1370;\nexports.ER_RELAY_LOG_FAIL                                                                = 1371;\nexports.ER_PASSWD_LENGTH                                                                 = 1372;\nexports.ER_UNKNOWN_TARGET_BINLOG                                                         = 1373;\nexports.ER_IO_ERR_LOG_INDEX_READ                                                         = 1374;\nexports.ER_BINLOG_PURGE_PROHIBITED                                                       = 1375;\nexports.ER_FSEEK_FAIL                                                                    = 1376;\nexports.ER_BINLOG_PURGE_FATAL_ERR                                                        = 1377;\nexports.ER_LOG_IN_USE                                                                    = 1378;\nexports.ER_LOG_PURGE_UNKNOWN_ERR                                                         = 1379;\nexports.ER_RELAY_LOG_INIT                                                                = 1380;\nexports.ER_NO_BINARY_LOGGING                                                             = 1381;\nexports.ER_RESERVED_SYNTAX                                                               = 1382;\nexports.ER_WSAS_FAILED                                                                   = 1383;\nexports.ER_DIFF_GROUPS_PROC                                                              = 1384;\nexports.ER_NO_GROUP_FOR_PROC                                                             = 1385;\nexports.ER_ORDER_WITH_PROC                                                               = 1386;\nexports.ER_LOGGING_PROHIBIT_CHANGING_OF                                                  = 1387;\nexports.ER_NO_FILE_MAPPING                                                               = 1388;\nexports.ER_WRONG_MAGIC                                                                   = 1389;\nexports.ER_PS_MANY_PARAM                                                                 = 1390;\nexports.ER_KEY_PART_0                                                                    = 1391;\nexports.ER_VIEW_CHECKSUM                                                                 = 1392;\nexports.ER_VIEW_MULTIUPDATE                                                              = 1393;\nexports.ER_VIEW_NO_INSERT_FIELD_LIST                                                     = 1394;\nexports.ER_VIEW_DELETE_MERGE_VIEW                                                        = 1395;\nexports.ER_CANNOT_USER                                                                   = 1396;\nexports.ER_XAER_NOTA                                                                     = 1397;\nexports.ER_XAER_INVAL                                                                    = 1398;\nexports.ER_XAER_RMFAIL                                                                   = 1399;\nexports.ER_XAER_OUTSIDE                                                                  = 1400;\nexports.ER_XAER_RMERR                                                                    = 1401;\nexports.ER_XA_RBROLLBACK                                                                 = 1402;\nexports.ER_NONEXISTING_PROC_GRANT                                                        = 1403;\nexports.ER_PROC_AUTO_GRANT_FAIL                                                          = 1404;\nexports.ER_PROC_AUTO_REVOKE_FAIL                                                         = 1405;\nexports.ER_DATA_TOO_LONG                                                                 = 1406;\nexports.ER_SP_BAD_SQLSTATE                                                               = 1407;\nexports.ER_STARTUP                                                                       = 1408;\nexports.ER_LOAD_FROM_FIXED_SIZE_ROWS_TO_VAR                                              = 1409;\nexports.ER_CANT_CREATE_USER_WITH_GRANT                                                   = 1410;\nexports.ER_WRONG_VALUE_FOR_TYPE                                                          = 1411;\nexports.ER_TABLE_DEF_CHANGED                                                             = 1412;\nexports.ER_SP_DUP_HANDLER                                                                = 1413;\nexports.ER_SP_NOT_VAR_ARG                                                                = 1414;\nexports.ER_SP_NO_RETSET                                                                  = 1415;\nexports.ER_CANT_CREATE_GEOMETRY_OBJECT                                                   = 1416;\nexports.ER_FAILED_ROUTINE_BREAK_BINLOG                                                   = 1417;\nexports.ER_BINLOG_UNSAFE_ROUTINE                                                         = 1418;\nexports.ER_BINLOG_CREATE_ROUTINE_NEED_SUPER                                              = 1419;\nexports.ER_EXEC_STMT_WITH_OPEN_CURSOR                                                    = 1420;\nexports.ER_STMT_HAS_NO_OPEN_CURSOR                                                       = 1421;\nexports.ER_COMMIT_NOT_ALLOWED_IN_SF_OR_TRG                                               = 1422;\nexports.ER_NO_DEFAULT_FOR_VIEW_FIELD                                                     = 1423;\nexports.ER_SP_NO_RECURSION                                                               = 1424;\nexports.ER_TOO_BIG_SCALE                                                                 = 1425;\nexports.ER_TOO_BIG_PRECISION                                                             = 1426;\nexports.ER_M_BIGGER_THAN_D                                                               = 1427;\nexports.ER_WRONG_LOCK_OF_SYSTEM_TABLE                                                    = 1428;\nexports.ER_CONNECT_TO_FOREIGN_DATA_SOURCE                                                = 1429;\nexports.ER_QUERY_ON_FOREIGN_DATA_SOURCE                                                  = 1430;\nexports.ER_FOREIGN_DATA_SOURCE_DOESNT_EXIST                                              = 1431;\nexports.ER_FOREIGN_DATA_STRING_INVALID_CANT_CREATE                                       = 1432;\nexports.ER_FOREIGN_DATA_STRING_INVALID                                                   = 1433;\nexports.ER_CANT_CREATE_FEDERATED_TABLE                                                   = 1434;\nexports.ER_TRG_IN_WRONG_SCHEMA                                                           = 1435;\nexports.ER_STACK_OVERRUN_NEED_MORE                                                       = 1436;\nexports.ER_TOO_LONG_BODY                                                                 = 1437;\nexports.ER_WARN_CANT_DROP_DEFAULT_KEYCACHE                                               = 1438;\nexports.ER_TOO_BIG_DISPLAYWIDTH                                                          = 1439;\nexports.ER_XAER_DUPID                                                                    = 1440;\nexports.ER_DATETIME_FUNCTION_OVERFLOW                                                    = 1441;\nexports.ER_CANT_UPDATE_USED_TABLE_IN_SF_OR_TRG                                           = 1442;\nexports.ER_VIEW_PREVENT_UPDATE                                                           = 1443;\nexports.ER_PS_NO_RECURSION                                                               = 1444;\nexports.ER_SP_CANT_SET_AUTOCOMMIT                                                        = 1445;\nexports.ER_MALFORMED_DEFINER                                                             = 1446;\nexports.ER_VIEW_FRM_NO_USER                                                              = 1447;\nexports.ER_VIEW_OTHER_USER                                                               = 1448;\nexports.ER_NO_SUCH_USER                                                                  = 1449;\nexports.ER_FORBID_SCHEMA_CHANGE                                                          = 1450;\nexports.ER_ROW_IS_REFERENCED_2                                                           = 1451;\nexports.ER_NO_REFERENCED_ROW_2                                                           = 1452;\nexports.ER_SP_BAD_VAR_SHADOW                                                             = 1453;\nexports.ER_TRG_NO_DEFINER                                                                = 1454;\nexports.ER_OLD_FILE_FORMAT                                                               = 1455;\nexports.ER_SP_RECURSION_LIMIT                                                            = 1456;\nexports.ER_SP_PROC_TABLE_CORRUPT                                                         = 1457;\nexports.ER_SP_WRONG_NAME                                                                 = 1458;\nexports.ER_TABLE_NEEDS_UPGRADE                                                           = 1459;\nexports.ER_SP_NO_AGGREGATE                                                               = 1460;\nexports.ER_MAX_PREPARED_STMT_COUNT_REACHED                                               = 1461;\nexports.ER_VIEW_RECURSIVE                                                                = 1462;\nexports.ER_NON_GROUPING_FIELD_USED                                                       = 1463;\nexports.ER_TABLE_CANT_HANDLE_SPKEYS                                                      = 1464;\nexports.ER_NO_TRIGGERS_ON_SYSTEM_SCHEMA                                                  = 1465;\nexports.ER_REMOVED_SPACES                                                                = 1466;\nexports.ER_AUTOINC_READ_FAILED                                                           = 1467;\nexports.ER_USERNAME                                                                      = 1468;\nexports.ER_HOSTNAME                                                                      = 1469;\nexports.ER_WRONG_STRING_LENGTH                                                           = 1470;\nexports.ER_NON_INSERTABLE_TABLE                                                          = 1471;\nexports.ER_ADMIN_WRONG_MRG_TABLE                                                         = 1472;\nexports.ER_TOO_HIGH_LEVEL_OF_NESTING_FOR_SELECT                                          = 1473;\nexports.ER_NAME_BECOMES_EMPTY                                                            = 1474;\nexports.ER_AMBIGUOUS_FIELD_TERM                                                          = 1475;\nexports.ER_FOREIGN_SERVER_EXISTS                                                         = 1476;\nexports.ER_FOREIGN_SERVER_DOESNT_EXIST                                                   = 1477;\nexports.ER_ILLEGAL_HA_CREATE_OPTION                                                      = 1478;\nexports.ER_PARTITION_REQUIRES_VALUES_ERROR                                               = 1479;\nexports.ER_PARTITION_WRONG_VALUES_ERROR                                                  = 1480;\nexports.ER_PARTITION_MAXVALUE_ERROR                                                      = 1481;\nexports.ER_PARTITION_SUBPARTITION_ERROR                                                  = 1482;\nexports.ER_PARTITION_SUBPART_MIX_ERROR                                                   = 1483;\nexports.ER_PARTITION_WRONG_NO_PART_ERROR                                                 = 1484;\nexports.ER_PARTITION_WRONG_NO_SUBPART_ERROR                                              = 1485;\nexports.ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR                                            = 1486;\nexports.ER_NO_CONST_EXPR_IN_RANGE_OR_LIST_ERROR                                          = 1487;\nexports.ER_FIELD_NOT_FOUND_PART_ERROR                                                    = 1488;\nexports.ER_LIST_OF_FIELDS_ONLY_IN_HASH_ERROR                                             = 1489;\nexports.ER_INCONSISTENT_PARTITION_INFO_ERROR                                             = 1490;\nexports.ER_PARTITION_FUNC_NOT_ALLOWED_ERROR                                              = 1491;\nexports.ER_PARTITIONS_MUST_BE_DEFINED_ERROR                                              = 1492;\nexports.ER_RANGE_NOT_INCREASING_ERROR                                                    = 1493;\nexports.ER_INCONSISTENT_TYPE_OF_FUNCTIONS_ERROR                                          = 1494;\nexports.ER_MULTIPLE_DEF_CONST_IN_LIST_PART_ERROR                                         = 1495;\nexports.ER_PARTITION_ENTRY_ERROR                                                         = 1496;\nexports.ER_MIX_HANDLER_ERROR                                                             = 1497;\nexports.ER_PARTITION_NOT_DEFINED_ERROR                                                   = 1498;\nexports.ER_TOO_MANY_PARTITIONS_ERROR                                                     = 1499;\nexports.ER_SUBPARTITION_ERROR                                                            = 1500;\nexports.ER_CANT_CREATE_HANDLER_FILE                                                      = 1501;\nexports.ER_BLOB_FIELD_IN_PART_FUNC_ERROR                                                 = 1502;\nexports.ER_UNIQUE_KEY_NEED_ALL_FIELDS_IN_PF                                              = 1503;\nexports.ER_NO_PARTS_ERROR                                                                = 1504;\nexports.ER_PARTITION_MGMT_ON_NONPARTITIONED                                              = 1505;\nexports.ER_FOREIGN_KEY_ON_PARTITIONED                                                    = 1506;\nexports.ER_DROP_PARTITION_NON_EXISTENT                                                   = 1507;\nexports.ER_DROP_LAST_PARTITION                                                           = 1508;\nexports.ER_COALESCE_ONLY_ON_HASH_PARTITION                                               = 1509;\nexports.ER_REORG_HASH_ONLY_ON_SAME_NO                                                    = 1510;\nexports.ER_REORG_NO_PARAM_ERROR                                                          = 1511;\nexports.ER_ONLY_ON_RANGE_LIST_PARTITION                                                  = 1512;\nexports.ER_ADD_PARTITION_SUBPART_ERROR                                                   = 1513;\nexports.ER_ADD_PARTITION_NO_NEW_PARTITION                                                = 1514;\nexports.ER_COALESCE_PARTITION_NO_PARTITION                                               = 1515;\nexports.ER_REORG_PARTITION_NOT_EXIST                                                     = 1516;\nexports.ER_SAME_NAME_PARTITION                                                           = 1517;\nexports.ER_NO_BINLOG_ERROR                                                               = 1518;\nexports.ER_CONSECUTIVE_REORG_PARTITIONS                                                  = 1519;\nexports.ER_REORG_OUTSIDE_RANGE                                                           = 1520;\nexports.ER_PARTITION_FUNCTION_FAILURE                                                    = 1521;\nexports.ER_PART_STATE_ERROR                                                              = 1522;\nexports.ER_LIMITED_PART_RANGE                                                            = 1523;\nexports.ER_PLUGIN_IS_NOT_LOADED                                                          = 1524;\nexports.ER_WRONG_VALUE                                                                   = 1525;\nexports.ER_NO_PARTITION_FOR_GIVEN_VALUE                                                  = 1526;\nexports.ER_FILEGROUP_OPTION_ONLY_ONCE                                                    = 1527;\nexports.ER_CREATE_FILEGROUP_FAILED                                                       = 1528;\nexports.ER_DROP_FILEGROUP_FAILED                                                         = 1529;\nexports.ER_TABLESPACE_AUTO_EXTEND_ERROR                                                  = 1530;\nexports.ER_WRONG_SIZE_NUMBER                                                             = 1531;\nexports.ER_SIZE_OVERFLOW_ERROR                                                           = 1532;\nexports.ER_ALTER_FILEGROUP_FAILED                                                        = 1533;\nexports.ER_BINLOG_ROW_LOGGING_FAILED                                                     = 1534;\nexports.ER_BINLOG_ROW_WRONG_TABLE_DEF                                                    = 1535;\nexports.ER_BINLOG_ROW_RBR_TO_SBR                                                         = 1536;\nexports.ER_EVENT_ALREADY_EXISTS                                                          = 1537;\nexports.ER_EVENT_STORE_FAILED                                                            = 1538;\nexports.ER_EVENT_DOES_NOT_EXIST                                                          = 1539;\nexports.ER_EVENT_CANT_ALTER                                                              = 1540;\nexports.ER_EVENT_DROP_FAILED                                                             = 1541;\nexports.ER_EVENT_INTERVAL_NOT_POSITIVE_OR_TOO_BIG                                        = 1542;\nexports.ER_EVENT_ENDS_BEFORE_STARTS                                                      = 1543;\nexports.ER_EVENT_EXEC_TIME_IN_THE_PAST                                                   = 1544;\nexports.ER_EVENT_OPEN_TABLE_FAILED                                                       = 1545;\nexports.ER_EVENT_NEITHER_M_EXPR_NOR_M_AT                                                 = 1546;\nexports.ER_COL_COUNT_DOESNT_MATCH_CORRUPTED                                              = 1547;\nexports.ER_CANNOT_LOAD_FROM_TABLE                                                        = 1548;\nexports.ER_EVENT_CANNOT_DELETE                                                           = 1549;\nexports.ER_EVENT_COMPILE_ERROR                                                           = 1550;\nexports.ER_EVENT_SAME_NAME                                                               = 1551;\nexports.ER_EVENT_DATA_TOO_LONG                                                           = 1552;\nexports.ER_DROP_INDEX_FK                                                                 = 1553;\nexports.ER_WARN_DEPRECATED_SYNTAX_WITH_VER                                               = 1554;\nexports.ER_CANT_WRITE_LOCK_LOG_TABLE                                                     = 1555;\nexports.ER_CANT_LOCK_LOG_TABLE                                                           = 1556;\nexports.ER_FOREIGN_DUPLICATE_KEY                                                         = 1557;\nexports.ER_COL_COUNT_DOESNT_MATCH_PLEASE_UPDATE                                          = 1558;\nexports.ER_TEMP_TABLE_PREVENTS_SWITCH_OUT_OF_RBR                                         = 1559;\nexports.ER_STORED_FUNCTION_PREVENTS_SWITCH_BINLOG_FORMAT                                 = 1560;\nexports.ER_NDB_CANT_SWITCH_BINLOG_FORMAT                                                 = 1561;\nexports.ER_PARTITION_NO_TEMPORARY                                                        = 1562;\nexports.ER_PARTITION_CONST_DOMAIN_ERROR                                                  = 1563;\nexports.ER_PARTITION_FUNCTION_IS_NOT_ALLOWED                                             = 1564;\nexports.ER_DDL_LOG_ERROR                                                                 = 1565;\nexports.ER_NULL_IN_VALUES_LESS_THAN                                                      = 1566;\nexports.ER_WRONG_PARTITION_NAME                                                          = 1567;\nexports.ER_CANT_CHANGE_TX_CHARACTERISTICS                                                = 1568;\nexports.ER_DUP_ENTRY_AUTOINCREMENT_CASE                                                  = 1569;\nexports.ER_EVENT_MODIFY_QUEUE_ERROR                                                      = 1570;\nexports.ER_EVENT_SET_VAR_ERROR                                                           = 1571;\nexports.ER_PARTITION_MERGE_ERROR                                                         = 1572;\nexports.ER_CANT_ACTIVATE_LOG                                                             = 1573;\nexports.ER_RBR_NOT_AVAILABLE                                                             = 1574;\nexports.ER_BASE64_DECODE_ERROR                                                           = 1575;\nexports.ER_EVENT_RECURSION_FORBIDDEN                                                     = 1576;\nexports.ER_EVENTS_DB_ERROR                                                               = 1577;\nexports.ER_ONLY_INTEGERS_ALLOWED                                                         = 1578;\nexports.ER_UNSUPORTED_LOG_ENGINE                                                         = 1579;\nexports.ER_BAD_LOG_STATEMENT                                                             = 1580;\nexports.ER_CANT_RENAME_LOG_TABLE                                                         = 1581;\nexports.ER_WRONG_PARAMCOUNT_TO_NATIVE_FCT                                                = 1582;\nexports.ER_WRONG_PARAMETERS_TO_NATIVE_FCT                                                = 1583;\nexports.ER_WRONG_PARAMETERS_TO_STORED_FCT                                                = 1584;\nexports.ER_NATIVE_FCT_NAME_COLLISION                                                     = 1585;\nexports.ER_DUP_ENTRY_WITH_KEY_NAME                                                       = 1586;\nexports.ER_BINLOG_PURGE_EMFILE                                                           = 1587;\nexports.ER_EVENT_CANNOT_CREATE_IN_THE_PAST                                               = 1588;\nexports.ER_EVENT_CANNOT_ALTER_IN_THE_PAST                                                = 1589;\nexports.ER_SLAVE_INCIDENT                                                                = 1590;\nexports.ER_NO_PARTITION_FOR_GIVEN_VALUE_SILENT                                           = 1591;\nexports.ER_BINLOG_UNSAFE_STATEMENT                                                       = 1592;\nexports.ER_SLAVE_FATAL_ERROR                                                             = 1593;\nexports.ER_SLAVE_RELAY_LOG_READ_FAILURE                                                  = 1594;\nexports.ER_SLAVE_RELAY_LOG_WRITE_FAILURE                                                 = 1595;\nexports.ER_SLAVE_CREATE_EVENT_FAILURE                                                    = 1596;\nexports.ER_SLAVE_MASTER_COM_FAILURE                                                      = 1597;\nexports.ER_BINLOG_LOGGING_IMPOSSIBLE                                                     = 1598;\nexports.ER_VIEW_NO_CREATION_CTX                                                          = 1599;\nexports.ER_VIEW_INVALID_CREATION_CTX                                                     = 1600;\nexports.ER_SR_INVALID_CREATION_CTX                                                       = 1601;\nexports.ER_TRG_CORRUPTED_FILE                                                            = 1602;\nexports.ER_TRG_NO_CREATION_CTX                                                           = 1603;\nexports.ER_TRG_INVALID_CREATION_CTX                                                      = 1604;\nexports.ER_EVENT_INVALID_CREATION_CTX                                                    = 1605;\nexports.ER_TRG_CANT_OPEN_TABLE                                                           = 1606;\nexports.ER_CANT_CREATE_SROUTINE                                                          = 1607;\nexports.ER_NEVER_USED                                                                    = 1608;\nexports.ER_NO_FORMAT_DESCRIPTION_EVENT_BEFORE_BINLOG_STATEMENT                           = 1609;\nexports.ER_SLAVE_CORRUPT_EVENT                                                           = 1610;\nexports.ER_LOAD_DATA_INVALID_COLUMN                                                      = 1611;\nexports.ER_LOG_PURGE_NO_FILE                                                             = 1612;\nexports.ER_XA_RBTIMEOUT                                                                  = 1613;\nexports.ER_XA_RBDEADLOCK                                                                 = 1614;\nexports.ER_NEED_REPREPARE                                                                = 1615;\nexports.ER_DELAYED_NOT_SUPPORTED                                                         = 1616;\nexports.WARN_NO_MASTER_INFO                                                              = 1617;\nexports.WARN_OPTION_IGNORED                                                              = 1618;\nexports.ER_PLUGIN_DELETE_BUILTIN                                                         = 1619;\nexports.WARN_PLUGIN_BUSY                                                                 = 1620;\nexports.ER_VARIABLE_IS_READONLY                                                          = 1621;\nexports.ER_WARN_ENGINE_TRANSACTION_ROLLBACK                                              = 1622;\nexports.ER_SLAVE_HEARTBEAT_FAILURE                                                       = 1623;\nexports.ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE                                            = 1624;\nexports.ER_NDB_REPLICATION_SCHEMA_ERROR                                                  = 1625;\nexports.ER_CONFLICT_FN_PARSE_ERROR                                                       = 1626;\nexports.ER_EXCEPTIONS_WRITE_ERROR                                                        = 1627;\nexports.ER_TOO_LONG_TABLE_COMMENT                                                        = 1628;\nexports.ER_TOO_LONG_FIELD_COMMENT                                                        = 1629;\nexports.ER_FUNC_INEXISTENT_NAME_COLLISION                                                = 1630;\nexports.ER_DATABASE_NAME                                                                 = 1631;\nexports.ER_TABLE_NAME                                                                    = 1632;\nexports.ER_PARTITION_NAME                                                                = 1633;\nexports.ER_SUBPARTITION_NAME                                                             = 1634;\nexports.ER_TEMPORARY_NAME                                                                = 1635;\nexports.ER_RENAMED_NAME                                                                  = 1636;\nexports.ER_TOO_MANY_CONCURRENT_TRXS                                                      = 1637;\nexports.WARN_NON_ASCII_SEPARATOR_NOT_IMPLEMENTED                                         = 1638;\nexports.ER_DEBUG_SYNC_TIMEOUT                                                            = 1639;\nexports.ER_DEBUG_SYNC_HIT_LIMIT                                                          = 1640;\nexports.ER_DUP_SIGNAL_SET                                                                = 1641;\nexports.ER_SIGNAL_WARN                                                                   = 1642;\nexports.ER_SIGNAL_NOT_FOUND                                                              = 1643;\nexports.ER_SIGNAL_EXCEPTION                                                              = 1644;\nexports.ER_RESIGNAL_WITHOUT_ACTIVE_HANDLER                                               = 1645;\nexports.ER_SIGNAL_BAD_CONDITION_TYPE                                                     = 1646;\nexports.WARN_COND_ITEM_TRUNCATED                                                         = 1647;\nexports.ER_COND_ITEM_TOO_LONG                                                            = 1648;\nexports.ER_UNKNOWN_LOCALE                                                                = 1649;\nexports.ER_SLAVE_IGNORE_SERVER_IDS                                                       = 1650;\nexports.ER_QUERY_CACHE_DISABLED                                                          = 1651;\nexports.ER_SAME_NAME_PARTITION_FIELD                                                     = 1652;\nexports.ER_PARTITION_COLUMN_LIST_ERROR                                                   = 1653;\nexports.ER_WRONG_TYPE_COLUMN_VALUE_ERROR                                                 = 1654;\nexports.ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR                                          = 1655;\nexports.ER_MAXVALUE_IN_VALUES_IN                                                         = 1656;\nexports.ER_TOO_MANY_VALUES_ERROR                                                         = 1657;\nexports.ER_ROW_SINGLE_PARTITION_FIELD_ERROR                                              = 1658;\nexports.ER_FIELD_TYPE_NOT_ALLOWED_AS_PARTITION_FIELD                                     = 1659;\nexports.ER_PARTITION_FIELDS_TOO_LONG                                                     = 1660;\nexports.ER_BINLOG_ROW_ENGINE_AND_STMT_ENGINE                                             = 1661;\nexports.ER_BINLOG_ROW_MODE_AND_STMT_ENGINE                                               = 1662;\nexports.ER_BINLOG_UNSAFE_AND_STMT_ENGINE                                                 = 1663;\nexports.ER_BINLOG_ROW_INJECTION_AND_STMT_ENGINE                                          = 1664;\nexports.ER_BINLOG_STMT_MODE_AND_ROW_ENGINE                                               = 1665;\nexports.ER_BINLOG_ROW_INJECTION_AND_STMT_MODE                                            = 1666;\nexports.ER_BINLOG_MULTIPLE_ENGINES_AND_SELF_LOGGING_ENGINE                               = 1667;\nexports.ER_BINLOG_UNSAFE_LIMIT                                                           = 1668;\nexports.ER_BINLOG_UNSAFE_INSERT_DELAYED                                                  = 1669;\nexports.ER_BINLOG_UNSAFE_SYSTEM_TABLE                                                    = 1670;\nexports.ER_BINLOG_UNSAFE_AUTOINC_COLUMNS                                                 = 1671;\nexports.ER_BINLOG_UNSAFE_UDF                                                             = 1672;\nexports.ER_BINLOG_UNSAFE_SYSTEM_VARIABLE                                                 = 1673;\nexports.ER_BINLOG_UNSAFE_SYSTEM_FUNCTION                                                 = 1674;\nexports.ER_BINLOG_UNSAFE_NONTRANS_AFTER_TRANS                                            = 1675;\nexports.ER_MESSAGE_AND_STATEMENT                                                         = 1676;\nexports.ER_SLAVE_CONVERSION_FAILED                                                       = 1677;\nexports.ER_SLAVE_CANT_CREATE_CONVERSION                                                  = 1678;\nexports.ER_INSIDE_TRANSACTION_PREVENTS_SWITCH_BINLOG_FORMAT                              = 1679;\nexports.ER_PATH_LENGTH                                                                   = 1680;\nexports.ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT                                         = 1681;\nexports.ER_WRONG_NATIVE_TABLE_STRUCTURE                                                  = 1682;\nexports.ER_WRONG_PERFSCHEMA_USAGE                                                        = 1683;\nexports.ER_WARN_I_S_SKIPPED_TABLE                                                        = 1684;\nexports.ER_INSIDE_TRANSACTION_PREVENTS_SWITCH_BINLOG_DIRECT                              = 1685;\nexports.ER_STORED_FUNCTION_PREVENTS_SWITCH_BINLOG_DIRECT                                 = 1686;\nexports.ER_SPATIAL_MUST_HAVE_GEOM_COL                                                    = 1687;\nexports.ER_TOO_LONG_INDEX_COMMENT                                                        = 1688;\nexports.ER_LOCK_ABORTED                                                                  = 1689;\nexports.ER_DATA_OUT_OF_RANGE                                                             = 1690;\nexports.ER_WRONG_SPVAR_TYPE_IN_LIMIT                                                     = 1691;\nexports.ER_BINLOG_UNSAFE_MULTIPLE_ENGINES_AND_SELF_LOGGING_ENGINE                        = 1692;\nexports.ER_BINLOG_UNSAFE_MIXED_STATEMENT                                                 = 1693;\nexports.ER_INSIDE_TRANSACTION_PREVENTS_SWITCH_SQL_LOG_BIN                                = 1694;\nexports.ER_STORED_FUNCTION_PREVENTS_SWITCH_SQL_LOG_BIN                                   = 1695;\nexports.ER_FAILED_READ_FROM_PAR_FILE                                                     = 1696;\nexports.ER_VALUES_IS_NOT_INT_TYPE_ERROR                                                  = 1697;\nexports.ER_ACCESS_DENIED_NO_PASSWORD_ERROR                                               = 1698;\nexports.ER_SET_PASSWORD_AUTH_PLUGIN                                                      = 1699;\nexports.ER_GRANT_PLUGIN_USER_EXISTS                                                      = 1700;\nexports.ER_TRUNCATE_ILLEGAL_FK                                                           = 1701;\nexports.ER_PLUGIN_IS_PERMANENT                                                           = 1702;\nexports.ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN                                        = 1703;\nexports.ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX                                        = 1704;\nexports.ER_STMT_CACHE_FULL                                                               = 1705;\nexports.ER_MULTI_UPDATE_KEY_CONFLICT                                                     = 1706;\nexports.ER_TABLE_NEEDS_REBUILD                                                           = 1707;\nexports.WARN_OPTION_BELOW_LIMIT                                                          = 1708;\nexports.ER_INDEX_COLUMN_TOO_LONG                                                         = 1709;\nexports.ER_ERROR_IN_TRIGGER_BODY                                                         = 1710;\nexports.ER_ERROR_IN_UNKNOWN_TRIGGER_BODY                                                 = 1711;\nexports.ER_INDEX_CORRUPT                                                                 = 1712;\nexports.ER_UNDO_RECORD_TOO_BIG                                                           = 1713;\nexports.ER_BINLOG_UNSAFE_INSERT_IGNORE_SELECT                                            = 1714;\nexports.ER_BINLOG_UNSAFE_INSERT_SELECT_UPDATE                                            = 1715;\nexports.ER_BINLOG_UNSAFE_REPLACE_SELECT                                                  = 1716;\nexports.ER_BINLOG_UNSAFE_CREATE_IGNORE_SELECT                                            = 1717;\nexports.ER_BINLOG_UNSAFE_CREATE_REPLACE_SELECT                                           = 1718;\nexports.ER_BINLOG_UNSAFE_UPDATE_IGNORE                                                   = 1719;\nexports.ER_PLUGIN_NO_UNINSTALL                                                           = 1720;\nexports.ER_PLUGIN_NO_INSTALL                                                             = 1721;\nexports.ER_BINLOG_UNSAFE_WRITE_AUTOINC_SELECT                                            = 1722;\nexports.ER_BINLOG_UNSAFE_CREATE_SELECT_AUTOINC                                           = 1723;\nexports.ER_BINLOG_UNSAFE_INSERT_TWO_KEYS                                                 = 1724;\nexports.ER_TABLE_IN_FK_CHECK                                                             = 1725;\nexports.ER_UNSUPPORTED_ENGINE                                                            = 1726;\nexports.ER_BINLOG_UNSAFE_AUTOINC_NOT_FIRST                                               = 1727;\nexports.ER_CANNOT_LOAD_FROM_TABLE_V2                                                     = 1728;\nexports.ER_MASTER_DELAY_VALUE_OUT_OF_RANGE                                               = 1729;\nexports.ER_ONLY_FD_AND_RBR_EVENTS_ALLOWED_IN_BINLOG_STATEMENT                            = 1730;\nexports.ER_PARTITION_EXCHANGE_DIFFERENT_OPTION                                           = 1731;\nexports.ER_PARTITION_EXCHANGE_PART_TABLE                                                 = 1732;\nexports.ER_PARTITION_EXCHANGE_TEMP_TABLE                                                 = 1733;\nexports.ER_PARTITION_INSTEAD_OF_SUBPARTITION                                             = 1734;\nexports.ER_UNKNOWN_PARTITION                                                             = 1735;\nexports.ER_TABLES_DIFFERENT_METADATA                                                     = 1736;\nexports.ER_ROW_DOES_NOT_MATCH_PARTITION                                                  = 1737;\nexports.ER_BINLOG_CACHE_SIZE_GREATER_THAN_MAX                                            = 1738;\nexports.ER_WARN_INDEX_NOT_APPLICABLE                                                     = 1739;\nexports.ER_PARTITION_EXCHANGE_FOREIGN_KEY                                                = 1740;\nexports.ER_NO_SUCH_KEY_VALUE                                                             = 1741;\nexports.ER_RPL_INFO_DATA_TOO_LONG                                                        = 1742;\nexports.ER_NETWORK_READ_EVENT_CHECKSUM_FAILURE                                           = 1743;\nexports.ER_BINLOG_READ_EVENT_CHECKSUM_FAILURE                                            = 1744;\nexports.ER_BINLOG_STMT_CACHE_SIZE_GREATER_THAN_MAX                                       = 1745;\nexports.ER_CANT_UPDATE_TABLE_IN_CREATE_TABLE_SELECT                                      = 1746;\nexports.ER_PARTITION_CLAUSE_ON_NONPARTITIONED                                            = 1747;\nexports.ER_ROW_DOES_NOT_MATCH_GIVEN_PARTITION_SET                                        = 1748;\nexports.ER_NO_SUCH_PARTITION                                                             = 1749;\nexports.ER_CHANGE_RPL_INFO_REPOSITORY_FAILURE                                            = 1750;\nexports.ER_WARNING_NOT_COMPLETE_ROLLBACK_WITH_CREATED_TEMP_TABLE                         = 1751;\nexports.ER_WARNING_NOT_COMPLETE_ROLLBACK_WITH_DROPPED_TEMP_TABLE                         = 1752;\nexports.ER_MTS_FEATURE_IS_NOT_SUPPORTED                                                  = 1753;\nexports.ER_MTS_UPDATED_DBS_GREATER_MAX                                                   = 1754;\nexports.ER_MTS_CANT_PARALLEL                                                             = 1755;\nexports.ER_MTS_INCONSISTENT_DATA                                                         = 1756;\nexports.ER_FULLTEXT_NOT_SUPPORTED_WITH_PARTITIONING                                      = 1757;\nexports.ER_DA_INVALID_CONDITION_NUMBER                                                   = 1758;\nexports.ER_INSECURE_PLAIN_TEXT                                                           = 1759;\nexports.ER_INSECURE_CHANGE_MASTER                                                        = 1760;\nexports.ER_FOREIGN_DUPLICATE_KEY_WITH_CHILD_INFO                                         = 1761;\nexports.ER_FOREIGN_DUPLICATE_KEY_WITHOUT_CHILD_INFO                                      = 1762;\nexports.ER_SQLTHREAD_WITH_SECURE_SLAVE                                                   = 1763;\nexports.ER_TABLE_HAS_NO_FT                                                               = 1764;\nexports.ER_VARIABLE_NOT_SETTABLE_IN_SF_OR_TRIGGER                                        = 1765;\nexports.ER_VARIABLE_NOT_SETTABLE_IN_TRANSACTION                                          = 1766;\nexports.ER_GTID_NEXT_IS_NOT_IN_GTID_NEXT_LIST                                            = 1767;\nexports.ER_CANT_CHANGE_GTID_NEXT_IN_TRANSACTION                                          = 1768;\nexports.ER_SET_STATEMENT_CANNOT_INVOKE_FUNCTION                                          = 1769;\nexports.ER_GTID_NEXT_CANT_BE_AUTOMATIC_IF_GTID_NEXT_LIST_IS_NON_NULL                     = 1770;\nexports.ER_SKIPPING_LOGGED_TRANSACTION                                                   = 1771;\nexports.ER_MALFORMED_GTID_SET_SPECIFICATION                                              = 1772;\nexports.ER_MALFORMED_GTID_SET_ENCODING                                                   = 1773;\nexports.ER_MALFORMED_GTID_SPECIFICATION                                                  = 1774;\nexports.ER_GNO_EXHAUSTED                                                                 = 1775;\nexports.ER_BAD_SLAVE_AUTO_POSITION                                                       = 1776;\nexports.ER_AUTO_POSITION_REQUIRES_GTID_MODE_NOT_OFF                                      = 1777;\nexports.ER_CANT_DO_IMPLICIT_COMMIT_IN_TRX_WHEN_GTID_NEXT_IS_SET                          = 1778;\nexports.ER_GTID_MODE_ON_REQUIRES_ENFORCE_GTID_CONSISTENCY_ON                             = 1779;\nexports.ER_GTID_MODE_REQUIRES_BINLOG                                                     = 1780;\nexports.ER_CANT_SET_GTID_NEXT_TO_GTID_WHEN_GTID_MODE_IS_OFF                              = 1781;\nexports.ER_CANT_SET_GTID_NEXT_TO_ANONYMOUS_WHEN_GTID_MODE_IS_ON                          = 1782;\nexports.ER_CANT_SET_GTID_NEXT_LIST_TO_NON_NULL_WHEN_GTID_MODE_IS_OFF                     = 1783;\nexports.ER_FOUND_GTID_EVENT_WHEN_GTID_MODE_IS_OFF                                        = 1784;\nexports.ER_GTID_UNSAFE_NON_TRANSACTIONAL_TABLE                                           = 1785;\nexports.ER_GTID_UNSAFE_CREATE_SELECT                                                     = 1786;\nexports.ER_GTID_UNSAFE_CREATE_DROP_TEMPORARY_TABLE_IN_TRANSACTION                        = 1787;\nexports.ER_GTID_MODE_CAN_ONLY_CHANGE_ONE_STEP_AT_A_TIME                                  = 1788;\nexports.ER_MASTER_HAS_PURGED_REQUIRED_GTIDS                                              = 1789;\nexports.ER_CANT_SET_GTID_NEXT_WHEN_OWNING_GTID                                           = 1790;\nexports.ER_UNKNOWN_EXPLAIN_FORMAT                                                        = 1791;\nexports.ER_CANT_EXECUTE_IN_READ_ONLY_TRANSACTION                                         = 1792;\nexports.ER_TOO_LONG_TABLE_PARTITION_COMMENT                                              = 1793;\nexports.ER_SLAVE_CONFIGURATION                                                           = 1794;\nexports.ER_INNODB_FT_LIMIT                                                               = 1795;\nexports.ER_INNODB_NO_FT_TEMP_TABLE                                                       = 1796;\nexports.ER_INNODB_FT_WRONG_DOCID_COLUMN                                                  = 1797;\nexports.ER_INNODB_FT_WRONG_DOCID_INDEX                                                   = 1798;\nexports.ER_INNODB_ONLINE_LOG_TOO_BIG                                                     = 1799;\nexports.ER_UNKNOWN_ALTER_ALGORITHM                                                       = 1800;\nexports.ER_UNKNOWN_ALTER_LOCK                                                            = 1801;\nexports.ER_MTS_CHANGE_MASTER_CANT_RUN_WITH_GAPS                                          = 1802;\nexports.ER_MTS_RECOVERY_FAILURE                                                          = 1803;\nexports.ER_MTS_RESET_WORKERS                                                             = 1804;\nexports.ER_COL_COUNT_DOESNT_MATCH_CORRUPTED_V2                                           = 1805;\nexports.ER_SLAVE_SILENT_RETRY_TRANSACTION                                                = 1806;\nexports.ER_DISCARD_FK_CHECKS_RUNNING                                                     = 1807;\nexports.ER_TABLE_SCHEMA_MISMATCH                                                         = 1808;\nexports.ER_TABLE_IN_SYSTEM_TABLESPACE                                                    = 1809;\nexports.ER_IO_READ_ERROR                                                                 = 1810;\nexports.ER_IO_WRITE_ERROR                                                                = 1811;\nexports.ER_TABLESPACE_MISSING                                                            = 1812;\nexports.ER_TABLESPACE_EXISTS                                                             = 1813;\nexports.ER_TABLESPACE_DISCARDED                                                          = 1814;\nexports.ER_INTERNAL_ERROR                                                                = 1815;\nexports.ER_INNODB_IMPORT_ERROR                                                           = 1816;\nexports.ER_INNODB_INDEX_CORRUPT                                                          = 1817;\nexports.ER_INVALID_YEAR_COLUMN_LENGTH                                                    = 1818;\nexports.ER_NOT_VALID_PASSWORD                                                            = 1819;\nexports.ER_MUST_CHANGE_PASSWORD                                                          = 1820;\nexports.ER_FK_NO_INDEX_CHILD                                                             = 1821;\nexports.ER_FK_NO_INDEX_PARENT                                                            = 1822;\nexports.ER_FK_FAIL_ADD_SYSTEM                                                            = 1823;\nexports.ER_FK_CANNOT_OPEN_PARENT                                                         = 1824;\nexports.ER_FK_INCORRECT_OPTION                                                           = 1825;\nexports.ER_FK_DUP_NAME                                                                   = 1826;\nexports.ER_PASSWORD_FORMAT                                                               = 1827;\nexports.ER_FK_COLUMN_CANNOT_DROP                                                         = 1828;\nexports.ER_FK_COLUMN_CANNOT_DROP_CHILD                                                   = 1829;\nexports.ER_FK_COLUMN_NOT_NULL                                                            = 1830;\nexports.ER_DUP_INDEX                                                                     = 1831;\nexports.ER_FK_COLUMN_CANNOT_CHANGE                                                       = 1832;\nexports.ER_FK_COLUMN_CANNOT_CHANGE_CHILD                                                 = 1833;\nexports.ER_FK_CANNOT_DELETE_PARENT                                                       = 1834;\nexports.ER_MALFORMED_PACKET                                                              = 1835;\nexports.ER_READ_ONLY_MODE                                                                = 1836;\nexports.ER_GTID_NEXT_TYPE_UNDEFINED_GROUP                                                = 1837;\nexports.ER_VARIABLE_NOT_SETTABLE_IN_SP                                                   = 1838;\nexports.ER_CANT_SET_GTID_PURGED_WHEN_GTID_MODE_IS_OFF                                    = 1839;\nexports.ER_CANT_SET_GTID_PURGED_WHEN_GTID_EXECUTED_IS_NOT_EMPTY                          = 1840;\nexports.ER_CANT_SET_GTID_PURGED_WHEN_OWNED_GTIDS_IS_NOT_EMPTY                            = 1841;\nexports.ER_GTID_PURGED_WAS_CHANGED                                                       = 1842;\nexports.ER_GTID_EXECUTED_WAS_CHANGED                                                     = 1843;\nexports.ER_BINLOG_STMT_MODE_AND_NO_REPL_TABLES                                           = 1844;\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED                                                 = 1845;\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON                                          = 1846;\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_COPY                                     = 1847;\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_PARTITION                                = 1848;\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_FK_RENAME                                = 1849;\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_COLUMN_TYPE                              = 1850;\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_FK_CHECK                                 = 1851;\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_IGNORE                                   = 1852;\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_NOPK                                     = 1853;\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_AUTOINC                                  = 1854;\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_HIDDEN_FTS                               = 1855;\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_CHANGE_FTS                               = 1856;\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_FTS                                      = 1857;\nexports.ER_SQL_SLAVE_SKIP_COUNTER_NOT_SETTABLE_IN_GTID_MODE                              = 1858;\nexports.ER_DUP_UNKNOWN_IN_INDEX                                                          = 1859;\nexports.ER_IDENT_CAUSES_TOO_LONG_PATH                                                    = 1860;\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_NOT_NULL                                 = 1861;\nexports.ER_MUST_CHANGE_PASSWORD_LOGIN                                                    = 1862;\nexports.ER_ROW_IN_WRONG_PARTITION                                                        = 1863;\nexports.ER_MTS_EVENT_BIGGER_PENDING_JOBS_SIZE_MAX                                        = 1864;\nexports.ER_INNODB_NO_FT_USES_PARSER                                                      = 1865;\nexports.ER_BINLOG_LOGICAL_CORRUPTION                                                     = 1866;\nexports.ER_WARN_PURGE_LOG_IN_USE                                                         = 1867;\nexports.ER_WARN_PURGE_LOG_IS_ACTIVE                                                      = 1868;\nexports.ER_AUTO_INCREMENT_CONFLICT                                                       = 1869;\nexports.WARN_ON_BLOCKHOLE_IN_RBR                                                         = 1870;\nexports.ER_SLAVE_MI_INIT_REPOSITORY                                                      = 1871;\nexports.ER_SLAVE_RLI_INIT_REPOSITORY                                                     = 1872;\nexports.ER_ACCESS_DENIED_CHANGE_USER_ERROR                                               = 1873;\nexports.ER_INNODB_READ_ONLY                                                              = 1874;\nexports.ER_STOP_SLAVE_SQL_THREAD_TIMEOUT                                                 = 1875;\nexports.ER_STOP_SLAVE_IO_THREAD_TIMEOUT                                                  = 1876;\nexports.ER_TABLE_CORRUPT                                                                 = 1877;\nexports.ER_TEMP_FILE_WRITE_FAILURE                                                       = 1878;\nexports.ER_INNODB_FT_AUX_NOT_HEX_ID                                                      = 1879;\nexports.ER_OLD_TEMPORALS_UPGRADED                                                        = 1880;\nexports.ER_INNODB_FORCED_RECOVERY                                                        = 1881;\nexports.ER_AES_INVALID_IV                                                                = 1882;\nexports.ER_PLUGIN_CANNOT_BE_UNINSTALLED                                                  = 1883;\nexports.ER_GTID_UNSAFE_BINLOG_SPLITTABLE_STATEMENT_AND_GTID_GROUP                        = 1884;\nexports.ER_SLAVE_HAS_MORE_GTIDS_THAN_MASTER                                              = 1885;\nexports.ER_FILE_CORRUPT                                                                  = 1886;\nexports.ER_ERROR_ON_MASTER                                                               = 1887;\nexports.ER_INCONSISTENT_ERROR                                                            = 1888;\nexports.ER_STORAGE_ENGINE_NOT_LOADED                                                     = 1889;\nexports.ER_GET_STACKED_DA_WITHOUT_ACTIVE_HANDLER                                         = 1890;\nexports.ER_WARN_LEGACY_SYNTAX_CONVERTED                                                  = 1891;\nexports.ER_BINLOG_UNSAFE_FULLTEXT_PLUGIN                                                 = 1892;\nexports.ER_CANNOT_DISCARD_TEMPORARY_TABLE                                                = 1893;\nexports.ER_FK_DEPTH_EXCEEDED                                                             = 1894;\nexports.ER_COL_COUNT_DOESNT_MATCH_PLEASE_UPDATE_V2                                       = 1895;\nexports.ER_WARN_TRIGGER_DOESNT_HAVE_CREATED                                              = 1896;\nexports.ER_REFERENCED_TRG_DOES_NOT_EXIST                                                 = 1897;\nexports.ER_EXPLAIN_NOT_SUPPORTED                                                         = 1898;\nexports.ER_INVALID_FIELD_SIZE                                                            = 1899;\nexports.ER_MISSING_HA_CREATE_OPTION                                                      = 1900;\nexports.ER_ENGINE_OUT_OF_MEMORY                                                          = 1901;\nexports.ER_PASSWORD_EXPIRE_ANONYMOUS_USER                                                = 1902;\nexports.ER_SLAVE_SQL_THREAD_MUST_STOP                                                    = 1903;\nexports.ER_NO_FT_MATERIALIZED_SUBQUERY                                                   = 1904;\nexports.ER_INNODB_UNDO_LOG_FULL                                                          = 1905;\nexports.ER_INVALID_ARGUMENT_FOR_LOGARITHM                                                = 1906;\nexports.ER_SLAVE_CHANNEL_IO_THREAD_MUST_STOP                                             = 1907;\nexports.ER_WARN_OPEN_TEMP_TABLES_MUST_BE_ZERO                                            = 1908;\nexports.ER_WARN_ONLY_MASTER_LOG_FILE_NO_POS                                              = 1909;\nexports.ER_QUERY_TIMEOUT                                                                 = 1910;\nexports.ER_NON_RO_SELECT_DISABLE_TIMER                                                   = 1911;\nexports.ER_DUP_LIST_ENTRY                                                                = 1912;\nexports.ER_SQL_MODE_NO_EFFECT                                                            = 1913;\nexports.ER_AGGREGATE_ORDER_FOR_UNION                                                     = 1914;\nexports.ER_AGGREGATE_ORDER_NON_AGG_QUERY                                                 = 1915;\nexports.ER_SLAVE_WORKER_STOPPED_PREVIOUS_THD_ERROR                                       = 1916;\nexports.ER_DONT_SUPPORT_SLAVE_PRESERVE_COMMIT_ORDER                                      = 1917;\nexports.ER_SERVER_OFFLINE_MODE                                                           = 1918;\nexports.ER_GIS_DIFFERENT_SRIDS                                                           = 1919;\nexports.ER_GIS_UNSUPPORTED_ARGUMENT                                                      = 1920;\nexports.ER_GIS_UNKNOWN_ERROR                                                             = 1921;\nexports.ER_GIS_UNKNOWN_EXCEPTION                                                         = 1922;\nexports.ER_GIS_INVALID_DATA                                                              = 1923;\nexports.ER_BOOST_GEOMETRY_EMPTY_INPUT_EXCEPTION                                          = 1924;\nexports.ER_BOOST_GEOMETRY_CENTROID_EXCEPTION                                             = 1925;\nexports.ER_BOOST_GEOMETRY_OVERLAY_INVALID_INPUT_EXCEPTION                                = 1926;\nexports.ER_BOOST_GEOMETRY_TURN_INFO_EXCEPTION                                            = 1927;\nexports.ER_BOOST_GEOMETRY_SELF_INTERSECTION_POINT_EXCEPTION                              = 1928;\nexports.ER_BOOST_GEOMETRY_UNKNOWN_EXCEPTION                                              = 1929;\nexports.ER_STD_BAD_ALLOC_ERROR                                                           = 1930;\nexports.ER_STD_DOMAIN_ERROR                                                              = 1931;\nexports.ER_STD_LENGTH_ERROR                                                              = 1932;\nexports.ER_STD_INVALID_ARGUMENT                                                          = 1933;\nexports.ER_STD_OUT_OF_RANGE_ERROR                                                        = 1934;\nexports.ER_STD_OVERFLOW_ERROR                                                            = 1935;\nexports.ER_STD_RANGE_ERROR                                                               = 1936;\nexports.ER_STD_UNDERFLOW_ERROR                                                           = 1937;\nexports.ER_STD_LOGIC_ERROR                                                               = 1938;\nexports.ER_STD_RUNTIME_ERROR                                                             = 1939;\nexports.ER_STD_UNKNOWN_EXCEPTION                                                         = 1940;\nexports.ER_GIS_DATA_WRONG_ENDIANESS                                                      = 1941;\nexports.ER_CHANGE_MASTER_PASSWORD_LENGTH                                                 = 1942;\nexports.ER_USER_LOCK_WRONG_NAME                                                          = 1943;\nexports.ER_USER_LOCK_DEADLOCK                                                            = 1944;\nexports.ER_REPLACE_INACCESSIBLE_ROWS                                                     = 1945;\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_GIS                                      = 1946;\nexports.ER_ILLEGAL_USER_VAR                                                              = 1947;\nexports.ER_GTID_MODE_OFF                                                                 = 1948;\nexports.ER_UNSUPPORTED_BY_REPLICATION_THREAD                                             = 1949;\nexports.ER_INCORRECT_TYPE                                                                = 1950;\nexports.ER_FIELD_IN_ORDER_NOT_SELECT                                                     = 1951;\nexports.ER_AGGREGATE_IN_ORDER_NOT_SELECT                                                 = 1952;\nexports.ER_INVALID_RPL_WILD_TABLE_FILTER_PATTERN                                         = 1953;\nexports.ER_NET_OK_PACKET_TOO_LARGE                                                       = 1954;\nexports.ER_INVALID_JSON_DATA                                                             = 1955;\nexports.ER_INVALID_GEOJSON_MISSING_MEMBER                                                = 1956;\nexports.ER_INVALID_GEOJSON_WRONG_TYPE                                                    = 1957;\nexports.ER_INVALID_GEOJSON_UNSPECIFIED                                                   = 1958;\nexports.ER_DIMENSION_UNSUPPORTED                                                         = 1959;\nexports.ER_SLAVE_CHANNEL_DOES_NOT_EXIST                                                  = 1960;\nexports.ER_SLAVE_MULTIPLE_CHANNELS_HOST_PORT                                             = 1961;\nexports.ER_SLAVE_CHANNEL_NAME_INVALID_OR_TOO_LONG                                        = 1962;\nexports.ER_SLAVE_NEW_CHANNEL_WRONG_REPOSITORY                                            = 1963;\nexports.ER_SLAVE_CHANNEL_DELETE                                                          = 1964;\nexports.ER_SLAVE_MULTIPLE_CHANNELS_CMD                                                   = 1965;\nexports.ER_SLAVE_MAX_CHANNELS_EXCEEDED                                                   = 1966;\nexports.ER_SLAVE_CHANNEL_MUST_STOP                                                       = 1967;\nexports.ER_SLAVE_CHANNEL_NOT_RUNNING                                                     = 1968;\nexports.ER_SLAVE_CHANNEL_WAS_RUNNING                                                     = 1969;\nexports.ER_SLAVE_CHANNEL_WAS_NOT_RUNNING                                                 = 1970;\nexports.ER_SLAVE_CHANNEL_SQL_THREAD_MUST_STOP                                            = 1971;\nexports.ER_SLAVE_CHANNEL_SQL_SKIP_COUNTER                                                = 1972;\nexports.ER_WRONG_FIELD_WITH_GROUP_V2                                                     = 1973;\nexports.ER_MIX_OF_GROUP_FUNC_AND_FIELDS_V2                                               = 1974;\nexports.ER_WARN_DEPRECATED_SYSVAR_UPDATE                                                 = 1975;\nexports.ER_WARN_DEPRECATED_SQLMODE                                                       = 1976;\nexports.ER_CANNOT_LOG_PARTIAL_DROP_DATABASE_WITH_GTID                                    = 1977;\nexports.ER_GROUP_REPLICATION_CONFIGURATION                                               = 1978;\nexports.ER_GROUP_REPLICATION_RUNNING                                                     = 1979;\nexports.ER_GROUP_REPLICATION_APPLIER_INIT_ERROR                                          = 1980;\nexports.ER_GROUP_REPLICATION_STOP_APPLIER_THREAD_TIMEOUT                                 = 1981;\nexports.ER_GROUP_REPLICATION_COMMUNICATION_LAYER_SESSION_ERROR                           = 1982;\nexports.ER_GROUP_REPLICATION_COMMUNICATION_LAYER_JOIN_ERROR                              = 1983;\nexports.ER_BEFORE_DML_VALIDATION_ERROR                                                   = 1984;\nexports.ER_PREVENTS_VARIABLE_WITHOUT_RBR                                                 = 1985;\nexports.ER_RUN_HOOK_ERROR                                                                = 1986;\nexports.ER_TRANSACTION_ROLLBACK_DURING_COMMIT                                            = 1987;\nexports.ER_GENERATED_COLUMN_FUNCTION_IS_NOT_ALLOWED                                      = 1988;\nexports.ER_UNSUPPORTED_ALTER_INPLACE_ON_VIRTUAL_COLUMN                                   = 1989;\nexports.ER_WRONG_FK_OPTION_FOR_GENERATED_COLUMN                                          = 1990;\nexports.ER_NON_DEFAULT_VALUE_FOR_GENERATED_COLUMN                                        = 1991;\nexports.ER_UNSUPPORTED_ACTION_ON_GENERATED_COLUMN                                        = 1992;\nexports.ER_GENERATED_COLUMN_NON_PRIOR                                                    = 1993;\nexports.ER_DEPENDENT_BY_GENERATED_COLUMN                                                 = 1994;\nexports.ER_GENERATED_COLUMN_REF_AUTO_INC                                                 = 1995;\nexports.ER_FEATURE_NOT_AVAILABLE                                                         = 1996;\nexports.ER_CANT_SET_GTID_MODE                                                            = 1997;\nexports.ER_CANT_USE_AUTO_POSITION_WITH_GTID_MODE_OFF                                     = 1998;\nexports.ER_CANT_REPLICATE_ANONYMOUS_WITH_AUTO_POSITION                                   = 1999;\nexports.ER_CANT_REPLICATE_ANONYMOUS_WITH_GTID_MODE_ON                                    = 2000;\nexports.ER_CANT_REPLICATE_GTID_WITH_GTID_MODE_OFF                                        = 2001;\nexports.ER_CANT_SET_ENFORCE_GTID_CONSISTENCY_ON_WITH_ONGOING_GTID_VIOLATING_TRANSACTIONS = 2002;\nexports.ER_SET_ENFORCE_GTID_CONSISTENCY_WARN_WITH_ONGOING_GTID_VIOLATING_TRANSACTIONS    = 2003;\nexports.ER_ACCOUNT_HAS_BEEN_LOCKED                                                       = 2004;\nexports.ER_WRONG_TABLESPACE_NAME                                                         = 2005;\nexports.ER_TABLESPACE_IS_NOT_EMPTY                                                       = 2006;\nexports.ER_WRONG_FILE_NAME                                                               = 2007;\nexports.ER_BOOST_GEOMETRY_INCONSISTENT_TURNS_EXCEPTION                                   = 2008;\nexports.ER_WARN_OPTIMIZER_HINT_SYNTAX_ERROR                                              = 2009;\nexports.ER_WARN_BAD_MAX_EXECUTION_TIME                                                   = 2010;\nexports.ER_WARN_UNSUPPORTED_MAX_EXECUTION_TIME                                           = 2011;\nexports.ER_WARN_CONFLICTING_HINT                                                         = 2012;\nexports.ER_WARN_UNKNOWN_QB_NAME                                                          = 2013;\nexports.ER_UNRESOLVED_HINT_NAME                                                          = 2014;\nexports.ER_WARN_ON_MODIFYING_GTID_EXECUTED_TABLE                                         = 2015;\nexports.ER_PLUGGABLE_PROTOCOL_COMMAND_NOT_SUPPORTED                                      = 2016;\nexports.ER_LOCKING_SERVICE_WRONG_NAME                                                    = 2017;\nexports.ER_LOCKING_SERVICE_DEADLOCK                                                      = 2018;\nexports.ER_LOCKING_SERVICE_TIMEOUT                                                       = 2019;\nexports.ER_GIS_MAX_POINTS_IN_GEOMETRY_OVERFLOWED                                         = 2020;\nexports.ER_SQL_MODE_MERGED                                                               = 2021;\nexports.ER_VTOKEN_PLUGIN_TOKEN_MISMATCH                                                  = 2022;\nexports.ER_VTOKEN_PLUGIN_TOKEN_NOT_FOUND                                                 = 2023;\nexports.ER_CANT_SET_VARIABLE_WHEN_OWNING_GTID                                            = 2024;\nexports.ER_SLAVE_CHANNEL_OPERATION_NOT_ALLOWED                                           = 2025;\nexports.ER_INVALID_JSON_TEXT                                                             = 2026;\nexports.ER_INVALID_JSON_TEXT_IN_PARAM                                                    = 2027;\nexports.ER_INVALID_JSON_BINARY_DATA                                                      = 2028;\nexports.ER_INVALID_JSON_PATH                                                             = 2029;\nexports.ER_INVALID_JSON_CHARSET                                                          = 2030;\nexports.ER_INVALID_JSON_CHARSET_IN_FUNCTION                                              = 2031;\nexports.ER_INVALID_TYPE_FOR_JSON                                                         = 2032;\nexports.ER_INVALID_CAST_TO_JSON                                                          = 2033;\nexports.ER_INVALID_JSON_PATH_CHARSET                                                     = 2034;\nexports.ER_INVALID_JSON_PATH_WILDCARD                                                    = 2035;\nexports.ER_JSON_VALUE_TOO_BIG                                                            = 2036;\nexports.ER_JSON_KEY_TOO_BIG                                                              = 2037;\nexports.ER_JSON_USED_AS_KEY                                                              = 2038;\nexports.ER_JSON_VACUOUS_PATH                                                             = 2039;\nexports.ER_JSON_BAD_ONE_OR_ALL_ARG                                                       = 2040;\nexports.ER_NUMERIC_JSON_VALUE_OUT_OF_RANGE                                               = 2041;\nexports.ER_INVALID_JSON_VALUE_FOR_CAST                                                   = 2042;\nexports.ER_JSON_DOCUMENT_TOO_DEEP                                                        = 2043;\nexports.ER_JSON_DOCUMENT_NULL_KEY                                                        = 2044;\nexports.ER_SECURE_TRANSPORT_REQUIRED                                                     = 2045;\nexports.ER_NO_SECURE_TRANSPORTS_CONFIGURED                                               = 2046;\nexports.ER_DISABLED_STORAGE_ENGINE                                                       = 2047;\nexports.ER_USER_DOES_NOT_EXIST                                                           = 2048;\nexports.ER_USER_ALREADY_EXISTS                                                           = 2049;\nexports.ER_AUDIT_API_ABORT                                                               = 2050;\nexports.ER_INVALID_JSON_PATH_ARRAY_CELL                                                  = 2051;\nexports.ER_BUFPOOL_RESIZE_INPROGRESS                                                     = 2052;\nexports.ER_FEATURE_DISABLED_SEE_DOC                                                      = 2053;\nexports.ER_SERVER_ISNT_AVAILABLE                                                         = 2054;\nexports.ER_SESSION_WAS_KILLED                                                            = 2055;\nexports.ER_CAPACITY_EXCEEDED                                                             = 2056;\nexports.ER_CAPACITY_EXCEEDED_IN_RANGE_OPTIMIZER                                          = 2057;\nexports.ER_TABLE_NEEDS_UPG_PART                                                          = 2058;\nexports.ER_CANT_WAIT_FOR_EXECUTED_GTID_SET_WHILE_OWNING_A_GTID                           = 2059;\nexports.ER_CANNOT_ADD_FOREIGN_BASE_COL_VIRTUAL                                           = 2060;\nexports.ER_CANNOT_CREATE_VIRTUAL_INDEX_CONSTRAINT                                        = 2061;\nexports.ER_ERROR_ON_MODIFYING_GTID_EXECUTED_TABLE                                        = 2062;\nexports.ER_LOCK_REFUSED_BY_ENGINE                                                        = 2063;\nexports.ER_UNSUPPORTED_ALTER_ONLINE_ON_VIRTUAL_COLUMN                                    = 2064;\nexports.ER_MASTER_KEY_ROTATION_NOT_SUPPORTED_BY_SE                                       = 2065;\nexports.ER_MASTER_KEY_ROTATION_ERROR_BY_SE                                               = 2066;\nexports.ER_MASTER_KEY_ROTATION_BINLOG_FAILED                                             = 2067;\nexports.ER_MASTER_KEY_ROTATION_SE_UNAVAILABLE                                            = 2068;\nexports.ER_TABLESPACE_CANNOT_ENCRYPT                                                     = 2069;\nexports.ER_INVALID_ENCRYPTION_OPTION                                                     = 2070;\nexports.ER_CANNOT_FIND_KEY_IN_KEYRING                                                    = 2071;\nexports.ER_CAPACITY_EXCEEDED_IN_PARSER                                                   = 2072;\nexports.ER_UNSUPPORTED_ALTER_ENCRYPTION_INPLACE                                          = 2073;\nexports.ER_KEYRING_UDF_KEYRING_SERVICE_ERROR                                             = 2074;\nexports.ER_USER_COLUMN_OLD_LENGTH                                                        = 2075;\nexports.ER_CANT_RESET_MASTER                                                             = 2076;\nexports.ER_GROUP_REPLICATION_MAX_GROUP_SIZE                                              = 2077;\nexports.ER_CANNOT_ADD_FOREIGN_BASE_COL_STORED                                            = 2078;\nexports.ER_TABLE_REFERENCED                                                              = 2079;\nexports.ER_PARTITION_ENGINE_DEPRECATED_FOR_TABLE                                         = 2080;\n\n// Lookup-by-number table\nexports[1]    = 'EE_CANTCREATEFILE';\nexports[2]    = 'EE_READ';\nexports[3]    = 'EE_WRITE';\nexports[4]    = 'EE_BADCLOSE';\nexports[5]    = 'EE_OUTOFMEMORY';\nexports[6]    = 'EE_DELETE';\nexports[7]    = 'EE_LINK';\nexports[9]    = 'EE_EOFERR';\nexports[10]   = 'EE_CANTLOCK';\nexports[11]   = 'EE_CANTUNLOCK';\nexports[12]   = 'EE_DIR';\nexports[13]   = 'EE_STAT';\nexports[14]   = 'EE_CANT_CHSIZE';\nexports[15]   = 'EE_CANT_OPEN_STREAM';\nexports[16]   = 'EE_GETWD';\nexports[17]   = 'EE_SETWD';\nexports[18]   = 'EE_LINK_WARNING';\nexports[19]   = 'EE_OPEN_WARNING';\nexports[20]   = 'EE_DISK_FULL';\nexports[21]   = 'EE_CANT_MKDIR';\nexports[22]   = 'EE_UNKNOWN_CHARSET';\nexports[23]   = 'EE_OUT_OF_FILERESOURCES';\nexports[24]   = 'EE_CANT_READLINK';\nexports[25]   = 'EE_CANT_SYMLINK';\nexports[26]   = 'EE_REALPATH';\nexports[27]   = 'EE_SYNC';\nexports[28]   = 'EE_UNKNOWN_COLLATION';\nexports[29]   = 'EE_FILENOTFOUND';\nexports[30]   = 'EE_FILE_NOT_CLOSED';\nexports[31]   = 'EE_CHANGE_OWNERSHIP';\nexports[32]   = 'EE_CHANGE_PERMISSIONS';\nexports[33]   = 'EE_CANT_SEEK';\nexports[34]   = 'EE_CAPACITY_EXCEEDED';\nexports[120]  = 'HA_ERR_KEY_NOT_FOUND';\nexports[121]  = 'HA_ERR_FOUND_DUPP_KEY';\nexports[122]  = 'HA_ERR_INTERNAL_ERROR';\nexports[123]  = 'HA_ERR_RECORD_CHANGED';\nexports[124]  = 'HA_ERR_WRONG_INDEX';\nexports[126]  = 'HA_ERR_CRASHED';\nexports[127]  = 'HA_ERR_WRONG_IN_RECORD';\nexports[128]  = 'HA_ERR_OUT_OF_MEM';\nexports[130]  = 'HA_ERR_NOT_A_TABLE';\nexports[131]  = 'HA_ERR_WRONG_COMMAND';\nexports[132]  = 'HA_ERR_OLD_FILE';\nexports[133]  = 'HA_ERR_NO_ACTIVE_RECORD';\nexports[134]  = 'HA_ERR_RECORD_DELETED';\nexports[135]  = 'HA_ERR_RECORD_FILE_FULL';\nexports[136]  = 'HA_ERR_INDEX_FILE_FULL';\nexports[137]  = 'HA_ERR_END_OF_FILE';\nexports[138]  = 'HA_ERR_UNSUPPORTED';\nexports[139]  = 'HA_ERR_TOO_BIG_ROW';\nexports[140]  = 'HA_WRONG_CREATE_OPTION';\nexports[141]  = 'HA_ERR_FOUND_DUPP_UNIQUE';\nexports[142]  = 'HA_ERR_UNKNOWN_CHARSET';\nexports[143]  = 'HA_ERR_WRONG_MRG_TABLE_DEF';\nexports[144]  = 'HA_ERR_CRASHED_ON_REPAIR';\nexports[145]  = 'HA_ERR_CRASHED_ON_USAGE';\nexports[146]  = 'HA_ERR_LOCK_WAIT_TIMEOUT';\nexports[147]  = 'HA_ERR_LOCK_TABLE_FULL';\nexports[148]  = 'HA_ERR_READ_ONLY_TRANSACTION';\nexports[149]  = 'HA_ERR_LOCK_DEADLOCK';\nexports[150]  = 'HA_ERR_CANNOT_ADD_FOREIGN';\nexports[151]  = 'HA_ERR_NO_REFERENCED_ROW';\nexports[152]  = 'HA_ERR_ROW_IS_REFERENCED';\nexports[153]  = 'HA_ERR_NO_SAVEPOINT';\nexports[154]  = 'HA_ERR_NON_UNIQUE_BLOCK_SIZE';\nexports[155]  = 'HA_ERR_NO_SUCH_TABLE';\nexports[156]  = 'HA_ERR_TABLE_EXIST';\nexports[157]  = 'HA_ERR_NO_CONNECTION';\nexports[158]  = 'HA_ERR_NULL_IN_SPATIAL';\nexports[159]  = 'HA_ERR_TABLE_DEF_CHANGED';\nexports[160]  = 'HA_ERR_NO_PARTITION_FOUND';\nexports[161]  = 'HA_ERR_RBR_LOGGING_FAILED';\nexports[162]  = 'HA_ERR_DROP_INDEX_FK';\nexports[163]  = 'HA_ERR_FOREIGN_DUPLICATE_KEY';\nexports[164]  = 'HA_ERR_TABLE_NEEDS_UPGRADE';\nexports[165]  = 'HA_ERR_TABLE_READONLY';\nexports[166]  = 'HA_ERR_AUTOINC_READ_FAILED';\nexports[167]  = 'HA_ERR_AUTOINC_ERANGE';\nexports[168]  = 'HA_ERR_GENERIC';\nexports[169]  = 'HA_ERR_RECORD_IS_THE_SAME';\nexports[170]  = 'HA_ERR_LOGGING_IMPOSSIBLE';\nexports[171]  = 'HA_ERR_CORRUPT_EVENT';\nexports[172]  = 'HA_ERR_NEW_FILE';\nexports[173]  = 'HA_ERR_ROWS_EVENT_APPLY';\nexports[174]  = 'HA_ERR_INITIALIZATION';\nexports[175]  = 'HA_ERR_FILE_TOO_SHORT';\nexports[176]  = 'HA_ERR_WRONG_CRC';\nexports[177]  = 'HA_ERR_TOO_MANY_CONCURRENT_TRXS';\nexports[178]  = 'HA_ERR_NOT_IN_LOCK_PARTITIONS';\nexports[179]  = 'HA_ERR_INDEX_COL_TOO_LONG';\nexports[180]  = 'HA_ERR_INDEX_CORRUPT';\nexports[181]  = 'HA_ERR_UNDO_REC_TOO_BIG';\nexports[182]  = 'HA_FTS_INVALID_DOCID';\nexports[183]  = 'HA_ERR_TABLE_IN_FK_CHECK';\nexports[184]  = 'HA_ERR_TABLESPACE_EXISTS';\nexports[185]  = 'HA_ERR_TOO_MANY_FIELDS';\nexports[186]  = 'HA_ERR_ROW_IN_WRONG_PARTITION';\nexports[187]  = 'HA_ERR_INNODB_READ_ONLY';\nexports[188]  = 'HA_ERR_FTS_EXCEED_RESULT_CACHE_LIMIT';\nexports[189]  = 'HA_ERR_TEMP_FILE_WRITE_FAILURE';\nexports[190]  = 'HA_ERR_INNODB_FORCED_RECOVERY';\nexports[191]  = 'HA_ERR_FTS_TOO_MANY_WORDS_IN_PHRASE';\nexports[192]  = 'HA_ERR_FK_DEPTH_EXCEEDED';\nexports[193]  = 'HA_MISSING_CREATE_OPTION';\nexports[194]  = 'HA_ERR_SE_OUT_OF_MEMORY';\nexports[195]  = 'HA_ERR_TABLE_CORRUPT';\nexports[196]  = 'HA_ERR_QUERY_INTERRUPTED';\nexports[197]  = 'HA_ERR_TABLESPACE_MISSING';\nexports[198]  = 'HA_ERR_TABLESPACE_IS_NOT_EMPTY';\nexports[199]  = 'HA_ERR_WRONG_FILE_NAME';\nexports[200]  = 'HA_ERR_NOT_ALLOWED_COMMAND';\nexports[201]  = 'HA_ERR_COMPUTE_FAILED';\nexports[1000] = 'ER_HASHCHK';\nexports[1001] = 'ER_NISAMCHK';\nexports[1002] = 'ER_NO';\nexports[1003] = 'ER_YES';\nexports[1004] = 'ER_CANT_CREATE_FILE';\nexports[1005] = 'ER_CANT_CREATE_TABLE';\nexports[1006] = 'ER_CANT_CREATE_DB';\nexports[1007] = 'ER_DB_CREATE_EXISTS';\nexports[1008] = 'ER_DB_DROP_EXISTS';\nexports[1009] = 'ER_DB_DROP_DELETE';\nexports[1010] = 'ER_DB_DROP_RMDIR';\nexports[1011] = 'ER_CANT_DELETE_FILE';\nexports[1012] = 'ER_CANT_FIND_SYSTEM_REC';\nexports[1013] = 'ER_CANT_GET_STAT';\nexports[1014] = 'ER_CANT_GET_WD';\nexports[1015] = 'ER_CANT_LOCK';\nexports[1016] = 'ER_CANT_OPEN_FILE';\nexports[1017] = 'ER_FILE_NOT_FOUND';\nexports[1018] = 'ER_CANT_READ_DIR';\nexports[1019] = 'ER_CANT_SET_WD';\nexports[1020] = 'ER_CHECKREAD';\nexports[1021] = 'ER_DISK_FULL';\nexports[1022] = 'ER_DUP_KEY';\nexports[1023] = 'ER_ERROR_ON_CLOSE';\nexports[1024] = 'ER_ERROR_ON_READ';\nexports[1025] = 'ER_ERROR_ON_RENAME';\nexports[1026] = 'ER_ERROR_ON_WRITE';\nexports[1027] = 'ER_FILE_USED';\nexports[1028] = 'ER_FILSORT_ABORT';\nexports[1029] = 'ER_FORM_NOT_FOUND';\nexports[1030] = 'ER_GET_ERRNO';\nexports[1031] = 'ER_ILLEGAL_HA';\nexports[1032] = 'ER_KEY_NOT_FOUND';\nexports[1033] = 'ER_NOT_FORM_FILE';\nexports[1034] = 'ER_NOT_KEYFILE';\nexports[1035] = 'ER_OLD_KEYFILE';\nexports[1036] = 'ER_OPEN_AS_READONLY';\nexports[1037] = 'ER_OUTOFMEMORY';\nexports[1038] = 'ER_OUT_OF_SORTMEMORY';\nexports[1039] = 'ER_UNEXPECTED_EOF';\nexports[1040] = 'ER_CON_COUNT_ERROR';\nexports[1041] = 'ER_OUT_OF_RESOURCES';\nexports[1042] = 'ER_BAD_HOST_ERROR';\nexports[1043] = 'ER_HANDSHAKE_ERROR';\nexports[1044] = 'ER_DBACCESS_DENIED_ERROR';\nexports[1045] = 'ER_ACCESS_DENIED_ERROR';\nexports[1046] = 'ER_NO_DB_ERROR';\nexports[1047] = 'ER_UNKNOWN_COM_ERROR';\nexports[1048] = 'ER_BAD_NULL_ERROR';\nexports[1049] = 'ER_BAD_DB_ERROR';\nexports[1050] = 'ER_TABLE_EXISTS_ERROR';\nexports[1051] = 'ER_BAD_TABLE_ERROR';\nexports[1052] = 'ER_NON_UNIQ_ERROR';\nexports[1053] = 'ER_SERVER_SHUTDOWN';\nexports[1054] = 'ER_BAD_FIELD_ERROR';\nexports[1055] = 'ER_WRONG_FIELD_WITH_GROUP';\nexports[1056] = 'ER_WRONG_GROUP_FIELD';\nexports[1057] = 'ER_WRONG_SUM_SELECT';\nexports[1058] = 'ER_WRONG_VALUE_COUNT';\nexports[1059] = 'ER_TOO_LONG_IDENT';\nexports[1060] = 'ER_DUP_FIELDNAME';\nexports[1061] = 'ER_DUP_KEYNAME';\nexports[1062] = 'ER_DUP_ENTRY';\nexports[1063] = 'ER_WRONG_FIELD_SPEC';\nexports[1064] = 'ER_PARSE_ERROR';\nexports[1065] = 'ER_EMPTY_QUERY';\nexports[1066] = 'ER_NONUNIQ_TABLE';\nexports[1067] = 'ER_INVALID_DEFAULT';\nexports[1068] = 'ER_MULTIPLE_PRI_KEY';\nexports[1069] = 'ER_TOO_MANY_KEYS';\nexports[1070] = 'ER_TOO_MANY_KEY_PARTS';\nexports[1071] = 'ER_TOO_LONG_KEY';\nexports[1072] = 'ER_KEY_COLUMN_DOES_NOT_EXITS';\nexports[1073] = 'ER_BLOB_USED_AS_KEY';\nexports[1074] = 'ER_TOO_BIG_FIELDLENGTH';\nexports[1075] = 'ER_WRONG_AUTO_KEY';\nexports[1076] = 'ER_READY';\nexports[1077] = 'ER_NORMAL_SHUTDOWN';\nexports[1078] = 'ER_GOT_SIGNAL';\nexports[1079] = 'ER_SHUTDOWN_COMPLETE';\nexports[1080] = 'ER_FORCING_CLOSE';\nexports[1081] = 'ER_IPSOCK_ERROR';\nexports[1082] = 'ER_NO_SUCH_INDEX';\nexports[1083] = 'ER_WRONG_FIELD_TERMINATORS';\nexports[1084] = 'ER_BLOBS_AND_NO_TERMINATED';\nexports[1085] = 'ER_TEXTFILE_NOT_READABLE';\nexports[1086] = 'ER_FILE_EXISTS_ERROR';\nexports[1087] = 'ER_LOAD_INFO';\nexports[1088] = 'ER_ALTER_INFO';\nexports[1089] = 'ER_WRONG_SUB_KEY';\nexports[1090] = 'ER_CANT_REMOVE_ALL_FIELDS';\nexports[1091] = 'ER_CANT_DROP_FIELD_OR_KEY';\nexports[1092] = 'ER_INSERT_INFO';\nexports[1093] = 'ER_UPDATE_TABLE_USED';\nexports[1094] = 'ER_NO_SUCH_THREAD';\nexports[1095] = 'ER_KILL_DENIED_ERROR';\nexports[1096] = 'ER_NO_TABLES_USED';\nexports[1097] = 'ER_TOO_BIG_SET';\nexports[1098] = 'ER_NO_UNIQUE_LOGFILE';\nexports[1099] = 'ER_TABLE_NOT_LOCKED_FOR_WRITE';\nexports[1100] = 'ER_TABLE_NOT_LOCKED';\nexports[1101] = 'ER_BLOB_CANT_HAVE_DEFAULT';\nexports[1102] = 'ER_WRONG_DB_NAME';\nexports[1103] = 'ER_WRONG_TABLE_NAME';\nexports[1104] = 'ER_TOO_BIG_SELECT';\nexports[1105] = 'ER_UNKNOWN_ERROR';\nexports[1106] = 'ER_UNKNOWN_PROCEDURE';\nexports[1107] = 'ER_WRONG_PARAMCOUNT_TO_PROCEDURE';\nexports[1108] = 'ER_WRONG_PARAMETERS_TO_PROCEDURE';\nexports[1109] = 'ER_UNKNOWN_TABLE';\nexports[1110] = 'ER_FIELD_SPECIFIED_TWICE';\nexports[1111] = 'ER_INVALID_GROUP_FUNC_USE';\nexports[1112] = 'ER_UNSUPPORTED_EXTENSION';\nexports[1113] = 'ER_TABLE_MUST_HAVE_COLUMNS';\nexports[1114] = 'ER_RECORD_FILE_FULL';\nexports[1115] = 'ER_UNKNOWN_CHARACTER_SET';\nexports[1116] = 'ER_TOO_MANY_TABLES';\nexports[1117] = 'ER_TOO_MANY_FIELDS';\nexports[1118] = 'ER_TOO_BIG_ROWSIZE';\nexports[1119] = 'ER_STACK_OVERRUN';\nexports[1120] = 'ER_WRONG_OUTER_JOIN';\nexports[1121] = 'ER_NULL_COLUMN_IN_INDEX';\nexports[1122] = 'ER_CANT_FIND_UDF';\nexports[1123] = 'ER_CANT_INITIALIZE_UDF';\nexports[1124] = 'ER_UDF_NO_PATHS';\nexports[1125] = 'ER_UDF_EXISTS';\nexports[1126] = 'ER_CANT_OPEN_LIBRARY';\nexports[1127] = 'ER_CANT_FIND_DL_ENTRY';\nexports[1128] = 'ER_FUNCTION_NOT_DEFINED';\nexports[1129] = 'ER_HOST_IS_BLOCKED';\nexports[1130] = 'ER_HOST_NOT_PRIVILEGED';\nexports[1131] = 'ER_PASSWORD_ANONYMOUS_USER';\nexports[1132] = 'ER_PASSWORD_NOT_ALLOWED';\nexports[1133] = 'ER_PASSWORD_NO_MATCH';\nexports[1134] = 'ER_UPDATE_INFO';\nexports[1135] = 'ER_CANT_CREATE_THREAD';\nexports[1136] = 'ER_WRONG_VALUE_COUNT_ON_ROW';\nexports[1137] = 'ER_CANT_REOPEN_TABLE';\nexports[1138] = 'ER_INVALID_USE_OF_NULL';\nexports[1139] = 'ER_REGEXP_ERROR';\nexports[1140] = 'ER_MIX_OF_GROUP_FUNC_AND_FIELDS';\nexports[1141] = 'ER_NONEXISTING_GRANT';\nexports[1142] = 'ER_TABLEACCESS_DENIED_ERROR';\nexports[1143] = 'ER_COLUMNACCESS_DENIED_ERROR';\nexports[1144] = 'ER_ILLEGAL_GRANT_FOR_TABLE';\nexports[1145] = 'ER_GRANT_WRONG_HOST_OR_USER';\nexports[1146] = 'ER_NO_SUCH_TABLE';\nexports[1147] = 'ER_NONEXISTING_TABLE_GRANT';\nexports[1148] = 'ER_NOT_ALLOWED_COMMAND';\nexports[1149] = 'ER_SYNTAX_ERROR';\nexports[1150] = 'ER_DELAYED_CANT_CHANGE_LOCK';\nexports[1151] = 'ER_TOO_MANY_DELAYED_THREADS';\nexports[1152] = 'ER_ABORTING_CONNECTION';\nexports[1153] = 'ER_NET_PACKET_TOO_LARGE';\nexports[1154] = 'ER_NET_READ_ERROR_FROM_PIPE';\nexports[1155] = 'ER_NET_FCNTL_ERROR';\nexports[1156] = 'ER_NET_PACKETS_OUT_OF_ORDER';\nexports[1157] = 'ER_NET_UNCOMPRESS_ERROR';\nexports[1158] = 'ER_NET_READ_ERROR';\nexports[1159] = 'ER_NET_READ_INTERRUPTED';\nexports[1160] = 'ER_NET_ERROR_ON_WRITE';\nexports[1161] = 'ER_NET_WRITE_INTERRUPTED';\nexports[1162] = 'ER_TOO_LONG_STRING';\nexports[1163] = 'ER_TABLE_CANT_HANDLE_BLOB';\nexports[1164] = 'ER_TABLE_CANT_HANDLE_AUTO_INCREMENT';\nexports[1165] = 'ER_DELAYED_INSERT_TABLE_LOCKED';\nexports[1166] = 'ER_WRONG_COLUMN_NAME';\nexports[1167] = 'ER_WRONG_KEY_COLUMN';\nexports[1168] = 'ER_WRONG_MRG_TABLE';\nexports[1169] = 'ER_DUP_UNIQUE';\nexports[1170] = 'ER_BLOB_KEY_WITHOUT_LENGTH';\nexports[1171] = 'ER_PRIMARY_CANT_HAVE_NULL';\nexports[1172] = 'ER_TOO_MANY_ROWS';\nexports[1173] = 'ER_REQUIRES_PRIMARY_KEY';\nexports[1174] = 'ER_NO_RAID_COMPILED';\nexports[1175] = 'ER_UPDATE_WITHOUT_KEY_IN_SAFE_MODE';\nexports[1176] = 'ER_KEY_DOES_NOT_EXITS';\nexports[1177] = 'ER_CHECK_NO_SUCH_TABLE';\nexports[1178] = 'ER_CHECK_NOT_IMPLEMENTED';\nexports[1179] = 'ER_CANT_DO_THIS_DURING_AN_TRANSACTION';\nexports[1180] = 'ER_ERROR_DURING_COMMIT';\nexports[1181] = 'ER_ERROR_DURING_ROLLBACK';\nexports[1182] = 'ER_ERROR_DURING_FLUSH_LOGS';\nexports[1183] = 'ER_ERROR_DURING_CHECKPOINT';\nexports[1184] = 'ER_NEW_ABORTING_CONNECTION';\nexports[1185] = 'ER_DUMP_NOT_IMPLEMENTED';\nexports[1186] = 'ER_FLUSH_MASTER_BINLOG_CLOSED';\nexports[1187] = 'ER_INDEX_REBUILD';\nexports[1188] = 'ER_MASTER';\nexports[1189] = 'ER_MASTER_NET_READ';\nexports[1190] = 'ER_MASTER_NET_WRITE';\nexports[1191] = 'ER_FT_MATCHING_KEY_NOT_FOUND';\nexports[1192] = 'ER_LOCK_OR_ACTIVE_TRANSACTION';\nexports[1193] = 'ER_UNKNOWN_SYSTEM_VARIABLE';\nexports[1194] = 'ER_CRASHED_ON_USAGE';\nexports[1195] = 'ER_CRASHED_ON_REPAIR';\nexports[1196] = 'ER_WARNING_NOT_COMPLETE_ROLLBACK';\nexports[1197] = 'ER_TRANS_CACHE_FULL';\nexports[1198] = 'ER_SLAVE_MUST_STOP';\nexports[1199] = 'ER_SLAVE_NOT_RUNNING';\nexports[1200] = 'ER_BAD_SLAVE';\nexports[1201] = 'ER_MASTER_INFO';\nexports[1202] = 'ER_SLAVE_THREAD';\nexports[1203] = 'ER_TOO_MANY_USER_CONNECTIONS';\nexports[1204] = 'ER_SET_CONSTANTS_ONLY';\nexports[1205] = 'ER_LOCK_WAIT_TIMEOUT';\nexports[1206] = 'ER_LOCK_TABLE_FULL';\nexports[1207] = 'ER_READ_ONLY_TRANSACTION';\nexports[1208] = 'ER_DROP_DB_WITH_READ_LOCK';\nexports[1209] = 'ER_CREATE_DB_WITH_READ_LOCK';\nexports[1210] = 'ER_WRONG_ARGUMENTS';\nexports[1211] = 'ER_NO_PERMISSION_TO_CREATE_USER';\nexports[1212] = 'ER_UNION_TABLES_IN_DIFFERENT_DIR';\nexports[1213] = 'ER_LOCK_DEADLOCK';\nexports[1214] = 'ER_TABLE_CANT_HANDLE_FT';\nexports[1215] = 'ER_CANNOT_ADD_FOREIGN';\nexports[1216] = 'ER_NO_REFERENCED_ROW';\nexports[1217] = 'ER_ROW_IS_REFERENCED';\nexports[1218] = 'ER_CONNECT_TO_MASTER';\nexports[1219] = 'ER_QUERY_ON_MASTER';\nexports[1220] = 'ER_ERROR_WHEN_EXECUTING_COMMAND';\nexports[1221] = 'ER_WRONG_USAGE';\nexports[1222] = 'ER_WRONG_NUMBER_OF_COLUMNS_IN_SELECT';\nexports[1223] = 'ER_CANT_UPDATE_WITH_READLOCK';\nexports[1224] = 'ER_MIXING_NOT_ALLOWED';\nexports[1225] = 'ER_DUP_ARGUMENT';\nexports[1226] = 'ER_USER_LIMIT_REACHED';\nexports[1227] = 'ER_SPECIFIC_ACCESS_DENIED_ERROR';\nexports[1228] = 'ER_LOCAL_VARIABLE';\nexports[1229] = 'ER_GLOBAL_VARIABLE';\nexports[1230] = 'ER_NO_DEFAULT';\nexports[1231] = 'ER_WRONG_VALUE_FOR_VAR';\nexports[1232] = 'ER_WRONG_TYPE_FOR_VAR';\nexports[1233] = 'ER_VAR_CANT_BE_READ';\nexports[1234] = 'ER_CANT_USE_OPTION_HERE';\nexports[1235] = 'ER_NOT_SUPPORTED_YET';\nexports[1236] = 'ER_MASTER_FATAL_ERROR_READING_BINLOG';\nexports[1237] = 'ER_SLAVE_IGNORED_TABLE';\nexports[1238] = 'ER_INCORRECT_GLOBAL_LOCAL_VAR';\nexports[1239] = 'ER_WRONG_FK_DEF';\nexports[1240] = 'ER_KEY_REF_DO_NOT_MATCH_TABLE_REF';\nexports[1241] = 'ER_OPERAND_COLUMNS';\nexports[1242] = 'ER_SUBQUERY_NO_1_ROW';\nexports[1243] = 'ER_UNKNOWN_STMT_HANDLER';\nexports[1244] = 'ER_CORRUPT_HELP_DB';\nexports[1245] = 'ER_CYCLIC_REFERENCE';\nexports[1246] = 'ER_AUTO_CONVERT';\nexports[1247] = 'ER_ILLEGAL_REFERENCE';\nexports[1248] = 'ER_DERIVED_MUST_HAVE_ALIAS';\nexports[1249] = 'ER_SELECT_REDUCED';\nexports[1250] = 'ER_TABLENAME_NOT_ALLOWED_HERE';\nexports[1251] = 'ER_NOT_SUPPORTED_AUTH_MODE';\nexports[1252] = 'ER_SPATIAL_CANT_HAVE_NULL';\nexports[1253] = 'ER_COLLATION_CHARSET_MISMATCH';\nexports[1254] = 'ER_SLAVE_WAS_RUNNING';\nexports[1255] = 'ER_SLAVE_WAS_NOT_RUNNING';\nexports[1256] = 'ER_TOO_BIG_FOR_UNCOMPRESS';\nexports[1257] = 'ER_ZLIB_Z_MEM_ERROR';\nexports[1258] = 'ER_ZLIB_Z_BUF_ERROR';\nexports[1259] = 'ER_ZLIB_Z_DATA_ERROR';\nexports[1260] = 'ER_CUT_VALUE_GROUP_CONCAT';\nexports[1261] = 'ER_WARN_TOO_FEW_RECORDS';\nexports[1262] = 'ER_WARN_TOO_MANY_RECORDS';\nexports[1263] = 'ER_WARN_NULL_TO_NOTNULL';\nexports[1264] = 'ER_WARN_DATA_OUT_OF_RANGE';\nexports[1265] = 'WARN_DATA_TRUNCATED';\nexports[1266] = 'ER_WARN_USING_OTHER_HANDLER';\nexports[1267] = 'ER_CANT_AGGREGATE_2COLLATIONS';\nexports[1268] = 'ER_DROP_USER';\nexports[1269] = 'ER_REVOKE_GRANTS';\nexports[1270] = 'ER_CANT_AGGREGATE_3COLLATIONS';\nexports[1271] = 'ER_CANT_AGGREGATE_NCOLLATIONS';\nexports[1272] = 'ER_VARIABLE_IS_NOT_STRUCT';\nexports[1273] = 'ER_UNKNOWN_COLLATION';\nexports[1274] = 'ER_SLAVE_IGNORED_SSL_PARAMS';\nexports[1275] = 'ER_SERVER_IS_IN_SECURE_AUTH_MODE';\nexports[1276] = 'ER_WARN_FIELD_RESOLVED';\nexports[1277] = 'ER_BAD_SLAVE_UNTIL_COND';\nexports[1278] = 'ER_MISSING_SKIP_SLAVE';\nexports[1279] = 'ER_UNTIL_COND_IGNORED';\nexports[1280] = 'ER_WRONG_NAME_FOR_INDEX';\nexports[1281] = 'ER_WRONG_NAME_FOR_CATALOG';\nexports[1282] = 'ER_WARN_QC_RESIZE';\nexports[1283] = 'ER_BAD_FT_COLUMN';\nexports[1284] = 'ER_UNKNOWN_KEY_CACHE';\nexports[1285] = 'ER_WARN_HOSTNAME_WONT_WORK';\nexports[1286] = 'ER_UNKNOWN_STORAGE_ENGINE';\nexports[1287] = 'ER_WARN_DEPRECATED_SYNTAX';\nexports[1288] = 'ER_NON_UPDATABLE_TABLE';\nexports[1289] = 'ER_FEATURE_DISABLED';\nexports[1290] = 'ER_OPTION_PREVENTS_STATEMENT';\nexports[1291] = 'ER_DUPLICATED_VALUE_IN_TYPE';\nexports[1292] = 'ER_TRUNCATED_WRONG_VALUE';\nexports[1293] = 'ER_TOO_MUCH_AUTO_TIMESTAMP_COLS';\nexports[1294] = 'ER_INVALID_ON_UPDATE';\nexports[1295] = 'ER_UNSUPPORTED_PS';\nexports[1296] = 'ER_GET_ERRMSG';\nexports[1297] = 'ER_GET_TEMPORARY_ERRMSG';\nexports[1298] = 'ER_UNKNOWN_TIME_ZONE';\nexports[1299] = 'ER_WARN_INVALID_TIMESTAMP';\nexports[1300] = 'ER_INVALID_CHARACTER_STRING';\nexports[1301] = 'ER_WARN_ALLOWED_PACKET_OVERFLOWED';\nexports[1302] = 'ER_CONFLICTING_DECLARATIONS';\nexports[1303] = 'ER_SP_NO_RECURSIVE_CREATE';\nexports[1304] = 'ER_SP_ALREADY_EXISTS';\nexports[1305] = 'ER_SP_DOES_NOT_EXIST';\nexports[1306] = 'ER_SP_DROP_FAILED';\nexports[1307] = 'ER_SP_STORE_FAILED';\nexports[1308] = 'ER_SP_LILABEL_MISMATCH';\nexports[1309] = 'ER_SP_LABEL_REDEFINE';\nexports[1310] = 'ER_SP_LABEL_MISMATCH';\nexports[1311] = 'ER_SP_UNINIT_VAR';\nexports[1312] = 'ER_SP_BADSELECT';\nexports[1313] = 'ER_SP_BADRETURN';\nexports[1314] = 'ER_SP_BADSTATEMENT';\nexports[1315] = 'ER_UPDATE_LOG_DEPRECATED_IGNORED';\nexports[1316] = 'ER_UPDATE_LOG_DEPRECATED_TRANSLATED';\nexports[1317] = 'ER_QUERY_INTERRUPTED';\nexports[1318] = 'ER_SP_WRONG_NO_OF_ARGS';\nexports[1319] = 'ER_SP_COND_MISMATCH';\nexports[1320] = 'ER_SP_NORETURN';\nexports[1321] = 'ER_SP_NORETURNEND';\nexports[1322] = 'ER_SP_BAD_CURSOR_QUERY';\nexports[1323] = 'ER_SP_BAD_CURSOR_SELECT';\nexports[1324] = 'ER_SP_CURSOR_MISMATCH';\nexports[1325] = 'ER_SP_CURSOR_ALREADY_OPEN';\nexports[1326] = 'ER_SP_CURSOR_NOT_OPEN';\nexports[1327] = 'ER_SP_UNDECLARED_VAR';\nexports[1328] = 'ER_SP_WRONG_NO_OF_FETCH_ARGS';\nexports[1329] = 'ER_SP_FETCH_NO_DATA';\nexports[1330] = 'ER_SP_DUP_PARAM';\nexports[1331] = 'ER_SP_DUP_VAR';\nexports[1332] = 'ER_SP_DUP_COND';\nexports[1333] = 'ER_SP_DUP_CURS';\nexports[1334] = 'ER_SP_CANT_ALTER';\nexports[1335] = 'ER_SP_SUBSELECT_NYI';\nexports[1336] = 'ER_STMT_NOT_ALLOWED_IN_SF_OR_TRG';\nexports[1337] = 'ER_SP_VARCOND_AFTER_CURSHNDLR';\nexports[1338] = 'ER_SP_CURSOR_AFTER_HANDLER';\nexports[1339] = 'ER_SP_CASE_NOT_FOUND';\nexports[1340] = 'ER_FPARSER_TOO_BIG_FILE';\nexports[1341] = 'ER_FPARSER_BAD_HEADER';\nexports[1342] = 'ER_FPARSER_EOF_IN_COMMENT';\nexports[1343] = 'ER_FPARSER_ERROR_IN_PARAMETER';\nexports[1344] = 'ER_FPARSER_EOF_IN_UNKNOWN_PARAMETER';\nexports[1345] = 'ER_VIEW_NO_EXPLAIN';\nexports[1346] = 'ER_FRM_UNKNOWN_TYPE';\nexports[1347] = 'ER_WRONG_OBJECT';\nexports[1348] = 'ER_NONUPDATEABLE_COLUMN';\nexports[1349] = 'ER_VIEW_SELECT_DERIVED';\nexports[1350] = 'ER_VIEW_SELECT_CLAUSE';\nexports[1351] = 'ER_VIEW_SELECT_VARIABLE';\nexports[1352] = 'ER_VIEW_SELECT_TMPTABLE';\nexports[1353] = 'ER_VIEW_WRONG_LIST';\nexports[1354] = 'ER_WARN_VIEW_MERGE';\nexports[1355] = 'ER_WARN_VIEW_WITHOUT_KEY';\nexports[1356] = 'ER_VIEW_INVALID';\nexports[1357] = 'ER_SP_NO_DROP_SP';\nexports[1358] = 'ER_SP_GOTO_IN_HNDLR';\nexports[1359] = 'ER_TRG_ALREADY_EXISTS';\nexports[1360] = 'ER_TRG_DOES_NOT_EXIST';\nexports[1361] = 'ER_TRG_ON_VIEW_OR_TEMP_TABLE';\nexports[1362] = 'ER_TRG_CANT_CHANGE_ROW';\nexports[1363] = 'ER_TRG_NO_SUCH_ROW_IN_TRG';\nexports[1364] = 'ER_NO_DEFAULT_FOR_FIELD';\nexports[1365] = 'ER_DIVISION_BY_ZERO';\nexports[1366] = 'ER_TRUNCATED_WRONG_VALUE_FOR_FIELD';\nexports[1367] = 'ER_ILLEGAL_VALUE_FOR_TYPE';\nexports[1368] = 'ER_VIEW_NONUPD_CHECK';\nexports[1369] = 'ER_VIEW_CHECK_FAILED';\nexports[1370] = 'ER_PROCACCESS_DENIED_ERROR';\nexports[1371] = 'ER_RELAY_LOG_FAIL';\nexports[1372] = 'ER_PASSWD_LENGTH';\nexports[1373] = 'ER_UNKNOWN_TARGET_BINLOG';\nexports[1374] = 'ER_IO_ERR_LOG_INDEX_READ';\nexports[1375] = 'ER_BINLOG_PURGE_PROHIBITED';\nexports[1376] = 'ER_FSEEK_FAIL';\nexports[1377] = 'ER_BINLOG_PURGE_FATAL_ERR';\nexports[1378] = 'ER_LOG_IN_USE';\nexports[1379] = 'ER_LOG_PURGE_UNKNOWN_ERR';\nexports[1380] = 'ER_RELAY_LOG_INIT';\nexports[1381] = 'ER_NO_BINARY_LOGGING';\nexports[1382] = 'ER_RESERVED_SYNTAX';\nexports[1383] = 'ER_WSAS_FAILED';\nexports[1384] = 'ER_DIFF_GROUPS_PROC';\nexports[1385] = 'ER_NO_GROUP_FOR_PROC';\nexports[1386] = 'ER_ORDER_WITH_PROC';\nexports[1387] = 'ER_LOGGING_PROHIBIT_CHANGING_OF';\nexports[1388] = 'ER_NO_FILE_MAPPING';\nexports[1389] = 'ER_WRONG_MAGIC';\nexports[1390] = 'ER_PS_MANY_PARAM';\nexports[1391] = 'ER_KEY_PART_0';\nexports[1392] = 'ER_VIEW_CHECKSUM';\nexports[1393] = 'ER_VIEW_MULTIUPDATE';\nexports[1394] = 'ER_VIEW_NO_INSERT_FIELD_LIST';\nexports[1395] = 'ER_VIEW_DELETE_MERGE_VIEW';\nexports[1396] = 'ER_CANNOT_USER';\nexports[1397] = 'ER_XAER_NOTA';\nexports[1398] = 'ER_XAER_INVAL';\nexports[1399] = 'ER_XAER_RMFAIL';\nexports[1400] = 'ER_XAER_OUTSIDE';\nexports[1401] = 'ER_XAER_RMERR';\nexports[1402] = 'ER_XA_RBROLLBACK';\nexports[1403] = 'ER_NONEXISTING_PROC_GRANT';\nexports[1404] = 'ER_PROC_AUTO_GRANT_FAIL';\nexports[1405] = 'ER_PROC_AUTO_REVOKE_FAIL';\nexports[1406] = 'ER_DATA_TOO_LONG';\nexports[1407] = 'ER_SP_BAD_SQLSTATE';\nexports[1408] = 'ER_STARTUP';\nexports[1409] = 'ER_LOAD_FROM_FIXED_SIZE_ROWS_TO_VAR';\nexports[1410] = 'ER_CANT_CREATE_USER_WITH_GRANT';\nexports[1411] = 'ER_WRONG_VALUE_FOR_TYPE';\nexports[1412] = 'ER_TABLE_DEF_CHANGED';\nexports[1413] = 'ER_SP_DUP_HANDLER';\nexports[1414] = 'ER_SP_NOT_VAR_ARG';\nexports[1415] = 'ER_SP_NO_RETSET';\nexports[1416] = 'ER_CANT_CREATE_GEOMETRY_OBJECT';\nexports[1417] = 'ER_FAILED_ROUTINE_BREAK_BINLOG';\nexports[1418] = 'ER_BINLOG_UNSAFE_ROUTINE';\nexports[1419] = 'ER_BINLOG_CREATE_ROUTINE_NEED_SUPER';\nexports[1420] = 'ER_EXEC_STMT_WITH_OPEN_CURSOR';\nexports[1421] = 'ER_STMT_HAS_NO_OPEN_CURSOR';\nexports[1422] = 'ER_COMMIT_NOT_ALLOWED_IN_SF_OR_TRG';\nexports[1423] = 'ER_NO_DEFAULT_FOR_VIEW_FIELD';\nexports[1424] = 'ER_SP_NO_RECURSION';\nexports[1425] = 'ER_TOO_BIG_SCALE';\nexports[1426] = 'ER_TOO_BIG_PRECISION';\nexports[1427] = 'ER_M_BIGGER_THAN_D';\nexports[1428] = 'ER_WRONG_LOCK_OF_SYSTEM_TABLE';\nexports[1429] = 'ER_CONNECT_TO_FOREIGN_DATA_SOURCE';\nexports[1430] = 'ER_QUERY_ON_FOREIGN_DATA_SOURCE';\nexports[1431] = 'ER_FOREIGN_DATA_SOURCE_DOESNT_EXIST';\nexports[1432] = 'ER_FOREIGN_DATA_STRING_INVALID_CANT_CREATE';\nexports[1433] = 'ER_FOREIGN_DATA_STRING_INVALID';\nexports[1434] = 'ER_CANT_CREATE_FEDERATED_TABLE';\nexports[1435] = 'ER_TRG_IN_WRONG_SCHEMA';\nexports[1436] = 'ER_STACK_OVERRUN_NEED_MORE';\nexports[1437] = 'ER_TOO_LONG_BODY';\nexports[1438] = 'ER_WARN_CANT_DROP_DEFAULT_KEYCACHE';\nexports[1439] = 'ER_TOO_BIG_DISPLAYWIDTH';\nexports[1440] = 'ER_XAER_DUPID';\nexports[1441] = 'ER_DATETIME_FUNCTION_OVERFLOW';\nexports[1442] = 'ER_CANT_UPDATE_USED_TABLE_IN_SF_OR_TRG';\nexports[1443] = 'ER_VIEW_PREVENT_UPDATE';\nexports[1444] = 'ER_PS_NO_RECURSION';\nexports[1445] = 'ER_SP_CANT_SET_AUTOCOMMIT';\nexports[1446] = 'ER_MALFORMED_DEFINER';\nexports[1447] = 'ER_VIEW_FRM_NO_USER';\nexports[1448] = 'ER_VIEW_OTHER_USER';\nexports[1449] = 'ER_NO_SUCH_USER';\nexports[1450] = 'ER_FORBID_SCHEMA_CHANGE';\nexports[1451] = 'ER_ROW_IS_REFERENCED_2';\nexports[1452] = 'ER_NO_REFERENCED_ROW_2';\nexports[1453] = 'ER_SP_BAD_VAR_SHADOW';\nexports[1454] = 'ER_TRG_NO_DEFINER';\nexports[1455] = 'ER_OLD_FILE_FORMAT';\nexports[1456] = 'ER_SP_RECURSION_LIMIT';\nexports[1457] = 'ER_SP_PROC_TABLE_CORRUPT';\nexports[1458] = 'ER_SP_WRONG_NAME';\nexports[1459] = 'ER_TABLE_NEEDS_UPGRADE';\nexports[1460] = 'ER_SP_NO_AGGREGATE';\nexports[1461] = 'ER_MAX_PREPARED_STMT_COUNT_REACHED';\nexports[1462] = 'ER_VIEW_RECURSIVE';\nexports[1463] = 'ER_NON_GROUPING_FIELD_USED';\nexports[1464] = 'ER_TABLE_CANT_HANDLE_SPKEYS';\nexports[1465] = 'ER_NO_TRIGGERS_ON_SYSTEM_SCHEMA';\nexports[1466] = 'ER_REMOVED_SPACES';\nexports[1467] = 'ER_AUTOINC_READ_FAILED';\nexports[1468] = 'ER_USERNAME';\nexports[1469] = 'ER_HOSTNAME';\nexports[1470] = 'ER_WRONG_STRING_LENGTH';\nexports[1471] = 'ER_NON_INSERTABLE_TABLE';\nexports[1472] = 'ER_ADMIN_WRONG_MRG_TABLE';\nexports[1473] = 'ER_TOO_HIGH_LEVEL_OF_NESTING_FOR_SELECT';\nexports[1474] = 'ER_NAME_BECOMES_EMPTY';\nexports[1475] = 'ER_AMBIGUOUS_FIELD_TERM';\nexports[1476] = 'ER_FOREIGN_SERVER_EXISTS';\nexports[1477] = 'ER_FOREIGN_SERVER_DOESNT_EXIST';\nexports[1478] = 'ER_ILLEGAL_HA_CREATE_OPTION';\nexports[1479] = 'ER_PARTITION_REQUIRES_VALUES_ERROR';\nexports[1480] = 'ER_PARTITION_WRONG_VALUES_ERROR';\nexports[1481] = 'ER_PARTITION_MAXVALUE_ERROR';\nexports[1482] = 'ER_PARTITION_SUBPARTITION_ERROR';\nexports[1483] = 'ER_PARTITION_SUBPART_MIX_ERROR';\nexports[1484] = 'ER_PARTITION_WRONG_NO_PART_ERROR';\nexports[1485] = 'ER_PARTITION_WRONG_NO_SUBPART_ERROR';\nexports[1486] = 'ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR';\nexports[1487] = 'ER_NO_CONST_EXPR_IN_RANGE_OR_LIST_ERROR';\nexports[1488] = 'ER_FIELD_NOT_FOUND_PART_ERROR';\nexports[1489] = 'ER_LIST_OF_FIELDS_ONLY_IN_HASH_ERROR';\nexports[1490] = 'ER_INCONSISTENT_PARTITION_INFO_ERROR';\nexports[1491] = 'ER_PARTITION_FUNC_NOT_ALLOWED_ERROR';\nexports[1492] = 'ER_PARTITIONS_MUST_BE_DEFINED_ERROR';\nexports[1493] = 'ER_RANGE_NOT_INCREASING_ERROR';\nexports[1494] = 'ER_INCONSISTENT_TYPE_OF_FUNCTIONS_ERROR';\nexports[1495] = 'ER_MULTIPLE_DEF_CONST_IN_LIST_PART_ERROR';\nexports[1496] = 'ER_PARTITION_ENTRY_ERROR';\nexports[1497] = 'ER_MIX_HANDLER_ERROR';\nexports[1498] = 'ER_PARTITION_NOT_DEFINED_ERROR';\nexports[1499] = 'ER_TOO_MANY_PARTITIONS_ERROR';\nexports[1500] = 'ER_SUBPARTITION_ERROR';\nexports[1501] = 'ER_CANT_CREATE_HANDLER_FILE';\nexports[1502] = 'ER_BLOB_FIELD_IN_PART_FUNC_ERROR';\nexports[1503] = 'ER_UNIQUE_KEY_NEED_ALL_FIELDS_IN_PF';\nexports[1504] = 'ER_NO_PARTS_ERROR';\nexports[1505] = 'ER_PARTITION_MGMT_ON_NONPARTITIONED';\nexports[1506] = 'ER_FOREIGN_KEY_ON_PARTITIONED';\nexports[1507] = 'ER_DROP_PARTITION_NON_EXISTENT';\nexports[1508] = 'ER_DROP_LAST_PARTITION';\nexports[1509] = 'ER_COALESCE_ONLY_ON_HASH_PARTITION';\nexports[1510] = 'ER_REORG_HASH_ONLY_ON_SAME_NO';\nexports[1511] = 'ER_REORG_NO_PARAM_ERROR';\nexports[1512] = 'ER_ONLY_ON_RANGE_LIST_PARTITION';\nexports[1513] = 'ER_ADD_PARTITION_SUBPART_ERROR';\nexports[1514] = 'ER_ADD_PARTITION_NO_NEW_PARTITION';\nexports[1515] = 'ER_COALESCE_PARTITION_NO_PARTITION';\nexports[1516] = 'ER_REORG_PARTITION_NOT_EXIST';\nexports[1517] = 'ER_SAME_NAME_PARTITION';\nexports[1518] = 'ER_NO_BINLOG_ERROR';\nexports[1519] = 'ER_CONSECUTIVE_REORG_PARTITIONS';\nexports[1520] = 'ER_REORG_OUTSIDE_RANGE';\nexports[1521] = 'ER_PARTITION_FUNCTION_FAILURE';\nexports[1522] = 'ER_PART_STATE_ERROR';\nexports[1523] = 'ER_LIMITED_PART_RANGE';\nexports[1524] = 'ER_PLUGIN_IS_NOT_LOADED';\nexports[1525] = 'ER_WRONG_VALUE';\nexports[1526] = 'ER_NO_PARTITION_FOR_GIVEN_VALUE';\nexports[1527] = 'ER_FILEGROUP_OPTION_ONLY_ONCE';\nexports[1528] = 'ER_CREATE_FILEGROUP_FAILED';\nexports[1529] = 'ER_DROP_FILEGROUP_FAILED';\nexports[1530] = 'ER_TABLESPACE_AUTO_EXTEND_ERROR';\nexports[1531] = 'ER_WRONG_SIZE_NUMBER';\nexports[1532] = 'ER_SIZE_OVERFLOW_ERROR';\nexports[1533] = 'ER_ALTER_FILEGROUP_FAILED';\nexports[1534] = 'ER_BINLOG_ROW_LOGGING_FAILED';\nexports[1535] = 'ER_BINLOG_ROW_WRONG_TABLE_DEF';\nexports[1536] = 'ER_BINLOG_ROW_RBR_TO_SBR';\nexports[1537] = 'ER_EVENT_ALREADY_EXISTS';\nexports[1538] = 'ER_EVENT_STORE_FAILED';\nexports[1539] = 'ER_EVENT_DOES_NOT_EXIST';\nexports[1540] = 'ER_EVENT_CANT_ALTER';\nexports[1541] = 'ER_EVENT_DROP_FAILED';\nexports[1542] = 'ER_EVENT_INTERVAL_NOT_POSITIVE_OR_TOO_BIG';\nexports[1543] = 'ER_EVENT_ENDS_BEFORE_STARTS';\nexports[1544] = 'ER_EVENT_EXEC_TIME_IN_THE_PAST';\nexports[1545] = 'ER_EVENT_OPEN_TABLE_FAILED';\nexports[1546] = 'ER_EVENT_NEITHER_M_EXPR_NOR_M_AT';\nexports[1547] = 'ER_COL_COUNT_DOESNT_MATCH_CORRUPTED';\nexports[1548] = 'ER_CANNOT_LOAD_FROM_TABLE';\nexports[1549] = 'ER_EVENT_CANNOT_DELETE';\nexports[1550] = 'ER_EVENT_COMPILE_ERROR';\nexports[1551] = 'ER_EVENT_SAME_NAME';\nexports[1552] = 'ER_EVENT_DATA_TOO_LONG';\nexports[1553] = 'ER_DROP_INDEX_FK';\nexports[1554] = 'ER_WARN_DEPRECATED_SYNTAX_WITH_VER';\nexports[1555] = 'ER_CANT_WRITE_LOCK_LOG_TABLE';\nexports[1556] = 'ER_CANT_LOCK_LOG_TABLE';\nexports[1557] = 'ER_FOREIGN_DUPLICATE_KEY';\nexports[1558] = 'ER_COL_COUNT_DOESNT_MATCH_PLEASE_UPDATE';\nexports[1559] = 'ER_TEMP_TABLE_PREVENTS_SWITCH_OUT_OF_RBR';\nexports[1560] = 'ER_STORED_FUNCTION_PREVENTS_SWITCH_BINLOG_FORMAT';\nexports[1561] = 'ER_NDB_CANT_SWITCH_BINLOG_FORMAT';\nexports[1562] = 'ER_PARTITION_NO_TEMPORARY';\nexports[1563] = 'ER_PARTITION_CONST_DOMAIN_ERROR';\nexports[1564] = 'ER_PARTITION_FUNCTION_IS_NOT_ALLOWED';\nexports[1565] = 'ER_DDL_LOG_ERROR';\nexports[1566] = 'ER_NULL_IN_VALUES_LESS_THAN';\nexports[1567] = 'ER_WRONG_PARTITION_NAME';\nexports[1568] = 'ER_CANT_CHANGE_TX_CHARACTERISTICS';\nexports[1569] = 'ER_DUP_ENTRY_AUTOINCREMENT_CASE';\nexports[1570] = 'ER_EVENT_MODIFY_QUEUE_ERROR';\nexports[1571] = 'ER_EVENT_SET_VAR_ERROR';\nexports[1572] = 'ER_PARTITION_MERGE_ERROR';\nexports[1573] = 'ER_CANT_ACTIVATE_LOG';\nexports[1574] = 'ER_RBR_NOT_AVAILABLE';\nexports[1575] = 'ER_BASE64_DECODE_ERROR';\nexports[1576] = 'ER_EVENT_RECURSION_FORBIDDEN';\nexports[1577] = 'ER_EVENTS_DB_ERROR';\nexports[1578] = 'ER_ONLY_INTEGERS_ALLOWED';\nexports[1579] = 'ER_UNSUPORTED_LOG_ENGINE';\nexports[1580] = 'ER_BAD_LOG_STATEMENT';\nexports[1581] = 'ER_CANT_RENAME_LOG_TABLE';\nexports[1582] = 'ER_WRONG_PARAMCOUNT_TO_NATIVE_FCT';\nexports[1583] = 'ER_WRONG_PARAMETERS_TO_NATIVE_FCT';\nexports[1584] = 'ER_WRONG_PARAMETERS_TO_STORED_FCT';\nexports[1585] = 'ER_NATIVE_FCT_NAME_COLLISION';\nexports[1586] = 'ER_DUP_ENTRY_WITH_KEY_NAME';\nexports[1587] = 'ER_BINLOG_PURGE_EMFILE';\nexports[1588] = 'ER_EVENT_CANNOT_CREATE_IN_THE_PAST';\nexports[1589] = 'ER_EVENT_CANNOT_ALTER_IN_THE_PAST';\nexports[1590] = 'ER_SLAVE_INCIDENT';\nexports[1591] = 'ER_NO_PARTITION_FOR_GIVEN_VALUE_SILENT';\nexports[1592] = 'ER_BINLOG_UNSAFE_STATEMENT';\nexports[1593] = 'ER_SLAVE_FATAL_ERROR';\nexports[1594] = 'ER_SLAVE_RELAY_LOG_READ_FAILURE';\nexports[1595] = 'ER_SLAVE_RELAY_LOG_WRITE_FAILURE';\nexports[1596] = 'ER_SLAVE_CREATE_EVENT_FAILURE';\nexports[1597] = 'ER_SLAVE_MASTER_COM_FAILURE';\nexports[1598] = 'ER_BINLOG_LOGGING_IMPOSSIBLE';\nexports[1599] = 'ER_VIEW_NO_CREATION_CTX';\nexports[1600] = 'ER_VIEW_INVALID_CREATION_CTX';\nexports[1601] = 'ER_SR_INVALID_CREATION_CTX';\nexports[1602] = 'ER_TRG_CORRUPTED_FILE';\nexports[1603] = 'ER_TRG_NO_CREATION_CTX';\nexports[1604] = 'ER_TRG_INVALID_CREATION_CTX';\nexports[1605] = 'ER_EVENT_INVALID_CREATION_CTX';\nexports[1606] = 'ER_TRG_CANT_OPEN_TABLE';\nexports[1607] = 'ER_CANT_CREATE_SROUTINE';\nexports[1608] = 'ER_NEVER_USED';\nexports[1609] = 'ER_NO_FORMAT_DESCRIPTION_EVENT_BEFORE_BINLOG_STATEMENT';\nexports[1610] = 'ER_SLAVE_CORRUPT_EVENT';\nexports[1611] = 'ER_LOAD_DATA_INVALID_COLUMN';\nexports[1612] = 'ER_LOG_PURGE_NO_FILE';\nexports[1613] = 'ER_XA_RBTIMEOUT';\nexports[1614] = 'ER_XA_RBDEADLOCK';\nexports[1615] = 'ER_NEED_REPREPARE';\nexports[1616] = 'ER_DELAYED_NOT_SUPPORTED';\nexports[1617] = 'WARN_NO_MASTER_INFO';\nexports[1618] = 'WARN_OPTION_IGNORED';\nexports[1619] = 'ER_PLUGIN_DELETE_BUILTIN';\nexports[1620] = 'WARN_PLUGIN_BUSY';\nexports[1621] = 'ER_VARIABLE_IS_READONLY';\nexports[1622] = 'ER_WARN_ENGINE_TRANSACTION_ROLLBACK';\nexports[1623] = 'ER_SLAVE_HEARTBEAT_FAILURE';\nexports[1624] = 'ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE';\nexports[1625] = 'ER_NDB_REPLICATION_SCHEMA_ERROR';\nexports[1626] = 'ER_CONFLICT_FN_PARSE_ERROR';\nexports[1627] = 'ER_EXCEPTIONS_WRITE_ERROR';\nexports[1628] = 'ER_TOO_LONG_TABLE_COMMENT';\nexports[1629] = 'ER_TOO_LONG_FIELD_COMMENT';\nexports[1630] = 'ER_FUNC_INEXISTENT_NAME_COLLISION';\nexports[1631] = 'ER_DATABASE_NAME';\nexports[1632] = 'ER_TABLE_NAME';\nexports[1633] = 'ER_PARTITION_NAME';\nexports[1634] = 'ER_SUBPARTITION_NAME';\nexports[1635] = 'ER_TEMPORARY_NAME';\nexports[1636] = 'ER_RENAMED_NAME';\nexports[1637] = 'ER_TOO_MANY_CONCURRENT_TRXS';\nexports[1638] = 'WARN_NON_ASCII_SEPARATOR_NOT_IMPLEMENTED';\nexports[1639] = 'ER_DEBUG_SYNC_TIMEOUT';\nexports[1640] = 'ER_DEBUG_SYNC_HIT_LIMIT';\nexports[1641] = 'ER_DUP_SIGNAL_SET';\nexports[1642] = 'ER_SIGNAL_WARN';\nexports[1643] = 'ER_SIGNAL_NOT_FOUND';\nexports[1644] = 'ER_SIGNAL_EXCEPTION';\nexports[1645] = 'ER_RESIGNAL_WITHOUT_ACTIVE_HANDLER';\nexports[1646] = 'ER_SIGNAL_BAD_CONDITION_TYPE';\nexports[1647] = 'WARN_COND_ITEM_TRUNCATED';\nexports[1648] = 'ER_COND_ITEM_TOO_LONG';\nexports[1649] = 'ER_UNKNOWN_LOCALE';\nexports[1650] = 'ER_SLAVE_IGNORE_SERVER_IDS';\nexports[1651] = 'ER_QUERY_CACHE_DISABLED';\nexports[1652] = 'ER_SAME_NAME_PARTITION_FIELD';\nexports[1653] = 'ER_PARTITION_COLUMN_LIST_ERROR';\nexports[1654] = 'ER_WRONG_TYPE_COLUMN_VALUE_ERROR';\nexports[1655] = 'ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR';\nexports[1656] = 'ER_MAXVALUE_IN_VALUES_IN';\nexports[1657] = 'ER_TOO_MANY_VALUES_ERROR';\nexports[1658] = 'ER_ROW_SINGLE_PARTITION_FIELD_ERROR';\nexports[1659] = 'ER_FIELD_TYPE_NOT_ALLOWED_AS_PARTITION_FIELD';\nexports[1660] = 'ER_PARTITION_FIELDS_TOO_LONG';\nexports[1661] = 'ER_BINLOG_ROW_ENGINE_AND_STMT_ENGINE';\nexports[1662] = 'ER_BINLOG_ROW_MODE_AND_STMT_ENGINE';\nexports[1663] = 'ER_BINLOG_UNSAFE_AND_STMT_ENGINE';\nexports[1664] = 'ER_BINLOG_ROW_INJECTION_AND_STMT_ENGINE';\nexports[1665] = 'ER_BINLOG_STMT_MODE_AND_ROW_ENGINE';\nexports[1666] = 'ER_BINLOG_ROW_INJECTION_AND_STMT_MODE';\nexports[1667] = 'ER_BINLOG_MULTIPLE_ENGINES_AND_SELF_LOGGING_ENGINE';\nexports[1668] = 'ER_BINLOG_UNSAFE_LIMIT';\nexports[1669] = 'ER_BINLOG_UNSAFE_INSERT_DELAYED';\nexports[1670] = 'ER_BINLOG_UNSAFE_SYSTEM_TABLE';\nexports[1671] = 'ER_BINLOG_UNSAFE_AUTOINC_COLUMNS';\nexports[1672] = 'ER_BINLOG_UNSAFE_UDF';\nexports[1673] = 'ER_BINLOG_UNSAFE_SYSTEM_VARIABLE';\nexports[1674] = 'ER_BINLOG_UNSAFE_SYSTEM_FUNCTION';\nexports[1675] = 'ER_BINLOG_UNSAFE_NONTRANS_AFTER_TRANS';\nexports[1676] = 'ER_MESSAGE_AND_STATEMENT';\nexports[1677] = 'ER_SLAVE_CONVERSION_FAILED';\nexports[1678] = 'ER_SLAVE_CANT_CREATE_CONVERSION';\nexports[1679] = 'ER_INSIDE_TRANSACTION_PREVENTS_SWITCH_BINLOG_FORMAT';\nexports[1680] = 'ER_PATH_LENGTH';\nexports[1681] = 'ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT';\nexports[1682] = 'ER_WRONG_NATIVE_TABLE_STRUCTURE';\nexports[1683] = 'ER_WRONG_PERFSCHEMA_USAGE';\nexports[1684] = 'ER_WARN_I_S_SKIPPED_TABLE';\nexports[1685] = 'ER_INSIDE_TRANSACTION_PREVENTS_SWITCH_BINLOG_DIRECT';\nexports[1686] = 'ER_STORED_FUNCTION_PREVENTS_SWITCH_BINLOG_DIRECT';\nexports[1687] = 'ER_SPATIAL_MUST_HAVE_GEOM_COL';\nexports[1688] = 'ER_TOO_LONG_INDEX_COMMENT';\nexports[1689] = 'ER_LOCK_ABORTED';\nexports[1690] = 'ER_DATA_OUT_OF_RANGE';\nexports[1691] = 'ER_WRONG_SPVAR_TYPE_IN_LIMIT';\nexports[1692] = 'ER_BINLOG_UNSAFE_MULTIPLE_ENGINES_AND_SELF_LOGGING_ENGINE';\nexports[1693] = 'ER_BINLOG_UNSAFE_MIXED_STATEMENT';\nexports[1694] = 'ER_INSIDE_TRANSACTION_PREVENTS_SWITCH_SQL_LOG_BIN';\nexports[1695] = 'ER_STORED_FUNCTION_PREVENTS_SWITCH_SQL_LOG_BIN';\nexports[1696] = 'ER_FAILED_READ_FROM_PAR_FILE';\nexports[1697] = 'ER_VALUES_IS_NOT_INT_TYPE_ERROR';\nexports[1698] = 'ER_ACCESS_DENIED_NO_PASSWORD_ERROR';\nexports[1699] = 'ER_SET_PASSWORD_AUTH_PLUGIN';\nexports[1700] = 'ER_GRANT_PLUGIN_USER_EXISTS';\nexports[1701] = 'ER_TRUNCATE_ILLEGAL_FK';\nexports[1702] = 'ER_PLUGIN_IS_PERMANENT';\nexports[1703] = 'ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN';\nexports[1704] = 'ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX';\nexports[1705] = 'ER_STMT_CACHE_FULL';\nexports[1706] = 'ER_MULTI_UPDATE_KEY_CONFLICT';\nexports[1707] = 'ER_TABLE_NEEDS_REBUILD';\nexports[1708] = 'WARN_OPTION_BELOW_LIMIT';\nexports[1709] = 'ER_INDEX_COLUMN_TOO_LONG';\nexports[1710] = 'ER_ERROR_IN_TRIGGER_BODY';\nexports[1711] = 'ER_ERROR_IN_UNKNOWN_TRIGGER_BODY';\nexports[1712] = 'ER_INDEX_CORRUPT';\nexports[1713] = 'ER_UNDO_RECORD_TOO_BIG';\nexports[1714] = 'ER_BINLOG_UNSAFE_INSERT_IGNORE_SELECT';\nexports[1715] = 'ER_BINLOG_UNSAFE_INSERT_SELECT_UPDATE';\nexports[1716] = 'ER_BINLOG_UNSAFE_REPLACE_SELECT';\nexports[1717] = 'ER_BINLOG_UNSAFE_CREATE_IGNORE_SELECT';\nexports[1718] = 'ER_BINLOG_UNSAFE_CREATE_REPLACE_SELECT';\nexports[1719] = 'ER_BINLOG_UNSAFE_UPDATE_IGNORE';\nexports[1720] = 'ER_PLUGIN_NO_UNINSTALL';\nexports[1721] = 'ER_PLUGIN_NO_INSTALL';\nexports[1722] = 'ER_BINLOG_UNSAFE_WRITE_AUTOINC_SELECT';\nexports[1723] = 'ER_BINLOG_UNSAFE_CREATE_SELECT_AUTOINC';\nexports[1724] = 'ER_BINLOG_UNSAFE_INSERT_TWO_KEYS';\nexports[1725] = 'ER_TABLE_IN_FK_CHECK';\nexports[1726] = 'ER_UNSUPPORTED_ENGINE';\nexports[1727] = 'ER_BINLOG_UNSAFE_AUTOINC_NOT_FIRST';\nexports[1728] = 'ER_CANNOT_LOAD_FROM_TABLE_V2';\nexports[1729] = 'ER_MASTER_DELAY_VALUE_OUT_OF_RANGE';\nexports[1730] = 'ER_ONLY_FD_AND_RBR_EVENTS_ALLOWED_IN_BINLOG_STATEMENT';\nexports[1731] = 'ER_PARTITION_EXCHANGE_DIFFERENT_OPTION';\nexports[1732] = 'ER_PARTITION_EXCHANGE_PART_TABLE';\nexports[1733] = 'ER_PARTITION_EXCHANGE_TEMP_TABLE';\nexports[1734] = 'ER_PARTITION_INSTEAD_OF_SUBPARTITION';\nexports[1735] = 'ER_UNKNOWN_PARTITION';\nexports[1736] = 'ER_TABLES_DIFFERENT_METADATA';\nexports[1737] = 'ER_ROW_DOES_NOT_MATCH_PARTITION';\nexports[1738] = 'ER_BINLOG_CACHE_SIZE_GREATER_THAN_MAX';\nexports[1739] = 'ER_WARN_INDEX_NOT_APPLICABLE';\nexports[1740] = 'ER_PARTITION_EXCHANGE_FOREIGN_KEY';\nexports[1741] = 'ER_NO_SUCH_KEY_VALUE';\nexports[1742] = 'ER_RPL_INFO_DATA_TOO_LONG';\nexports[1743] = 'ER_NETWORK_READ_EVENT_CHECKSUM_FAILURE';\nexports[1744] = 'ER_BINLOG_READ_EVENT_CHECKSUM_FAILURE';\nexports[1745] = 'ER_BINLOG_STMT_CACHE_SIZE_GREATER_THAN_MAX';\nexports[1746] = 'ER_CANT_UPDATE_TABLE_IN_CREATE_TABLE_SELECT';\nexports[1747] = 'ER_PARTITION_CLAUSE_ON_NONPARTITIONED';\nexports[1748] = 'ER_ROW_DOES_NOT_MATCH_GIVEN_PARTITION_SET';\nexports[1749] = 'ER_NO_SUCH_PARTITION';\nexports[1750] = 'ER_CHANGE_RPL_INFO_REPOSITORY_FAILURE';\nexports[1751] = 'ER_WARNING_NOT_COMPLETE_ROLLBACK_WITH_CREATED_TEMP_TABLE';\nexports[1752] = 'ER_WARNING_NOT_COMPLETE_ROLLBACK_WITH_DROPPED_TEMP_TABLE';\nexports[1753] = 'ER_MTS_FEATURE_IS_NOT_SUPPORTED';\nexports[1754] = 'ER_MTS_UPDATED_DBS_GREATER_MAX';\nexports[1755] = 'ER_MTS_CANT_PARALLEL';\nexports[1756] = 'ER_MTS_INCONSISTENT_DATA';\nexports[1757] = 'ER_FULLTEXT_NOT_SUPPORTED_WITH_PARTITIONING';\nexports[1758] = 'ER_DA_INVALID_CONDITION_NUMBER';\nexports[1759] = 'ER_INSECURE_PLAIN_TEXT';\nexports[1760] = 'ER_INSECURE_CHANGE_MASTER';\nexports[1761] = 'ER_FOREIGN_DUPLICATE_KEY_WITH_CHILD_INFO';\nexports[1762] = 'ER_FOREIGN_DUPLICATE_KEY_WITHOUT_CHILD_INFO';\nexports[1763] = 'ER_SQLTHREAD_WITH_SECURE_SLAVE';\nexports[1764] = 'ER_TABLE_HAS_NO_FT';\nexports[1765] = 'ER_VARIABLE_NOT_SETTABLE_IN_SF_OR_TRIGGER';\nexports[1766] = 'ER_VARIABLE_NOT_SETTABLE_IN_TRANSACTION';\nexports[1767] = 'ER_GTID_NEXT_IS_NOT_IN_GTID_NEXT_LIST';\nexports[1768] = 'ER_CANT_CHANGE_GTID_NEXT_IN_TRANSACTION';\nexports[1769] = 'ER_SET_STATEMENT_CANNOT_INVOKE_FUNCTION';\nexports[1770] = 'ER_GTID_NEXT_CANT_BE_AUTOMATIC_IF_GTID_NEXT_LIST_IS_NON_NULL';\nexports[1771] = 'ER_SKIPPING_LOGGED_TRANSACTION';\nexports[1772] = 'ER_MALFORMED_GTID_SET_SPECIFICATION';\nexports[1773] = 'ER_MALFORMED_GTID_SET_ENCODING';\nexports[1774] = 'ER_MALFORMED_GTID_SPECIFICATION';\nexports[1775] = 'ER_GNO_EXHAUSTED';\nexports[1776] = 'ER_BAD_SLAVE_AUTO_POSITION';\nexports[1777] = 'ER_AUTO_POSITION_REQUIRES_GTID_MODE_NOT_OFF';\nexports[1778] = 'ER_CANT_DO_IMPLICIT_COMMIT_IN_TRX_WHEN_GTID_NEXT_IS_SET';\nexports[1779] = 'ER_GTID_MODE_ON_REQUIRES_ENFORCE_GTID_CONSISTENCY_ON';\nexports[1780] = 'ER_GTID_MODE_REQUIRES_BINLOG';\nexports[1781] = 'ER_CANT_SET_GTID_NEXT_TO_GTID_WHEN_GTID_MODE_IS_OFF';\nexports[1782] = 'ER_CANT_SET_GTID_NEXT_TO_ANONYMOUS_WHEN_GTID_MODE_IS_ON';\nexports[1783] = 'ER_CANT_SET_GTID_NEXT_LIST_TO_NON_NULL_WHEN_GTID_MODE_IS_OFF';\nexports[1784] = 'ER_FOUND_GTID_EVENT_WHEN_GTID_MODE_IS_OFF';\nexports[1785] = 'ER_GTID_UNSAFE_NON_TRANSACTIONAL_TABLE';\nexports[1786] = 'ER_GTID_UNSAFE_CREATE_SELECT';\nexports[1787] = 'ER_GTID_UNSAFE_CREATE_DROP_TEMPORARY_TABLE_IN_TRANSACTION';\nexports[1788] = 'ER_GTID_MODE_CAN_ONLY_CHANGE_ONE_STEP_AT_A_TIME';\nexports[1789] = 'ER_MASTER_HAS_PURGED_REQUIRED_GTIDS';\nexports[1790] = 'ER_CANT_SET_GTID_NEXT_WHEN_OWNING_GTID';\nexports[1791] = 'ER_UNKNOWN_EXPLAIN_FORMAT';\nexports[1792] = 'ER_CANT_EXECUTE_IN_READ_ONLY_TRANSACTION';\nexports[1793] = 'ER_TOO_LONG_TABLE_PARTITION_COMMENT';\nexports[1794] = 'ER_SLAVE_CONFIGURATION';\nexports[1795] = 'ER_INNODB_FT_LIMIT';\nexports[1796] = 'ER_INNODB_NO_FT_TEMP_TABLE';\nexports[1797] = 'ER_INNODB_FT_WRONG_DOCID_COLUMN';\nexports[1798] = 'ER_INNODB_FT_WRONG_DOCID_INDEX';\nexports[1799] = 'ER_INNODB_ONLINE_LOG_TOO_BIG';\nexports[1800] = 'ER_UNKNOWN_ALTER_ALGORITHM';\nexports[1801] = 'ER_UNKNOWN_ALTER_LOCK';\nexports[1802] = 'ER_MTS_CHANGE_MASTER_CANT_RUN_WITH_GAPS';\nexports[1803] = 'ER_MTS_RECOVERY_FAILURE';\nexports[1804] = 'ER_MTS_RESET_WORKERS';\nexports[1805] = 'ER_COL_COUNT_DOESNT_MATCH_CORRUPTED_V2';\nexports[1806] = 'ER_SLAVE_SILENT_RETRY_TRANSACTION';\nexports[1807] = 'ER_DISCARD_FK_CHECKS_RUNNING';\nexports[1808] = 'ER_TABLE_SCHEMA_MISMATCH';\nexports[1809] = 'ER_TABLE_IN_SYSTEM_TABLESPACE';\nexports[1810] = 'ER_IO_READ_ERROR';\nexports[1811] = 'ER_IO_WRITE_ERROR';\nexports[1812] = 'ER_TABLESPACE_MISSING';\nexports[1813] = 'ER_TABLESPACE_EXISTS';\nexports[1814] = 'ER_TABLESPACE_DISCARDED';\nexports[1815] = 'ER_INTERNAL_ERROR';\nexports[1816] = 'ER_INNODB_IMPORT_ERROR';\nexports[1817] = 'ER_INNODB_INDEX_CORRUPT';\nexports[1818] = 'ER_INVALID_YEAR_COLUMN_LENGTH';\nexports[1819] = 'ER_NOT_VALID_PASSWORD';\nexports[1820] = 'ER_MUST_CHANGE_PASSWORD';\nexports[1821] = 'ER_FK_NO_INDEX_CHILD';\nexports[1822] = 'ER_FK_NO_INDEX_PARENT';\nexports[1823] = 'ER_FK_FAIL_ADD_SYSTEM';\nexports[1824] = 'ER_FK_CANNOT_OPEN_PARENT';\nexports[1825] = 'ER_FK_INCORRECT_OPTION';\nexports[1826] = 'ER_FK_DUP_NAME';\nexports[1827] = 'ER_PASSWORD_FORMAT';\nexports[1828] = 'ER_FK_COLUMN_CANNOT_DROP';\nexports[1829] = 'ER_FK_COLUMN_CANNOT_DROP_CHILD';\nexports[1830] = 'ER_FK_COLUMN_NOT_NULL';\nexports[1831] = 'ER_DUP_INDEX';\nexports[1832] = 'ER_FK_COLUMN_CANNOT_CHANGE';\nexports[1833] = 'ER_FK_COLUMN_CANNOT_CHANGE_CHILD';\nexports[1834] = 'ER_FK_CANNOT_DELETE_PARENT';\nexports[1835] = 'ER_MALFORMED_PACKET';\nexports[1836] = 'ER_READ_ONLY_MODE';\nexports[1837] = 'ER_GTID_NEXT_TYPE_UNDEFINED_GROUP';\nexports[1838] = 'ER_VARIABLE_NOT_SETTABLE_IN_SP';\nexports[1839] = 'ER_CANT_SET_GTID_PURGED_WHEN_GTID_MODE_IS_OFF';\nexports[1840] = 'ER_CANT_SET_GTID_PURGED_WHEN_GTID_EXECUTED_IS_NOT_EMPTY';\nexports[1841] = 'ER_CANT_SET_GTID_PURGED_WHEN_OWNED_GTIDS_IS_NOT_EMPTY';\nexports[1842] = 'ER_GTID_PURGED_WAS_CHANGED';\nexports[1843] = 'ER_GTID_EXECUTED_WAS_CHANGED';\nexports[1844] = 'ER_BINLOG_STMT_MODE_AND_NO_REPL_TABLES';\nexports[1845] = 'ER_ALTER_OPERATION_NOT_SUPPORTED';\nexports[1846] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON';\nexports[1847] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_COPY';\nexports[1848] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_PARTITION';\nexports[1849] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_FK_RENAME';\nexports[1850] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_COLUMN_TYPE';\nexports[1851] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_FK_CHECK';\nexports[1852] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_IGNORE';\nexports[1853] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_NOPK';\nexports[1854] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_AUTOINC';\nexports[1855] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_HIDDEN_FTS';\nexports[1856] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_CHANGE_FTS';\nexports[1857] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_FTS';\nexports[1858] = 'ER_SQL_SLAVE_SKIP_COUNTER_NOT_SETTABLE_IN_GTID_MODE';\nexports[1859] = 'ER_DUP_UNKNOWN_IN_INDEX';\nexports[1860] = 'ER_IDENT_CAUSES_TOO_LONG_PATH';\nexports[1861] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_NOT_NULL';\nexports[1862] = 'ER_MUST_CHANGE_PASSWORD_LOGIN';\nexports[1863] = 'ER_ROW_IN_WRONG_PARTITION';\nexports[1864] = 'ER_MTS_EVENT_BIGGER_PENDING_JOBS_SIZE_MAX';\nexports[1865] = 'ER_INNODB_NO_FT_USES_PARSER';\nexports[1866] = 'ER_BINLOG_LOGICAL_CORRUPTION';\nexports[1867] = 'ER_WARN_PURGE_LOG_IN_USE';\nexports[1868] = 'ER_WARN_PURGE_LOG_IS_ACTIVE';\nexports[1869] = 'ER_AUTO_INCREMENT_CONFLICT';\nexports[1870] = 'WARN_ON_BLOCKHOLE_IN_RBR';\nexports[1871] = 'ER_SLAVE_MI_INIT_REPOSITORY';\nexports[1872] = 'ER_SLAVE_RLI_INIT_REPOSITORY';\nexports[1873] = 'ER_ACCESS_DENIED_CHANGE_USER_ERROR';\nexports[1874] = 'ER_INNODB_READ_ONLY';\nexports[1875] = 'ER_STOP_SLAVE_SQL_THREAD_TIMEOUT';\nexports[1876] = 'ER_STOP_SLAVE_IO_THREAD_TIMEOUT';\nexports[1877] = 'ER_TABLE_CORRUPT';\nexports[1878] = 'ER_TEMP_FILE_WRITE_FAILURE';\nexports[1879] = 'ER_INNODB_FT_AUX_NOT_HEX_ID';\nexports[1880] = 'ER_OLD_TEMPORALS_UPGRADED';\nexports[1881] = 'ER_INNODB_FORCED_RECOVERY';\nexports[1882] = 'ER_AES_INVALID_IV';\nexports[1883] = 'ER_PLUGIN_CANNOT_BE_UNINSTALLED';\nexports[1884] = 'ER_GTID_UNSAFE_BINLOG_SPLITTABLE_STATEMENT_AND_GTID_GROUP';\nexports[1885] = 'ER_SLAVE_HAS_MORE_GTIDS_THAN_MASTER';\nexports[1886] = 'ER_FILE_CORRUPT';\nexports[1887] = 'ER_ERROR_ON_MASTER';\nexports[1888] = 'ER_INCONSISTENT_ERROR';\nexports[1889] = 'ER_STORAGE_ENGINE_NOT_LOADED';\nexports[1890] = 'ER_GET_STACKED_DA_WITHOUT_ACTIVE_HANDLER';\nexports[1891] = 'ER_WARN_LEGACY_SYNTAX_CONVERTED';\nexports[1892] = 'ER_BINLOG_UNSAFE_FULLTEXT_PLUGIN';\nexports[1893] = 'ER_CANNOT_DISCARD_TEMPORARY_TABLE';\nexports[1894] = 'ER_FK_DEPTH_EXCEEDED';\nexports[1895] = 'ER_COL_COUNT_DOESNT_MATCH_PLEASE_UPDATE_V2';\nexports[1896] = 'ER_WARN_TRIGGER_DOESNT_HAVE_CREATED';\nexports[1897] = 'ER_REFERENCED_TRG_DOES_NOT_EXIST';\nexports[1898] = 'ER_EXPLAIN_NOT_SUPPORTED';\nexports[1899] = 'ER_INVALID_FIELD_SIZE';\nexports[1900] = 'ER_MISSING_HA_CREATE_OPTION';\nexports[1901] = 'ER_ENGINE_OUT_OF_MEMORY';\nexports[1902] = 'ER_PASSWORD_EXPIRE_ANONYMOUS_USER';\nexports[1903] = 'ER_SLAVE_SQL_THREAD_MUST_STOP';\nexports[1904] = 'ER_NO_FT_MATERIALIZED_SUBQUERY';\nexports[1905] = 'ER_INNODB_UNDO_LOG_FULL';\nexports[1906] = 'ER_INVALID_ARGUMENT_FOR_LOGARITHM';\nexports[1907] = 'ER_SLAVE_CHANNEL_IO_THREAD_MUST_STOP';\nexports[1908] = 'ER_WARN_OPEN_TEMP_TABLES_MUST_BE_ZERO';\nexports[1909] = 'ER_WARN_ONLY_MASTER_LOG_FILE_NO_POS';\nexports[1910] = 'ER_QUERY_TIMEOUT';\nexports[1911] = 'ER_NON_RO_SELECT_DISABLE_TIMER';\nexports[1912] = 'ER_DUP_LIST_ENTRY';\nexports[1913] = 'ER_SQL_MODE_NO_EFFECT';\nexports[1914] = 'ER_AGGREGATE_ORDER_FOR_UNION';\nexports[1915] = 'ER_AGGREGATE_ORDER_NON_AGG_QUERY';\nexports[1916] = 'ER_SLAVE_WORKER_STOPPED_PREVIOUS_THD_ERROR';\nexports[1917] = 'ER_DONT_SUPPORT_SLAVE_PRESERVE_COMMIT_ORDER';\nexports[1918] = 'ER_SERVER_OFFLINE_MODE';\nexports[1919] = 'ER_GIS_DIFFERENT_SRIDS';\nexports[1920] = 'ER_GIS_UNSUPPORTED_ARGUMENT';\nexports[1921] = 'ER_GIS_UNKNOWN_ERROR';\nexports[1922] = 'ER_GIS_UNKNOWN_EXCEPTION';\nexports[1923] = 'ER_GIS_INVALID_DATA';\nexports[1924] = 'ER_BOOST_GEOMETRY_EMPTY_INPUT_EXCEPTION';\nexports[1925] = 'ER_BOOST_GEOMETRY_CENTROID_EXCEPTION';\nexports[1926] = 'ER_BOOST_GEOMETRY_OVERLAY_INVALID_INPUT_EXCEPTION';\nexports[1927] = 'ER_BOOST_GEOMETRY_TURN_INFO_EXCEPTION';\nexports[1928] = 'ER_BOOST_GEOMETRY_SELF_INTERSECTION_POINT_EXCEPTION';\nexports[1929] = 'ER_BOOST_GEOMETRY_UNKNOWN_EXCEPTION';\nexports[1930] = 'ER_STD_BAD_ALLOC_ERROR';\nexports[1931] = 'ER_STD_DOMAIN_ERROR';\nexports[1932] = 'ER_STD_LENGTH_ERROR';\nexports[1933] = 'ER_STD_INVALID_ARGUMENT';\nexports[1934] = 'ER_STD_OUT_OF_RANGE_ERROR';\nexports[1935] = 'ER_STD_OVERFLOW_ERROR';\nexports[1936] = 'ER_STD_RANGE_ERROR';\nexports[1937] = 'ER_STD_UNDERFLOW_ERROR';\nexports[1938] = 'ER_STD_LOGIC_ERROR';\nexports[1939] = 'ER_STD_RUNTIME_ERROR';\nexports[1940] = 'ER_STD_UNKNOWN_EXCEPTION';\nexports[1941] = 'ER_GIS_DATA_WRONG_ENDIANESS';\nexports[1942] = 'ER_CHANGE_MASTER_PASSWORD_LENGTH';\nexports[1943] = 'ER_USER_LOCK_WRONG_NAME';\nexports[1944] = 'ER_USER_LOCK_DEADLOCK';\nexports[1945] = 'ER_REPLACE_INACCESSIBLE_ROWS';\nexports[1946] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_GIS';\nexports[1947] = 'ER_ILLEGAL_USER_VAR';\nexports[1948] = 'ER_GTID_MODE_OFF';\nexports[1949] = 'ER_UNSUPPORTED_BY_REPLICATION_THREAD';\nexports[1950] = 'ER_INCORRECT_TYPE';\nexports[1951] = 'ER_FIELD_IN_ORDER_NOT_SELECT';\nexports[1952] = 'ER_AGGREGATE_IN_ORDER_NOT_SELECT';\nexports[1953] = 'ER_INVALID_RPL_WILD_TABLE_FILTER_PATTERN';\nexports[1954] = 'ER_NET_OK_PACKET_TOO_LARGE';\nexports[1955] = 'ER_INVALID_JSON_DATA';\nexports[1956] = 'ER_INVALID_GEOJSON_MISSING_MEMBER';\nexports[1957] = 'ER_INVALID_GEOJSON_WRONG_TYPE';\nexports[1958] = 'ER_INVALID_GEOJSON_UNSPECIFIED';\nexports[1959] = 'ER_DIMENSION_UNSUPPORTED';\nexports[1960] = 'ER_SLAVE_CHANNEL_DOES_NOT_EXIST';\nexports[1961] = 'ER_SLAVE_MULTIPLE_CHANNELS_HOST_PORT';\nexports[1962] = 'ER_SLAVE_CHANNEL_NAME_INVALID_OR_TOO_LONG';\nexports[1963] = 'ER_SLAVE_NEW_CHANNEL_WRONG_REPOSITORY';\nexports[1964] = 'ER_SLAVE_CHANNEL_DELETE';\nexports[1965] = 'ER_SLAVE_MULTIPLE_CHANNELS_CMD';\nexports[1966] = 'ER_SLAVE_MAX_CHANNELS_EXCEEDED';\nexports[1967] = 'ER_SLAVE_CHANNEL_MUST_STOP';\nexports[1968] = 'ER_SLAVE_CHANNEL_NOT_RUNNING';\nexports[1969] = 'ER_SLAVE_CHANNEL_WAS_RUNNING';\nexports[1970] = 'ER_SLAVE_CHANNEL_WAS_NOT_RUNNING';\nexports[1971] = 'ER_SLAVE_CHANNEL_SQL_THREAD_MUST_STOP';\nexports[1972] = 'ER_SLAVE_CHANNEL_SQL_SKIP_COUNTER';\nexports[1973] = 'ER_WRONG_FIELD_WITH_GROUP_V2';\nexports[1974] = 'ER_MIX_OF_GROUP_FUNC_AND_FIELDS_V2';\nexports[1975] = 'ER_WARN_DEPRECATED_SYSVAR_UPDATE';\nexports[1976] = 'ER_WARN_DEPRECATED_SQLMODE';\nexports[1977] = 'ER_CANNOT_LOG_PARTIAL_DROP_DATABASE_WITH_GTID';\nexports[1978] = 'ER_GROUP_REPLICATION_CONFIGURATION';\nexports[1979] = 'ER_GROUP_REPLICATION_RUNNING';\nexports[1980] = 'ER_GROUP_REPLICATION_APPLIER_INIT_ERROR';\nexports[1981] = 'ER_GROUP_REPLICATION_STOP_APPLIER_THREAD_TIMEOUT';\nexports[1982] = 'ER_GROUP_REPLICATION_COMMUNICATION_LAYER_SESSION_ERROR';\nexports[1983] = 'ER_GROUP_REPLICATION_COMMUNICATION_LAYER_JOIN_ERROR';\nexports[1984] = 'ER_BEFORE_DML_VALIDATION_ERROR';\nexports[1985] = 'ER_PREVENTS_VARIABLE_WITHOUT_RBR';\nexports[1986] = 'ER_RUN_HOOK_ERROR';\nexports[1987] = 'ER_TRANSACTION_ROLLBACK_DURING_COMMIT';\nexports[1988] = 'ER_GENERATED_COLUMN_FUNCTION_IS_NOT_ALLOWED';\nexports[1989] = 'ER_UNSUPPORTED_ALTER_INPLACE_ON_VIRTUAL_COLUMN';\nexports[1990] = 'ER_WRONG_FK_OPTION_FOR_GENERATED_COLUMN';\nexports[1991] = 'ER_NON_DEFAULT_VALUE_FOR_GENERATED_COLUMN';\nexports[1992] = 'ER_UNSUPPORTED_ACTION_ON_GENERATED_COLUMN';\nexports[1993] = 'ER_GENERATED_COLUMN_NON_PRIOR';\nexports[1994] = 'ER_DEPENDENT_BY_GENERATED_COLUMN';\nexports[1995] = 'ER_GENERATED_COLUMN_REF_AUTO_INC';\nexports[1996] = 'ER_FEATURE_NOT_AVAILABLE';\nexports[1997] = 'ER_CANT_SET_GTID_MODE';\nexports[1998] = 'ER_CANT_USE_AUTO_POSITION_WITH_GTID_MODE_OFF';\nexports[1999] = 'ER_CANT_REPLICATE_ANONYMOUS_WITH_AUTO_POSITION';\nexports[2000] = 'ER_CANT_REPLICATE_ANONYMOUS_WITH_GTID_MODE_ON';\nexports[2001] = 'ER_CANT_REPLICATE_GTID_WITH_GTID_MODE_OFF';\nexports[2002] = 'ER_CANT_SET_ENFORCE_GTID_CONSISTENCY_ON_WITH_ONGOING_GTID_VIOLATING_TRANSACTIONS';\nexports[2003] = 'ER_SET_ENFORCE_GTID_CONSISTENCY_WARN_WITH_ONGOING_GTID_VIOLATING_TRANSACTIONS';\nexports[2004] = 'ER_ACCOUNT_HAS_BEEN_LOCKED';\nexports[2005] = 'ER_WRONG_TABLESPACE_NAME';\nexports[2006] = 'ER_TABLESPACE_IS_NOT_EMPTY';\nexports[2007] = 'ER_WRONG_FILE_NAME';\nexports[2008] = 'ER_BOOST_GEOMETRY_INCONSISTENT_TURNS_EXCEPTION';\nexports[2009] = 'ER_WARN_OPTIMIZER_HINT_SYNTAX_ERROR';\nexports[2010] = 'ER_WARN_BAD_MAX_EXECUTION_TIME';\nexports[2011] = 'ER_WARN_UNSUPPORTED_MAX_EXECUTION_TIME';\nexports[2012] = 'ER_WARN_CONFLICTING_HINT';\nexports[2013] = 'ER_WARN_UNKNOWN_QB_NAME';\nexports[2014] = 'ER_UNRESOLVED_HINT_NAME';\nexports[2015] = 'ER_WARN_ON_MODIFYING_GTID_EXECUTED_TABLE';\nexports[2016] = 'ER_PLUGGABLE_PROTOCOL_COMMAND_NOT_SUPPORTED';\nexports[2017] = 'ER_LOCKING_SERVICE_WRONG_NAME';\nexports[2018] = 'ER_LOCKING_SERVICE_DEADLOCK';\nexports[2019] = 'ER_LOCKING_SERVICE_TIMEOUT';\nexports[2020] = 'ER_GIS_MAX_POINTS_IN_GEOMETRY_OVERFLOWED';\nexports[2021] = 'ER_SQL_MODE_MERGED';\nexports[2022] = 'ER_VTOKEN_PLUGIN_TOKEN_MISMATCH';\nexports[2023] = 'ER_VTOKEN_PLUGIN_TOKEN_NOT_FOUND';\nexports[2024] = 'ER_CANT_SET_VARIABLE_WHEN_OWNING_GTID';\nexports[2025] = 'ER_SLAVE_CHANNEL_OPERATION_NOT_ALLOWED';\nexports[2026] = 'ER_INVALID_JSON_TEXT';\nexports[2027] = 'ER_INVALID_JSON_TEXT_IN_PARAM';\nexports[2028] = 'ER_INVALID_JSON_BINARY_DATA';\nexports[2029] = 'ER_INVALID_JSON_PATH';\nexports[2030] = 'ER_INVALID_JSON_CHARSET';\nexports[2031] = 'ER_INVALID_JSON_CHARSET_IN_FUNCTION';\nexports[2032] = 'ER_INVALID_TYPE_FOR_JSON';\nexports[2033] = 'ER_INVALID_CAST_TO_JSON';\nexports[2034] = 'ER_INVALID_JSON_PATH_CHARSET';\nexports[2035] = 'ER_INVALID_JSON_PATH_WILDCARD';\nexports[2036] = 'ER_JSON_VALUE_TOO_BIG';\nexports[2037] = 'ER_JSON_KEY_TOO_BIG';\nexports[2038] = 'ER_JSON_USED_AS_KEY';\nexports[2039] = 'ER_JSON_VACUOUS_PATH';\nexports[2040] = 'ER_JSON_BAD_ONE_OR_ALL_ARG';\nexports[2041] = 'ER_NUMERIC_JSON_VALUE_OUT_OF_RANGE';\nexports[2042] = 'ER_INVALID_JSON_VALUE_FOR_CAST';\nexports[2043] = 'ER_JSON_DOCUMENT_TOO_DEEP';\nexports[2044] = 'ER_JSON_DOCUMENT_NULL_KEY';\nexports[2045] = 'ER_SECURE_TRANSPORT_REQUIRED';\nexports[2046] = 'ER_NO_SECURE_TRANSPORTS_CONFIGURED';\nexports[2047] = 'ER_DISABLED_STORAGE_ENGINE';\nexports[2048] = 'ER_USER_DOES_NOT_EXIST';\nexports[2049] = 'ER_USER_ALREADY_EXISTS';\nexports[2050] = 'ER_AUDIT_API_ABORT';\nexports[2051] = 'ER_INVALID_JSON_PATH_ARRAY_CELL';\nexports[2052] = 'ER_BUFPOOL_RESIZE_INPROGRESS';\nexports[2053] = 'ER_FEATURE_DISABLED_SEE_DOC';\nexports[2054] = 'ER_SERVER_ISNT_AVAILABLE';\nexports[2055] = 'ER_SESSION_WAS_KILLED';\nexports[2056] = 'ER_CAPACITY_EXCEEDED';\nexports[2057] = 'ER_CAPACITY_EXCEEDED_IN_RANGE_OPTIMIZER';\nexports[2058] = 'ER_TABLE_NEEDS_UPG_PART';\nexports[2059] = 'ER_CANT_WAIT_FOR_EXECUTED_GTID_SET_WHILE_OWNING_A_GTID';\nexports[2060] = 'ER_CANNOT_ADD_FOREIGN_BASE_COL_VIRTUAL';\nexports[2061] = 'ER_CANNOT_CREATE_VIRTUAL_INDEX_CONSTRAINT';\nexports[2062] = 'ER_ERROR_ON_MODIFYING_GTID_EXECUTED_TABLE';\nexports[2063] = 'ER_LOCK_REFUSED_BY_ENGINE';\nexports[2064] = 'ER_UNSUPPORTED_ALTER_ONLINE_ON_VIRTUAL_COLUMN';\nexports[2065] = 'ER_MASTER_KEY_ROTATION_NOT_SUPPORTED_BY_SE';\nexports[2066] = 'ER_MASTER_KEY_ROTATION_ERROR_BY_SE';\nexports[2067] = 'ER_MASTER_KEY_ROTATION_BINLOG_FAILED';\nexports[2068] = 'ER_MASTER_KEY_ROTATION_SE_UNAVAILABLE';\nexports[2069] = 'ER_TABLESPACE_CANNOT_ENCRYPT';\nexports[2070] = 'ER_INVALID_ENCRYPTION_OPTION';\nexports[2071] = 'ER_CANNOT_FIND_KEY_IN_KEYRING';\nexports[2072] = 'ER_CAPACITY_EXCEEDED_IN_PARSER';\nexports[2073] = 'ER_UNSUPPORTED_ALTER_ENCRYPTION_INPLACE';\nexports[2074] = 'ER_KEYRING_UDF_KEYRING_SERVICE_ERROR';\nexports[2075] = 'ER_USER_COLUMN_OLD_LENGTH';\nexports[2076] = 'ER_CANT_RESET_MASTER';\nexports[2077] = 'ER_GROUP_REPLICATION_MAX_GROUP_SIZE';\nexports[2078] = 'ER_CANNOT_ADD_FOREIGN_BASE_COL_STORED';\nexports[2079] = 'ER_TABLE_REFERENCED';\nexports[2080] = 'ER_PARTITION_ENGINE_DEPRECATED_FOR_TABLE';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/protocol/constants/errors.js\n// module id = 141\n// module chunks = 0","// Manually extracted from mysql-5.5.23/include/mysql_com.h\n\n/**\n  Is raised when a multi-statement transaction\n  has been started, either explicitly, by means\n  of BEGIN or COMMIT AND CHAIN, or\n  implicitly, by the first transactional\n  statement, when autocommit=off.\n*/\nexports.SERVER_STATUS_IN_TRANS          = 1;\nexports.SERVER_STATUS_AUTOCOMMIT        = 2;  /* Server in auto_commit mode */\nexports.SERVER_MORE_RESULTS_EXISTS      = 8;    /* Multi query - next query exists */\nexports.SERVER_QUERY_NO_GOOD_INDEX_USED = 16;\nexports.SERVER_QUERY_NO_INDEX_USED      = 32;\n/**\n  The server was able to fulfill the clients request and opened a\n  read-only non-scrollable cursor for a query. This flag comes\n  in reply to COM_STMT_EXECUTE and COM_STMT_FETCH commands.\n*/\nexports.SERVER_STATUS_CURSOR_EXISTS = 64;\n/**\n  This flag is sent when a read-only cursor is exhausted, in reply to\n  COM_STMT_FETCH command.\n*/\nexports.SERVER_STATUS_LAST_ROW_SENT        = 128;\nexports.SERVER_STATUS_DB_DROPPED           = 256; /* A database was dropped */\nexports.SERVER_STATUS_NO_BACKSLASH_ESCAPES = 512;\n/**\n  Sent to the client if after a prepared statement reprepare\n  we discovered that the new statement returns a different\n  number of result set columns.\n*/\nexports.SERVER_STATUS_METADATA_CHANGED = 1024;\nexports.SERVER_QUERY_WAS_SLOW          = 2048;\n\n/**\n  To mark ResultSet containing output parameter values.\n*/\nexports.SERVER_PS_OUT_PARAMS = 4096;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/protocol/constants/server_status.js\n// module id = 142\n// module chunks = 0","// Certificates for Amazon RDS\nexports['Amazon RDS'] = {\n  ca: [\n    /**\n     * Amazon RDS global certificate 2010 to 2015\n     *\n     *   CN = aws.amazon.com/rds/\n     *   OU = RDS\n     *   O = Amazon.com\n     *   L = Seattle\n     *   ST = Washington\n     *   C = US\n     *   P = 2010-04-05T22:44:31Z/2015-04-04T22:41:31Z\n     *   F = 7F:09:8D:A5:7D:BB:A6:EF:7C:70:D8:CA:4E:49:11:55:7E:89:A7:D3\n     */\n    '-----BEGIN CERTIFICATE-----\\n'\n    + 'MIIDQzCCAqygAwIBAgIJAOd1tlfiGoEoMA0GCSqGSIb3DQEBBQUAMHUxCzAJBgNV\\n'\n    + 'BAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdTZWF0dGxlMRMw\\n'\n    + 'EQYDVQQKEwpBbWF6b24uY29tMQwwCgYDVQQLEwNSRFMxHDAaBgNVBAMTE2F3cy5h\\n'\n    + 'bWF6b24uY29tL3Jkcy8wHhcNMTAwNDA1MjI0NDMxWhcNMTUwNDA0MjI0NDMxWjB1\\n'\n    + 'MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHU2Vh\\n'\n    + 'dHRsZTETMBEGA1UEChMKQW1hem9uLmNvbTEMMAoGA1UECxMDUkRTMRwwGgYDVQQD\\n'\n    + 'ExNhd3MuYW1hem9uLmNvbS9yZHMvMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKB\\n'\n    + 'gQDKhXGU7tizxUR5WaFoMTFcxNxa05PEjZaIOEN5ctkWrqYSRov0/nOMoZjqk8bC\\n'\n    + 'med9vPFoQGD0OTakPs0jVe3wwmR735hyVwmKIPPsGlaBYj1O6llIpZeQVyupNx56\\n'\n    + 'UzqtiLaDzh1KcmfqP3qP2dInzBfJQKjiRudo1FWnpPt33QIDAQABo4HaMIHXMB0G\\n'\n    + 'A1UdDgQWBBT/H3x+cqSkR/ePSIinPtc4yWKe3DCBpwYDVR0jBIGfMIGcgBT/H3x+\\n'\n    + 'cqSkR/ePSIinPtc4yWKe3KF5pHcwdTELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldh\\n'\n    + 'c2hpbmd0b24xEDAOBgNVBAcTB1NlYXR0bGUxEzARBgNVBAoTCkFtYXpvbi5jb20x\\n'\n    + 'DDAKBgNVBAsTA1JEUzEcMBoGA1UEAxMTYXdzLmFtYXpvbi5jb20vcmRzL4IJAOd1\\n'\n    + 'tlfiGoEoMAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQEFBQADgYEAvguZy/BDT66x\\n'\n    + 'GfgnJlyQwnFSeVLQm9u/FIvz4huGjbq9dqnD6h/Gm56QPFdyMEyDiZWaqY6V08lY\\n'\n    + 'LTBNb4kcIc9/6pc0/ojKciP5QJRm6OiZ4vgG05nF4fYjhU7WClUx7cxq1fKjNc2J\\n'\n    + 'UCmmYqgiVkAGWRETVo+byOSDZ4swb10=\\n'\n    + '-----END CERTIFICATE-----\\n',\n\n    /**\n     * Amazon RDS global root CA 2015 to 2020\n     *\n     *   CN = Amazon RDS Root CA\n     *   OU = Amazon RDS\n     *   O = Amazon Web Services, Inc.\n     *   L = Seattle\n     *   ST = Washington\n     *   C = US\n     *   P = 2015-02-05T09:11:31Z/2020-03-05T09:11:31Z\n     *   F = E8:11:88:56:E7:A7:CE:3E:5E:DC:9A:31:25:1B:93:AC:DC:43:CE:B0\n     */\n    '-----BEGIN CERTIFICATE-----\\n'\n    + 'MIID9DCCAtygAwIBAgIBQjANBgkqhkiG9w0BAQUFADCBijELMAkGA1UEBhMCVVMx\\n'\n    + 'EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n'\n    + 'GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n'\n    + 'GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNTAyMDUwOTExMzFaFw0y\\n'\n    + 'MDAzMDUwOTExMzFaMIGKMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n'\n    + 'bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n'\n    + 'cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEbMBkGA1UEAwwSQW1hem9uIFJE\\n'\n    + 'UyBSb290IENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuD8nrZ8V\\n'\n    + 'u+VA8yVlUipCZIKPTDcOILYpUe8Tct0YeQQr0uyl018StdBsa3CjBgvwpDRq1HgF\\n'\n    + 'Ji2N3+39+shCNspQeE6aYU+BHXhKhIIStt3r7gl/4NqYiDDMWKHxHq0nsGDFfArf\\n'\n    + 'AOcjZdJagOMqb3fF46flc8k2E7THTm9Sz4L7RY1WdABMuurpICLFE3oHcGdapOb9\\n'\n    + 'T53pQR+xpHW9atkcf3pf7gbO0rlKVSIoUenBlZipUlp1VZl/OD/E+TtRhDDNdI2J\\n'\n    + 'P/DSMM3aEsq6ZQkfbz/Ilml+Lx3tJYXUDmp+ZjzMPLk/+3beT8EhrwtcG3VPpvwp\\n'\n    + 'BIOqsqVVTvw/CwIDAQABo2MwYTAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUw\\n'\n    + 'AwEB/zAdBgNVHQ4EFgQUTgLurD72FchM7Sz1BcGPnIQISYMwHwYDVR0jBBgwFoAU\\n'\n    + 'TgLurD72FchM7Sz1BcGPnIQISYMwDQYJKoZIhvcNAQEFBQADggEBAHZcgIio8pAm\\n'\n    + 'MjHD5cl6wKjXxScXKtXygWH2BoDMYBJF9yfyKO2jEFxYKbHePpnXB1R04zJSWAw5\\n'\n    + '2EUuDI1pSBh9BA82/5PkuNlNeSTB3dXDD2PEPdzVWbSKvUB8ZdooV+2vngL0Zm4r\\n'\n    + '47QPyd18yPHrRIbtBtHR/6CwKevLZ394zgExqhnekYKIqqEX41xsUV0Gm6x4vpjf\\n'\n    + '2u6O/+YE2U+qyyxHE5Wd5oqde0oo9UUpFETJPVb6Q2cEeQib8PBAyi0i6KnF+kIV\\n'\n    + 'A9dY7IHSubtCK/i8wxMVqfd5GtbA8mmpeJFwnDvm9rBEsHybl08qlax9syEwsUYr\\n'\n    + '/40NawZfTUU=\\n'\n    + '-----END CERTIFICATE-----\\n',\n\n    /**\n     * Amazon RDS ap-northeast-1 certificate CA 2015 to 2020\n     *\n     *   CN = Amazon RDS ap-northeast-1 CA\n     *   OU = Amazon RDS\n     *   O = Amazon Web Services, Inc.\n     *   L = Seattle\n     *   ST = Washington\n     *   C = US\n     *   P = 2015-02-05T22:03:06Z/2020-03-05T22:03:06Z\n     *   F = 4B:2D:8A:E0:C1:A3:A9:AF:A7:BB:65:0C:5A:16:8A:39:3C:03:F2:C5\n     */\n    '-----BEGIN CERTIFICATE-----\\n'\n    + 'MIIEATCCAumgAwIBAgIBRDANBgkqhkiG9w0BAQUFADCBijELMAkGA1UEBhMCVVMx\\n'\n    + 'EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n'\n    + 'GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n'\n    + 'GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNTAyMDUyMjAzMDZaFw0y\\n'\n    + 'MDAzMDUyMjAzMDZaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n'\n    + 'bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n'\n    + 'cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzElMCMGA1UEAwwcQW1hem9uIFJE\\n'\n    + 'UyBhcC1ub3J0aGVhc3QtMSBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC\\n'\n    + 'ggEBAMmM2B4PfTXCZjbZMWiDPyxvk/eeNwIRJAhfzesiGUiLozX6CRy3rwC1ZOPV\\n'\n    + 'AcQf0LB+O8wY88C/cV+d4Q2nBDmnk+Vx7o2MyMh343r5rR3Na+4izd89tkQVt0WW\\n'\n    + 'vO21KRH5i8EuBjinboOwAwu6IJ+HyiQiM0VjgjrmEr/YzFPL8MgHD/YUHehqjACn\\n'\n    + 'C0+B7/gu7W4qJzBL2DOf7ub2qszGtwPE+qQzkCRDwE1A4AJmVE++/FLH2Zx78Egg\\n'\n    + 'fV1sUxPtYgjGH76VyyO6GNKM6rAUMD/q5mnPASQVIXgKbupr618bnH+SWHFjBqZq\\n'\n    + 'HvDGPMtiiWII41EmGUypyt5AbysCAwEAAaNmMGQwDgYDVR0PAQH/BAQDAgEGMBIG\\n'\n    + 'A1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFIiKM0Q6n1K4EmLxs3ZXxINbwEwR\\n'\n    + 'MB8GA1UdIwQYMBaAFE4C7qw+9hXITO0s9QXBj5yECEmDMA0GCSqGSIb3DQEBBQUA\\n'\n    + 'A4IBAQBezGbE9Rw/k2e25iGjj5n8r+M3dlye8ORfCE/dijHtxqAKasXHgKX8I9Tw\\n'\n    + 'JkBiGWiuzqn7gO5MJ0nMMro1+gq29qjZnYX1pDHPgsRjUX8R+juRhgJ3JSHijRbf\\n'\n    + '4qNJrnwga7pj94MhcLq9u0f6dxH6dXbyMv21T4TZMTmcFduf1KgaiVx1PEyJjC6r\\n'\n    + 'M+Ru+A0eM+jJ7uCjUoZKcpX8xkj4nmSnz9NMPog3wdOSB9cAW7XIc5mHa656wr7I\\n'\n    + 'WJxVcYNHTXIjCcng2zMKd1aCcl2KSFfy56sRfT7J5Wp69QSr+jq8KM55gw8uqAwi\\n'\n    + 'VPrXn2899T1rcTtFYFP16WXjGuc0\\n'\n    + '-----END CERTIFICATE-----\\n',\n\n    /**\n     * Amazon RDS ap-northeast-2 certificate CA 2015 to 2020\n     *\n     *   CN = Amazon RDS ap-northeast-2 CA\n     *   OU = Amazon RDS\n     *   O = Amazon Web Services, Inc.\n     *   L = Seattle\n     *   ST = Washington\n     *   C = US\n     *   P = 2015-11-06T00:05:46Z/2020-03-05T00:05:46Z\n     *   F = 77:D9:33:4E:CE:56:FC:42:7B:29:57:8D:67:59:ED:29:4E:18:CB:6B\n     */\n    '-----BEGIN CERTIFICATE-----\\n'\n    + 'MIIEATCCAumgAwIBAgIBTDANBgkqhkiG9w0BAQUFADCBijELMAkGA1UEBhMCVVMx\\n'\n    + 'EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n'\n    + 'GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n'\n    + 'GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNTExMDYwMDA1NDZaFw0y\\n'\n    + 'MDAzMDUwMDA1NDZaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n'\n    + 'bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n'\n    + 'cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzElMCMGA1UEAwwcQW1hem9uIFJE\\n'\n    + 'UyBhcC1ub3J0aGVhc3QtMiBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC\\n'\n    + 'ggEBAKSwd+RVUzTRH0FgnbwoTK8TMm/zMT4+2BvALpAUe6YXbkisg2goycWuuWLg\\n'\n    + 'jOpFBB3GtyvXZnkqi7MkDWUmj1a2kf8l2oLyoaZ+Hm9x/sV+IJzOqPvj1XVUGjP6\\n'\n    + 'yYYnPJmUYqvZeI7fEkIGdFkP2m4/sgsSGsFvpD9FK1bL1Kx2UDpYX0kHTtr18Zm/\\n'\n    + '1oN6irqWALSmXMDydb8hE0FB2A1VFyeKE6PnoDj/Y5cPHwPPdEi6/3gkDkSaOG30\\n'\n    + 'rWeQfL3pOcKqzbHaWTxMphd0DSL/quZ64Nr+Ly65Q5PRcTrtr55ekOUziuqXwk+o\\n'\n    + '9QpACMwcJ7ROqOznZTqTzSFVXFECAwEAAaNmMGQwDgYDVR0PAQH/BAQDAgEGMBIG\\n'\n    + 'A1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFM6Nox/QWbhzWVvzoJ/y0kGpNPK+\\n'\n    + 'MB8GA1UdIwQYMBaAFE4C7qw+9hXITO0s9QXBj5yECEmDMA0GCSqGSIb3DQEBBQUA\\n'\n    + 'A4IBAQCTkWBqNvyRf3Y/W21DwFx3oT/AIWrHt0BdGZO34tavummXemTH9LZ/mqv9\\n'\n    + 'aljt6ZuDtf5DEQjdsAwXMsyo03ffnP7doWm8iaF1+Mui77ot0TmTsP/deyGwukvJ\\n'\n    + 'tkxX8bZjDh+EaNauWKr+CYnniNxCQLfFtXYJsfOdVBzK3xNL+Z3ucOQRhr2helWc\\n'\n    + 'CDQgwfhP1+3pRVKqHvWCPC4R3fT7RZHuRmZ38kndv476GxRntejh+ePffif78bFI\\n'\n    + '3rIZCPBGobrrUMycafSbyXteoGca/kA+/IqrAPlk0pWQ4aEL0yTWN2h2dnjoD7oX\\n'\n    + 'byIuL/g9AGRh97+ssn7D6bDRPTbW\\n'\n    + '-----END CERTIFICATE-----\\n',\n\n    /**\n     * Amazon RDS ap-southeast-1 certificate CA 2015 to 2020\n     *\n     *   CN = Amazon RDS ap-southeast-1 CA\n     *   OU = Amazon RDS\n     *   O = Amazon Web Services, Inc.\n     *   L = Seattle\n     *   ST = Washington\n     *   C = US\n     *   P = 2015-02-05T22:03:19Z/2020-03-05T22:03:19Z\n     *   F = 0E:EC:5D:BD:F9:80:EE:A9:A0:8D:81:AC:37:D9:8D:34:1C:CD:27:D1\n     */\n    '-----BEGIN CERTIFICATE-----\\n'\n    + 'MIIEATCCAumgAwIBAgIBRTANBgkqhkiG9w0BAQUFADCBijELMAkGA1UEBhMCVVMx\\n'\n    + 'EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n'\n    + 'GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n'\n    + 'GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNTAyMDUyMjAzMTlaFw0y\\n'\n    + 'MDAzMDUyMjAzMTlaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n'\n    + 'bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n'\n    + 'cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzElMCMGA1UEAwwcQW1hem9uIFJE\\n'\n    + 'UyBhcC1zb3V0aGVhc3QtMSBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC\\n'\n    + 'ggEBANaXElmSEYt/UtxHFsARFhSUahTf1KNJzR0Dmay6hqOXQuRVbKRwPd19u5vx\\n'\n    + 'DdF1sLT7D69IK3VDnUiQScaCv2Dpu9foZt+rLx+cpx1qiQd1UHrvqq8xPzQOqCdC\\n'\n    + 'RFStq6yVYZ69yfpfoI67AjclMOjl2Vph3ftVnqP0IgVKZdzeC7fd+umGgR9xY0Qr\\n'\n    + 'Ubhd/lWdsbNvzK3f1TPWcfIKQnpvSt85PIEDJir6/nuJUKMtmJRwTymJf0i+JZ4x\\n'\n    + '7dJa341p2kHKcHMgOPW7nJQklGBA70ytjUV6/qebS3yIugr/28mwReflg3TJzVDl\\n'\n    + 'EOvi6pqbqNbkMuEwGDCmEQIVqgkCAwEAAaNmMGQwDgYDVR0PAQH/BAQDAgEGMBIG\\n'\n    + 'A1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFAu93/4k5xbWOsgdCdn+/KdiRuit\\n'\n    + 'MB8GA1UdIwQYMBaAFE4C7qw+9hXITO0s9QXBj5yECEmDMA0GCSqGSIb3DQEBBQUA\\n'\n    + 'A4IBAQBlcjSyscpPjf5+MgzMuAsCxByqUt+WFspwcMCpwdaBeHOPSQrXNqX2Sk6P\\n'\n    + 'kth6oCivA64trWo8tFMvPYlUA1FYVD5WpN0kCK+P5pD4KHlaDsXhuhClJzp/OP8t\\n'\n    + 'pOyUr5109RHLxqoKB5J5m1XA7rgcFjnMxwBSWFe3/4uMk/+4T53YfCVXuc6QV3i7\\n'\n    + 'I/2LAJwFf//pTtt6fZenYfCsahnr2nvrNRNyAxcfvGZ/4Opn/mJtR6R/AjvQZHiR\\n'\n    + 'bkRNKF2GW0ueK5W4FkZVZVhhX9xh1Aj2Ollb+lbOqADaVj+AT3PoJPZ3MPQHKCXm\\n'\n    + 'xwG0LOLlRr/TfD6li1AfOVTAJXv9\\n'\n    + '-----END CERTIFICATE-----\\n',\n\n    /**\n     * Amazon RDS ap-southeast-2 certificate CA 2015 to 2020\n     *\n     *   CN = Amazon RDS ap-southeast-2 CA\n     *   OU = Amazon RDS\n     *   O = Amazon Web Services, Inc.\n     *   L = Seattle\n     *   ST = Washington\n     *   C = US\n     *   P = 2015-02-05T22:03:24Z/2020-03-05T22:03:24Z\n     *   F = 20:D9:A8:82:23:AB:B9:E5:C5:24:10:D3:4D:0F:3D:B1:31:DF:E5:14\n     */\n    '-----BEGIN CERTIFICATE-----\\n'\n    + 'MIIEATCCAumgAwIBAgIBRjANBgkqhkiG9w0BAQUFADCBijELMAkGA1UEBhMCVVMx\\n'\n    + 'EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n'\n    + 'GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n'\n    + 'GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNTAyMDUyMjAzMjRaFw0y\\n'\n    + 'MDAzMDUyMjAzMjRaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n'\n    + 'bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n'\n    + 'cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzElMCMGA1UEAwwcQW1hem9uIFJE\\n'\n    + 'UyBhcC1zb3V0aGVhc3QtMiBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC\\n'\n    + 'ggEBAJqBAJutz69hFOh3BtLHZTbwE8eejGGKayn9hu98YMDPzWzGXWCmW+ZYWELA\\n'\n    + 'cY3cNWNF8K4FqKXFr2ssorBYim1UtYFX8yhydT2hMD5zgQ2sCGUpuidijuPA6zaq\\n'\n    + 'Z3tdhVR94f0q8mpwpv2zqR9PcqaGDx2VR1x773FupRPRo7mEW1vC3IptHCQlP/zE\\n'\n    + '7jQiLl28bDIH2567xg7e7E9WnZToRnhlYdTaDaJsHTzi5mwILi4cihSok7Shv/ME\\n'\n    + 'hnukvxeSPUpaVtFaBhfBqq055ePq9I+Ns4KGreTKMhU0O9fkkaBaBmPaFgmeX/XO\\n'\n    + 'n2AX7gMouo3mtv34iDTZ0h6YCGkCAwEAAaNmMGQwDgYDVR0PAQH/BAQDAgEGMBIG\\n'\n    + 'A1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFIlQnY0KHYWn1jYumSdJYfwj/Nfw\\n'\n    + 'MB8GA1UdIwQYMBaAFE4C7qw+9hXITO0s9QXBj5yECEmDMA0GCSqGSIb3DQEBBQUA\\n'\n    + 'A4IBAQA0wVU6/l41cTzHc4azc4CDYY2Wd90DFWiH9C/mw0SgToYfCJ/5Cfi0NT/Y\\n'\n    + 'PRnk3GchychCJgoPA/k9d0//IhYEAIiIDjyFVgjbTkKV3sh4RbdldKVOUB9kumz/\\n'\n    + 'ZpShplsGt3z4QQiVnKfrAgqxWDjR0I0pQKkxXa6Sjkicos9LQxVtJ0XA4ieG1E7z\\n'\n    + 'zJr+6t80wmzxvkInSaWP3xNJK9azVRTrgQZQlvkbpDbExl4mNTG66VD3bAp6t3Wa\\n'\n    + 'B49//uDdfZmPkqqbX+hsxp160OH0rxJppwO3Bh869PkDnaPEd/Pxw7PawC+li0gi\\n'\n    + 'NRV8iCEx85aFxcyOhqn0WZOasxee\\n'\n    + '-----END CERTIFICATE-----\\n',\n\n    /**\n     * Amazon RDS eu-central-1 certificate CA 2015 to 2020\n     *\n     *   CN = Amazon RDS eu-central-1 CA\n     *   OU = Amazon RDS\n     *   O = Amazon Web Services, Inc.\n     *   L = Seattle\n     *   ST = Washington\n     *   C = US\n     *   P = 2015-02-05T22:03:31Z/2020-03-05T22:03:31Z\n     *   F = 94:B4:DF:B9:6D:7E:F7:C3:B7:BF:51:E9:A6:B7:44:A0:D0:82:11:84\n     */\n    '-----BEGIN CERTIFICATE-----\\n'\n    + 'MIID/zCCAuegAwIBAgIBRzANBgkqhkiG9w0BAQUFADCBijELMAkGA1UEBhMCVVMx\\n'\n    + 'EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n'\n    + 'GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n'\n    + 'GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNTAyMDUyMjAzMzFaFw0y\\n'\n    + 'MDAzMDUyMjAzMzFaMIGSMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n'\n    + 'bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n'\n    + 'cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEjMCEGA1UEAwwaQW1hem9uIFJE\\n'\n    + 'UyBldS1jZW50cmFsLTEgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB\\n'\n    + 'AQDFtP2dhSLuaPOI4ZrrPWsK4OY9ocQBp3yApH1KJYmI9wpQKZG/KCH2E6Oo7JAw\\n'\n    + 'QORU519r033T+FO2Z7pFPlmz1yrxGXyHpJs8ySx3Yo5S8ncDCdZJCLmtPiq/hahg\\n'\n    + '5/0ffexMFUCQaYicFZsrJ/cStdxUV+tSw2JQLD7UxS9J97LQWUPyyG+ZrjYVTVq+\\n'\n    + 'zudnFmNSe4QoecXMhAFTGJFQXxP7nhSL9Ao5FGgdXy7/JWeWdQIAj8ku6cBDKPa6\\n'\n    + 'Y6kP+ak+In+Lye8z9qsCD/afUozfWjPR2aA4JoIZVF8dNRShIMo8l0XfgfM2q0+n\\n'\n    + 'ApZWZ+BjhIO5XuoUgHS3D2YFAgMBAAGjZjBkMA4GA1UdDwEB/wQEAwIBBjASBgNV\\n'\n    + 'HRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQWBBRm4GsWIA/M6q+tK8WGHWDGh2gcyTAf\\n'\n    + 'BgNVHSMEGDAWgBROAu6sPvYVyEztLPUFwY+chAhJgzANBgkqhkiG9w0BAQUFAAOC\\n'\n    + 'AQEAHpMmeVQNqcxgfQdbDIi5UIy+E7zZykmtAygN1XQrvga9nXTis4kOTN6g5/+g\\n'\n    + 'HCx7jIXeNJzAbvg8XFqBN84Quqgpl/tQkbpco9Jh1HDs558D5NnZQxNqH5qXQ3Mm\\n'\n    + 'uPgCw0pYcPOa7bhs07i+MdVwPBsX27CFDtsgAIru8HvKxY1oTZrWnyIRo93tt/pk\\n'\n    + 'WuItVMVHjaQZVfTCow0aDUbte6Vlw82KjUFq+n2NMSCJDiDKsDDHT6BJc4AJHIq3\\n'\n    + '/4Z52MSC9KMr0yAaaoWfW/yMEj9LliQauAgwVjArF4q78rxpfKTG9Rfd8U1BZANP\\n'\n    + '7FrFMN0ThjfA1IvmOYcgskY5bQ==\\n'\n    + '-----END CERTIFICATE-----\\n',\n\n    /**\n     * Amazon RDS eu-west-1 certificate CA 2015 to 2020\n     *\n     *   CN = Amazon RDS eu-west-1 CA\n     *   OU = Amazon RDS\n     *   O = Amazon Web Services, Inc.\n     *   L = Seattle\n     *   ST = Washington\n     *   C = US\n     *   P = 2015-02-05T22:03:35Z/2020-03-05T22:03:35Z\n     *   F = 1A:95:F0:43:82:D2:5D:A6:AD:F5:13:27:0B:40:8A:72:D9:92:F3:E0\n     */\n    '-----BEGIN CERTIFICATE-----\\n'\n    + 'MIID/DCCAuSgAwIBAgIBSDANBgkqhkiG9w0BAQUFADCBijELMAkGA1UEBhMCVVMx\\n'\n    + 'EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n'\n    + 'GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n'\n    + 'GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNTAyMDUyMjAzMzVaFw0y\\n'\n    + 'MDAzMDUyMjAzMzVaMIGPMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n'\n    + 'bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n'\n    + 'cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEgMB4GA1UEAwwXQW1hem9uIFJE\\n'\n    + 'UyBldS13ZXN0LTEgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCx\\n'\n    + 'PdbqQ0HKRj79Pmocxvjc+P6i4Ux24kgFIl+ckiir1vzkmesc3a58gjrMlCksEObt\\n'\n    + 'Yihs5IhzEq1ePT0gbfS9GYFp34Uj/MtPwlrfCBWG4d2TcrsKRHr1/EXUYhWqmdrb\\n'\n    + 'RhX8XqoRhVkbF/auzFSBhTzcGGvZpQ2KIaxRcQfcXlMVhj/pxxAjh8U4F350Fb0h\\n'\n    + 'nX1jw4/KvEreBL0Xb2lnlGTkwVxaKGSgXEnOgIyOFdOQc61vdome0+eeZsP4jqeR\\n'\n    + 'TGYJA9izJsRbe2YJxHuazD+548hsPlM3vFzKKEVURCha466rAaYAHy3rKur3HYQx\\n'\n    + 'Yt+SoKcEz9PXuSGj96ejAgMBAAGjZjBkMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMB\\n'\n    + 'Af8ECDAGAQH/AgEAMB0GA1UdDgQWBBTebg//h2oeXbZjQ4uuoiuLYzuiPDAfBgNV\\n'\n    + 'HSMEGDAWgBROAu6sPvYVyEztLPUFwY+chAhJgzANBgkqhkiG9w0BAQUFAAOCAQEA\\n'\n    + 'TikPaGeZasTPw+4RBemlsyPAjtFFQLo7ddaFdORLgdEysVf8aBqndvbA6MT/v4lj\\n'\n    + 'GtEtUdF59ZcbWOrVm+fBZ2h/jYJ59dYF/xzb09nyRbdMSzB9+mkSsnOMqluq5y8o\\n'\n    + 'DY/PfP2vGhEg/2ZncRC7nlQU1Dm8F4lFWEiQ2fi7O1cW852Vmbq61RIfcYsH/9Ma\\n'\n    + 'kpgk10VZ75b8m3UhmpZ/2uRY+JEHImH5WpcTJ7wNiPNJsciZMznGtrgOnPzYco8L\\n'\n    + 'cDleOASIZifNMQi9PKOJKvi0ITz0B/imr8KBsW0YjZVJ54HMa7W1lwugSM7aMAs+\\n'\n    + 'E3Sd5lS+SHwWaOCHwhOEVA==\\n'\n    + '-----END CERTIFICATE-----\\n',\n\n    /**\n     * Amazon RDS sa-east-1 certificate CA 2015 to 2020\n     *\n     *   CN = Amazon RDS sa-east-1 CA\n     *   OU = Amazon RDS\n     *   O = Amazon Web Services, Inc.\n     *   L = Seattle\n     *   ST = Washington\n     *   C = US\n     *   P = 2015-02-05T22:03:40Z/2020-03-05T22:03:40Z\n     *   F = 32:10:3D:FA:6D:42:F5:35:98:40:15:F4:4C:74:74:27:CB:CE:D4:B5\n     */\n    '-----BEGIN CERTIFICATE-----\\n'\n    + 'MIID/DCCAuSgAwIBAgIBSTANBgkqhkiG9w0BAQUFADCBijELMAkGA1UEBhMCVVMx\\n'\n    + 'EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n'\n    + 'GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n'\n    + 'GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNTAyMDUyMjAzNDBaFw0y\\n'\n    + 'MDAzMDUyMjAzNDBaMIGPMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n'\n    + 'bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n'\n    + 'cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEgMB4GA1UEAwwXQW1hem9uIFJE\\n'\n    + 'UyBzYS1lYXN0LTEgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCU\\n'\n    + 'X4OBnQ5xA6TLJAiFEI6l7bUWjoVJBa/VbMdCCSs2i2dOKmqUaXu2ix2zcPILj3lZ\\n'\n    + 'GMk3d/2zvTK/cKhcFrewHUBamTeVHdEmynhMQamqNmkM4ptYzFcvEUw1TGxHT4pV\\n'\n    + 'Q6gSN7+/AJewQvyHexHo8D0+LDN0/Wa9mRm4ixCYH2CyYYJNKaZt9+EZfNu+PPS4\\n'\n    + '8iB0TWH0DgQkbWMBfCRgolLLitAZklZ4dvdlEBS7evN1/7ttBxUK6SvkeeSx3zBl\\n'\n    + 'ww3BlXqc3bvTQL0A+RRysaVyFbvtp9domFaDKZCpMmDFAN/ntx215xmQdrSt+K3F\\n'\n    + 'cXdGQYHx5q410CAclGnbAgMBAAGjZjBkMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMB\\n'\n    + 'Af8ECDAGAQH/AgEAMB0GA1UdDgQWBBT6iVWnm/uakS+tEX2mzIfw+8JL0zAfBgNV\\n'\n    + 'HSMEGDAWgBROAu6sPvYVyEztLPUFwY+chAhJgzANBgkqhkiG9w0BAQUFAAOCAQEA\\n'\n    + 'FmDD+QuDklXn2EgShwQxV13+txPRuVdOSrutHhoCgMwFWCMtPPtBAKs6KPY7Guvw\\n'\n    + 'DpJoZSehDiOfsgMirjOWjvfkeWSNvKfjWTVneX7pZD9W5WPnsDBvTbCGezm+v87z\\n'\n    + 'b+ZM2ZMo98m/wkMcIEAgdSKilR2fuw8rLkAjhYFfs0A7tDgZ9noKwgHvoE4dsrI0\\n'\n    + 'KZYco6DlP/brASfHTPa2puBLN9McK3v+h0JaSqqm5Ro2Bh56tZkQh8AWy/miuDuK\\n'\n    + '3+hNEVdxosxlkM1TPa1DGj0EzzK0yoeerXuH2HX7LlCrrxf6/wdKnjR12PMrLQ4A\\n'\n    + 'pCqkcWw894z6bV9MAvKe6A==\\n'\n    + '-----END CERTIFICATE-----\\n',\n\n    /**\n     * Amazon RDS us-east-1 certificate CA 2015 to 2020\n     *\n     *   CN = Amazon RDS us-east-1 CA\n     *   OU = Amazon RDS\n     *   O = Amazon Web Services, Inc.\n     *   L = Seattle\n     *   ST = Washington\n     *   C = US\n     *   P = 2015-02-05T21:54:04Z/2020-03-05T21:54:04Z\n     *   F = 34:47:8A:90:8A:83:AE:45:DC:B6:16:76:D2:35:EC:E9:75:C6:2C:63\n     */\n    '-----BEGIN CERTIFICATE-----\\n'\n    + 'MIID/DCCAuSgAwIBAgIBQzANBgkqhkiG9w0BAQUFADCBijELMAkGA1UEBhMCVVMx\\n'\n    + 'EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n'\n    + 'GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n'\n    + 'GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNTAyMDUyMTU0MDRaFw0y\\n'\n    + 'MDAzMDUyMTU0MDRaMIGPMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n'\n    + 'bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n'\n    + 'cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEgMB4GA1UEAwwXQW1hem9uIFJE\\n'\n    + 'UyB1cy1lYXN0LTEgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDI\\n'\n    + 'UIuwh8NusKHk1SqPXcP7OqxY3S/M2ZyQWD3w7Bfihpyyy/fc1w0/suIpX3kbMhAV\\n'\n    + '2ESwged2/2zSx4pVnjp/493r4luhSqQYzru78TuPt9bhJIJ51WXunZW2SWkisSaf\\n'\n    + 'USYUzVN9ezR/bjXTumSUQaLIouJt3OHLX49s+3NAbUyOI8EdvgBQWD68H1epsC0n\\n'\n    + 'CI5s+pIktyOZ59c4DCDLQcXErQ+tNbDC++oct1ANd/q8p9URonYwGCGOBy7sbCYq\\n'\n    + '9eVHh1Iy2M+SNXddVOGw5EuruvHoCIQyOz5Lz4zSuZA9dRbrfztNOpezCNYu6NKM\\n'\n    + 'n+hzcvdiyxv77uNm8EaxAgMBAAGjZjBkMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMB\\n'\n    + 'Af8ECDAGAQH/AgEAMB0GA1UdDgQWBBQSQG3TmMe6Sa3KufaPBa72v4QFDzAfBgNV\\n'\n    + 'HSMEGDAWgBROAu6sPvYVyEztLPUFwY+chAhJgzANBgkqhkiG9w0BAQUFAAOCAQEA\\n'\n    + 'L/mOZfB3187xTmjOHMqN2G2oSKHBKiQLM9uv8+97qT+XR+TVsBT6b3yoPpMAGhHA\\n'\n    + 'Pc7nxAF5gPpuzatx0OTLPcmYucFmfqT/1qA5WlgCnMNtczyNMH97lKFTNV7Njtek\\n'\n    + 'jWEzAEQSyEWrkNpNlC4j6kMYyPzVXQeXUeZTgJ9FNnVZqmvfjip2N22tawMjrCn5\\n'\n    + '7KN/zN65EwY2oO9XsaTwwWmBu3NrDdMbzJnbxoWcFWj4RBwanR1XjQOVNhDwmCOl\\n'\n    + '/1Et13b8CPyj69PC8BOVU6cfTSx8WUVy0qvYOKHNY9Bqa5BDnIL3IVmUkeTlM1mt\\n'\n    + 'enRpyBj+Bk9rh/ICdiRKmA==\\n'\n    + '-----END CERTIFICATE-----\\n',\n\n    /**\n     * Amazon RDS us-west-1 certificate CA 2015 to 2020\n     *\n     *   CN = Amazon RDS us-west-1 CA\n     *   OU = Amazon RDS\n     *   O = Amazon Web Services, Inc.\n     *   L = Seattle\n     *   ST = Washington\n     *   C = US\n     *   P = 2015-02-05T22:03:45Z/2020-03-05T22:03:45Z\n     *   F = EF:94:2F:E3:58:0E:09:D6:79:C2:16:97:91:FB:37:EA:D7:70:A8:4B\n     */\n    '-----BEGIN CERTIFICATE-----\\n'\n    + 'MIID/DCCAuSgAwIBAgIBSjANBgkqhkiG9w0BAQUFADCBijELMAkGA1UEBhMCVVMx\\n'\n    + 'EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n'\n    + 'GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n'\n    + 'GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNTAyMDUyMjAzNDVaFw0y\\n'\n    + 'MDAzMDUyMjAzNDVaMIGPMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n'\n    + 'bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n'\n    + 'cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEgMB4GA1UEAwwXQW1hem9uIFJE\\n'\n    + 'UyB1cy13ZXN0LTEgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDE\\n'\n    + 'Dhw+uw/ycaiIhhyu2pXFRimq0DlB8cNtIe8hdqndH8TV/TFrljNgR8QdzOgZtZ9C\\n'\n    + 'zzQ2GRpInN/qJF6slEd6wO+6TaDBQkPY+07TXNt52POFUhdVkhJXHpE2BS7Xn6J7\\n'\n    + '7RFAOeG1IZmc2DDt+sR1BgXzUqHslQGfFYNS0/MBO4P+ya6W7IhruB1qfa4HiYQS\\n'\n    + 'dbe4MvGWnv0UzwAqdR7OF8+8/5c58YXZIXCO9riYF2ql6KNSL5cyDPcYK5VK0+Q9\\n'\n    + 'VI6vuJHSMYcF7wLePw8jtBktqAFE/wbdZiIHhZvNyiNWPPNTGUmQbaJ+TzQEHDs5\\n'\n    + '8en+/W7JKnPyBOkxxENbAgMBAAGjZjBkMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMB\\n'\n    + 'Af8ECDAGAQH/AgEAMB0GA1UdDgQWBBS0nw/tFR9bCjgqWTPJkyy4oOD8bzAfBgNV\\n'\n    + 'HSMEGDAWgBROAu6sPvYVyEztLPUFwY+chAhJgzANBgkqhkiG9w0BAQUFAAOCAQEA\\n'\n    + 'CXGAY3feAak6lHdqj6+YWjy6yyUnLK37bRxZDsyDVXrPRQaXRzPTzx79jvDwEb/H\\n'\n    + 'Q/bdQ7zQRWqJcbivQlwhuPJ4kWPUZgSt3JUUuqkMsDzsvj/bwIjlrEFDOdHGh0mi\\n'\n    + 'eVIngFEjUXjMh+5aHPEF9BlQnB8LfVtKj18e15UDTXFa+xJPFxUR7wDzCfo4WI1m\\n'\n    + 'sUMG4q1FkGAZgsoyFPZfF8IVvgCuGdR8z30VWKklFxttlK0eGLlPAyIO0CQxPQlo\\n'\n    + 'saNJrHf4tLOgZIWk+LpDhNd9Et5EzvJ3aURUsKY4pISPPF5WdvM9OE59bERwUErd\\n'\n    + 'nuOuQWQeeadMceZnauRzJQ==\\n'\n    + '-----END CERTIFICATE-----\\n',\n\n    /**\n     * Amazon RDS us-west-2 certificate CA 2015 to 2020\n     *\n     *   CN = Amazon RDS us-west-2 CA\n     *   OU = Amazon RDS\n     *   O = Amazon Web Services, Inc.\n     *   L = Seattle\n     *   ST = Washington\n     *   C = US\n     *   P = 2015-02-05T22:03:50Z/2020-03-05T22:03:50Z\n     *   F = 94:2C:A8:B0:23:48:17:F0:CD:2F:19:7F:C1:E0:21:7C:65:79:13:3A\n     */\n    '-----BEGIN CERTIFICATE-----\\n'\n    + 'MIID/DCCAuSgAwIBAgIBSzANBgkqhkiG9w0BAQUFADCBijELMAkGA1UEBhMCVVMx\\n'\n    + 'EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n'\n    + 'GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n'\n    + 'GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNTAyMDUyMjAzNTBaFw0y\\n'\n    + 'MDAzMDUyMjAzNTBaMIGPMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n'\n    + 'bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n'\n    + 'cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEgMB4GA1UEAwwXQW1hem9uIFJE\\n'\n    + 'UyB1cy13ZXN0LTIgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDM\\n'\n    + 'H58SR48U6jyERC1vYTnub34smf5EQVXyzaTmspWGWGzT31NLNZGSDFaa7yef9kdO\\n'\n    + 'mzJsgebR5tXq6LdwlIoWkKYQ7ycUaadtVKVYdI40QcI3cHn0qLFlg2iBXmWp/B+i\\n'\n    + 'Z34VuVlCh31Uj5WmhaBoz8t/GRqh1V/aCsf3Wc6jCezH3QfuCjBpzxdOOHN6Ie2v\\n'\n    + 'xX09O5qmZTvMoRBAvPkxdaPg/Mi7fxueWTbEVk78kuFbF1jHYw8U1BLILIAhcqlq\\n'\n    + 'x4u8nl73t3O3l/soNUcIwUDK0/S+Kfqhwn9yQyPlhb4Wy3pfnZLJdkyHldktnQav\\n'\n    + '9TB9u7KH5Lk0aAYslMLxAgMBAAGjZjBkMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMB\\n'\n    + 'Af8ECDAGAQH/AgEAMB0GA1UdDgQWBBT8roM4lRnlFHWMPWRz0zkwFZog1jAfBgNV\\n'\n    + 'HSMEGDAWgBROAu6sPvYVyEztLPUFwY+chAhJgzANBgkqhkiG9w0BAQUFAAOCAQEA\\n'\n    + 'JwrxwgwmPtcdaU7O7WDdYa4hprpOMamI49NDzmE0s10oGrqmLwZygcWU0jT+fJ+Y\\n'\n    + 'pJe1w0CVfKaeLYNsOBVW3X4ZPmffYfWBheZiaiEflq/P6t7/Eg81gaKYnZ/x1Dfa\\n'\n    + 'sUYkzPvCkXe9wEz5zdUTOCptDt89rBR9CstL9vE7WYUgiVVmBJffWbHQLtfjv6OF\\n'\n    + 'NMb0QME981kGRzc2WhgP71YS2hHd1kXtsoYP1yTu4vThSKsoN4bkiHsaC1cRkLoy\\n'\n    + '0fFA4wpB3WloMEvCDaUvvH1LZlBXTNlwi9KtcwD4tDxkkBt4tQczKLGpQ/nF/W9n\\n'\n    + '8YDWk3IIc1sd0bkZqoau2Q==\\n'\n    + '-----END CERTIFICATE-----\\n'\n  ]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/protocol/constants/ssl_profiles.js\n// module id = 143\n// module chunks = 0","module.exports = ClientAuthenticationPacket;\nfunction ClientAuthenticationPacket(options) {\n  options = options || {};\n\n  this.clientFlags   = options.clientFlags;\n  this.maxPacketSize = options.maxPacketSize;\n  this.charsetNumber = options.charsetNumber;\n  this.filler        = undefined;\n  this.user          = options.user;\n  this.scrambleBuff  = options.scrambleBuff;\n  this.database      = options.database;\n  this.protocol41    = options.protocol41;\n}\n\nClientAuthenticationPacket.prototype.parse = function(parser) {\n  if (this.protocol41) {\n    this.clientFlags   = parser.parseUnsignedNumber(4);\n    this.maxPacketSize = parser.parseUnsignedNumber(4);\n    this.charsetNumber = parser.parseUnsignedNumber(1);\n    this.filler        = parser.parseFiller(23);\n    this.user          = parser.parseNullTerminatedString();\n    this.scrambleBuff  = parser.parseLengthCodedBuffer();\n    this.database      = parser.parseNullTerminatedString();\n  } else {\n    this.clientFlags   = parser.parseUnsignedNumber(2);\n    this.maxPacketSize = parser.parseUnsignedNumber(3);\n    this.user          = parser.parseNullTerminatedString();\n    this.scrambleBuff  = parser.parseBuffer(8);\n    this.database      = parser.parseLengthCodedBuffer();\n  }\n};\n\nClientAuthenticationPacket.prototype.write = function(writer) {\n  if (this.protocol41) {\n    writer.writeUnsignedNumber(4, this.clientFlags);\n    writer.writeUnsignedNumber(4, this.maxPacketSize);\n    writer.writeUnsignedNumber(1, this.charsetNumber);\n    writer.writeFiller(23);\n    writer.writeNullTerminatedString(this.user);\n    writer.writeLengthCodedBuffer(this.scrambleBuff);\n    writer.writeNullTerminatedString(this.database);\n  } else {\n    writer.writeUnsignedNumber(2, this.clientFlags);\n    writer.writeUnsignedNumber(3, this.maxPacketSize);\n    writer.writeNullTerminatedString(this.user);\n    writer.writeBuffer(this.scrambleBuff);\n    if (this.database && this.database.length) {\n      writer.writeFiller(1);\n      writer.writeBuffer(new Buffer(this.database));\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/protocol/packets/ClientAuthenticationPacket.js\n// module id = 144\n// module chunks = 0","module.exports = ComChangeUserPacket;\nfunction ComChangeUserPacket(options) {\n  options = options || {};\n\n  this.command       = 0x11;\n  this.user          = options.user;\n  this.scrambleBuff  = options.scrambleBuff;\n  this.database      = options.database;\n  this.charsetNumber = options.charsetNumber;\n}\n\nComChangeUserPacket.prototype.parse = function(parser) {\n  this.command       = parser.parseUnsignedNumber(1);\n  this.user          = parser.parseNullTerminatedString();\n  this.scrambleBuff  = parser.parseLengthCodedBuffer();\n  this.database      = parser.parseNullTerminatedString();\n  this.charsetNumber = parser.parseUnsignedNumber(1);\n};\n\nComChangeUserPacket.prototype.write = function(writer) {\n  writer.writeUnsignedNumber(1, this.command);\n  writer.writeNullTerminatedString(this.user);\n  writer.writeLengthCodedBuffer(this.scrambleBuff);\n  writer.writeNullTerminatedString(this.database);\n  writer.writeUnsignedNumber(2, this.charsetNumber);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/protocol/packets/ComChangeUserPacket.js\n// module id = 145\n// module chunks = 0","module.exports = ComPingPacket;\nfunction ComPingPacket() {\n  this.command = 0x0e;\n}\n\nComPingPacket.prototype.write = function(writer) {\n  writer.writeUnsignedNumber(1, this.command);\n};\n\nComPingPacket.prototype.parse = function(parser) {\n  this.command = parser.parseUnsignedNumber(1);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/protocol/packets/ComPingPacket.js\n// module id = 146\n// module chunks = 0","module.exports = ComQueryPacket;\nfunction ComQueryPacket(sql) {\n  this.command = 0x03;\n  this.sql     = sql;\n}\n\nComQueryPacket.prototype.write = function(writer) {\n  writer.writeUnsignedNumber(1, this.command);\n  writer.writeString(this.sql);\n};\n\nComQueryPacket.prototype.parse = function(parser) {\n  this.command = parser.parseUnsignedNumber(1);\n  this.sql     = parser.parsePacketTerminatedString();\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/protocol/packets/ComQueryPacket.js\n// module id = 147\n// module chunks = 0","module.exports = ComQuitPacket;\nfunction ComQuitPacket() {\n  this.command = 0x01;\n}\n\nComQuitPacket.prototype.parse = function parse(parser) {\n  this.command = parser.parseUnsignedNumber(1);\n};\n\nComQuitPacket.prototype.write = function write(writer) {\n  writer.writeUnsignedNumber(1, this.command);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/protocol/packets/ComQuitPacket.js\n// module id = 148\n// module chunks = 0","module.exports = ComStatisticsPacket;\nfunction ComStatisticsPacket() {\n  this.command = 0x09;\n}\n\nComStatisticsPacket.prototype.write = function(writer) {\n  writer.writeUnsignedNumber(1, this.command);\n};\n\nComStatisticsPacket.prototype.parse = function(parser) {\n  this.command = parser.parseUnsignedNumber(1);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/protocol/packets/ComStatisticsPacket.js\n// module id = 149\n// module chunks = 0","module.exports = EmptyPacket;\nfunction EmptyPacket() {\n}\n\nEmptyPacket.prototype.write = function write() {\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/protocol/packets/EmptyPacket.js\n// module id = 150\n// module chunks = 0","module.exports = EofPacket;\nfunction EofPacket(options) {\n  options = options || {};\n\n  this.fieldCount   = undefined;\n  this.warningCount = options.warningCount;\n  this.serverStatus = options.serverStatus;\n  this.protocol41   = options.protocol41;\n}\n\nEofPacket.prototype.parse = function(parser) {\n  this.fieldCount   = parser.parseUnsignedNumber(1);\n  if (this.protocol41) {\n    this.warningCount = parser.parseUnsignedNumber(2);\n    this.serverStatus = parser.parseUnsignedNumber(2);\n  }\n};\n\nEofPacket.prototype.write = function(writer) {\n  writer.writeUnsignedNumber(1, 0xfe);\n  if (this.protocol41) {\n    writer.writeUnsignedNumber(2, this.warningCount);\n    writer.writeUnsignedNumber(2, this.serverStatus);\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/protocol/packets/EofPacket.js\n// module id = 151\n// module chunks = 0","module.exports = ErrorPacket;\nfunction ErrorPacket(options) {\n  options = options || {};\n\n  this.fieldCount     = options.fieldCount;\n  this.errno          = options.errno;\n  this.sqlStateMarker = options.sqlStateMarker;\n  this.sqlState       = options.sqlState;\n  this.message        = options.message;\n}\n\nErrorPacket.prototype.parse = function(parser) {\n  this.fieldCount = parser.parseUnsignedNumber(1);\n  this.errno      = parser.parseUnsignedNumber(2);\n\n  // sqlStateMarker ('#' = 0x23) indicates error packet format\n  if (parser.peak() === 0x23) {\n    this.sqlStateMarker = parser.parseString(1);\n    this.sqlState       = parser.parseString(5);\n  }\n\n  this.message = parser.parsePacketTerminatedString();\n};\n\nErrorPacket.prototype.write = function(writer) {\n  writer.writeUnsignedNumber(1, 0xff);\n  writer.writeUnsignedNumber(2, this.errno);\n\n  if (this.sqlStateMarker) {\n    writer.writeString(this.sqlStateMarker);\n    writer.writeString(this.sqlState);\n  }\n\n  writer.writeString(this.message);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/protocol/packets/ErrorPacket.js\n// module id = 152\n// module chunks = 0","module.exports = FieldPacket;\nfunction FieldPacket(options) {\n  options = options || {};\n\n  this.catalog    = options.catalog;\n  this.db         = options.db;\n  this.table      = options.table;\n  this.orgTable   = options.orgTable;\n  this.name       = options.name;\n  this.orgName    = options.orgName;\n  this.charsetNr  = options.charsetNr;\n  this.length     = options.length;\n  this.type       = options.type;\n  this.flags      = options.flags;\n  this.decimals   = options.decimals;\n  this.default    = options.default;\n  this.zeroFill   = options.zeroFill;\n  this.protocol41 = options.protocol41;\n}\n\nFieldPacket.prototype.parse = function(parser) {\n  if (this.protocol41) {\n    this.catalog     = parser.parseLengthCodedString();\n    this.db          = parser.parseLengthCodedString();\n    this.table       = parser.parseLengthCodedString();\n    this.orgTable    = parser.parseLengthCodedString();\n    this.name        = parser.parseLengthCodedString();\n    this.orgName     = parser.parseLengthCodedString();\n\n    if (parser.parseLengthCodedNumber() !== 0x0c) {\n      var err  = new TypeError('Received invalid field length');\n      err.code = 'PARSER_INVALID_FIELD_LENGTH';\n      throw err;\n    }\n\n    this.charsetNr   = parser.parseUnsignedNumber(2);\n    this.length      = parser.parseUnsignedNumber(4);\n    this.type        = parser.parseUnsignedNumber(1);\n    this.flags       = parser.parseUnsignedNumber(2);\n    this.decimals    = parser.parseUnsignedNumber(1);\n\n    var filler       = parser.parseBuffer(2);\n    if (filler[0] !== 0x0 || filler[1] !== 0x0) {\n      var err  = new TypeError('Received invalid filler');\n      err.code = 'PARSER_INVALID_FILLER';\n      throw err;\n    }\n\n    // parsed flags\n    this.zeroFill    = (this.flags & 0x0040 ? true : false);\n\n    if (parser.reachedPacketEnd()) {\n      return;\n    }\n\n    this.default     = parser.parseLengthCodedString();\n  } else {\n    this.table       = parser.parseLengthCodedString();\n    this.name        = parser.parseLengthCodedString();\n    this.length      = parser.parseUnsignedNumber(parser.parseUnsignedNumber(1));\n    this.type        = parser.parseUnsignedNumber(parser.parseUnsignedNumber(1));\n  }\n};\n\nFieldPacket.prototype.write = function(writer) {\n  if (this.protocol41) {\n    writer.writeLengthCodedString(this.catalog);\n    writer.writeLengthCodedString(this.db);\n    writer.writeLengthCodedString(this.table);\n    writer.writeLengthCodedString(this.orgTable);\n    writer.writeLengthCodedString(this.name);\n    writer.writeLengthCodedString(this.orgName);\n\n    writer.writeLengthCodedNumber(0x0c);\n    writer.writeUnsignedNumber(2, this.charsetNr || 0);\n    writer.writeUnsignedNumber(4, this.length || 0);\n    writer.writeUnsignedNumber(1, this.type || 0);\n    writer.writeUnsignedNumber(2, this.flags || 0);\n    writer.writeUnsignedNumber(1, this.decimals || 0);\n    writer.writeFiller(2);\n\n    if (this.default !== undefined) {\n      writer.writeLengthCodedString(this.default);\n    }\n  } else {\n    writer.writeLengthCodedString(this.table);\n    writer.writeLengthCodedString(this.name);\n    writer.writeUnsignedNumber(1, 0x01);\n    writer.writeUnsignedNumber(1, this.length);\n    writer.writeUnsignedNumber(1, 0x01);\n    writer.writeUnsignedNumber(1, this.type);\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/protocol/packets/FieldPacket.js\n// module id = 153\n// module chunks = 0","var Client = require('../constants/client');\n\nmodule.exports = HandshakeInitializationPacket;\nfunction HandshakeInitializationPacket(options) {\n  options = options || {};\n\n  this.protocolVersion     = options.protocolVersion;\n  this.serverVersion       = options.serverVersion;\n  this.threadId            = options.threadId;\n  this.scrambleBuff1       = options.scrambleBuff1;\n  this.filler1             = options.filler1;\n  this.serverCapabilities1 = options.serverCapabilities1;\n  this.serverLanguage      = options.serverLanguage;\n  this.serverStatus        = options.serverStatus;\n  this.serverCapabilities2 = options.serverCapabilities2;\n  this.scrambleLength      = options.scrambleLength;\n  this.filler2             = options.filler2;\n  this.scrambleBuff2       = options.scrambleBuff2;\n  this.filler3             = options.filler3;\n  this.pluginData          = options.pluginData;\n  this.protocol41          = options.protocol41;\n\n  if (this.protocol41) {\n    // force set the bit in serverCapabilities1\n    this.serverCapabilities1 |= Client.CLIENT_PROTOCOL_41;\n  }\n}\n\nHandshakeInitializationPacket.prototype.parse = function(parser) {\n  this.protocolVersion     = parser.parseUnsignedNumber(1);\n  this.serverVersion       = parser.parseNullTerminatedString();\n  this.threadId            = parser.parseUnsignedNumber(4);\n  this.scrambleBuff1       = parser.parseBuffer(8);\n  this.filler1             = parser.parseFiller(1);\n  this.serverCapabilities1 = parser.parseUnsignedNumber(2);\n  this.serverLanguage      = parser.parseUnsignedNumber(1);\n  this.serverStatus        = parser.parseUnsignedNumber(2);\n\n  this.protocol41          = (this.serverCapabilities1 & (1 << 9)) > 0;\n\n  if (this.protocol41) {\n    this.serverCapabilities2 = parser.parseUnsignedNumber(2);\n    this.scrambleLength      = parser.parseUnsignedNumber(1);\n    this.filler2             = parser.parseFiller(10);\n    // scrambleBuff2 should be 0x00 terminated, but sphinx does not do this\n    // so we assume scrambleBuff2 to be 12 byte and treat the next byte as a\n    // filler byte.\n    this.scrambleBuff2       = parser.parseBuffer(12);\n    this.filler3             = parser.parseFiller(1);\n  } else {\n    this.filler2             = parser.parseFiller(13);\n  }\n\n  if (parser.reachedPacketEnd()) {\n    return;\n  }\n\n  // According to the docs this should be 0x00 terminated, but MariaDB does\n  // not do this, so we assume this string to be packet terminated.\n  this.pluginData = parser.parsePacketTerminatedString();\n\n  // However, if there is a trailing '\\0', strip it\n  var lastChar = this.pluginData.length - 1;\n  if (this.pluginData[lastChar] === '\\0') {\n    this.pluginData = this.pluginData.substr(0, lastChar);\n  }\n};\n\nHandshakeInitializationPacket.prototype.write = function(writer) {\n  writer.writeUnsignedNumber(1, this.protocolVersion);\n  writer.writeNullTerminatedString(this.serverVersion);\n  writer.writeUnsignedNumber(4, this.threadId);\n  writer.writeBuffer(this.scrambleBuff1);\n  writer.writeFiller(1);\n  writer.writeUnsignedNumber(2, this.serverCapabilities1);\n  writer.writeUnsignedNumber(1, this.serverLanguage);\n  writer.writeUnsignedNumber(2, this.serverStatus);\n  if (this.protocol41) {\n    writer.writeUnsignedNumber(2, this.serverCapabilities2);\n    writer.writeUnsignedNumber(1, this.scrambleLength);\n    writer.writeFiller(10);\n  }\n  writer.writeNullTerminatedBuffer(this.scrambleBuff2);\n\n  if (this.pluginData !== undefined) {\n    writer.writeNullTerminatedString(this.pluginData);\n  }\n};\n\nHandshakeInitializationPacket.prototype.scrambleBuff = function() {\n  var buffer = new Buffer(this.scrambleBuff1.length +\n                          (typeof this.scrambleBuff2 !== 'undefined' ? this.scrambleBuff2.length : 0));\n\n  this.scrambleBuff1.copy(buffer);\n  if (typeof this.scrambleBuff2 !== 'undefined') {\n    this.scrambleBuff2.copy(buffer, this.scrambleBuff1.length);\n  }\n\n  return buffer;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/protocol/packets/HandshakeInitializationPacket.js\n// module id = 154\n// module chunks = 0","module.exports = LocalDataFilePacket;\n\n/**\n * Create a new LocalDataFilePacket\n * @constructor\n * @param {Buffer} data The data contents of the packet\n * @public\n */\nfunction LocalDataFilePacket(data) {\n  this.data = data;\n}\n\nLocalDataFilePacket.prototype.write = function(writer) {\n  writer.writeBuffer(this.data);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/protocol/packets/LocalDataFilePacket.js\n// module id = 155\n// module chunks = 0","module.exports = OkPacket;\nfunction OkPacket(options) {\n  options = options || {};\n\n  this.fieldCount   = undefined;\n  this.affectedRows = undefined;\n  this.insertId     = undefined;\n  this.serverStatus = undefined;\n  this.warningCount = undefined;\n  this.message      = undefined;\n  this.protocol41   = options.protocol41;\n}\n\nOkPacket.prototype.parse = function(parser) {\n  this.fieldCount   = parser.parseUnsignedNumber(1);\n  this.affectedRows = parser.parseLengthCodedNumber();\n  this.insertId     = parser.parseLengthCodedNumber();\n  if (this.protocol41) {\n    this.serverStatus = parser.parseUnsignedNumber(2);\n    this.warningCount = parser.parseUnsignedNumber(2);\n  }\n  this.message      = parser.parsePacketTerminatedString();\n  this.changedRows  = 0;\n\n  var m = this.message.match(/\\schanged:\\s*(\\d+)/i);\n\n  if (m !== null) {\n    this.changedRows = parseInt(m[1], 10);\n  }\n};\n\nOkPacket.prototype.write = function(writer) {\n  writer.writeUnsignedNumber(1, 0x00);\n  writer.writeLengthCodedNumber(this.affectedRows || 0);\n  writer.writeLengthCodedNumber(this.insertId || 0);\n  if (this.protocol41) {\n    writer.writeUnsignedNumber(2, this.serverStatus || 0);\n    writer.writeUnsignedNumber(2, this.warningCount || 0);\n  }\n  writer.writeString(this.message);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/protocol/packets/OkPacket.js\n// module id = 156\n// module chunks = 0","module.exports = OldPasswordPacket;\nfunction OldPasswordPacket(options) {\n  options = options || {};\n\n  this.scrambleBuff = options.scrambleBuff;\n}\n\nOldPasswordPacket.prototype.parse = function(parser) {\n  this.scrambleBuff = parser.parseNullTerminatedBuffer();\n};\n\nOldPasswordPacket.prototype.write = function(writer) {\n  writer.writeBuffer(this.scrambleBuff);\n  writer.writeFiller(1);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/protocol/packets/OldPasswordPacket.js\n// module id = 157\n// module chunks = 0","module.exports = ResultSetHeaderPacket;\nfunction ResultSetHeaderPacket(options) {\n  options = options || {};\n\n  this.fieldCount = options.fieldCount;\n  this.extra      = options.extra;\n}\n\nResultSetHeaderPacket.prototype.parse = function(parser) {\n  this.fieldCount = parser.parseLengthCodedNumber();\n\n  if (parser.reachedPacketEnd()) return;\n\n  this.extra = (this.fieldCount === null)\n    ? parser.parsePacketTerminatedString()\n    : parser.parseLengthCodedNumber();\n};\n\nResultSetHeaderPacket.prototype.write = function(writer) {\n  writer.writeLengthCodedNumber(this.fieldCount);\n\n  if (this.extra !== undefined) {\n    writer.writeLengthCodedNumber(this.extra);\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/protocol/packets/ResultSetHeaderPacket.js\n// module id = 158\n// module chunks = 0","var Types                        = require('../constants/types');\nvar Charsets                     = require('../constants/charsets');\nvar Field                        = require('./Field');\nvar IEEE_754_BINARY_64_PRECISION = Math.pow(2, 53);\n\nmodule.exports = RowDataPacket;\nfunction RowDataPacket() {\n}\n\nObject.defineProperty(RowDataPacket.prototype, 'parse', {\n  configurable : true,\n  enumerable   : false,\n  value        : parse\n});\n\nObject.defineProperty(RowDataPacket.prototype, '_typeCast', {\n  configurable : true,\n  enumerable   : false,\n  value        : typeCast\n});\n\nfunction parse(parser, fieldPackets, typeCast, nestTables, connection) {\n  var self = this;\n  var next = function () {\n    return self._typeCast(fieldPacket, parser, connection.config.timezone, connection.config.supportBigNumbers, connection.config.bigNumberStrings, connection.config.dateStrings);\n  };\n\n  for (var i = 0; i < fieldPackets.length; i++) {\n    var fieldPacket = fieldPackets[i];\n    var value;\n\n    if (typeof typeCast === 'function') {\n      value = typeCast.apply(connection, [ new Field({ packet: fieldPacket, parser: parser }), next ]);\n    } else {\n      value = (typeCast)\n        ? this._typeCast(fieldPacket, parser, connection.config.timezone, connection.config.supportBigNumbers, connection.config.bigNumberStrings, connection.config.dateStrings)\n        : ( (fieldPacket.charsetNr === Charsets.BINARY)\n          ? parser.parseLengthCodedBuffer()\n          : parser.parseLengthCodedString() );\n    }\n\n    if (typeof nestTables === 'string' && nestTables.length) {\n      this[fieldPacket.table + nestTables + fieldPacket.name] = value;\n    } else if (nestTables) {\n      this[fieldPacket.table] = this[fieldPacket.table] || {};\n      this[fieldPacket.table][fieldPacket.name] = value;\n    } else {\n      this[fieldPacket.name] = value;\n    }\n  }\n}\n\nfunction typeCast(field, parser, timeZone, supportBigNumbers, bigNumberStrings, dateStrings) {\n  var numberString;\n\n  switch (field.type) {\n    case Types.TIMESTAMP:\n    case Types.TIMESTAMP2:\n    case Types.DATE:\n    case Types.DATETIME:\n    case Types.DATETIME2:\n    case Types.NEWDATE:\n      var dateString = parser.parseLengthCodedString();\n\n      if (typeMatch(field.type, dateStrings)) {\n        return dateString;\n      }\n\n      if (dateString === null) {\n        return null;\n      }\n\n      var originalString = dateString;\n      if (field.type === Types.DATE) {\n        dateString += ' 00:00:00';\n      }\n\n      if (timeZone !== 'local') {\n        dateString += ' ' + timeZone;\n      }\n\n      var dt = new Date(dateString);\n      if (isNaN(dt.getTime())) {\n        return originalString;\n      }\n\n      return dt;\n    case Types.TINY:\n    case Types.SHORT:\n    case Types.LONG:\n    case Types.INT24:\n    case Types.YEAR:\n    case Types.FLOAT:\n    case Types.DOUBLE:\n      numberString = parser.parseLengthCodedString();\n      return (numberString === null || (field.zeroFill && numberString[0] === '0'))\n        ? numberString : Number(numberString);\n    case Types.NEWDECIMAL:\n    case Types.LONGLONG:\n      numberString = parser.parseLengthCodedString();\n      return (numberString === null || (field.zeroFill && numberString[0] === '0'))\n        ? numberString\n        : ((supportBigNumbers && (bigNumberStrings || (Number(numberString) >= IEEE_754_BINARY_64_PRECISION) || Number(numberString) <= -IEEE_754_BINARY_64_PRECISION))\n          ? numberString\n          : Number(numberString));\n    case Types.BIT:\n      return parser.parseLengthCodedBuffer();\n    case Types.STRING:\n    case Types.VAR_STRING:\n    case Types.TINY_BLOB:\n    case Types.MEDIUM_BLOB:\n    case Types.LONG_BLOB:\n    case Types.BLOB:\n      return (field.charsetNr === Charsets.BINARY)\n        ? parser.parseLengthCodedBuffer()\n        : parser.parseLengthCodedString();\n    case Types.GEOMETRY:\n      return parser.parseGeometryValue();\n    default:\n      return parser.parseLengthCodedString();\n  }\n}\n\nfunction typeMatch(type, list) {\n  if (Array.isArray(list)) {\n    for (var i = 0; i < list.length; i++) {\n      if (Types[list[i]] === type) return true;\n    }\n    return false;\n  } else {\n    return Boolean(list);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/protocol/packets/RowDataPacket.js\n// module id = 159\n// module chunks = 0","// http://dev.mysql.com/doc/internals/en/ssl.html\n// http://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::SSLRequest\n\nvar ClientConstants = require('../constants/client');\n\nmodule.exports = SSLRequestPacket;\n\nfunction SSLRequestPacket(options) {\n  options = options || {};\n  this.clientFlags   = options.clientFlags | ClientConstants.CLIENT_SSL;\n  this.maxPacketSize = options.maxPacketSize;\n  this.charsetNumber = options.charsetNumber;\n}\n\nSSLRequestPacket.prototype.parse = function(parser) {\n  // TODO: check SSLRequest packet v41 vs pre v41\n  this.clientFlags   = parser.parseUnsignedNumber(4);\n  this.maxPacketSize = parser.parseUnsignedNumber(4);\n  this.charsetNumber = parser.parseUnsignedNumber(1);\n};\n\nSSLRequestPacket.prototype.write = function(writer) {\n  writer.writeUnsignedNumber(4, this.clientFlags);\n  writer.writeUnsignedNumber(4, this.maxPacketSize);\n  writer.writeUnsignedNumber(1, this.charsetNumber);\n  writer.writeFiller(23);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/protocol/packets/SSLRequestPacket.js\n// module id = 160\n// module chunks = 0","module.exports = StatisticsPacket;\nfunction StatisticsPacket() {\n  this.message      = undefined;\n}\n\nStatisticsPacket.prototype.parse = function(parser) {\n  this.message      = parser.parsePacketTerminatedString();\n\n  var items = this.message.split(/\\s\\s/);\n  for (var i = 0; i < items.length; i++) {\n    var m = items[i].match(/^(.+)\\:\\s+(.+)$/);\n    if (m !== null) {\n      this[m[1].toLowerCase().replace(/\\s/g, '_')] = Number(m[2]);\n    }\n  }\n};\n\nStatisticsPacket.prototype.write = function(writer) {\n  writer.writeString(this.message);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/protocol/packets/StatisticsPacket.js\n// module id = 161\n// module chunks = 0","module.exports = UseOldPasswordPacket;\nfunction UseOldPasswordPacket(options) {\n  options = options || {};\n\n  this.firstByte = options.firstByte || 0xfe;\n}\n\nUseOldPasswordPacket.prototype.parse = function(parser) {\n  this.firstByte = parser.parseUnsignedNumber(1);\n};\n\nUseOldPasswordPacket.prototype.write = function(writer) {\n  writer.writeUnsignedNumber(1, this.firstByte);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/protocol/packets/UseOldPasswordPacket.js\n// module id = 162\n// module chunks = 0","var Sequence = require('./Sequence');\nvar Util     = require('util');\nvar Packets  = require('../packets');\nvar Auth     = require('../Auth');\n\nmodule.exports = ChangeUser;\nUtil.inherits(ChangeUser, Sequence);\nfunction ChangeUser(options, callback) {\n  Sequence.call(this, options, callback);\n\n  this._user          = options.user;\n  this._password      = options.password;\n  this._database      = options.database;\n  this._charsetNumber = options.charsetNumber;\n  this._currentConfig = options.currentConfig;\n}\n\nChangeUser.prototype.start = function(handshakeInitializationPacket) {\n  var scrambleBuff = handshakeInitializationPacket.scrambleBuff();\n  scrambleBuff     = Auth.token(this._password, scrambleBuff);\n\n  var packet = new Packets.ComChangeUserPacket({\n    user          : this._user,\n    scrambleBuff  : scrambleBuff,\n    database      : this._database,\n    charsetNumber : this._charsetNumber\n  });\n\n  this._currentConfig.user          = this._user;\n  this._currentConfig.password      = this._password;\n  this._currentConfig.database      = this._database;\n  this._currentConfig.charsetNumber = this._charsetNumber;\n\n  this.emit('packet', packet);\n};\n\nChangeUser.prototype['ErrorPacket'] = function(packet) {\n  var err = this._packetToError(packet);\n  err.fatal = true;\n  this.end(err);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/protocol/sequences/ChangeUser.js\n// module id = 163\n// module chunks = 0","var Sequence        = require('./Sequence');\nvar Util            = require('util');\nvar Packets         = require('../packets');\nvar Auth            = require('../Auth');\nvar ClientConstants = require('../constants/client');\n\nmodule.exports = Handshake;\nUtil.inherits(Handshake, Sequence);\nfunction Handshake(options, callback) {\n  Sequence.call(this, options, callback);\n\n  options = options || {};\n\n  this._config                        = options.config;\n  this._handshakeInitializationPacket = null;\n}\n\nHandshake.prototype.determinePacket = function(firstByte) {\n  if (firstByte === 0xff) {\n    return Packets.ErrorPacket;\n  }\n\n  if (!this._handshakeInitializationPacket) {\n    return Packets.HandshakeInitializationPacket;\n  }\n\n  if (firstByte === 0xfe) {\n    return Packets.UseOldPasswordPacket;\n  }\n\n  return undefined;\n};\n\nHandshake.prototype['HandshakeInitializationPacket'] = function(packet) {\n  this._handshakeInitializationPacket = packet;\n\n  this._config.protocol41 = packet.protocol41;\n\n  var serverSSLSupport = packet.serverCapabilities1 & ClientConstants.CLIENT_SSL;\n\n  if (this._config.ssl) {\n    if (!serverSSLSupport) {\n      var err = new Error('Server does not support secure connection');\n\n      err.code = 'HANDSHAKE_NO_SSL_SUPPORT';\n      err.fatal = true;\n\n      this.end(err);\n      return;\n    }\n\n    this._config.clientFlags |= ClientConstants.CLIENT_SSL;\n    this.emit('packet', new Packets.SSLRequestPacket({\n      clientFlags   : this._config.clientFlags,\n      maxPacketSize : this._config.maxPacketSize,\n      charsetNumber : this._config.charsetNumber\n    }));\n    this.emit('start-tls');\n  } else {\n    this._sendCredentials();\n  }\n};\n\nHandshake.prototype._tlsUpgradeCompleteHandler = function() {\n  this._sendCredentials();\n};\n\nHandshake.prototype._sendCredentials = function() {\n  var packet = this._handshakeInitializationPacket;\n  this.emit('packet', new Packets.ClientAuthenticationPacket({\n    clientFlags   : this._config.clientFlags,\n    maxPacketSize : this._config.maxPacketSize,\n    charsetNumber : this._config.charsetNumber,\n    user          : this._config.user,\n    database      : this._config.database,\n    protocol41    : packet.protocol41,\n    scrambleBuff  : (packet.protocol41)\n                     ? Auth.token(this._config.password, packet.scrambleBuff())\n                     : Auth.scramble323(packet.scrambleBuff(), this._config.password)\n  }));\n};\n\nHandshake.prototype['UseOldPasswordPacket'] = function() {\n  if (!this._config.insecureAuth) {\n    var err = new Error(\n      'MySQL server is requesting the old and insecure pre-4.1 auth mechanism.' +\n      'Upgrade the user password or use the {insecureAuth: true} option.'\n    );\n\n    err.code = 'HANDSHAKE_INSECURE_AUTH';\n    err.fatal = true;\n\n    this.end(err);\n    return;\n  }\n\n  this.emit('packet', new Packets.OldPasswordPacket({\n    scrambleBuff: Auth.scramble323(this._handshakeInitializationPacket.scrambleBuff(), this._config.password)\n  }));\n};\n\nHandshake.prototype['ErrorPacket'] = function(packet) {\n  var err = this._packetToError(packet, true);\n  err.fatal = true;\n  this.end(err);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/protocol/sequences/Handshake.js\n// module id = 164\n// module chunks = 0","var Sequence = require('./Sequence');\nvar Util     = require('util');\nvar Packets  = require('../packets');\n\nmodule.exports = Ping;\nUtil.inherits(Ping, Sequence);\n\nfunction Ping(options, callback) {\n  if (!callback && typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  Sequence.call(this, options, callback);\n}\n\nPing.prototype.start = function() {\n  this.emit('packet', new Packets.ComPingPacket());\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/protocol/sequences/Ping.js\n// module id = 165\n// module chunks = 0","var Sequence = require('./Sequence');\nvar Util     = require('util');\nvar Packets  = require('../packets');\n\nmodule.exports = Quit;\nUtil.inherits(Quit, Sequence);\nfunction Quit(options, callback) {\n  if (!callback && typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  Sequence.call(this, options, callback);\n}\n\nQuit.prototype.start = function() {\n  this.emit('packet', new Packets.ComQuitPacket());\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/protocol/sequences/Quit.js\n// module id = 166\n// module chunks = 0","var Sequence = require('./Sequence');\nvar Util     = require('util');\nvar Packets  = require('../packets');\n\nmodule.exports = Statistics;\nUtil.inherits(Statistics, Sequence);\nfunction Statistics(options, callback) {\n  if (!callback && typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  Sequence.call(this, options, callback);\n}\n\nStatistics.prototype.start = function() {\n  this.emit('packet', new Packets.ComStatisticsPacket());\n};\n\nStatistics.prototype['StatisticsPacket'] = function (packet) {\n  this.end(null, packet);\n};\n\nStatistics.prototype.determinePacket = function determinePacket(firstByte) {\n  if (firstByte === 0x55) {\n    return Packets.StatisticsPacket;\n  }\n\n  return undefined;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/protocol/sequences/Statistics.js\n// module id = 167\n// module chunks = 0","exports.ChangeUser = require('./ChangeUser');\nexports.Handshake = require('./Handshake');\nexports.Ping = require('./Ping');\nexports.Query = require('./Query');\nexports.Quit = require('./Quit');\nexports.Sequence = require('./Sequence');\nexports.Statistics = require('./Statistics');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/lib/protocol/sequences/index.js\n// module id = 168\n// module chunks = 0","module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/~/isarray/index.js\n// module id = 169\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough))\n    return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function(chunk, encoding, cb) {\n  cb(null, chunk);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/~/readable-stream/lib/_stream_passthrough.js\n// module id = 170\n// module chunks = 0","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = require('stream');\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nif (!process.browser && process.env.READABLE_STREAM === 'disable') {\n  module.exports = require('stream');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mysql/~/readable-stream/readable.js\n// module id = 171\n// module chunks = 0","var assert = require('assert')\n\nvar Reader = module.exports = function(options) {\n  //TODO - remove for version 1.0\n  if(typeof options == 'number') {\n    options = { headerSize: options }\n  }\n  options = options || {}\n  this.offset = 0\n  this.lastChunk = false\n  this.chunk = null\n  this.headerSize = options.headerSize || 0\n  this.lengthPadding = options.lengthPadding || 0\n  this.header = null\n  assert(this.headerSize < 2, 'pre-length header of more than 1 byte length not currently supported')\n}\n\nReader.prototype.addChunk = function(chunk) {\n  this.offset = 0\n  this.chunk = chunk\n  if(this.lastChunk) {\n    this.chunk = Buffer.concat([this.lastChunk, this.chunk])\n    this.lastChunk = false\n  }\n}\n\nReader.prototype._save = function() {\n  //save any unread chunks for next read\n  if(this.offset < this.chunk.length) {\n    this.lastChunk = this.chunk.slice(this.offset)\n  }\n  return false\n}\n\nReader.prototype.read = function() {\n  if(this.chunk.length < (this.headerSize + 4 + this.offset)) {\n    return this._save()\n  }\n\n  if(this.headerSize) {\n    this.header = this.chunk[this.offset]\n  }\n\n  //read length of next item\n  var length = this.chunk.readUInt32BE(this.offset + this.headerSize) + this.lengthPadding\n\n  //next item spans more chunks than we have\n  var remaining = this.chunk.length - (this.offset + 4 + this.headerSize)\n  if(length > remaining) {\n    return this._save()\n  }\n\n  this.offset += (this.headerSize + 4)\n  var result = this.chunk.slice(this.offset, this.offset + length)\n  this.offset += length\n  return result\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/packet-reader/index.js\n// module id = 172\n// module chunks = 0","'use strict';\n\nvar url = require('url');\n\n//Parse method copied from https://github.com/brianc/node-postgres\n//Copyright (c) 2010-2014 Brian Carlson (brian.m.carlson@gmail.com)\n//MIT License\n\n//parses a connection string\nfunction parse(str) {\n  var config;\n  //unix socket\n  if(str.charAt(0) === '/') {\n    config = str.split(' ');\n    return { host: config[0], database: config[1] };\n  }\n  // url parse expects spaces encoded as %20\n  if(/ |%[^a-f0-9]|%[a-f0-9][^a-f0-9]/i.test(str)) {\n    str = encodeURI(str).replace(/\\%25(\\d\\d)/g, \"%$1\");\n  }\n  var result = url.parse(str, true);\n  config = {};\n\n  if (result.query.application_name) {\n    config.application_name = result.query.application_name;\n  }\n  if (result.query.fallback_application_name) {\n    config.fallback_application_name = result.query.fallback_application_name;\n  }\n\n  config.port = result.port;\n  if(result.protocol == 'socket:') {\n    config.host = decodeURI(result.pathname);\n    config.database = result.query.db;\n    config.client_encoding = result.query.encoding;\n    return config;\n  }\n  config.host = result.hostname;\n\n  // result.pathname is not always guaranteed to have a '/' prefix (e.g. relative urls)\n  // only strip the slash if it is present.\n  var pathname = result.pathname;\n  if (pathname && pathname.charAt(0) === '/') {\n    pathname = result.pathname.slice(1) || null;\n  }\n  config.database = pathname && decodeURI(pathname);\n\n  var auth = (result.auth || ':').split(':');\n  config.user = auth[0];\n  config.password = auth.splice(1).join(':');\n\n  var ssl = result.query.ssl;\n  if (ssl === 'true' || ssl === '1') {\n    config.ssl = true;\n  }\n\n  return config;\n}\n\nmodule.exports = {\n  parse: parse\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-connection-string/index.js\n// module id = 173\n// module chunks = 0","'use strict';\r\n\r\nvar os = require('os');\r\nvar errorLib = require('./error');\r\n\r\nvar PEC = errorLib.parsingErrorCode;\r\n\r\n// symbols that need no spaces around them:\r\nvar compressors = '.,;:()[]=<>+-*/|!?@#';\r\n\r\n///////////////////////////////////////////\r\n// Parses and minifies a PostgreSQL script.\r\nfunction minify(sql, options) {\r\n\r\n    if (typeof sql !== 'string') {\r\n        throw new TypeError(\"Input SQL must be a text string.\");\r\n    }\r\n\r\n    if (options !== undefined && typeof options !== 'object') {\r\n        throw new TypeError(\"Parameter 'options' must be an object.\");\r\n    }\r\n\r\n    if (!sql.length) {\r\n        return '';\r\n    }\r\n\r\n    var idx = 0, // current index\r\n        result = '', // resulting sql\r\n        len = sql.length, // sql length\r\n        EOL = getEOL(sql), // end-of-line\r\n        space = false, // add a space on the next step\r\n        compress = options && options.compress; // option 'compress'\r\n\r\n    do {\r\n        var s = sql[idx], // current symbol;\r\n            s1 = idx < len - 1 ? sql[idx + 1] : ''; // next symbol;\r\n\r\n        if (isGap(s)) {\r\n            while (++idx < len && isGap(sql[idx]));\r\n            if (idx < len) {\r\n                space = true;\r\n            }\r\n            idx--;\r\n            continue;\r\n        }\r\n\r\n        if (s === '-' && s1 === '-') {\r\n            var lb = sql.indexOf(EOL, idx + 2);\r\n            if (lb < 0) {\r\n                break;\r\n            }\r\n            idx = lb - 1;\r\n            skipGaps();\r\n            continue;\r\n        }\r\n\r\n        if (s === '/' && s1 === '*') {\r\n            var end = sql.indexOf('*/', idx + 2);\r\n            if (end < 0) {\r\n                throwError(PEC.unclosedMLC);\r\n            }\r\n            idx = end + 1;\r\n            skipGaps();\r\n            continue;\r\n        }\r\n\r\n        if (s === '\"') {\r\n            var closeIdx = sql.indexOf('\"', idx + 1);\r\n            if (closeIdx < 0) {\r\n                throwError(PEC.unclosedQI);\r\n            }\r\n            var text = sql.substr(idx, closeIdx - idx + 1);\r\n            if (text.indexOf(EOL) > 0) {\r\n                throwError(PEC.multiLineQI);\r\n            }\r\n            if (compress) {\r\n                space = false;\r\n            }\r\n            addSpace();\r\n            result += text;\r\n            idx = closeIdx;\r\n            skipGaps();\r\n            continue;\r\n        }\r\n\r\n        if (s === '\\'') {\r\n            var closeIdx = idx;\r\n            do {\r\n                closeIdx = sql.indexOf('\\'', closeIdx + 1);\r\n                if (closeIdx > 0) {\r\n                    var step = closeIdx;\r\n                    while (++step < len && sql[step] === '\\'');\r\n                    if ((step - closeIdx) % 2) {\r\n                        closeIdx = step - 1;\r\n                        break;\r\n                    }\r\n                    closeIdx = step === len ? -1 : step;\r\n                }\r\n            } while (closeIdx > 0);\r\n            if (closeIdx < 0) {\r\n                throwError(PEC.unclosedText);\r\n            }\r\n            if (compress) {\r\n                space = false;\r\n            }\r\n            addSpace();\r\n            var text = sql.substr(idx, closeIdx - idx + 1);\r\n            var hasLB = text.indexOf(EOL) > 0;\r\n            if (hasLB) {\r\n                text = text.split(EOL).map(function (m) {\r\n                    return m.replace(/^\\s+|\\s+$/g, '');\r\n                }).join('\\\\n');\r\n            }\r\n            var hasTabs = text.indexOf('\\t') > 0;\r\n            if (hasLB || hasTabs) {\r\n                var prev = idx ? sql[idx - 1] : '';\r\n                if (prev !== 'E' && prev !== 'e') {\r\n                    var r = result ? result[result.length - 1] : '';\r\n                    if (r && r !== ' ' && compressors.indexOf(r) < 0) {\r\n                        result += ' ';\r\n                    }\r\n                    result += 'E';\r\n                }\r\n                if (hasTabs) {\r\n                    text = text.replace(/\\t/g, '\\\\t');\r\n                }\r\n            }\r\n            result += text;\r\n            idx = closeIdx;\r\n            skipGaps();\r\n            continue;\r\n        }\r\n\r\n        if (compress && compressors.indexOf(s) >= 0) {\r\n            space = false;\r\n            skipGaps();\r\n        }\r\n\r\n        addSpace();\r\n        result += s;\r\n\r\n    } while (++idx < len);\r\n\r\n    return result;\r\n\r\n    function skipGaps() {\r\n        if (compress) {\r\n            while (idx < len - 1 && isGap(sql[idx + 1])) {\r\n                idx++;\r\n            }\r\n        }\r\n    }\r\n\r\n    function addSpace() {\r\n        if (space) {\r\n            if (result.length) {\r\n                result += ' ';\r\n            }\r\n            space = false;\r\n        }\r\n    }\r\n\r\n    function throwError(code) {\r\n        var position = getIndexPos(sql, idx, EOL);\r\n        throw new errorLib.SQLParsingError(code, position);\r\n    }\r\n}\r\n\r\n//////////////////////////////////////\r\n// Returns the End-Of-Line from text.\r\nfunction getEOL(text) {\r\n    var idx = 0, unix = 0, windows = 0;\r\n    while (idx < text.length) {\r\n        idx = text.indexOf('\\n', idx);\r\n        if (idx == -1) {\r\n            break;\r\n        }\r\n        if (idx > 0 && text[idx - 1] === '\\r') {\r\n            windows++;\r\n        } else {\r\n            unix++;\r\n        }\r\n        idx++;\r\n    }\r\n    if (unix === windows) {\r\n        return os.EOL;\r\n    }\r\n    return unix > windows ? '\\n' : '\\r\\n';\r\n}\r\n\r\n///////////////////////////////////////////////////////\r\n// Returns {line, column} of an index within the text.\r\nfunction getIndexPos(text, index, eol) {\r\n    var lineIdx = 0, colIdx = index, pos = 0;\r\n    do {\r\n        pos = text.indexOf(eol, pos);\r\n        if (pos == -1 || index < pos + eol.length) {\r\n            break;\r\n        }\r\n        lineIdx++;\r\n        pos += eol.length;\r\n        colIdx = index - pos;\r\n    } while (pos < index);\r\n    return {\r\n        line: lineIdx + 1,\r\n        column: colIdx + 1\r\n    };\r\n}\r\n\r\n////////////////////////////////////\r\n// Identifies a gap / empty symbol.\r\nfunction isGap(s) {\r\n    return s === ' ' || s === '\\t' || s === '\\r' || s === '\\n';\r\n}\r\n\r\nmodule.exports = {\r\n    minify: minify,\r\n\r\n    // these are exported only for testing:\r\n    getEOL: getEOL,\r\n    getIndexPos: getIndexPos\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-minify/lib/parser.js\n// module id = 174\n// module chunks = 0","var Libpq = require('libpq');\nvar EventEmitter = require('events').EventEmitter;\nvar util = require('util');\nvar assert = require('assert');\nvar types = require('pg-types');\n\nvar Client = module.exports = function(config) {\n  if(!(this instanceof Client)) {\n    return new Client(config);\n  }\n\n  config = config || {};\n\n  EventEmitter.call(this);\n  this.pq = new Libpq();\n  this._reading = false;\n  this._read = this._read.bind(this);\n\n  //allow custom type converstion to be passed in\n  this._types = config.types || types;\n\n  //allow config to specify returning results\n  //as an array of values instead of a hash\n  this.arrayMode = config.arrayMode || false;\n  var self = this;\n\n  //lazy start the reader if notifications are listened for\n  //this way if you only run sync queries you wont block\n  //the event loop artificially\n  this.on('newListener', function(event) {\n    if(event != 'notification') return;\n    self._startReading();\n  });\n};\n\nutil.inherits(Client, EventEmitter);\n\nClient.prototype.connect = function(params, cb) {\n  this.pq.connect(params, cb);\n};\n\nClient.prototype.connectSync = function(params) {\n  this.pq.connectSync(params);\n};\n\nClient.prototype._parseResults = function(pq, rows) {\n  var rowCount = pq.ntuples();\n  var colCount = pq.nfields();\n  for(var i = 0; i < rowCount; i++) {\n    var row = this.arrayMode ? [] : {};\n    rows.push(row);\n    for(var j = 0; j < colCount; j++) {\n      var rawValue = pq.getvalue(i, j);\n      var value = rawValue;\n      if(rawValue == '') {\n        if(pq.getisnull(i, j)) {\n          value = null;\n        }\n      } else {\n        value = this._types.getTypeParser(pq.ftype(j))(rawValue);\n      }\n      if(this.arrayMode) {\n        row.push(value);\n      } else {\n        row[pq.fname(j)] = value;\n      }\n    }\n  }\n  return rows;\n}\n\nClient.prototype.end = function(cb) {\n  this._stopReading();\n  this.pq.finish();\n  if(cb) setImmediate(cb);\n};\n\nClient.prototype._readError = function(message) {\n  this._stopReading();\n  var err = new Error(message || this.pq.errorMessage());\n  this.emit('error', err);\n};\n\nClient.prototype._stopReading = function() {\n  if(!this._reading) return;\n  this._reading = false;\n  this.pq.stopReader();\n  this.pq.removeListener('readable', this._read);\n};\n\n//called when libpq is readable\nClient.prototype._read = function() {\n  var pq = this.pq;\n  //read waiting data from the socket\n  //e.g. clear the pending 'select'\n  if(!pq.consumeInput()) {\n    //if consumeInput returns false\n    //than a read error has been encountered\n    return this._readError();\n  }\n\n  //check if there is still outstanding data\n  //if so, wait for it all to come in\n  if(pq.isBusy()) {\n    return;\n  }\n\n  //load our result object\n  var rows = []\n  while(pq.getResult()) {\n    if(pq.resultStatus() == 'PGRES_TUPLES_OK') {\n      this._parseResults(this.pq, rows);\n    }\n    if(pq.resultStatus() == 'PGRES_COPY_OUT')  break;\n  }\n\n\n  var status = pq.resultStatus();\n  switch(status) {\n    case 'PGRES_FATAL_ERROR':\n      return this._readError();\n    case 'PGRES_COMMAND_OK':\n    case 'PGRES_TUPLES_OK':\n    case 'PGRES_COPY_OUT':\n    case 'PGRES_EMPTY_QUERY': {\n      this.emit('result', rows);\n      break;\n    }\n    default:\n      return this._readError('unrecognized command status: ' + status);\n  }\n\n  var notice;\n  while(notice = this.pq.notifies()) {\n    this.emit('notification', notice);\n  }\n};\n\n//ensures the client is reading and\n//everything is set up for async io\nClient.prototype._startReading = function() {\n  if(this._reading) return;\n  this._reading = true;\n  this.pq.on('readable', this._read);\n  this.pq.startReader();\n};\n\nvar throwIfError = function(pq) {\n  var err = pq.resultErrorMessage() || pq.errorMessage();\n  if(err) {\n    throw new Error(err);\n  }\n}\n\nClient.prototype._awaitResult = function(cb) {\n  var self = this;\n  var onError = function(e) {\n    self.removeListener('error', onError);\n    self.removeListener('result', onResult);\n    cb(e);\n  };\n\n  var onResult = function(rows) {\n    self.removeListener('error', onError);\n    self.removeListener('result', onResult);\n    cb(null, rows);\n  };\n  this.once('error', onError);\n  this.once('result', onResult);\n  this._startReading();\n};\n\n//wait for the writable socket to drain\nClient.prototype.waitForDrain = function(pq, cb) {\n  var res = pq.flush();\n  //res of 0 is success\n  if(res === 0) return cb();\n\n  //res of -1 is failure\n  if(res === -1) return cb(pq.errorMessage());\n\n  //otherwise outgoing message didn't flush to socket\n  //wait for it to flush and try again\n  var self = this\n  //you cannot read & write on a socket at the same time\n  return pq.writable(function() {\n    self.waitForDrain(pq, cb)\n  });\n};\n\n//send an async query to libpq and wait for it to\n//finish writing query text to the socket\nClient.prototype.dispatchQuery = function(pq, fn, cb) {\n  this._stopReading();\n  var success = pq.setNonBlocking(true);\n  if(!success) return cb(new Error('Unable to set non-blocking to true'));\n  var sent = fn();\n  if(!sent) return cb(new Error(pq.errorMessage() || 'Something went wrong dispatching the query'));\n  this.waitForDrain(pq, cb);\n};\n\nClient.prototype.query = function(text, values, cb) {\n  var queryFn;\n\n  if(typeof values == 'function') {\n    cb = values;\n    queryFn = function() { return self.pq.sendQuery(text); };\n  } else {\n    queryFn = function() { return self.pq.sendQueryParams(text, values); };\n  }\n\n  var self = this\n\n  self.dispatchQuery(self.pq, queryFn, function(err) {\n    if(err) return cb(err);\n\n    self._awaitResult(cb)\n  });\n};\n\nClient.prototype.prepare = function(statementName, text, nParams, cb) {\n  var self = this;\n  var fn = function() {\n    return self.pq.sendPrepare(statementName, text, nParams);\n  }\n\n  self.dispatchQuery(self.pq, fn, function(err) {\n    if(err) return cb(err);\n    self._awaitResult(cb);\n  });\n};\n\nClient.prototype.execute = function(statementName, parameters, cb) {\n  var self = this;\n\n  var fn = function() {\n    return self.pq.sendQueryPrepared(statementName, parameters);\n  };\n\n  self.dispatchQuery(self.pq, fn, function(err, rows) {\n    if(err) return cb(err);\n    self._awaitResult(cb)\n  });\n};\n\nvar CopyStream = require('./lib/copy-stream');\nClient.prototype.getCopyStream = function() {\n  this.pq.setNonBlocking(true);\n  this._stopReading();\n  return new CopyStream(this.pq);\n};\n\n//cancel a currently executing query\nClient.prototype.cancel = function(cb) {\n  assert(cb, 'Callback is required');\n  //result is either true or a string containing an error\n  var result = this.pq.cancel();\n  return setImmediate(function() {\n    cb(result === true ? undefined : new Error(result));\n  });\n};\n\nClient.prototype.querySync = function(text, values) {\n  var queryFn;\n  var pq = this.pq;\n  pq[values ? 'execParams' : 'exec'].call(pq, text, values);\n  throwIfError(this.pq);\n  return this._parseResults(pq, []);\n};\n\nClient.prototype.prepareSync = function(statementName, text, nParams) {\n  this.pq.prepare(statementName, text, nParams);\n  throwIfError(this.pq);\n};\n\nClient.prototype.executeSync = function(statementName, parameters) {\n  this.pq.execPrepared(statementName, parameters);\n  throwIfError(this.pq);\n  return this._parseResults(this.pq, []);\n};\n\nClient.prototype.escapeLiteral = function(value) {\n  return this.pq.escapeLiteral(value);\n};\n\nClient.prototype.escapeIdentifier = function(value) {\n  return this.pq.escapeIdentifier(value);\n};\n\n//export the version number so we can check it in node-postgres\nmodule.exports.version = require('./package.json').version\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-native/index.js\n// module id = 175\n// module chunks = 0","var Duplex = require('stream').Duplex;\nvar Writable = require('stream').Writable;\nvar util = require('util');\n\nvar CopyStream = module.exports = function(pq, options) {\n  Duplex.call(this, options);\n  this.pq = pq;\n  this._reading = false;\n};\n\nutil.inherits(CopyStream, Duplex);\n\n//writer methods\nCopyStream.prototype._write = function(chunk, encoding, cb) {\n  var result = this.pq.putCopyData(chunk);\n\n  //sent successfully\n  if(result === 1) return cb();\n\n  //error\n  if(result === -1) return cb(new Error(this.pq.errorMessage()));\n\n  //command would block. wait for writable and call again.\n  var self = this;\n  this.pq.writable(function() {\n    self._write(chunk, encoding, cb);\n  });\n};\n\nCopyStream.prototype.end = function() {\n  var args = Array.prototype.slice.call(arguments, 0);\n  var self = this;\n\n  var callback = args.pop();\n\n  if(args.length) {\n    this.write(args[0]);\n  }\n  var result = this.pq.putCopyEnd();\n\n  //sent successfully\n  if(result === 1) {\n    //consume our results and then call 'end' on the\n    //\"parent\" writable class so we can emit 'finish' and\n    //all that jazz\n    return consumeResults(this.pq, function(err, res) {\n      Writable.prototype.end.call(self);\n\n      //handle possible passing of callback to end method\n      if(callback) {\n        callback();\n      }\n    });\n  }\n\n  //error\n  if(result === -1) {\n    var err = new Error(this.pq.errorMessage());\n    return this.emit('error', err);\n  }\n\n  //command would block. wait for writable and call end again\n  //don't pass any buffers to end on the second call because\n  //we already sent them to possible this.write the first time\n  //we called end\n  return this.pq.writable(function() {\n    return self.end.apply(self, callback);\n  });\n};\n\n//reader methods\nCopyStream.prototype._consumeBuffer = function(cb) {\n  var result = this.pq.getCopyData(true);\n  if(result instanceof Buffer) {\n    return setImmediate(function() {\n      cb(null, result);\n    })\n  }\n  if(result === -1) {\n    //end of stream\n    return cb(null, null);\n  }\n  if(result === 0) {\n    var self = this;\n    this.pq.once('readable', function() {\n      self.pq.stopReader();\n      self.pq.consumeInput();\n      self._consumeBuffer(cb);\n    });\n    return this.pq.startReader();\n  }\n  cb(new Error('Unrecognized read status: ' + result))\n};\n\nCopyStream.prototype._read = function(size) {\n  if(this._reading) return;\n  this._reading = true;\n  //console.log('read begin');\n  var self = this\n  this._consumeBuffer(function(err, buffer) {\n    self._reading = false;\n    if(err) {\n      return self.emit('error', err)\n    }\n    if(buffer === false) {\n      //nothing to read for now, return\n      return;\n    }\n    self.push(buffer);\n  });\n};\n\nvar consumeResults = function(pq, cb) {\n\n  var cleanup = function() {\n    pq.removeListener('readable', onReadable);\n    pq.stopReader();\n  }\n\n  var readError = function(message) {\n    cleanup();\n    return cb(new Error(message || pq.errorMessage()));\n  };\n\n\n  var onReadable = function() {\n\n    //read waiting data from the socket\n    //e.g. clear the pending 'select'\n    if(!pq.consumeInput()) {\n      return readError();\n    }\n\n    //check if there is still outstanding data\n    //if so, wait for it all to come in\n    if(pq.isBusy()) {\n      return;\n    }\n\n    //load our result object\n    pq.getResult();\n\n    //\"read until results return null\"\n    //or in our case ensure we only have one result\n    if(pq.getResult() && pq.resultStatus() != 'PGRES_COPY_OUT') {\n      return readError('Only one result at a time is accepted');\n    }\n\n    if(pq.resultStatus() == 'PGRES_FATAL_ERROR') {\n      return readError();\n    }\n\n    cleanup();\n    return cb(null);\n  };\n  pq.on('readable', onReadable);\n  pq.startReader();\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-native/lib/copy-stream.js\n// module id = 176\n// module chunks = 0","var textParsers = require('./lib/textParsers');\nvar binaryParsers = require('./lib/binaryParsers');\nvar arrayParser = require('./lib/arrayParser');\n\nvar typeParsers = {\n  text: {},\n  binary: {}\n};\n\n//the empty parse function\nvar noParse = function(val) {\n  return String(val);\n};\n\n//returns a function used to convert a specific type (specified by\n//oid) into a result javascript type\n//note: the oid can be obtained via the following sql query:\n//SELECT oid FROM pg_type WHERE typname = 'TYPE_NAME_HERE';\nvar getTypeParser = function(oid, format) {\n  format = format || 'text';\n  if (!typeParsers[format]) {\n    return noParse;\n  }\n  return typeParsers[format][oid] || noParse;\n};\n\nvar setTypeParser = function(oid, format, parseFn) {\n  if(typeof format == 'function') {\n    parseFn = format;\n    format = 'text';\n  }\n  typeParsers[format][oid] = parseFn;\n};\n\ntextParsers.init(function(oid, converter) {\n  typeParsers.text[oid] = converter;\n});\n\nbinaryParsers.init(function(oid, converter) {\n  typeParsers.binary[oid] = converter;\n});\n\nmodule.exports = {\n  getTypeParser: getTypeParser,\n  setTypeParser: setTypeParser,\n  arrayParser: arrayParser\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-native/~/pg-types/index.js\n// module id = 177\n// module chunks = 0","var parseBits = function(data, bits, offset, invert, callback) {\n  offset = offset || 0;\n  invert = invert || false;\n  callback = callback || function(lastValue, newValue, bits) { return (lastValue * Math.pow(2, bits)) + newValue; };\n  var offsetBytes = offset >> 3;\n\n  var inv = function(value) {\n    if (invert) {\n      return ~value & 0xff;\n    }\n\n    return value;\n  };\n\n  // read first (maybe partial) byte\n  var mask = 0xff;\n  var firstBits = 8 - (offset % 8);\n  if (bits < firstBits) {\n    mask = (0xff << (8 - bits)) & 0xff;\n    firstBits = bits;\n  }\n\n  if (offset) {\n    mask = mask >> (offset % 8);\n  }\n\n  var result = 0;\n  if ((offset % 8) + bits >= 8) {\n    result = callback(0, inv(data[offsetBytes]) & mask, firstBits);\n  }\n\n  // read bytes\n  var bytes = (bits + offset) >> 3;\n  for (var i = offsetBytes + 1; i < bytes; i++) {\n    result = callback(result, inv(data[i]), 8);\n  }\n\n  // bits to read, that are not a complete byte\n  var lastBits = (bits + offset) % 8;\n  if (lastBits > 0) {\n    result = callback(result, inv(data[bytes]) >> (8 - lastBits), lastBits);\n  }\n\n  return result;\n};\n\nvar parseFloatFromBits = function(data, precisionBits, exponentBits) {\n  var bias = Math.pow(2, exponentBits - 1) - 1;\n  var sign = parseBits(data, 1);\n  var exponent = parseBits(data, exponentBits, 1);\n\n  if (exponent === 0) {\n    return 0;\n  }\n\n  // parse mantissa\n  var precisionBitsCounter = 1;\n  var parsePrecisionBits = function(lastValue, newValue, bits) {\n    if (lastValue === 0) {\n      lastValue = 1;\n    }\n\n    for (var i = 1; i <= bits; i++) {\n      precisionBitsCounter /= 2;\n      if ((newValue & (0x1 << (bits - i))) > 0) {\n        lastValue += precisionBitsCounter;\n      }\n    }\n\n    return lastValue;\n  };\n\n  var mantissa = parseBits(data, precisionBits, exponentBits + 1, false, parsePrecisionBits);\n\n  // special cases\n  if (exponent == (Math.pow(2, exponentBits + 1) - 1)) {\n    if (mantissa === 0) {\n      return (sign === 0) ? Infinity : -Infinity;\n    }\n\n    return NaN;\n  }\n\n  // normale number\n  return ((sign === 0) ? 1 : -1) * Math.pow(2, exponent - bias) * mantissa;\n};\n\nvar parseInt16 = function(value) {\n  if (parseBits(value, 1) == 1) {\n    return -1 * (parseBits(value, 15, 1, true) + 1);\n  }\n\n  return parseBits(value, 15, 1);\n};\n\nvar parseInt32 = function(value) {\n  if (parseBits(value, 1) == 1) {\n    return -1 * (parseBits(value, 31, 1, true) + 1);\n  }\n\n  return parseBits(value, 31, 1);\n};\n\nvar parseFloat32 = function(value) {\n  return parseFloatFromBits(value, 23, 8);\n};\n\nvar parseFloat64 = function(value) {\n  return parseFloatFromBits(value, 52, 11);\n};\n\nvar parseNumeric = function(value) {\n  var sign = parseBits(value, 16, 32);\n  if (sign == 0xc000) {\n    return NaN;\n  }\n\n  var weight = Math.pow(10000, parseBits(value, 16, 16));\n  var result = 0;\n\n  var digits = [];\n  var ndigits = parseBits(value, 16);\n  for (var i = 0; i < ndigits; i++) {\n    result += parseBits(value, 16, 64 + (16 * i)) * weight;\n    weight /= 10000;\n  }\n\n  var scale = Math.pow(10, parseBits(value, 16, 48));\n  return ((sign === 0) ? 1 : -1) * Math.round(result * scale) / scale;\n};\n\nvar parseDate = function(isUTC, value) {\n  var sign = parseBits(value, 1);\n  var rawValue = parseBits(value, 63, 1);\n\n  // discard usecs and shift from 2000 to 1970\n  var result = new Date((((sign === 0) ? 1 : -1) * rawValue / 1000) + 946684800000);\n\n  if (!isUTC) {\n    result.setTime(result.getTime() + result.getTimezoneOffset() * 60000);\n  }\n\n  // add microseconds to the date\n  result.usec = rawValue % 1000;\n  result.getMicroSeconds = function() {\n    return this.usec;\n  };\n  result.setMicroSeconds = function(value) {\n    this.usec = value;\n  };\n  result.getUTCMicroSeconds = function() {\n    return this.usec;\n  };\n\n  return result;\n};\n\nvar parseArray = function(value) {\n  var dim = parseBits(value, 32);\n\n  var flags = parseBits(value, 32, 32);\n  var elementType = parseBits(value, 32, 64);\n\n  var offset = 96;\n  var dims = [];\n  for (var i = 0; i < dim; i++) {\n    // parse dimension\n    dims[i] = parseBits(value, 32, offset);\n    offset += 32;\n\n    // ignore lower bounds\n    offset += 32;\n  }\n\n  var parseElement = function(elementType) {\n    // parse content length\n    var length = parseBits(value, 32, offset);\n    offset += 32;\n\n    // parse null values\n    if (length == 0xffffffff) {\n      return null;\n    }\n\n    var result;\n    if ((elementType == 0x17) || (elementType == 0x14)) {\n      // int/bigint\n      result = parseBits(value, length * 8, offset);\n      offset += length * 8;\n      return result;\n    }\n    else if (elementType == 0x19) {\n      // string\n      result = value.toString(this.encoding, offset >> 3, (offset += (length << 3)) >> 3);\n      return result;\n    }\n    else {\n      console.log(\"ERROR: ElementType not implemented: \" + elementType);\n    }\n  };\n\n  var parse = function(dimension, elementType) {\n    var array = [];\n    var i;\n\n    if (dimension.length > 1) {\n      var count = dimension.shift();\n      for (i = 0; i < count; i++) {\n        array[i] = parse(dimension, elementType);\n      }\n      dimension.unshift(count);\n    }\n    else {\n      for (i = 0; i < dimension[0]; i++) {\n        array[i] = parseElement(elementType);\n      }\n    }\n\n    return array;\n  };\n\n  return parse(dims, elementType);\n};\n\nvar parseText = function(value) {\n  return value.toString('utf8');\n};\n\nvar parseBool = function(value) {\n  if(value === null) return null;\n  return (parseBits(value, 8) > 0);\n};\n\nvar init = function(register) {\n  register(21, parseInt16);\n  register(23, parseInt32);\n  register(26, parseInt32);\n  register(1700, parseNumeric);\n  register(700, parseFloat32);\n  register(701, parseFloat64);\n  register(16, parseBool);\n  register(1114, parseDate.bind(null, false));\n  register(1184, parseDate.bind(null, true));\n  register(1000, parseArray);\n  register(1007, parseArray);\n  register(1016, parseArray);\n  register(1008, parseArray);\n  register(1009, parseArray);\n  register(25, parseText);\n};\n\nmodule.exports = {\n  init: init\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-native/~/pg-types/lib/binaryParsers.js\n// module id = 178\n// module chunks = 0","var arrayParser = require(__dirname + \"/arrayParser.js\");\n\n//parses PostgreSQL server formatted date strings into javascript date objects\nvar parseDate = function(isoDate) {\n  //TODO this could do w/ a refactor\n  var dateMatcher = /(\\d{1,})-(\\d{2})-(\\d{2}) (\\d{2}):(\\d{2}):(\\d{2})(\\.\\d{1,})?/;\n\n  var match = dateMatcher.exec(isoDate);\n  //could not parse date\n  if(!match) {\n    dateMatcher = /^(\\d{1,})-(\\d{2})-(\\d{2})$/;\n    match = dateMatcher.test(isoDate);\n    if(!match) {\n      return null;\n    } else {\n      //it is a date in YYYY-MM-DD format\n      //add time portion to force js to parse as local time\n      return new Date(isoDate + ' 00:00:00');\n    }\n  }\n  var isBC = /BC$/.test(isoDate);\n  var _year = parseInt(match[1], 10);\n  var isFirstCentury = (_year > 0) && (_year < 100);\n  var year = (isBC ? \"-\" : \"\") + match[1];\n\n  var month = parseInt(match[2],10)-1;\n  var day = match[3];\n  var hour = parseInt(match[4],10);\n  var min = parseInt(match[5],10);\n  var seconds = parseInt(match[6], 10);\n\n  var miliString = match[7];\n  var mili = 0;\n  if(miliString) {\n    mili = 1000 * parseFloat(miliString);\n  }\n\n  //match timezones like the following:\n  //Z (UTC)\n  //-05\n  //+06:30\n  var tZone = /([Z|+\\-])(\\d{2})?:?(\\d{2})?:?(\\d{2})?/.exec(isoDate.split(' ')[1]);\n  //minutes to adjust for timezone\n  var tzAdjust = 0;\n  var tzSign = 1;\n  var date;\n  if(tZone) {\n    var type = tZone[1];\n    switch(type) {\n    case 'Z':\n      break;\n    case '-':\n      tzSign = -1;\n    case '+':\n      tzAdjust = tzSign * (\n        (parseInt(tZone[2], 10) * 3600) +\n        (parseInt(tZone[3] || 0, 10) * 60) +\n        (parseInt(tZone[4] || 0, 10))\n      );\n      break;\n    default:\n      throw new Error(\"Unidentifed tZone part \" + type);\n    }\n\n    var utcOffset = Date.UTC(year, month, day, hour, min, seconds, mili);\n\n    date = new Date(utcOffset - (tzAdjust * 1000));\n  }\n  //no timezone information\n  else {\n    date = new Date(year, month, day, hour, min, seconds, mili);\n  }\n\n  if (isFirstCentury) {\n    date.setUTCFullYear(year);\n  }\n\n  return date;\n};\n\nvar parseBool = function(val) {\n  if(val === null) return val;\n  return val === 't';\n};\n\nvar parseBoolArray = function(val) {\n  if(!val) { return null; }\n  var p = arrayParser.create(val, function(entry){\n    if(entry !== null) {\n      entry = parseBool(entry);\n    }\n    return entry;\n  });\n\n  return p.parse();\n};\n\nvar parseIntegerArray = function(val) {\n  if(!val) { return null; }\n  var p = arrayParser.create(val, function(entry){\n    if(entry !== null) {\n      entry = parseInt(entry, 10);\n    }\n    return entry;\n  });\n\n  return p.parse();\n};\n\nvar parseBigIntegerArray = function(val) {\n  if(!val) { return null; }\n  var p = arrayParser.create(val, function(entry){\n    if(entry !== null) {\n      entry = parseBigInteger(entry).trim();\n    }\n    return entry;\n  });\n\n  return p.parse();\n};\n\nvar parseFloatArray = function(val) {\n  if(!val) { return null; }\n  var p = arrayParser.create(val, function(entry) {\n    if(entry !== null) {\n      entry = parseFloat(entry);\n    }\n    return entry;\n  });\n\n  return p.parse();\n};\n\nvar parseStringArray = function(val) {\n  if(!val) { return null; }\n\n  var p = arrayParser.create(val);\n  return p.parse();\n};\n\nvar parseDateArray = function(val) {\n  if (!val) { return null; }\n\n  var p = arrayParser.create(val, function(entry) {\n    if (entry !== null) {\n      entry = parseDate(entry);\n    }\n    return entry;\n  });\n\n  return p.parse();\n};\n\nvar NUM = '([+-]?\\\\d+)';\nvar YEAR = NUM + '\\\\s+years?';\nvar MON = NUM + '\\\\s+mons?';\nvar DAY = NUM + '\\\\s+days?';\nvar TIME = '([+-])?(\\\\d\\\\d):(\\\\d\\\\d):(\\\\d\\\\d)';\nvar INTERVAL = [YEAR,MON,DAY,TIME].map(function(p){\n  return \"(\"+p+\")?\";\n}).join('\\\\s*');\n\nvar parseInterval = function(val) {\n  if (!val) { return {}; }\n  var m = new RegExp(INTERVAL).exec(val);\n  var i = {};\n  if (m[2]) { i.years = parseInt(m[2], 10); }\n  if (m[4]) { i.months = parseInt(m[4], 10); }\n  if (m[6]) { i.days = parseInt(m[6], 10); }\n  if (m[9]) { i.hours = parseInt(m[9], 10); }\n  if (m[10]) { i.minutes = parseInt(m[10], 10); }\n  if (m[11]) { i.seconds = parseInt(m[11], 10); }\n  if (m[8] == '-'){\n    if (i.hours) { i.hours *= -1; }\n    if (i.minutes) { i.minutes *= -1; }\n    if (i.seconds) { i.seconds *= -1; }\n  }\n  for (var field in i){\n    if (i[field] === 0) {\n      delete i[field];\n    }\n  }\n  return i;\n};\n\nvar parseByteA = function(val) {\n  if(/^\\\\x/.test(val)){\n    // new 'hex' style response (pg >9.0)\n    return new Buffer(val.substr(2), 'hex');\n  }else{\n    var out = \"\";\n    var i = 0;\n    while(i < val.length){\n      if(val[i] != \"\\\\\"){\n        out += val[i];\n        ++i;\n      }else{\n        if(val.substr(i+1,3).match(/[0-7]{3}/)){\n          out += String.fromCharCode(parseInt(val.substr(i+1,3),8));\n          i += 4;\n        }else{\n          backslashes = 1;\n          while(i+backslashes < val.length && val[i+backslashes] == \"\\\\\")\n            backslashes++;\n          for(k=0; k<Math.floor(backslashes/2); ++k)\n            out += \"\\\\\";\n          i += Math.floor(backslashes / 2) * 2;\n        }\n      }\n    }\n    return new Buffer(out,\"binary\");\n  }\n};\n\nvar maxLen = Number.MAX_VALUE.toString().length;\n\nvar parseInteger = function(val) {\n  return parseInt(val, 10);\n};\n\nvar parseBigInteger = function(val) {\n  var valStr = String(val);\n  if (/^\\d+$/.test(valStr)) { return valStr; }\n  return val;\n};\n\nvar parseJsonArray = function(val) {\n  var arr = parseStringArray(val);\n\n  if (!arr) {\n    return arr;\n  }\n\n  return arr.map(function(el) { return JSON.parse(el); });\n};\n\nvar init = function(register) {\n  register(20, parseBigInteger); // int8\n  register(21, parseInteger); // int2\n  register(23, parseInteger); // int4\n  register(26, parseInteger); // oid\n  register(700, parseFloat); // float4/real\n  register(701, parseFloat); // float8/double\n  register(16, parseBool);\n  register(1082, parseDate); // date\n  register(1114, parseDate); // timestamp without timezone\n  register(1184, parseDate); // timestamp\n  register(1000, parseBoolArray);\n  register(1005, parseIntegerArray); // _int2\n  register(1007, parseIntegerArray); // _int4\n  register(1016, parseBigIntegerArray); // _int8\n  register(1021, parseFloatArray); // _float4\n  register(1022, parseFloatArray); // _float8\n  register(1231, parseFloatArray); // _numeric\n  register(1014, parseStringArray); //char\n  register(1015, parseStringArray); //varchar\n  register(1008, parseStringArray);\n  register(1009, parseStringArray);\n  register(1115, parseDateArray); // timestamp without time zone[]\n  register(1182, parseDateArray); // _date\n  register(1185, parseDateArray); // timestamp with time zone[]\n  register(1186, parseInterval);\n  register(17, parseByteA);\n  register(114, JSON.parse.bind(JSON));\n  register(3802, JSON.parse.bind(JSON));\n  register(199, parseJsonArray); // json[]\n  register(2951, parseStringArray); // uuid[]\n};\n\nmodule.exports = {\n  init: init\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-native/~/pg-types/lib/textParsers.js\n// module id = 179\n// module chunks = 0","module.exports = {\n\t\"_args\": [\n\t\t[\n\t\t\t{\n\t\t\t\t\"raw\": \"pg-native@^1.10.0\",\n\t\t\t\t\"scope\": null,\n\t\t\t\t\"escapedName\": \"pg-native\",\n\t\t\t\t\"name\": \"pg-native\",\n\t\t\t\t\"rawSpec\": \"^1.10.0\",\n\t\t\t\t\"spec\": \">=1.10.0 <2.0.0\",\n\t\t\t\t\"type\": \"range\"\n\t\t\t},\n\t\t\t\"/home/neil/DevGit/zf2dbmodelgen/modgen\"\n\t\t]\n\t],\n\t\"_from\": \"pg-native@>=1.10.0 <2.0.0\",\n\t\"_id\": \"pg-native@1.10.0\",\n\t\"_inCache\": true,\n\t\"_location\": \"/pg-native\",\n\t\"_nodeVersion\": \"5.1.0\",\n\t\"_npmUser\": {\n\t\t\"name\": \"brianc\",\n\t\t\"email\": \"brian.m.carlson@gmail.com\"\n\t},\n\t\"_npmVersion\": \"3.3.12\",\n\t\"_phantomChildren\": {\n\t\t\"core-util-is\": \"1.0.2\",\n\t\t\"inherits\": \"2.0.3\",\n\t\t\"string_decoder\": \"0.10.31\"\n\t},\n\t\"_requested\": {\n\t\t\"raw\": \"pg-native@^1.10.0\",\n\t\t\"scope\": null,\n\t\t\"escapedName\": \"pg-native\",\n\t\t\"name\": \"pg-native\",\n\t\t\"rawSpec\": \"^1.10.0\",\n\t\t\"spec\": \">=1.10.0 <2.0.0\",\n\t\t\"type\": \"range\"\n\t},\n\t\"_requiredBy\": [\n\t\t\"#USER\",\n\t\t\"/\"\n\t],\n\t\"_resolved\": \"https://registry.npmjs.org/pg-native/-/pg-native-1.10.0.tgz\",\n\t\"_shasum\": \"abe299214afa2be51db5f5104e14770c738230fd\",\n\t\"_shrinkwrap\": null,\n\t\"_spec\": \"pg-native@^1.10.0\",\n\t\"_where\": \"/home/neil/DevGit/zf2dbmodelgen/modgen\",\n\t\"author\": {\n\t\t\"name\": \"Brian M. Carlson\"\n\t},\n\t\"bugs\": {\n\t\t\"url\": \"https://github.com/brianc/node-pg-native/issues\"\n\t},\n\t\"dependencies\": {\n\t\t\"libpq\": \"^1.7.0\",\n\t\t\"pg-types\": \"1.6.0\",\n\t\t\"readable-stream\": \"1.0.31\"\n\t},\n\t\"description\": \"A slightly nicer interface to Postgres over node-libpq\",\n\t\"devDependencies\": {\n\t\t\"async\": \"^0.9.0\",\n\t\t\"concat-stream\": \"^1.4.6\",\n\t\t\"generic-pool\": \"^2.1.1\",\n\t\t\"lodash\": \"^2.4.1\",\n\t\t\"mocha\": \"^1.21.4\",\n\t\t\"okay\": \"^0.3.0\",\n\t\t\"pg\": \"*\",\n\t\t\"semver\": \"^4.1.0\"\n\t},\n\t\"directories\": {},\n\t\"dist\": {\n\t\t\"shasum\": \"abe299214afa2be51db5f5104e14770c738230fd\",\n\t\t\"tarball\": \"https://registry.npmjs.org/pg-native/-/pg-native-1.10.0.tgz\"\n\t},\n\t\"gitHead\": \"8c60a074739aa2ed26e6d83e8dbd965ba0f2c953\",\n\t\"homepage\": \"https://github.com/brianc/node-pg-native\",\n\t\"keywords\": [\n\t\t\"postgres\",\n\t\t\"pg\",\n\t\t\"libpq\"\n\t],\n\t\"license\": \"MIT\",\n\t\"main\": \"index.js\",\n\t\"maintainers\": [\n\t\t{\n\t\t\t\"name\": \"brianc\",\n\t\t\t\"email\": \"brian.m.carlson@gmail.com\"\n\t\t}\n\t],\n\t\"name\": \"pg-native\",\n\t\"optionalDependencies\": {},\n\t\"readme\": \"ERROR: No README data found!\",\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"git://github.com/brianc/node-pg-native.git\"\n\t},\n\t\"scripts\": {\n\t\t\"test\": \"mocha\"\n\t},\n\t\"version\": \"1.10.0\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-native/package.json\n// module id = 180\n// module chunks = 0","'use strict';\r\n\r\n/**\r\n * ES6 generators\r\n * @module async\r\n * @author Vitaly Tomilov\r\n * @private\r\n */\r\nmodule.exports = config => {\r\n\r\n    /////////////////////////////////\r\n    // Generator-to-Promise adapter;\r\n    //\r\n    // Based on: https://www.promisejs.org/generators/#both\r\n    return generator => {\r\n        var $p = config.promise;\r\n        return function () {\r\n            var g = generator.apply(this, arguments);\r\n\r\n            var handle = result => {\r\n                if (result.done) {\r\n                    return $p.resolve(result.value);\r\n                }\r\n                return $p.resolve(result.value)\r\n                    .then(data => handle(g.next(data)))\r\n                    .catch(err => handle(g.throw(err)));\r\n            };\r\n\r\n            return handle(g.next());\r\n        };\r\n    };\r\n\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/lib/async.js\n// module id = 181\n// module chunks = 0","'use strict';\r\n\r\n/**\r\n * @constructor ConnectionContext\r\n * @private\r\n * @summary Connection context object.\r\n * @param {object} cn\r\n * @param {} dc\r\n * @param {object} options\r\n * @param {object} db\r\n * @param {number} txLevel\r\n */\r\nfunction ConnectionContext(cn, dc, options, db, txLevel) {\r\n\r\n    this.cn = cn; // connection details;\r\n    this.dc = dc; // database context;\r\n    this.options = options; // library options;\r\n    this.db = db; // database session;\r\n    this.txLevel = txLevel; // transaction level;\r\n\r\n    this.connect = function (db) {\r\n        this.db = db;\r\n    };\r\n\r\n    this.disconnect = function () {\r\n        if (this.db) {\r\n            this.db.done();\r\n            this.db = null;\r\n        }\r\n    };\r\n\r\n    this.clone = function () {\r\n        return new ConnectionContext(this.cn, this.dc, this.options, this.db, this.txLevel);\r\n    };\r\n}\r\n\r\n/**\r\n * Connection Context\r\n * @module context\r\n * @author Vitaly Tomilov\r\n * @private\r\n */\r\nmodule.exports = ConnectionContext;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/lib/cnContext.js\n// module id = 182\n// module chunks = 0","'use strict';\r\n\r\nvar $npm = {\r\n    con: require('manakin').local,\r\n    utils: require('./utils'),\r\n    events: require('./events')\r\n};\r\n\r\nfunction poolConnect(ctx, config) {\r\n    return config.promise((resolve, reject) => {\r\n        config.pgp.pg.connect(ctx.cn, (err, client, done) => {\r\n            if (err) {\r\n                $npm.events.error(ctx.options, err, {\r\n                    cn: $npm.utils.getSafeConnection(ctx.cn),\r\n                    dc: ctx.dc\r\n                });\r\n                reject(err);\r\n            } else {\r\n                var isFresh = !client.$used;\r\n                if (isFresh) {\r\n                    $npm.utils.addReadProp(client, '$used', true, true);\r\n                }\r\n                setCtx(client, ctx);\r\n                var end = lockClientEnd(client);\r\n                resolve({\r\n                    isFresh: isFresh,\r\n                    client: client,\r\n                    done: () => {\r\n                        client.end = end;\r\n                        done();\r\n                        $npm.events.disconnect(ctx, client);\r\n                    }\r\n                });\r\n                $npm.events.connect(ctx, client, isFresh);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nfunction directConnect(ctx, config) {\r\n    return config.promise((resolve, reject) => {\r\n        var client = new config.pgp.pg.Client(ctx.cn);\r\n        client.connect(err => {\r\n            if (err) {\r\n                $npm.events.error(ctx.options, err, {\r\n                    cn: $npm.utils.getSafeConnection(ctx.cn),\r\n                    dc: ctx.dc\r\n                });\r\n                reject(err);\r\n            } else {\r\n                setCtx(client, ctx);\r\n                var end = lockClientEnd(client);\r\n                resolve({\r\n                    isFresh: true,\r\n                    client: client,\r\n                    done: () => {\r\n                        client.end = end;\r\n                        client.end();\r\n                        $npm.events.disconnect(ctx, client);\r\n                    }\r\n                });\r\n                $npm.events.connect(ctx, client, true);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nfunction lockClientEnd(client) {\r\n    var end = client.end;\r\n    client.end = () => {\r\n        // This call can happen only in the following two cases:\r\n        // 1. the client made the call directly, against the library's documentation (invalid code)\r\n        // 2. connection with the server broke while under heavy communications, and the connection\r\n        //    pool is trying to terminate all clients forcefully.\r\n        $npm.con.error('Abnormal client.end() call, due to invalid code or failed server connection.\\n%s\\n',\r\n            $npm.utils.getLocalStack(3));\r\n        end.call(client);\r\n    };\r\n    return end;\r\n}\r\n\r\nfunction setCtx(client, ctx) {\r\n    Object.defineProperty(client, '$ctx', {\r\n        value: ctx,\r\n        writable: true\r\n    });\r\n}\r\n\r\nmodule.exports = config => ({\r\n    pool: ctx => poolConnect(ctx, config),\r\n    direct: ctx => directConnect(ctx, config)\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/lib/connect.js\n// module id = 183\n// module chunks = 0","'use strict';\r\n\r\nvar $npm = {\r\n    con: require('manakin').local,\r\n    result: require('./result'),\r\n    special: require('./special'),\r\n    context: require('./cnContext'),\r\n    events: require('./events'),\r\n    utils: require('./utils'),\r\n    connect: require('./connect'),\r\n    query: require('./query'),\r\n    task: require('./task')\r\n};\r\n\r\nvar $arr = require('./array');\r\n\r\n/**\r\n * @class Database\r\n * @description\r\n *\r\n * Represents the database protocol, extensible via event {@link event:extend extend}.\r\n * This type is not available directly, it can only be created via the library's base call.\r\n *\r\n * **IMPORTANT:**\r\n *\r\n * For any given connection, you should only create a single {@link Database} object in a separate module,\r\n * to be shared in your application (see the code example below). If instead you keep creating the {@link Database}\r\n * object dynamically, your application will suffer from loss in performance, and will be getting a warning in a\r\n * development environment (when `NODE_ENV` = `development`):\r\n *\r\n * `WARNING: Creating a duplicate database object for the same connection.`\r\n *\r\n * If you ever see this warning, rectify your {@link Database} object initialization, so there is only one object\r\n * per connection details. See the example provided below.\r\n *\r\n * See also: property `noWarnings` in {@link module:pg-promise Initialization Options}.\r\n *\r\n * @param {String|Object} cn\r\n * Database connection details, which can be:\r\n *\r\n * - a configuration object\r\n * - a connection string\r\n *\r\n * For details see {@link https://github.com/vitaly-t/pg-promise/wiki/Connection-Syntax Connection Syntax}.\r\n *\r\n * @param {} [dc]\r\n * Database Context.\r\n *\r\n * Any object or value to be propagated through the protocol, to allow implementations\r\n * and event handling that depend on the database context.\r\n *\r\n * This is mainly to facilitate the use of multiple databases which may need separate protocol\r\n * extensions, or different implementations within a single task / transaction callback,\r\n * depending on the database context.\r\n *\r\n * @returns {Database}\r\n *\r\n * @see\r\n *\r\n * {@link Database.query query},\r\n * {@link Database.none none},\r\n * {@link Database.one one},\r\n * {@link Database.oneOrNone oneOrNone},\r\n * {@link Database.many many},\r\n * {@link Database.manyOrNone manyOrNone},\r\n * {@link Database.any any},\r\n * {@link Database.func func},\r\n * {@link Database.proc proc},\r\n * {@link Database.result result},\r\n * {@link Database.map map},\r\n * {@link Database.each each},\r\n * {@link Database.stream stream},\r\n * {@link Database.task task},\r\n * {@link Database.tx tx},\r\n * {@link Database.connect connect},\r\n * {@link Database.$config $config},\r\n * {@link event:extend extend}\r\n *\r\n * @example\r\n * // Proper way to initialize and share the Database object\r\n *\r\n * // Loading and initializing the library:\r\n * var pgp = require('pg-promise')({\r\n *     // Initialization Options\r\n * });\r\n *\r\n * // Preparing the connection details:\r\n * var cn = \"postgres://username:password@host:port/database\";\r\n *\r\n * // Creating a new database instance from the connection details:\r\n * var db = pgp(cn);\r\n *\r\n * // Exporting the database object for shared use:\r\n * module.exports = db;\r\n */\r\nfunction Database(cn, dc, config) {\r\n\r\n    checkForDuplicates(cn, config);\r\n    setErrorHandler(config);\r\n\r\n    var $p = config.promise;\r\n\r\n    /**\r\n     * @method Database.connect\r\n     *\r\n     * @description\r\n     * Acquires a new or existing connection, based on the current connection parameters.\r\n     *\r\n     * This method creates a shared connection for executing a chain of queries against it.\r\n     * The connection must be released in the end of the chain by calling method `done()` on the connection object.\r\n     *\r\n     * This is an older, low-level approach to chaining queries on the same connection.\r\n     * A newer and safer approach is via methods {@link Database.task task} and {@link Database.tx tx} (for transactions),\r\n     * which allocate and release the shared connection automatically.\r\n     *\r\n     * **NOTE:** Even though this method exposes a {@link external:Client Client} object via property `client`,\r\n     * you cannot call `client.end()` directly, or it will print an error into the console:\r\n     * `Abnormal client.end() call, due to invalid code or failed server connection.`\r\n     * You should only call method `done()` to release the connection.\r\n     *\r\n     * @param {object} [options]\r\n     * @param {boolean} [options.direct=false]\r\n     * Creates the connection directly, through the {@link external:Client Client}, bypassing the connection pool.\r\n     *\r\n     * By default, all connections are acquired from the connection pool. If you set this option, the library will instead\r\n     * create a new {@link external:Client Client} object directly (separately from the pool), and then call its `connect` method.\r\n     *\r\n     * **WARNING:**\r\n     *\r\n     * Do not use this option for regular query execution, because it exclusively occupies one physical connection,\r\n     * and therefore cannot scale. This option is only suitable for global connection usage, such as database event listeners.\r\n     *\r\n     * @returns {external:Promise}\r\n     * A promise object that represents the connection result:\r\n     *  - resolves with the complete {@link Database} protocol, extended with:\r\n     *    - property `client` of type {@link external:Client Client} that represents the open connection\r\n     *    - method `done()` that must be called in the end, in order to release the connection\r\n     *  - rejects with a connection-related error when it fails to connect.\r\n     *\r\n     * @see\r\n     * {@link Database.task},\r\n     * {@link Database.tx}\r\n     *\r\n     * @example\r\n     *\r\n     * var sco; // shared connection object;\r\n     *\r\n     * db.connect()\r\n     *     .then(obj => {\r\n     *         // obj.client = new connected Client object;\r\n     *\r\n     *         sco = obj; // save the connection object;\r\n     *\r\n     *         // execute all the queries you need:\r\n     *         return sco.any('SELECT * FROM Users');\r\n     *     })\r\n     *     .then(data => {\r\n     *         // success\r\n     *     })\r\n     *     .catch(error => {\r\n     *         // error\r\n     *     })\r\n     *     .finally(() => {\r\n     *         // release the connection, if it was successful:\r\n     *         if (sco) {\r\n     *             sco.done();\r\n     *         }\r\n     *     });\r\n     *\r\n     */\r\n    this.connect = function (options) {\r\n        var ctx = createContext();\r\n        var self = {\r\n            // Generic query method;\r\n            query: function (query, values, qrm) {\r\n                if (!ctx.db) {\r\n                    throw new Error('Cannot execute a query on a disconnected client.');\r\n                }\r\n                return config.$npm.query.call(this, ctx, query, values, qrm);\r\n            },\r\n            // Connection release method;\r\n            done: () => {\r\n                if (!ctx.db) {\r\n                    throw new Error('Cannot invoke done() on a disconnected client.');\r\n                }\r\n                ctx.disconnect();\r\n            }\r\n        };\r\n        var method = (options && options.direct) ? 'direct' : 'pool';\r\n        return config.$npm.connect[method](ctx)\r\n            .then(db => {\r\n                ctx.connect(db);\r\n                self.client = db.client;\r\n                extend(ctx, self);\r\n                return self;\r\n            });\r\n    };\r\n\r\n    /**\r\n     * @method Database.query\r\n     *\r\n     * @description\r\n     * Executes a generic query request that expects the return data according to parameter `qrm`.\r\n     *\r\n     * @param {String|Object} query\r\n     * Query to be executed, which can any of the following types:\r\n     * - A non-empty query string\r\n     * - Prepared Statement `{name, text, values, ...}` or {@link PreparedStatement} object\r\n     * - Parameterized Query `{text, values, ...}` or {@link ParameterizedQuery} object\r\n     * - {@link QueryFile} object\r\n     *\r\n     * @param {array|value} [values]\r\n     * Query formatting parameters.\r\n     *\r\n     * When `query` is of type `string` or a {@link QueryFile} object, the `values` can be:\r\n     * - a single value - to replace all `$1` occurrences\r\n     * - an array of values - to replace all `$1`, `$2`, ... variables\r\n     * - an object - to apply $[Named Parameters] formatting\r\n     *\r\n     * When `query` is a Prepared Statement or a Parameterized Query (or their class types),\r\n     * and `values` is not `null` or `undefined`, it is automatically set within such object,\r\n     * as an override for its internal `values`.\r\n     *\r\n     * @param {queryResult} [qrm=queryResult.any]\r\n     * {@link queryResult Query Result Mask}\r\n     *\r\n     * @returns {external:Promise}\r\n     * A promise object that represents the query result.\r\n     *\r\n     * When the query result is an array, it is extended with hidden property `duration` -\r\n     * number of milliseconds it took the client to execute the query.\r\n     */\r\n    this.query = function (query, values, qrm) {\r\n        var self = this, ctx = createContext();\r\n        return config.$npm.connect.pool(ctx)\r\n            .then(db => {\r\n                ctx.connect(db);\r\n                return config.$npm.query.call(self, ctx, query, values, qrm);\r\n            })\r\n            .then(data => {\r\n                ctx.disconnect();\r\n                return data;\r\n            })\r\n            .catch(error => {\r\n                ctx.disconnect();\r\n                return $p.reject(error);\r\n            });\r\n    };\r\n\r\n    /**\r\n     * @member {object} Database.$config\r\n     * @readonly\r\n     * @description\r\n     * This is a hidden property, to help integrating type {@link Database} directly with third-party libraries.\r\n     *\r\n     * Properties available in the object:\r\n     * - `pgp` - instance of the entire library after initialization\r\n     * - `options` - the library's {@link module:pg-promise Initialization Options} object\r\n     * - `promiseLib` - instance of the promise library that's used\r\n     * - `promise` - generic promise interface that uses `promiseLib` via 3 basic methods:\r\n     *   - `promise((resolve, reject)=>{})` - to create a new promise\r\n     *   - `promise.resolve(value)` - to resolve with a value\r\n     *   - `promise.reject(value)` - to reject with a value\r\n     * - `version` - this library's version\r\n     * - `$npm` _(hidden property)_ - internal module cache\r\n     *\r\n     * @example\r\n     *\r\n     * // Using the promise protocol as configured by pg-promise:\r\n     *\r\n     * var $p = db.$config.promise;\r\n     *\r\n     * var resolvedPromise = $p.resolve('some data');\r\n     * var rejectedPromise = $p.reject('some reason');\r\n     *\r\n     * var newPromise = $p((resolve, reject) => {\r\n     *     // call either resolve(data) or reject(reason) here\r\n     * });\r\n     */\r\n    $npm.utils.addReadProp(this, '$config', config, true);\r\n\r\n    extend(createContext(), this); // extending root protocol;\r\n\r\n    function createContext() {\r\n        return new $npm.context(cn, dc, config.options);\r\n    }\r\n\r\n    function transform(value, cb, thisArg) {\r\n        if (typeof cb === 'function') {\r\n            value = value.then(data => {\r\n                return cb.call(thisArg, data);\r\n            });\r\n        }\r\n        return value;\r\n    }\r\n\r\n    ////////////////////////////////////////////////////\r\n    // Injects additional methods into an access object,\r\n    // extending the protocol's base method 'query'.\r\n    function extend(ctx, obj) {\r\n\r\n        /**\r\n         * @method Database.none\r\n         * @description\r\n         * Executes a query that expects no data to be returned.\r\n         * If the query returns any kind of data, the method rejects.\r\n         *\r\n         * @param {String|Object} query\r\n         * Query to be executed, which can any of the following types:\r\n         * - A non-empty query string\r\n         * - Prepared Statement `{name, text, values, ...}` or {@link PreparedStatement} object\r\n         * - Parameterized Query `{text, values, ...}` or {@link ParameterizedQuery} object\r\n         * - {@link QueryFile} object\r\n         *\r\n         * @param {array|value} [values]\r\n         * Query formatting parameters.\r\n         *\r\n         * When `query` is of type `string` or a {@link QueryFile} object, the `values` can be:\r\n         * - a single value - to replace all `$1` occurrences\r\n         * - an array of values - to replace all `$1`, `$2`, ... variables\r\n         * - an object - to apply $[Named Parameters] formatting\r\n         *\r\n         * When `query` is a Prepared Statement or a Parameterized Query (or their class types),\r\n         * and `values` is not `null` or `undefined`, it is automatically set within such object,\r\n         * as an override for its internal `values`.\r\n         *\r\n         * @returns {external:Promise}\r\n         * A promise object that represents the query result:\r\n         * - When no records are returned, it resolves with `null`.\r\n         * - When any data is returned, it rejects with {@link errors.QueryResultError QueryResultError}:\r\n         *   - `.message` = `No return data was expected.`\r\n         *   - `.code` = {@link errors.queryResultErrorCode.notEmpty queryResultErrorCode.notEmpty}\r\n         */\r\n        obj.none = function (query, values) {\r\n            return obj.query.call(this, query, values, $npm.result.none);\r\n        };\r\n\r\n        /**\r\n         * @method Database.one\r\n         * @description\r\n         * Executes a query that expects exactly one row of data.\r\n         * When 0 or more than 1 rows are returned, the method rejects.\r\n         *\r\n         * @param {String|Object} query\r\n         * Query to be executed, which can any of the following types:\r\n         * - A non-empty query string\r\n         * - Prepared Statement `{name, text, values, ...}` or {@link PreparedStatement} object\r\n         * - Parameterized Query `{text, values, ...}` or {@link ParameterizedQuery} object\r\n         * - {@link QueryFile} object\r\n         *\r\n         * @param {array|value} [values]\r\n         * Query formatting parameters.\r\n         *\r\n         * When `query` is of type `string` or a {@link QueryFile} object, the `values` can be:\r\n         * - a single value - to replace all `$1` occurrences\r\n         * - an array of values - to replace all `$1`, `$2`, ... variables\r\n         * - an object - to apply $[Named Parameters] formatting\r\n         *\r\n         * When `query` is a Prepared Statement or a Parameterized Query (or their class types),\r\n         * and `values` is not `null` or `undefined`, it is automatically set within such object,\r\n         * as an override for its internal `values`.\r\n         *\r\n         * @param {function} [cb]\r\n         * Value transformation callback, to allow in-line value change.\r\n         * When specified, the return value replaces the original resolved value.\r\n         *\r\n         * The function takes only one parameter - value resolved from the query.\r\n         *\r\n         * @param {} [thisArg]\r\n         * Value to use as `this` when executing the transformation callback.\r\n         *\r\n         * @returns {external:Promise}\r\n         * A promise object that represents the query result:\r\n         * - When 1 row is returned, it resolves with that row as a single object.\r\n         * - When no rows are returned, it rejects with {@link errors.QueryResultError QueryResultError}:\r\n         *   - `.message` = `No data returned from the query.`\r\n         *   - `.code` = {@link errors.queryResultErrorCode.noData queryResultErrorCode.noData}\r\n         * - When multiple rows are returned, it rejects with {@link errors.QueryResultError QueryResultError}:\r\n         *   - `.message` = `Multiple rows were not expected.`\r\n         *   - `.code` = {@link errors.queryResultErrorCode.multiple queryResultErrorCode.multiple}\r\n         *\r\n         * @example\r\n         *\r\n         * // a query with in-line value transformation:\r\n         * db.one('INSERT INTO Events VALUES($1) RETURNING id', [123], event => event.id)\r\n         *     .then(data=> {\r\n         *         // data = a new event id, rather than an object with it\r\n         *     });\r\n         *\r\n         * @example\r\n         *\r\n         * // a query with in-line value transformation + conversion:\r\n         * db.one('SELECT count(*) FROM Users', null, c => +c.count)\r\n         *     .then(count=> {\r\n         *         // count = a proper integer value, rather than an object with a string\r\n         *     });\r\n         *\r\n         */\r\n        obj.one = function (query, values, cb, thisArg) {\r\n            var v = obj.query.call(this, query, values, $npm.result.one);\r\n            return transform(v, cb, thisArg);\r\n        };\r\n\r\n        /**\r\n         * @method Database.many\r\n         * @description\r\n         * Executes a query that expects one or more rows.\r\n         * When the query returns no rows, the method rejects.\r\n         *\r\n         * @param {String|Object} query\r\n         * Query to be executed, which can any of the following types:\r\n         * - A non-empty query string\r\n         * - Prepared Statement `{name, text, values, ...}` or {@link PreparedStatement} object\r\n         * - Parameterized Query `{text, values, ...}` or {@link ParameterizedQuery} object\r\n         * - {@link QueryFile} object\r\n         *\r\n         * @param {array|value} [values]\r\n         * Query formatting parameters.\r\n         *\r\n         * When `query` is of type `string` or a {@link QueryFile} object, the `values` can be:\r\n         * - a single value - to replace all `$1` occurrences\r\n         * - an array of values - to replace all `$1`, `$2`, ... variables\r\n         * - an object - to apply $[Named Parameters] formatting\r\n         *\r\n         * When `query` is a Prepared Statement or a Parameterized Query (or their class types),\r\n         * and `values` is not `null` or `undefined`, it is automatically set within such object,\r\n         * as an override for its internal `values`.\r\n         *\r\n         * @returns {external:Promise}\r\n         * A promise object that represents the query result:\r\n         * - When 1 or more rows are returned, it resolves with the array of rows. The array is extended with\r\n         *   hidden property `duration` - number of milliseconds it took the client to execute the query.\r\n         * - When no rows are returned, it rejects with {@link errors.QueryResultError QueryResultError}:\r\n         *   - `.message` = `No data returned from the query.`\r\n         *   - `.code` = {@link errors.queryResultErrorCode.noData queryResultErrorCode.noData}\r\n         */\r\n        obj.many = function (query, values) {\r\n            return obj.query.call(this, query, values, $npm.result.many);\r\n        };\r\n\r\n        /**\r\n         * @method Database.oneOrNone\r\n         * @description\r\n         * Executes a query that expects 0 or 1 rows.\r\n         * When the query returns more than 1 row, the method rejects.\r\n         *\r\n         * @param {String|Object} query\r\n         * Query to be executed, which can any of the following types:\r\n         * - A non-empty query string\r\n         * - Prepared Statement `{name, text, values, ...}` or {@link PreparedStatement} object\r\n         * - Parameterized Query `{text, values, ...}` or {@link ParameterizedQuery} object\r\n         * - {@link QueryFile} object\r\n         *\r\n         * @param {array|value} [values]\r\n         * Query formatting parameters.\r\n         *\r\n         * When `query` is of type `string` or a {@link QueryFile} object, the `values` can be:\r\n         * - a single value - to replace all `$1` occurrences\r\n         * - an array of values - to replace all `$1`, `$2`, ... variables\r\n         * - an object - to apply $[Named Parameters] formatting\r\n         *\r\n         * When `query` is a Prepared Statement or a Parameterized Query (or their class types),\r\n         * and `values` is not `null` or `undefined`, it is automatically set within such object,\r\n         * as an override for its internal `values`.\r\n         *\r\n         * @param {function} [cb]\r\n         * Value transformation callback, to allow in-line value change.\r\n         * When specified, the return value replaces the original resolved value.\r\n         *\r\n         * The function takes only one parameter - value resolved from the query.\r\n         *\r\n         * @param {} [thisArg]\r\n         * Value to use as `this` when executing the transformation callback.\r\n         *\r\n         * @returns {external:Promise}\r\n         * A promise object that represents the query result:\r\n         * - When no rows are returned, it resolves with `null`.\r\n         * - When 1 row is returned, it resolves with that row as a single object.\r\n         * - When multiple rows are returned, it rejects with {@link errors.QueryResultError QueryResultError}:\r\n         *   - `.message` = `Multiple rows were not expected.`\r\n         *   - `.code` = {@link errors.queryResultErrorCode.multiple queryResultErrorCode.multiple}\r\n         *\r\n         * @see\r\n         * {@link Database.one one},\r\n         * {@link Database.none none}\r\n         *\r\n         * @example\r\n         *\r\n         * // a query with in-line value transformation:\r\n         * db.oneOrNone('SELECT id FROM Events WHERE type = $1', ['entry'], e => e && e.id)\r\n         *     .then(data=> {\r\n         *         // data = the event id or null (rather than object or null)\r\n         *     });\r\n         *\r\n         */\r\n        obj.oneOrNone = function (query, values, cb, thisArg) {\r\n            var v = obj.query.call(this, query, values, $npm.result.one | $npm.result.none);\r\n            return transform(v, cb, thisArg);\r\n        };\r\n\r\n        /**\r\n         * @method Database.manyOrNone\r\n         * @description\r\n         * Executes a query that expects any number of rows.\r\n         *\r\n         * @param {String|Object} query\r\n         * Query to be executed, which can any of the following types:\r\n         * - A non-empty query string\r\n         * - Prepared Statement `{name, text, values, ...}` or {@link PreparedStatement} object\r\n         * - Parameterized Query `{text, values, ...}` or {@link ParameterizedQuery} object\r\n         * - {@link QueryFile} object\r\n         *\r\n         * @param {array|value} [values]\r\n         * Query formatting parameters.\r\n         *\r\n         * When `query` is of type `string` or a {@link QueryFile} object, the `values` can be:\r\n         * - a single value - to replace all `$1` occurrences\r\n         * - an array of values - to replace all `$1`, `$2`, ... variables\r\n         * - an object - to apply $[Named Parameters] formatting\r\n         *\r\n         * When `query` is a Prepared Statement or a Parameterized Query (or their class types),\r\n         * and `values` is not `null` or `undefined`, it is automatically set within such object,\r\n         * as an override for its internal `values`.\r\n         *\r\n         * @returns {external:Promise}\r\n         * A promise object that represents the query result:\r\n         * - When no rows are returned, it resolves with an empty array.\r\n         * - When 1 or more rows are returned, it resolves with the array of rows.\r\n         *\r\n         * The resolved array is extended with hidden property `duration` - number of milliseconds\r\n         * it took the client to execute the query.\r\n         *\r\n         * @see {@link Database.any any}\r\n         *\r\n         */\r\n        obj.manyOrNone = function (query, values) {\r\n            return obj.query.call(this, query, values, $npm.result.many | $npm.result.none);\r\n        };\r\n\r\n        /**\r\n         * @method Database.any\r\n         * @description\r\n         * Executes a query that expects any number of rows.\r\n         * This is simply a shorter alias for method {@link Database.manyOrNone manyOrNone}.\r\n         *\r\n         * @param {String|Object} query\r\n         * Query to be executed, which can any of the following types:\r\n         * - A non-empty query string\r\n         * - Prepared Statement `{name, text, values, ...}` or {@link PreparedStatement} object\r\n         * - Parameterized Query `{text, values, ...}` or {@link ParameterizedQuery} object\r\n         * - {@link QueryFile} object\r\n         *\r\n         * @param {array|value} [values]\r\n         * Query formatting parameters.\r\n         *\r\n         * When `query` is of type `string` or a {@link QueryFile} object, the `values` can be:\r\n         * - a single value - to replace all `$1` occurrences\r\n         * - an array of values - to replace all `$1`, `$2`, ... variables\r\n         * - an object - to apply $[Named Parameters] formatting\r\n         *\r\n         * When `query` is a Prepared Statement or a Parameterized Query (or their class types),\r\n         * and `values` is not `null` or `undefined`, it is automatically set within such object,\r\n         * as an override for its internal `values`.\r\n         *\r\n         * @returns {external:Promise}\r\n         * A promise object that represents the query result:\r\n         * - When no rows are returned, it resolves with an empty array.\r\n         * - When 1 or more rows are returned, it resolves with the array of rows.\r\n         *\r\n         * The resolved array is extended with hidden property `duration` - number of milliseconds\r\n         * it took the client to execute the query.\r\n         *\r\n         * @see\r\n         * {@link Database.manyOrNone manyOrNone},\r\n         * {@link Database.map map},\r\n         * {@link Database.each each}\r\n         *\r\n         */\r\n        obj.any = function (query, values) {\r\n            return obj.query.call(this, query, values, $npm.result.any);\r\n        };\r\n\r\n        /**\r\n         * @method Database.result\r\n         * @description\r\n         * Executes a query without any expectation for the return data, to resolve with the\r\n         * original $[Result] object when successful.\r\n         *\r\n         * @param {String|Object} query\r\n         * Query to be executed, which can any of the following types:\r\n         * - A non-empty query string\r\n         * - Prepared Statement `{name, text, values, ...}` or {@link PreparedStatement} object\r\n         * - Parameterized Query `{text, values, ...}` or {@link ParameterizedQuery} object\r\n         * - {@link QueryFile} object\r\n         *\r\n         * @param {array|value} [values]\r\n         * Query formatting parameters.\r\n         *\r\n         * When `query` is of type `string` or a {@link QueryFile} object, the `values` can be:\r\n         * - a single value - to replace all `$1` occurrences\r\n         * - an array of values - to replace all `$1`, `$2`, ... variables\r\n         * - an object - to apply $[Named Parameters] formatting\r\n         *\r\n         * When `query` is a Prepared Statement or a Parameterized Query (or their class types),\r\n         * and `values` is not `null` or `undefined`, it is automatically set within such object,\r\n         * as an override for its internal `values`.\r\n         *\r\n         * @param {function} [cb]\r\n         * Value transformation callback, to allow in-line value change.\r\n         * When specified, the return value replaces the original resolved value.\r\n         *\r\n         * The function takes only one parameter - value resolved from the query.\r\n         *\r\n         * @param {} [thisArg]\r\n         * Value to use as `this` when executing the transformation callback.\r\n         *\r\n         * @returns {external:Promise}\r\n         * A promise object that represents the query result:\r\n         * - resolves with the original $[Result] object, extended with property `duration` -\r\n         *   number of milliseconds it took the client to execute the query.\r\n         *\r\n         * @example\r\n         *\r\n         * // use of value transformation:\r\n         * // deleting rows and returning the number of rows deleted\r\n         * db.result('DELETE FROM Events WHERE id = $1', [123], r=>r.rowCount)\r\n         *     .then(data=> {\r\n         *         // data = number of rows that were deleted\r\n         *     });\r\n         *\r\n         * @example\r\n         *\r\n         * // use of value transformation:\r\n         * // getting only column details from a table\r\n         * db.result('SELECT * FROM Users LIMIT 0', null, r=>r.fields)\r\n         *     .then(data=> {\r\n         *         // data = array of column descriptors\r\n         *     });\r\n         *\r\n         */\r\n        obj.result = function (query, values, cb, thisArg) {\r\n            var v = obj.query.call(this, query, values, $npm.special.cache.resultQuery);\r\n            return transform(v, cb, thisArg);\r\n        };\r\n\r\n        /**\r\n         * @method Database.stream\r\n         * @description\r\n         * Custom data streaming, with the help of $[pg-query-stream].\r\n         *\r\n         * This method doesn't work with the $[Native Bindings], and if option `pgNative`\r\n         * is set, it will reject with `Streaming doesn't work with Native Bindings.`\r\n         *\r\n         * @param {QueryStream} qs\r\n         * Stream object of type $[QueryStream].\r\n         *\r\n         * @param {Database.streamInitCB} initCB\r\n         * Stream initialization callback.\r\n         *\r\n         * It is invoked with the same `this` context as the calling method.\r\n         *\r\n         * @returns {external:Promise}\r\n         * Result of the streaming operation.\r\n         *\r\n         * Once the streaming has finished successfully, the method resolves with\r\n         * `{processed, duration}`:\r\n         * - `processed` - total number of rows processed;\r\n         * - `duration` - streaming duration, in milliseconds.\r\n         *\r\n         * Possible rejections messages:\r\n         * - `Invalid or missing stream object.`\r\n         * - `Invalid stream state.`\r\n         * - `Invalid or missing stream initialization callback.`\r\n         */\r\n        obj.stream = function (qs, init) {\r\n            return obj.query.call(this, qs, init, $npm.special.cache.streamQuery);\r\n        };\r\n\r\n        /**\r\n         * @method Database.func\r\n         * @description\r\n         * Executes a query against a database function by its name: `SELECT * FROM funcName(values)`.\r\n         *\r\n         * @param {string} funcName\r\n         * Name of the function to be executed.\r\n         *\r\n         * @param {array|value} [values]\r\n         * Parameters for the function - one value or an array of values.\r\n         *\r\n         * @param {queryResult} [qrm=queryResult.any] - {@link queryResult Query Result Mask}.\r\n         *\r\n         * @returns {external:Promise}\r\n         *\r\n         * A promise object as returned from method {@link Database.query query}, according to parameter `qrm`.\r\n         *\r\n         * @see\r\n         * {@link Database.query query},\r\n         * {@link Database.proc proc}\r\n         */\r\n        obj.func = function (funcName, values, qrm) {\r\n            return obj.query.call(this, {\r\n                funcName: funcName\r\n            }, values, qrm);\r\n        };\r\n\r\n        /**\r\n         * @method Database.proc\r\n         * @description\r\n         * Executes a query against a stored procedure via its name: `select * from procName(values)`,\r\n         * expecting back 0 or 1 rows.\r\n         *\r\n         * The method simply forwards into {@link Database.func func}`(procName, values, queryResult.one|queryResult.none)`.\r\n         *\r\n         * @param {string} procName\r\n         * Name of the stored procedure to be executed.\r\n         *\r\n         * @param {array|value} [values]\r\n         * Parameters for the procedure - one value or an array of values.\r\n         *\r\n         * @param {function} [cb]\r\n         * Value transformation callback, to allow in-line value change.\r\n         * When specified, the return value replaces the original resolved value.\r\n         *\r\n         * The function takes only one parameter - value resolved from the query.\r\n         *\r\n         * @param {} [thisArg]\r\n         * Value to use as `this` when executing the transformation callback.\r\n         *\r\n         * @returns {external:Promise}\r\n         *\r\n         * It calls {@link Database.func func}(`procName`, `values`, `queryResult.one|queryResult.none`),\r\n         * and then returns the same result as method {@link Database.oneOrNone oneOrNone}.\r\n         *\r\n         * @see\r\n         * {@link Database.oneOrNone oneOrNone},\r\n         * {@link Database.func func}\r\n         */\r\n        obj.proc = function (procName, values, cb, thisArg) {\r\n            var v = obj.func.call(this, procName, values, $npm.result.one | $npm.result.none);\r\n            return transform(v, cb, thisArg);\r\n        };\r\n\r\n        /**\r\n         * @method Database.map\r\n         * @description\r\n         * Creates a new array with the results of calling a provided function on every element in the array of rows\r\n         * resolved by method {@link Database.any any}.\r\n         *\r\n         * It is a convenience method to reduce the following code:\r\n         *\r\n         * ```js\r\n         * db.any(query, values)\r\n         *     .then(data => {\r\n         *         return data.map((row, index, data) => {\r\n         *              // return a new element\r\n         *         });\r\n         *     });\r\n         * ```\r\n         *\r\n         * In addition to much shorter code, it offers the following benefits:\r\n         *\r\n         * - Use of a custom iterator has a much better performance than the standard {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map Array.map}\r\n         * - Automatic `this` context through the database protocol\r\n         *\r\n         * @param {String|Object} query\r\n         * Query to be executed, which can any of the following types:\r\n         * - A non-empty query string\r\n         * - Prepared Statement `{name, text, values, ...}` or {@link PreparedStatement} object\r\n         * - Parameterized Query `{text, values, ...}` or {@link ParameterizedQuery} object\r\n         * - {@link QueryFile} object\r\n         *\r\n         * @param {array|value} values\r\n         * Query formatting parameters.\r\n         *\r\n         * When `query` is of type `string` or a {@link QueryFile} object, the `values` can be:\r\n         * - a single value - to replace all `$1` occurrences\r\n         * - an array of values - to replace all `$1`, `$2`, ... variables\r\n         * - an object - to apply $[Named Parameters] formatting\r\n         *\r\n         * When `query` is a Prepared Statement or a Parameterized Query (or their class types),\r\n         * and `values` is not `null` or `undefined`, it is automatically set within such object,\r\n         * as an override for its internal `values`.\r\n         *\r\n         * @param {function} cb\r\n         * Function that produces an element of the new array, taking three arguments:\r\n         * - `row` - the current row object being processed in the array\r\n         * - `index` - the index of the current row being processed in the array\r\n         * - `data` - the original array of rows resolved by method {@link Database.any any}\r\n         *\r\n         * @param {} [thisArg]\r\n         * Value to use as `this` when executing the callback.\r\n         *\r\n         * @returns {external:Promise}\r\n         * Resolves with the new array of values returned from the callback. The array is extended with\r\n         * hidden property `duration` - number of milliseconds it took the client to execute the query.\r\n         *\r\n         * @see\r\n         * {@link Database.any any},\r\n         * {@link Database.each each},\r\n         * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map Array.map}\r\n         *\r\n         * @example\r\n         *\r\n         * db.map('SELECT id FROM Users WHERE status = $1', ['active'], row => row.id)\r\n         *     .then(data => {\r\n         *         // data = array of active user id-s\r\n         *     })\r\n         *     .catch(error => {\r\n         *        // error\r\n         *     });\r\n         *\r\n         * @example\r\n         *\r\n         * db.tx(t => {\r\n         *     return t.map('SELECT id FROM Users WHERE status = $1', ['active'], row => {\r\n         *        return t.none('UPDATE Events SET checked = $1 WHERE userId = $2', [true, row.id]);\r\n         *     }).then(t.batch);\r\n         * })\r\n         *     .then(data => {\r\n         *         // success\r\n         *     })\r\n         *     .catch(error => {\r\n         *         // error\r\n         *     });\r\n         *\r\n         * @example\r\n         *\r\n         * // Build a list of active users, each with the list of user events:\r\n         * db.task(t => {\r\n         *     return t.map('SELECT id FROM Users WHERE status = $1', ['active'], user => {\r\n         *         return t.any('SELECT * FROM Events WHERE userId = $1', user.id)\r\n         *             .then(events=> {\r\n         *                 user.events = events;\r\n         *                 return user;\r\n         *             });\r\n         *     }).then(t.batch);\r\n         * })\r\n         *     .then(data => {\r\n         *         // success\r\n         *     })\r\n         *     .catch(error => {\r\n         *         // error\r\n         *     });\r\n         *\r\n         */\r\n        obj.map = function (query, values, cb, thisArg) {\r\n            return obj.any.call(this, query, values)\r\n                .then(data => {\r\n                    var result = $arr.map(data, cb, thisArg);\r\n                    $npm.utils.addReadProp(result, 'duration', data.duration, true);\r\n                    return result;\r\n                });\r\n        };\r\n\r\n        /**\r\n         * @method Database.each\r\n         * @description\r\n         * Executes a provided function once per array element, for an array of rows resolved by method {@link Database.any any}.\r\n         *\r\n         * It is a convenience method to reduce the following code:\r\n         *\r\n         * ```js\r\n         * db.any(query, values)\r\n         *     .then(data => {\r\n         *         data.forEach((row, index, data) => {\r\n         *              // process the row\r\n         *         });\r\n         *         return data;\r\n         *     });\r\n         * ```\r\n         *\r\n         * In addition to much shorter code, it offers the following benefits:\r\n         *\r\n         * - Use of a custom iterator has a much better performance than the regular {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach Array.forEach}\r\n         * - Automatic `this` context through the database protocol\r\n         *\r\n         * @param {String|Object} query\r\n         * Query to be executed, which can any of the following types:\r\n         * - A non-empty query string\r\n         * - Prepared Statement `{name, text, values, ...}` or {@link PreparedStatement} object\r\n         * - Parameterized Query `{text, values, ...}` or {@link ParameterizedQuery} object\r\n         * - {@link QueryFile} object\r\n         *\r\n         * @param {array|value} [values]\r\n         * Query formatting parameters.\r\n         *\r\n         * When `query` is of type `string` or a {@link QueryFile} object, the `values` can be:\r\n         * - a single value - to replace all `$1` occurrences\r\n         * - an array of values - to replace all `$1`, `$2`, ... variables\r\n         * - an object - to apply $[Named Parameters] formatting\r\n         *\r\n         * When `query` is a Prepared Statement or a Parameterized Query (or their class types),\r\n         * and `values` is not `null` or `undefined`, it is automatically set within such object,\r\n         * as an override for its internal `values`.\r\n         *\r\n         * @param {function} cb\r\n         * Function to execute for each row, taking three arguments:\r\n         * - `row` - the current row object being processed in the array\r\n         * - `index` - the index of the current row being processed in the array\r\n         * - `data` - the array of rows resolved by method {@link Database.any any}\r\n         *\r\n         * @param {} [thisArg]\r\n         * Value to use as `this` when executing the callback.\r\n         *\r\n         * @returns {external:Promise}\r\n         * Resolves with the original array of rows, extended with hidden property `duration` -\r\n         * number of milliseconds it took the client to execute the query.\r\n         *\r\n         * @see\r\n         * {@link Database.any any},\r\n         * {@link Database.map map},\r\n         * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach Array.forEach}\r\n         *\r\n         * @example\r\n         *\r\n         * db.each('SELECT id, code, name FROM Events', [], row => {\r\n         *     row.code = +row.code; // leading `+` is short for `parseInt()`\r\n         * })\r\n         *     .then(data => {\r\n         *         // data = array of events, with 'code' converted into integer\r\n         *     })\r\n         *     .catch(error => {\r\n         *         // error\r\n         *     });\r\n         *\r\n         */\r\n        obj.each = function (query, values, cb, thisArg) {\r\n            return obj.any.call(this, query, values)\r\n                .then(data => {\r\n                    $arr.forEach(data, cb, thisArg);\r\n                    return data;\r\n                });\r\n        };\r\n\r\n        /**\r\n         * @method Database.task\r\n         * @description\r\n         * Executes a callback function (or $[ES6 generator]) with an automatically managed connection.\r\n         *\r\n         * This method should be used whenever executing more than one query at once, so the allocated connection\r\n         * is reused between all queries, and released only after the task has finished.\r\n         *\r\n         * The callback function is called with one parameter - database protocol (same as `this`), extended with methods\r\n         * {@link Task.batch batch}, {@link Task.page page}, {@link Task.sequence sequence}, plus property {@link Task.ctx ctx} -\r\n         * the task context object.\r\n         *\r\n         * See class {@link Task} for more details.\r\n         *\r\n         * @param {} tag/cb\r\n         * When the method takes only one parameter, it must be the callback function (or $[ES6 generator]) for the task.\r\n         * However, when calling the method with 2 parameters, the first one is always the `tag` - traceable context for the\r\n         * task (see $[tags]).\r\n         *\r\n         * @param {function|generator} [cb]\r\n         * Task callback function (or $[ES6 generator]), if it is not `undefined`, or else the callback is expected to\r\n         * be passed in as the first parameter.\r\n         *\r\n         * @returns {external:Promise}\r\n         *\r\n         * A promise object that represents the result from the callback function.\r\n         *\r\n         * @see\r\n         * {@link Task},\r\n         * {@link Database.tx tx},\r\n         * $[tags]\r\n         *\r\n         * @example\r\n         *\r\n         * // using the regular callback syntax:\r\n         * db.task(t => {\r\n         *         // t = this\r\n         *         // t.ctx = task context object\r\n         *\r\n         *         return t.one('SELECT id FROM Users WHERE name = $1', 'John')\r\n         *             .then(user=> {\r\n         *                 return t.any('SELECT * FROM Events WHERE userId = $1', user.id);\r\n         *             });\r\n         *     })\r\n         *     .then(data => {\r\n         *         // success\r\n         *         // data = as returned from the task's callback\r\n         *     })\r\n         *     .catch(error => {\r\n         *         // error\r\n         *     });\r\n         *\r\n         * @example\r\n         *\r\n         * // using the ES6 arrow syntax:\r\n         * db.task(t=> {\r\n         *         // t.ctx = task context object\r\n         *         \r\n         *         return t.one('SELECT id FROM Users WHERE name = $1', 'John')\r\n         *             .then(user=> {\r\n         *                 return t.any('SELECT * FROM Events WHERE userId = $1', user.id);\r\n         *             });\r\n         *     })\r\n         *     .then(data=> {\r\n         *         // success\r\n         *         // data = as returned from the task's callback\r\n         *     })\r\n         *     .catch(error=> {\r\n         *         // error\r\n         *     });\r\n         *\r\n         * @example\r\n         *\r\n         * // using an ES6 generator for the callback:\r\n         * db.task(function*(t) {\r\n         *         // t = this\r\n         *         // t.ctx = task context object\r\n         *\r\n         *         let user = yield t.one('SELECT id FROM Users WHERE name = $1', 'John');\r\n         *         return yield t.any('SELECT * FROM Events WHERE userId = $1', user.id);\r\n         *     })\r\n         *     .then(data => {\r\n         *         // success\r\n         *         // data = as returned from the task's callback\r\n         *     })\r\n         *     .catch(error => {\r\n         *         // error\r\n         *     });\r\n         *\r\n         */\r\n        obj.task = function (p1, p2) {\r\n            return taskProcessor.call(this, p1, p2, false);\r\n        };\r\n\r\n        /**\r\n         * @method Database.tx\r\n         * @description\r\n         * Executes a callback function (or $[ES6 generator]) as a transaction.\r\n         *\r\n         * A transaction simply wraps a regular {@link Database.task task} in automatic queries:\r\n         * - it executes `BEGIN` just before invoking the callback function\r\n         * - it executes `COMMIT`, if the callback didn't throw any error or return a rejected promise\r\n         * - it executes `ROLLBACK`, if the callback did throw an error or return a rejected promise\r\n         *\r\n         * The callback function is called with one parameter - database protocol (same as `this`), extended with methods\r\n         * {@link Task.batch batch}, {@link Task.page page}, {@link Task.sequence sequence}, plus property {@link Task.ctx ctx} -\r\n         * the transaction context object.\r\n         *\r\n         * See class {@link Task} for more details.\r\n         *\r\n         * Note that transactions should be chosen over tasks only where they are necessary, because unlike regular tasks,\r\n         * transactions are blocking operations, and must be used with caution.\r\n         *\r\n         * @param {} tag/cb\r\n         * When the method takes only one parameter, it must be the callback function (or $[ES6 generator]) for the transaction.\r\n         * However, when calling the method with 2 parameters, the first one is always the `tag` - traceable context for the\r\n         * transaction (see $[tags]).\r\n         *\r\n         * @param {function|generator} [cb]\r\n         * Transaction callback function (or $[ES6 generator]), if it is not `undefined`, or else the callback is expected to be\r\n         * passed in as the first parameter.\r\n         *\r\n         * @returns {external:Promise}\r\n         *\r\n         * A promise object that represents the result from the callback function.\r\n         *\r\n         * @see\r\n         * {@link Task},\r\n         * {@link Database.task},\r\n         * $[tags]\r\n         *\r\n         * @example\r\n         *\r\n         * // using the regular callback syntax:\r\n         * db.tx(t => {\r\n         *         // t = this\r\n         *         // t.ctx = transaction context object\r\n         *\r\n         *         return t.one('INSERT INTO Users(name, age) VALUES($1, $2) RETURNING id', ['Mike', 25])\r\n         *             .then(user=> {\r\n         *                 return t.none('INSERT INTO Events(userId, name) VALUES($1, $2)', [user.id, 'created']);\r\n         *             });\r\n         *     })\r\n         *     .then(data => {\r\n         *         // success\r\n         *         // data = as returned from the transaction's callback\r\n         *     })\r\n         *     .catch(error => {\r\n         *         // error\r\n         *     });\r\n         *\r\n         * @example\r\n         *\r\n         * // using the ES6 arrow syntax:\r\n         * db.tx(t=> {\r\n         *         // t.ctx = transaction context object\r\n         *         \r\n         *         return t.one('INSERT INTO Users(name, age) VALUES($1, $2) RETURNING id', ['Mike', 25])\r\n         *             .then(user=> {\r\n         *                 return t.batch([\r\n         *                     t.none('INSERT INTO Events(userId, name) VALUES($1, $2)', [user.id, 'created']),\r\n         *                     t.none('INSERT INTO Events(userId, name) VALUES($1, $2)', [user.id, 'login'])\r\n         *                 ]);\r\n         *             });\r\n         *     })\r\n         *     .then(data=> {\r\n         *         // success\r\n         *         // data = as returned from the transaction's callback\r\n         *     })\r\n         *     .catch(error=> {\r\n         *         // error\r\n         *     });\r\n         *\r\n         * @example\r\n         *\r\n         * // using an ES6 generator for the callback:\r\n         * db.tx(function*(t) {\r\n         *         // t = this\r\n         *         // t.ctx = transaction context object\r\n         *\r\n         *         let user = yield t.one('INSERT INTO Users(name, age) VALUES($1, $2) RETURNING id', ['Mike', 25]);\r\n         *         return yield t.none('INSERT INTO Events(userId, name) VALUES($1, $2)', [user.id, 'created']);\r\n         *     })\r\n         *     .then(data => {\r\n         *         // success\r\n         *         // data = as returned from the transaction's callback\r\n         *     })\r\n         *     .catch(error => {\r\n         *         // error\r\n         *     });\r\n         *\r\n         */\r\n        obj.tx = function (p1, p2) {\r\n            return taskProcessor.call(this, p1, p2, true);\r\n        };\r\n\r\n        // Task method;\r\n        // Resolves with result from the callback function;\r\n        function taskProcessor(p1, p2, isTX) {\r\n\r\n            var tag, // tag object/value;\r\n                taskCtx = ctx.clone(); // task context object;\r\n\r\n            if (isTX) {\r\n                taskCtx.txLevel = taskCtx.txLevel >= 0 ? (taskCtx.txLevel + 1) : 0;\r\n            }\r\n\r\n            if (this !== obj) {\r\n                taskCtx.context = this; // calling context object;\r\n            }\r\n\r\n            taskCtx.cb = p1; // callback function;\r\n\r\n            // allow inserting a tag in front of the callback\r\n            // function, for better code readability;\r\n            if (p2 !== undefined) {\r\n                tag = p1; // overriding any default tag;\r\n                taskCtx.cb = p2;\r\n            }\r\n\r\n            var cb = taskCtx.cb;\r\n\r\n            if (typeof cb !== 'function') {\r\n                return $p.reject(new TypeError('Callback function is required for the ' + (isTX ? 'transaction.' : 'task.')));\r\n            }\r\n\r\n            if (tag === undefined) {\r\n                if (cb.tag !== undefined) {\r\n                    // use the default tag associated with the task:\r\n                    tag = cb.tag;\r\n                } else {\r\n                    if (cb.name) {\r\n                        tag = cb.name; // use the function name as tag;\r\n                    }\r\n                }\r\n            }\r\n\r\n            var tsk = new config.$npm.task(taskCtx, tag, isTX, config);\r\n\r\n            extend(taskCtx, tsk);\r\n\r\n            if (taskCtx.db) {\r\n                // reuse existing connection;\r\n                $npm.utils.addReadProp(tsk.ctx, 'isFresh', taskCtx.db.isFresh);\r\n                return config.$npm.task.exec(taskCtx, tsk, isTX, config);\r\n            }\r\n\r\n            // connection required;\r\n            return config.$npm.connect.pool(taskCtx)\r\n                .then(db => {\r\n                    taskCtx.connect(db);\r\n                    $npm.utils.addReadProp(tsk.ctx, 'isFresh', db.isFresh);\r\n                    return config.$npm.task.exec(taskCtx, tsk, isTX, config);\r\n                })\r\n                .then(data => {\r\n                    taskCtx.disconnect();\r\n                    return data;\r\n                })\r\n                .catch(error => {\r\n                    taskCtx.disconnect();\r\n                    return $p.reject(error);\r\n                });\r\n        }\r\n\r\n        // lock all default properties to read-only,\r\n        // to prevent override by the client.\r\n        $npm.utils.lock(obj, false, ctx.options);\r\n\r\n        // extend the protocol;\r\n        $npm.events.extend(ctx.options, obj, ctx.dc);\r\n\r\n        // freeze the protocol permanently;\r\n        $npm.utils.lock(obj, true, ctx.options);\r\n    }\r\n\r\n}\r\n\r\nvar jsHandled, nativeHandled, dbObjects = {};\r\n\r\nfunction checkForDuplicates(cn, config) {\r\n    var cnKey = normalizeConnection(cn);\r\n    if (cnKey in dbObjects) {\r\n        if (!config.options.noWarnings) {\r\n            $npm.con.warn('WARNING: Creating a duplicate database object for the same connection.\\n%s\\n',\r\n                $npm.utils.getLocalStack(5));\r\n        }\r\n    } else {\r\n        dbObjects[cnKey] = true;\r\n    }\r\n}\r\n\r\n/**\r\n * For connections that are objects it reorders the keys alphabetically,\r\n * and then serializes the result into a JSON string.\r\n *\r\n * @param {string|object} cn - connection string or object\r\n */\r\nfunction normalizeConnection(cn) {\r\n    if (typeof cn === 'object') {\r\n        var obj = {}, keys = Object.keys(cn).sort();\r\n        $arr.forEach(keys, name => {\r\n            obj[name] = cn[name];\r\n        });\r\n        cn = obj;\r\n    }\r\n    return JSON.stringify(cn);\r\n}\r\n\r\nfunction setErrorHandler(config) {\r\n    // we do not do code coverage specific to Native Bindings:\r\n    // istanbul ignore if\r\n    if (config.options.pgNative) {\r\n        if (!nativeHandled) {\r\n            config.pgp.pg.on('error', onError);\r\n            nativeHandled = true;\r\n        }\r\n    } else {\r\n        if (!jsHandled) {\r\n            config.pgp.pg.on('error', onError);\r\n            jsHandled = true;\r\n        }\r\n    }\r\n}\r\n\r\n// this event only happens when the connection is lost physically,\r\n// which cannot be tested automatically; removing from coverage:\r\n// istanbul ignore next\r\nfunction onError(err, client) {\r\n    var ctx = client.$ctx;\r\n    $npm.events.error(ctx.options, err, {\r\n        cn: $npm.utils.getSafeConnection(ctx.cn),\r\n        dc: ctx.dc\r\n    });\r\n}\r\n\r\nmodule.exports = config => {\r\n    var npm = config.$npm;\r\n    npm.connect = npm.connect || $npm.connect(config);\r\n    npm.query = npm.query || $npm.query(config);\r\n    npm.task = npm.task || $npm.task(config);\r\n    return Database;\r\n};\r\n\r\n/**\r\n * @callback Database.streamInitCB\r\n * @description\r\n * Stream initialization callback, used by {@link Database.stream}.\r\n *\r\n * @param {external:Stream} stream\r\n * Stream object to initialize streaming.\r\n *\r\n * @example\r\n * var QueryStream = require('pg-query-stream');\r\n * var JSONStream = require('JSONStream');\r\n *\r\n * // you can also use pgp.as.format(query, values, options)\r\n * // to format queries properly, via pg-promise;\r\n * var qs = new QueryStream('select * from users');\r\n *\r\n * db.stream(qs, stream => {\r\n *         // initiate streaming into the console:\r\n *         stream.pipe(JSONStream.stringify()).pipe(process.stdout);\r\n *     })\r\n *     .then(data => {\r\n *         console.log(\"Total rows processed:\", data.processed,\r\n *           \"Duration in milliseconds:\", data.duration);\r\n *     })\r\n *     .catch(error => {\r\n *         // error;\r\n *     });\r\n */\r\n\r\n/**\r\n * @external Stream\r\n * @see https://nodejs.org/api/stream.html\r\n */\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/lib/database.js\n// module id = 184\n// module chunks = 0","'use strict';\r\n\r\nvar $npm = {\r\n    os: require('os'),\r\n    utils: require('../utils'),\r\n    QueryFileError: require('./queryFile')\r\n};\r\n\r\n/**\r\n * @interface errors.ParameterizedQueryError\r\n * @augments external:Error\r\n * @description\r\n * {@link errors.ParameterizedQueryError ParameterizedQueryError} interface, available from the {@link errors} namespace.\r\n *\r\n * This type represents all errors that can be reported by class {@link ParameterizedQuery}, whether it is used\r\n * explicitly or implicitly (via a simple `{text, values}` object).\r\n *\r\n * @property {string} name\r\n * Standard {@link external:Error Error} property - error type name = `ParameterizedQueryError`.\r\n *\r\n * @property {string} message\r\n * Standard {@link external:Error Error} property - the error message.\r\n *\r\n * @property {string} stack\r\n * Standard {@link external:Error Error} property - the stack trace.\r\n *\r\n * @property {errors.QueryFileError} error\r\n * Internal {@link errors.QueryFileError} object.\r\n *\r\n * It is set only when the source {@link ParameterizedQuery} used a {@link QueryFile} which threw the error.\r\n *\r\n * @property {object} result\r\n * Resulting Parameterized Query object.\r\n *\r\n * @see ParameterizedQuery\r\n */\r\nfunction ParameterizedQueryError(error, ps) {\r\n    var temp = Error.apply(this, arguments);\r\n    temp.name = this.name = 'ParameterizedQueryError';\r\n    this.stack = temp.stack;\r\n    if (error instanceof $npm.QueryFileError) {\r\n        this.error = error;\r\n        this.message = 'Failed to initialize \\'text\\' from a QueryFile.';\r\n    } else {\r\n        this.message = error;\r\n    }\r\n    this.result = ps;\r\n}\r\n\r\nParameterizedQueryError.prototype = Object.create(Error.prototype, {\r\n    constructor: {\r\n        value: ParameterizedQueryError,\r\n        writable: true,\r\n        configurable: true\r\n    }\r\n});\r\n\r\n/**\r\n * @method errors.ParameterizedQueryError.toString\r\n * @description\r\n * Creates a well-formatted multi-line string that represents the error.\r\n *\r\n * It is called automatically when writing the object into the console.\r\n *\r\n * @param {number} [level=0]\r\n * Nested output level, to provide visual offset.\r\n *\r\n * @returns {string}\r\n */\r\nParameterizedQueryError.prototype.toString = function (level) {\r\n    level = level > 0 ? parseInt(level) : 0;\r\n    var gap0 = $npm.utils.messageGap(level),\r\n        gap1 = $npm.utils.messageGap(level + 1),\r\n        gap2 = $npm.utils.messageGap(level + 2),\r\n        lines = [\r\n            'ParameterizedQueryError {',\r\n            gap1 + 'message: \"' + this.message + '\"',\r\n            gap1 + 'result: {',\r\n            gap2 + 'text: ' + JSON.stringify(this.result.text),\r\n            gap2 + 'values: ' + JSON.stringify(this.result.values),\r\n            gap1 + '}'\r\n        ];\r\n    if (this.error) {\r\n        lines.push(gap1 + 'error: ' + this.error.toString(level + 1));\r\n    }\r\n    lines.push(gap0 + '}');\r\n    return lines.join($npm.os.EOL);\r\n};\r\n\r\nParameterizedQueryError.prototype.inspect = function () {\r\n    return this.toString();\r\n};\r\n\r\nmodule.exports = ParameterizedQueryError;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/lib/errors/paramQuery.js\n// module id = 185\n// module chunks = 0","'use strict';\r\n\r\nvar $npm = {\r\n    os: require('os'),\r\n    utils: require('../utils'),\r\n    QueryFileError: require('./queryFile')\r\n};\r\n\r\n/**\r\n * @interface errors.PreparedStatementError\r\n * @augments external:Error\r\n * @description\r\n * {@link errors.PreparedStatementError PreparedStatementError} interface, available from the {@link errors} namespace.\r\n *\r\n * This type represents all errors that can be reported by class {@link PreparedStatement}, whether it is used\r\n * explicitly or implicitly (via a simple `{name, text, values}` object).\r\n *\r\n * @property {string} name\r\n * Standard {@link external:Error Error} property - error type name = `PreparedStatementError`.\r\n *\r\n * @property {string} message\r\n * Standard {@link external:Error Error} property - the error message.\r\n *\r\n * @property {string} stack\r\n * Standard {@link external:Error Error} property - the stack trace.\r\n *\r\n * @property {errors.QueryFileError} error\r\n * Internal {@link errors.QueryFileError} object.\r\n *\r\n * It is set only when the source {@link PreparedStatement} used a {@link QueryFile} which threw the error.\r\n *\r\n * @property {object} result\r\n * Resulting Prepared Statement object.\r\n *\r\n * @see PreparedStatement\r\n */\r\nfunction PreparedStatementError(error, ps) {\r\n    var temp = Error.apply(this, arguments);\r\n    temp.name = this.name = 'PreparedStatementError';\r\n    this.stack = temp.stack;\r\n    if (error instanceof $npm.QueryFileError) {\r\n        this.error = error;\r\n        this.message = 'Failed to initialize \\'text\\' from a QueryFile.';\r\n    } else {\r\n        this.message = error;\r\n    }\r\n    this.result = ps;\r\n}\r\n\r\nPreparedStatementError.prototype = Object.create(Error.prototype, {\r\n    constructor: {\r\n        value: PreparedStatementError,\r\n        writable: true,\r\n        configurable: true\r\n    }\r\n});\r\n\r\n/**\r\n * @method errors.PreparedStatementError.toString\r\n * @description\r\n * Creates a well-formatted multi-line string that represents the error.\r\n *\r\n * It is called automatically when writing the object into the console.\r\n *\r\n * @param {number} [level=0]\r\n * Nested output level, to provide visual offset.\r\n *\r\n * @returns {string}\r\n */\r\nPreparedStatementError.prototype.toString = function (level) {\r\n    level = level > 0 ? parseInt(level) : 0;\r\n    var gap0 = $npm.utils.messageGap(level),\r\n        gap1 = $npm.utils.messageGap(level + 1),\r\n        gap2 = $npm.utils.messageGap(level + 2),\r\n        lines = [\r\n            'PreparedStatementError {',\r\n            gap1 + 'message: \"' + this.message + '\"',\r\n            gap1 + 'result: {',\r\n            gap2 + 'name: ' + JSON.stringify(this.result.name),\r\n            gap2 + 'text: ' + JSON.stringify(this.result.text),\r\n            gap2 + 'values: ' + JSON.stringify(this.result.values),\r\n            gap1 + '}'\r\n        ];\r\n    if (this.error) {\r\n        lines.push(gap1 + 'error: ' + this.error.toString(level + 1));\r\n    }\r\n    lines.push(gap0 + '}');\r\n    return lines.join($npm.os.EOL);\r\n};\r\n\r\nPreparedStatementError.prototype.inspect = function () {\r\n    return this.toString();\r\n};\r\n\r\nmodule.exports = PreparedStatementError;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/lib/errors/prepared.js\n// module id = 186\n// module chunks = 0","'use strict';\r\n\r\nvar $npm = {\r\n    os: require('os'),\r\n    utils: require('../utils')\r\n};\r\n\r\n/**\r\n * @enum {number}\r\n * @alias errors.queryResultErrorCode\r\n * @readonly\r\n * @description\r\n * `queryResultErrorCode` enumerator, available from the {@link errors} namespace.\r\n *\r\n * Represents an integer code for each type of error supported by type {@link errors.QueryResultError}.\r\n *\r\n * @see {@link errors.QueryResultError}\r\n */\r\nvar queryResultErrorCode = {\r\n    /** No data returned from the query. */\r\n    noData: 0,\r\n\r\n    /** No return data was expected. */\r\n    notEmpty: 1,\r\n\r\n    /** Multiple rows were not expected. */\r\n    multiple: 2\r\n};\r\n\r\nObject.freeze(queryResultErrorCode);\r\n\r\nvar errorMessages = [\r\n    {name: 'noData', message: 'No data returned from the query.'},\r\n    {name: 'notEmpty', message: 'No return data was expected.'},\r\n    {name: 'multiple', message: 'Multiple rows were not expected.'}\r\n];\r\n\r\n/**\r\n * @interface errors.QueryResultError\r\n * @augments external:Error\r\n * @description\r\n *\r\n * This error is specified as the rejection reason for all result-specific methods when the result doesn't match\r\n * the expectation, i.e. when a query result doesn't match its Query Result Mask - the value of {@link queryResult}.\r\n *\r\n * The error applies to the result from the following methods: {@link Database.none none},\r\n * {@link Database.one one}, {@link Database.oneOrNone oneOrNone} and {@link Database.many many}.\r\n *\r\n * Supported errors:\r\n *\r\n * - `No return data was expected.`, method {@link Database.none none}\r\n * - `No data returned from the query.`, methods {@link Database.one one} and {@link Database.many many}\r\n * - `Multiple rows were not expected.`, methods {@link Database.one one} and {@link Database.oneOrNone oneOrNone}\r\n *\r\n * Like any other error, this one is notified with through the global event {@link event:error error}.\r\n *\r\n * The type is available from the {@link errors} namespace.\r\n *\r\n * @property {string} name\r\n * Standard {@link external:Error Error} property - error type name = `QueryResultError`.\r\n *\r\n * @property {string} message\r\n * Standard {@link external:Error Error} property - the error message.\r\n *\r\n * @property {string} stack\r\n * Standard {@link external:Error Error} property - the stack trace.\r\n *\r\n * @property {object} result\r\n * The original $[Result] object that was received.\r\n *\r\n * @property {number} received\r\n * Total number of rows received. It is simply the value of `result.rows.length`.\r\n *\r\n * @property {number} code\r\n * Error code - {@link errors.queryResultErrorCode queryResultErrorCode} value.\r\n *\r\n * @property {string} query\r\n * Query that was executed.\r\n *\r\n * Normally, it is the query already formatted with values, if there were any.\r\n * But if you are using initialization option `pgFormatting`, then the query string is before formatting.\r\n *\r\n * @property {} values\r\n * Values passed in as query parameters. Available only when initialization option `pgFormatting` is used.\r\n * Otherwise, the values are within the pre-formatted `query` string.\r\n *\r\n * @example\r\n *\r\n * var QueryResultError = pgp.errors.QueryResultError;\r\n * var qrec = pgp.errors.queryResultErrorCode;\r\n *\r\n * var options = {\r\n *\r\n *   // pg-promise initialization options...\r\n *\r\n *   error: (err, e) => {\r\n *       if (err instanceof QueryResultError) {\r\n *           // A query returned unexpected number of records, and thus rejected;\r\n *           \r\n *           // we can check the error code, if we want specifics:\r\n *           if(err.code === qrec.noData) {\r\n *               // expected some data, but received none;\r\n *           }\r\n *\r\n *           // If you write QueryResultError into the console,\r\n *           // you will get a nicely formatted output.\r\n *\r\n *           console.log(err);\r\n *           \r\n *           // See also: err, e.query, e.params, etc.\r\n *       }\r\n *   }\r\n * };\r\n *\r\n * @see\r\n * {@link queryResult}, {@link Database.none none}, {@link Database.one one},\r\n * {@link Database.oneOrNone oneOrNone}, {@link Database.many many}\r\n *\r\n */\r\nfunction QueryResultError(code, result, query, values) {\r\n    var temp = Error.apply(this, arguments);\r\n    temp.name = this.name = 'QueryResultError';\r\n    this.stack = temp.stack;\r\n    this.message = errorMessages[code].message;\r\n    this.code = code;\r\n    this.result = result;\r\n    this.query = query;\r\n    this.values = values;\r\n    this.received = result.rows.length;\r\n}\r\n\r\nQueryResultError.prototype = Object.create(Error.prototype, {\r\n    constructor: {\r\n        value: QueryResultError,\r\n        writable: true,\r\n        configurable: true\r\n    }\r\n});\r\n\r\n/**\r\n * @method errors.QueryResultError.toString\r\n * @description\r\n * Creates a well-formatted multi-line string that represents the error.\r\n *\r\n * It is called automatically when writing the object into the console.\r\n *\r\n * @param {number} [level=0]\r\n * Nested output level, to provide visual offset.\r\n *\r\n * @returns {string}\r\n */\r\nQueryResultError.prototype.toString = function (level) {\r\n    level = level > 0 ? parseInt(level) : 0;\r\n    var gap0 = $npm.utils.messageGap(level),\r\n        gap1 = $npm.utils.messageGap(level + 1),\r\n        lines = [\r\n            'QueryResultError {',\r\n            gap1 + 'code: queryResultErrorCode.' + errorMessages[this.code].name,\r\n            gap1 + 'message: \"' + this.message + '\"',\r\n            gap1 + 'received: ' + this.received,\r\n            gap1 + 'query: ' + (typeof this.query === 'string' ? '\"' + this.query + '\"' : JSON.stringify(this.query))\r\n        ];\r\n    if (this.values !== undefined) {\r\n        lines.push(gap1 + 'values: ' + JSON.stringify(this.values));\r\n    }\r\n    lines.push(gap0 + '}');\r\n    return lines.join($npm.os.EOL);\r\n};\r\n\r\nQueryResultError.prototype.inspect = function () {\r\n    return this.toString();\r\n};\r\n\r\nmodule.exports = {\r\n    QueryResultError: QueryResultError,\r\n    queryResultErrorCode: queryResultErrorCode\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/lib/errors/queryResult.js\n// module id = 187\n// module chunks = 0","'use strict';\r\n\r\nvar $npm = {\r\n    concat: require('./methods/concat'),\r\n    insert: require('./methods/insert'),\r\n    update: require('./methods/update'),\r\n    values: require('./methods/values'),\r\n    sets: require('./methods/sets'),\r\n    TableName: require('./tableName'),\r\n    ColumnSet: require('./columnSet'),\r\n    Column: require('./column')\r\n};\r\n\r\n/**\r\n * @namespace helpers\r\n * @description\r\n * Namespace for query-formatting generators, available as `pgp.helpers`, after initializing the library.\r\n *\r\n * It is a set of types and methods for generating queries in a fast, flexible and reliable way.\r\n *\r\n * See also: $[Performance Boost].\r\n *\r\n * @property {function} TableName\r\n * {@link helpers.TableName TableName} class constructor.\r\n *\r\n * @property {function} ColumnSet\r\n * {@link helpers.ColumnSet ColumnSet} class constructor.\r\n *\r\n * @property {function} Column\r\n * {@link helpers.Column Column} class constructor.\r\n *\r\n * @property {function} insert\r\n * {@link helpers.insert insert} static method.\r\n *\r\n * @property {function} update\r\n * {@link helpers.update update} static method.\r\n *\r\n * @property {function} values\r\n * {@link helpers.values values} static method.\r\n *\r\n * @property {function} sets\r\n * {@link helpers.sets sets} static method.\r\n *\r\n * @property {function} concat\r\n * {@link helpers.concat concat} static method.\r\n */\r\nmodule.exports = config => {\r\n    var res = {\r\n        insert: (data, columns, table) => {\r\n            var capSQL = config.options && config.options.capSQL;\r\n            return $npm.insert(data, columns, table, capSQL);\r\n        },\r\n        update: (data, columns, table, options) => {\r\n            var capSQL = config.options && config.options.capSQL;\r\n            return $npm.update(data, columns, table, options, capSQL);\r\n        },\r\n        concat: $npm.concat,\r\n        values: $npm.values,\r\n        sets: $npm.sets,\r\n        TableName: $npm.TableName,\r\n        ColumnSet: $npm.ColumnSet,\r\n        Column: $npm.Column\r\n    };\r\n    Object.freeze(res);\r\n    return res;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/lib/helpers/index.js\n// module id = 188\n// module chunks = 0","'use strict';\r\n\r\nvar $npm = {\r\n    format: require('../../formatting').as.format,\r\n    QueryFile: require('../../queryFile')\r\n};\r\n\r\nvar $arr = require('../../array');\r\n\r\n/**\r\n * @method helpers.concat\r\n * @description\r\n * **Added in v.5.3.0**\r\n *\r\n * Concatenates multiple queries into a single query string.\r\n *\r\n * - Before joining any query, the method removes from it all leading and trailing spaces, tabs and semi-colons.\r\n * - Empty queries are skipped automatically.\r\n *\r\n * @param {array<string|helpers.QueryFormat|QueryFile>} queries\r\n * Array of mixed-type elements:\r\n * - a simple query string, to be used as is\r\n * - a simple {@link helpers.QueryFormat QueryFormat}-like object = `{query, [values], [options]}`\r\n * - a {@link QueryFile} object\r\n *\r\n * @returns {string}\r\n * Concatenated string with all queries.\r\n *\r\n * @example\r\n *\r\n * var pgp = require('pg-promise')();\r\n *\r\n * var qf1 = new pgp.QueryFile('./query1.sql', {minify: true});\r\n * var qf2 = new pgp.QueryFile('./query2.sql', {minify: true});\r\n *\r\n * var query = pgp.helpers.concat([\r\n *     {query: 'INSERT INTO Users(name, age) VALUES($1, $2)', values: ['John', 23]}, // QueryFormat-like object\r\n *     {query: 'DELETE FROM Log WHERE userName = $1', values: 'John'}, // QueryFormat-like object\r\n *     {query: qf1, values: [1, 'Name']}, // QueryFile with formatting parameters\r\n *     'SELECT count(*) FROM Users', // a simple-string query,\r\n *     qf2 // direct QueryFile object\r\n * ]);\r\n *\r\n * // query = concatenated string with all the queries\r\n */\r\nfunction concat(queries) {\r\n    if (!Array.isArray(queries)) {\r\n        throw new TypeError('Parameter \\'queries\\' must be an array.');\r\n    }\r\n    var all = $arr.map(queries, (q, index) => {\r\n        if (typeof q === 'string') {\r\n            // a simple query string without parameters:\r\n            return clean(q);\r\n        }\r\n        if (q && typeof q === 'object') {\r\n            if (q instanceof $npm.QueryFile) {\r\n                // QueryFile object:\r\n                return clean(q.formatDBType());\r\n            }\r\n            if ('query' in q) {\r\n                // object {query, values, options}:\r\n                return clean($npm.format(q.query, q.values, q.options));\r\n            }\r\n        }\r\n        throw new Error('Invalid query element at index ' + index + '.');\r\n    });\r\n\r\n    return $arr.filter(all, q => q).join(';');\r\n}\r\n\r\nfunction clean(q) {\r\n    // removes from the query all leading and trailing symbols ' ', '\\t' and ';'\r\n    return q.replace(/^[\\s;]*|[\\s;]*$/g, '');\r\n}\r\n\r\nmodule.exports = concat;\r\n\r\n/**\r\n * @typedef helpers.QueryFormat\r\n * @description\r\n * A simple structure of parameters to be passed into method {@link formatting.format as.format} exactly as they are.\r\n *\r\n * @property {string|value|object} query\r\n * A query string or a value/object that implements $[Custom Type Formatting], to be formatted according to `values`.\r\n *\r\n * @property {array|object|value} [values]\r\n * Optional formatting parameters for the query.\r\n *\r\n * @property {object} [options]\r\n * Query formatting options, as supported by method {@link formatting.format as.format}.\r\n *\r\n * @see\r\n * {@link formatting.format as.format}\r\n */\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/lib/helpers/methods/concat.js\n// module id = 189\n// module chunks = 0","'use strict';\r\n\r\nvar $npm = {\r\n    TableName: require('../tableName'),\r\n    ColumnSet: require('../columnSet'),\r\n    formatting: require('../../formatting'),\r\n    utils: require('../../utils')\r\n};\r\n\r\nvar $arr = require('../../array');\r\n\r\n/**\r\n * @method helpers.insert\r\n * @description\r\n * Generates an `INSERT` query for either one object or an array of objects.\r\n *\r\n * @param {object|object[]} data\r\n * An insert object with properties for insert values, or an array of such objects.\r\n *\r\n * When `data` is not a non-null object and not an array, it will throw {@link external:TypeError TypeError} = `Invalid parameter 'data' specified.`\r\n *\r\n * When `data` is an empty array, it will throw {@link external:TypeError TypeError} = `Cannot generate an INSERT from an empty array.`\r\n *\r\n * When `data` is an array that contains a non-object value, the method will throw {@link external:Error Error} =\r\n * `Invalid insert object at index N.`\r\n *\r\n * @param {array|helpers.Column|helpers.ColumnSet} [columns]\r\n * Set of columns to be inserted.\r\n *\r\n * It is optional when `data` is a single object, and required when `data` is an array of objects. If not specified for an array\r\n * of objects, the method will throw {@link external:TypeError TypeError} = `Parameter 'columns' is required when inserting multiple records.`\r\n *\r\n * When `columns` is not a {@link helpers.ColumnSet ColumnSet} object, a temporary {@link helpers.ColumnSet ColumnSet}\r\n * is created - from the value of `columns` (if it was specified), or from the value of `data` (if it is not an array).\r\n *\r\n * When the final {@link helpers.ColumnSet ColumnSet} is empty (no columns in it), the method will throw\r\n * {@link external:Error Error} = `Cannot generate an INSERT without any columns.`\r\n *\r\n * @param {helpers.TableName|string|{table,schema}} [table]\r\n * Destination table.\r\n *\r\n * It is normally a required parameter. But when `columns` is passed in as a {@link helpers.ColumnSet ColumnSet} object\r\n * with `table` set in it, that will be used when this parameter isn't specified. When neither is available, the method\r\n * will throw {@link external:Error Error} = `Table name is unknown.`\r\n *\r\n * @returns {string}\r\n * The resulting query string.\r\n *\r\n * @see\r\n *  {@link helpers.Column Column},\r\n *  {@link helpers.ColumnSet ColumnSet},\r\n *  {@link helpers.TableName TableName}\r\n *\r\n * @example\r\n *\r\n * var pgp = require('pg-promise')({\r\n *    capSQL: true // if you want all generated SQL capitalized\r\n * });\r\n *\r\n * var dataSingle = {val: 123, msg: 'hello'};\r\n * var dataMulti = [{val: 123, msg: 'hello'}, {val: 456, msg: 'world!'}];\r\n *\r\n * // Column details can be taken from the data object:\r\n *\r\n * pgp.helpers.insert(dataSingle, null, 'my-table');\r\n * //=> INSERT INTO \"my-table\"(\"val\",\"msg\") VALUES(123,'hello')\r\n *\r\n * @example\r\n *\r\n * // Column details are required for a multi-row `INSERT`:\r\n *\r\n * pgp.helpers.insert(dataMulti, ['val', 'msg'], 'my-table');\r\n * //=> INSERT INTO \"my-table\"(\"val\",\"msg\") VALUES(123,'hello'),(456,'world!')\r\n *\r\n * @example\r\n *\r\n * // Column details from a reusable ColumnSet (recommended for performance):\r\n *\r\n * var cs = new pgp.helpers.ColumnSet(['val', 'msg'], {table: 'my-table'});\r\n *\r\n * pgp.helpers.insert(dataMulti, cs);\r\n * //=> INSERT INTO \"my-table\"(\"val\",\"msg\") VALUES(123,'hello'),(456,'world!')\r\n *\r\n */\r\nfunction insert(data, columns, table, capSQL) {\r\n\r\n    if (!data || typeof data !== 'object') {\r\n        throw new TypeError('Invalid parameter \\'data\\' specified.');\r\n    }\r\n\r\n    var isArray = Array.isArray(data);\r\n\r\n    if (isArray && !data.length) {\r\n        throw new TypeError('Cannot generate an INSERT from an empty array.');\r\n    }\r\n\r\n    if (columns instanceof $npm.ColumnSet) {\r\n        if ($npm.utils.isNull(table)) {\r\n            table = columns.table;\r\n        }\r\n    } else {\r\n        if (isArray && $npm.utils.isNull(columns)) {\r\n            throw new TypeError('Parameter \\'columns\\' is required when inserting multiple records.');\r\n        }\r\n        columns = new $npm.ColumnSet(columns || data);\r\n    }\r\n\r\n    if (!columns.columns.length) {\r\n        throw new Error('Cannot generate an INSERT without any columns.');\r\n    }\r\n\r\n    if (!table) {\r\n        throw new Error('Table name is unknown.');\r\n    }\r\n\r\n    if (!(table instanceof $npm.TableName)) {\r\n        table = new $npm.TableName(table);\r\n    }\r\n\r\n    var query = capSQL ? sql.capCase : sql.lowCase;\r\n\r\n    var format = $npm.formatting.as.format;\r\n    query = format(query, [table.name, columns.names]);\r\n\r\n    if (isArray) {\r\n        return query + $arr.map(data, (d, index) => {\r\n                if (!d || typeof d !== 'object') {\r\n                    throw new Error('Invalid insert object at index ' + index + '.');\r\n                }\r\n                return '(' + format(columns.variables, columns.prepare(d)) + ')';\r\n            }).join();\r\n    }\r\n    return query + '(' + format(columns.variables, columns.prepare(data)) + ')';\r\n}\r\n\r\nvar sql = {\r\n    lowCase: 'insert into $1^($2^) values',\r\n    capCase: 'INSERT INTO $1^($2^) VALUES'\r\n};\r\n\r\nmodule.exports = insert;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/lib/helpers/methods/insert.js\n// module id = 190\n// module chunks = 0","'use strict';\r\n\r\nvar $npm = {\r\n    ColumnSet: require('../columnSet'),\r\n    format: require('../../formatting').as.format,\r\n    utils: require('../../utils')\r\n};\r\n\r\n/**\r\n * @method helpers.sets\r\n * @description\r\n * Generates a string of comma-separated value-set statements from a single object: `col1=val1, col2=val2, ...`,\r\n * to be used as part of a query.\r\n *\r\n * Since it is to be used as part of `UPDATE` queries, {@link helpers.Column Column} properties `cnd` and `skip` apply.\r\n *\r\n * @param {object} data\r\n * A simple, non-null and non-array source object.\r\n *\r\n * If it is anything else, the method will throw {@link external:TypeError TypeError} = `Invalid parameter 'data' specified.`\r\n *\r\n * @param {array|helpers.Column|helpers.ColumnSet} [columns]\r\n * Columns for which to set values.\r\n *\r\n * When not specified, properties of the `data` object are used.\r\n *\r\n * When no effective columns are found, an empty string is returned.\r\n *\r\n * @returns {string}\r\n * - comma-separated value-set statements for the `data` object\r\n * - an empty string, if no effective columns found\r\n *\r\n * @see\r\n *  {@link helpers.Column Column},\r\n *  {@link helpers.ColumnSet ColumnSet}\r\n *\r\n * @example\r\n *\r\n * var pgp = require('pg-promise')();\r\n *\r\n * var data = {id: 1, val: 123, msg: 'hello'};\r\n *\r\n * // Properties can be pulled automatically from the object:\r\n *\r\n * pgp.helpers.sets(data);\r\n * //=> \"id\"=1,\"val\"=123,\"msg\"='hello'\r\n *\r\n * @example\r\n *\r\n * // Column details from a reusable ColumnSet (recommended for performance);\r\n * // NOTE: Conditional columns (start with '?') are skipped:\r\n *\r\n * var cs = new pgp.helpers.ColumnSet(['?id','val', 'msg']);\r\n *\r\n * pgp.helpers.sets(data, cs);\r\n * //=> \"val\"=123,\"msg\"='hello'\r\n *\r\n */\r\nfunction sets(data, columns) {\r\n\r\n    if (!data || typeof data !== 'object' || Array.isArray(data)) {\r\n        throw new TypeError('Invalid parameter \\'data\\' specified.');\r\n    }\r\n\r\n    if (!(columns instanceof $npm.ColumnSet)) {\r\n        columns = new $npm.ColumnSet(columns || data);\r\n    }\r\n\r\n    return $npm.format(columns.assign(data), columns.prepare(data));\r\n}\r\n\r\nmodule.exports = sets;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/lib/helpers/methods/sets.js\n// module id = 191\n// module chunks = 0","'use strict';\r\n\r\nvar $npm = {\r\n    TableName: require('../tableName'),\r\n    ColumnSet: require('../columnSet'),\r\n    formatting: require('../../formatting'),\r\n    utils: require('../../utils')\r\n};\r\n\r\nvar $arr = require('../../array');\r\n\r\n/**\r\n * @method helpers.update\r\n * @description\r\n * Generates a simplified `UPDATE` query for either one object or an array of objects.\r\n *\r\n * The resulting query needs a `WHERE` clause to be appended to it, to determine the update logic.\r\n * This is to allow for update conditions of any complexity that are easy to add.\r\n *\r\n * @param {object|object[]} data\r\n * An update object with properties for update values, or an array of such objects.\r\n *\r\n * When `data` is not a non-null object and not an array, it will throw {@link external:TypeError TypeError} = `Invalid parameter 'data' specified.`\r\n *\r\n * When `data` is an empty array, it will throw {@link external:TypeError TypeError} = `Cannot generate an UPDATE from an empty array.`\r\n *\r\n * When `data` is an array that contains a non-object value, the method will throw {@link external:Error Error} =\r\n * `Invalid update object at index N.`\r\n *\r\n * @param {array|helpers.Column|helpers.ColumnSet} [columns]\r\n * Set of columns to be updated.\r\n *\r\n * It is optional when `data` is a single object, and required when `data` is an array of objects. If not specified for an array\r\n * of objects, the method will throw {@link external:TypeError TypeError} = `Parameter 'columns' is required when updating multiple records.`\r\n *\r\n * When `columns` is not a {@link helpers.ColumnSet ColumnSet} object, a temporary {@link helpers.ColumnSet ColumnSet}\r\n * is created - from the value of `columns` (if it was specified), or from the value of `data` (if it is not an array).\r\n *\r\n * When the final {@link helpers.ColumnSet ColumnSet} is empty (no columns in it), the method will throw\r\n * {@link external:Error Error} = `Cannot generate an UPDATE without any columns.` (see also {@link helpers.ColumnSet.canGenerate ColumnSet.canGenerate})\r\n *\r\n * @param {helpers.TableName|string|{table,schema}} [table]\r\n * Table to be updated.\r\n *\r\n * It is normally a required parameter. But when `columns` is passed in as a {@link helpers.ColumnSet ColumnSet} object\r\n * with `table` set in it, that will be used when this parameter isn't specified. When neither is available, the method\r\n * will throw {@link external:Error Error} = `Table name is unknown.`\r\n *\r\n * @param {object} [options]\r\n * An object with formatting options for multi-row `UPDATE` queries.\r\n *\r\n * @param {string} [options.tableAlias=t]\r\n * Name of the SQL variable that represents the destination table.\r\n *\r\n * @param {string} [options.valueAlias=v]\r\n * Name of the SQL variable that represents the values.\r\n *\r\n * @returns {string}\r\n * The resulting query string that typically needs a `WHERE` condition appended.\r\n *\r\n * @see\r\n *  {@link helpers.Column Column},\r\n *  {@link helpers.ColumnSet ColumnSet},\r\n *  {@link helpers.TableName TableName}\r\n *\r\n * @example\r\n *\r\n * var pgp = require('pg-promise')({\r\n *    capSQL: true // if you want all generated SQL capitalized\r\n * });\r\n *\r\n * var dataSingle = {id: 1, val: 123, msg: 'hello'};\r\n * var dataMulti = [{id: 1, val: 123, msg: 'hello'}, {id: 2, val: 456, msg: 'world!'}];\r\n *\r\n * // Although column details can be taken from the data object, it is not\r\n * // a likely scenario for an update, unless updating the whole table:\r\n *\r\n * pgp.helpers.update(dataSingle, null, 'my-table');\r\n * //=> UPDATE \"my-table\" SET \"id\"=1,\"val\"=123,\"msg\"='hello'\r\n *\r\n * @example\r\n *\r\n * // A typical single-object update:\r\n *\r\n * pgp.helpers.update(dataSingle, ['val', 'msg'], 'my-table') + ' WHERE id = ' + dataSingle.id;\r\n * //=> UPDATE \"my-table\" SET \"val\"=123,\"msg\"='hello' WHERE id = 1\r\n *\r\n * @example\r\n *\r\n * // Column details are required for a multi-row `UPDATE`;\r\n * // Adding '?' in front of a column name means it is only for a WHERE condition:\r\n *\r\n * pgp.helpers.update(dataMulti, ['?id', 'val', 'msg'], 'my-table') + ' WHERE v.id = t.id';\r\n * //=> UPDATE \"my-table\" AS t SET \"val\"=v.\"val\",\"msg\"=v.\"msg\" FROM (VALUES(1,123,'hello'),(2,456,'world!'))\r\n * //   AS v(\"id\",\"val\",\"msg\") WHERE v.id = t.id\r\n *\r\n * @example\r\n *\r\n * // Column details from a reusable ColumnSet (recommended for performance):\r\n *\r\n * var cs = new pgp.helpers.ColumnSet(['?id', 'val', 'msg'], {table: 'my-table'});\r\n *\r\n * pgp.helpers.update(dataMulti, cs) + ' WHERE v.id = t.id';\r\n * //=> UPDATE \"my-table\" AS t SET \"val\"=v.\"val\",\"msg\"=v.\"msg\" FROM (VALUES(1,123,'hello'),(2,456,'world!'))\r\n * //   AS v(\"id\",\"val\",\"msg\") WHERE v.id = t.id\r\n *\r\n * @example\r\n *\r\n * // Using parameter `options` to change the default alias names:\r\n *\r\n * pgp.helpers.update(dataMulti, cs, null, {tableAlias: 'X', valueAlias: 'Y'}) + ' WHERE Y.id = X.id';\r\n * //=> UPDATE \"my-table\" AS X SET \"val\"=Y.\"val\",\"msg\"=Y.\"msg\" FROM (VALUES(1,123,'hello'),(2,456,'world!'))\r\n * //   AS Y(\"id\",\"val\",\"msg\") WHERE Y.id = X.id\r\n *\r\n */\r\nfunction update(data, columns, table, options, capSQL) {\r\n\r\n    if (!data || typeof data !== 'object') {\r\n        throw new TypeError('Invalid parameter \\'data\\' specified.');\r\n    }\r\n\r\n    var isArray = Array.isArray(data);\r\n\r\n    if (isArray && !data.length) {\r\n        throw new TypeError('Cannot generate an UPDATE from an empty array.');\r\n    }\r\n\r\n    if (columns instanceof $npm.ColumnSet) {\r\n        if ($npm.utils.isNull(table)) {\r\n            table = columns.table;\r\n        }\r\n    } else {\r\n        if (isArray && $npm.utils.isNull(columns)) {\r\n            throw new TypeError('Parameter \\'columns\\' is required when updating multiple records.');\r\n        }\r\n        columns = new $npm.ColumnSet(columns || data);\r\n    }\r\n\r\n    var format = $npm.formatting.as.format;\r\n\r\n    if (isArray) {\r\n        var tableAlias = 't', valueAlias = 'v';\r\n        if (options && typeof options === 'object') {\r\n            if (options.tableAlias && typeof options.tableAlias === 'string') {\r\n                tableAlias = options.tableAlias;\r\n            }\r\n            if (options.valueAlias && typeof options.valueAlias === 'string') {\r\n                valueAlias = options.valueAlias;\r\n            }\r\n        }\r\n\r\n        var q = capSQL ? sql.multi.capCase : sql.multi.lowCase;\r\n\r\n        var actualColumns = $arr.filter(columns.columns, c => !c.cnd);\r\n\r\n        checkColumns(actualColumns);\r\n        checkTable();\r\n\r\n        var targetCols = $arr.map(actualColumns, c => c.escapedName + '=' + valueAlias + '.' + c.escapedName).join();\r\n\r\n        var values = $arr.map(data, (d, index) => {\r\n            if (!d || typeof d !== 'object') {\r\n                throw new Error('Invalid update object at index ' + index + '.');\r\n            }\r\n            return '(' + format(columns.variables, columns.prepare(d)) + ')';\r\n        }).join();\r\n\r\n        return format(q, [table.name, tableAlias, targetCols, values, valueAlias, columns.names]);\r\n    }\r\n\r\n    var updates = columns.assign(data);\r\n\r\n    checkColumns(updates);\r\n    checkTable();\r\n\r\n    var query = capSQL ? sql.single.capCase : sql.single.lowCase;\r\n\r\n    return format(query, table.name) + format(updates, columns.prepare(data));\r\n\r\n    function checkTable() {\r\n        if (table && !(table instanceof $npm.TableName)) {\r\n            table = new $npm.TableName(table);\r\n        }\r\n        if (!table) {\r\n            throw new Error('Table name is unknown.');\r\n        }\r\n    }\r\n\r\n    function checkColumns(cols) {\r\n        if (!cols.length) {\r\n            throw new Error('Cannot generate an UPDATE without any columns.');\r\n        }\r\n    }\r\n}\r\n\r\nvar sql = {\r\n    single: {\r\n        lowCase: 'update $1^ set ',\r\n        capCase: 'UPDATE $1^ SET '\r\n    },\r\n    multi: {\r\n        lowCase: 'update $1^ as $2^ set $3^ from (values$4^) as $5^($6^)',\r\n        capCase: 'UPDATE $1^ AS $2^ SET $3^ FROM (VALUES$4^) AS $5^($6^)'\r\n    }\r\n};\r\n\r\nmodule.exports = update;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/lib/helpers/methods/update.js\n// module id = 192\n// module chunks = 0","'use strict';\r\n\r\nvar $npm = {\r\n    ColumnSet: require('../columnSet'),\r\n    formatting: require('../../formatting'),\r\n    utils: require('../../utils')\r\n};\r\n\r\nvar $arr = require('../../array');\r\n\r\n/**\r\n * @method helpers.values\r\n * @description\r\n * Generates a string of comma-separated value groups from either one object or an array of objects,\r\n * to be used as part of a query:\r\n *\r\n * - from a single object: `(val_1, val_2, ...)`\r\n * - from an array of objects: `(val_11, val_12, ...), (val_21, val_22), ...`\r\n *\r\n * @param {object|object[]} data\r\n * A source object with properties as values, or an array of such objects.\r\n *\r\n * If it is anything else, the method will throw {@link external:TypeError TypeError} = `Invalid parameter 'data' specified.`\r\n *\r\n * When `data` is an array that contains a non-object value, the method will throw {@link external:Error Error} =\r\n * `Invalid object at index N.`\r\n *\r\n * When `data` is an empty array, an empty string is returned.\r\n *\r\n * @param {array|helpers.Column|helpers.ColumnSet} [columns]\r\n * Columns for which to return values.\r\n *\r\n * It is optional when `data` is a single object, and required when `data` is an array of objects. If not specified for an array\r\n * of objects, the method will throw {@link external:TypeError TypeError} = `Parameter 'columns' is required when generating multi-row values.`\r\n *\r\n * When the final {@link helpers.ColumnSet ColumnSet} is empty (no columns in it), the method will throw\r\n * {@link external:Error Error} = `Cannot generate values without any columns.`\r\n *\r\n * @returns {string}\r\n * - comma-separated value groups, according to `data`\r\n * - an empty string, if `data` is an empty array\r\n *\r\n * @see\r\n *  {@link helpers.Column Column},\r\n *  {@link helpers.ColumnSet ColumnSet}\r\n *\r\n * @example\r\n *\r\n * var pgp = require('pg-promise')();\r\n *\r\n * var dataSingle = {val: 123, msg: 'hello'};\r\n * var dataMulti = [{val: 123, msg: 'hello'}, {val: 456, msg: 'world!'}];\r\n *\r\n * // Properties can be pulled automatically from a single object:\r\n *\r\n * pgp.helpers.values(dataSingle);\r\n * //=> (123,'hello')\r\n *\r\n * @example\r\n *\r\n * // Column details are required when using an array of objects:\r\n *\r\n * pgp.helpers.values(dataMulti, ['val', 'msg']);\r\n * //=> (123,'hello'),(456,'world!')\r\n *\r\n * @example\r\n *\r\n * // Column details from a reusable ColumnSet (recommended for performance):\r\n *\r\n * var cs = new pgp.helpers.ColumnSet(['val', 'msg']);\r\n *\r\n * pgp.helpers.values(dataMulti, cs);\r\n * //=> (123,'hello'),(456,'world!')\r\n *\r\n */\r\nfunction values(data, columns) {\r\n\r\n    if (!data || typeof data !== 'object') {\r\n        throw new TypeError('Invalid parameter \\'data\\' specified.');\r\n    }\r\n\r\n    var isArray = Array.isArray(data);\r\n\r\n    if (!(columns instanceof $npm.ColumnSet)) {\r\n        if (isArray && $npm.utils.isNull(columns)) {\r\n            throw new TypeError('Parameter \\'columns\\' is required when generating multi-row values.');\r\n        }\r\n        columns = new $npm.ColumnSet(columns || data);\r\n    }\r\n\r\n    if (!columns.columns.length) {\r\n        throw new Error('Cannot generate values without any columns.');\r\n    }\r\n\r\n    var format = $npm.formatting.as.format;\r\n\r\n    if (isArray) {\r\n        return $arr.map(data, (d, index) => {\r\n            if (!d || typeof d !== 'object') {\r\n                throw new Error('Invalid object at index ' + index + '.');\r\n            }\r\n            return '(' + format(columns.variables, columns.prepare(d)) + ')';\r\n        }).join();\r\n    }\r\n    return '(' + format(columns.variables, columns.prepare(data)) + ')';\r\n}\r\n\r\nmodule.exports = values;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/lib/helpers/methods/values.js\n// module id = 193\n// module chunks = 0","'use strict';\r\n\r\nvar $npm = {\r\n    con: require('manakin').local,\r\n    path: require('path'),\r\n    pg: require('pg'),\r\n    minify: require('pg-minify'),\r\n    array: require('./array'),\r\n    adapter: require('./adapter'),\r\n    result: require('./result'),\r\n    promise: require('./promise'),\r\n    formatting: require('./formatting'),\r\n    helpers: require('./helpers'),\r\n    queryFile: require('./queryFile'),\r\n    errors: require('./errors'),\r\n    utils: require('./utils'),\r\n    pubUtils: require('./utils/public'),\r\n    mode: require('./txMode'),\r\n    types: require('./types'),\r\n    package: require('../package.json')\r\n};\r\n\r\n/**\r\n * @author Vitaly Tomilov\r\n * @module pg-promise\r\n *\r\n * @description\r\n * ### Initialization Options\r\n *\r\n * Below is the complete list of _Initialization Options_ for the library.\r\n *\r\n * @param {object} [options]\r\n * Library Initialization Options.\r\n *\r\n * @param {boolean} [options.pgFormatting=false]\r\n * Redirects query formatting to PG.\r\n *\r\n * This property can be set dynamically (before or after initialization).\r\n *\r\n * @param {boolean} [options.pgNative=false]\r\n * Use $[Native Bindings]. Library $[pg-native] must be installed, or else it will throw an error.\r\n *\r\n * This is a static property (can only be set prior to initialization).\r\n *\r\n * @param {object|function} [options.promiseLib=Promise]\r\n * Overrides the default promise library.\r\n *\r\n * This is a static property (can only be set prior to initialization).\r\n *\r\n * @param {boolean} [options.noLocking=false]\r\n * Prevents protocol locking.\r\n *\r\n * By default, the library locks its protocol to read-only access, as a fool-proof mechanism.\r\n * Specifically for the {@link event:extend extend} event this serves as a protection against overriding existing\r\n * properties or trying to set them at the wrong time.\r\n *\r\n * If this provision gets in the way of using a mock-up framework for your tests, you can force\r\n * the library to deactivate most of the locks by setting `noLocking` = `true` within the options.\r\n *\r\n * This property can be set dynamically (before or after initialization).\r\n *\r\n * @param {boolean} [options.capSQL=false]\r\n * Capitalizes any SQL generated by the library.\r\n *\r\n * By default, all internal SQL within the library is generated using the low case.\r\n * If, however, you want all SQL to be capitalized instead, set `capSQL` = `true`.\r\n *\r\n * This is purely a cosmetic feature.\r\n *\r\n * This property can be set dynamically (before or after initialization).\r\n *\r\n * @param {boolean} [options.noWarnings=false]\r\n * Disables all diagnostic warnings in the library (which is ill-advised).\r\n *\r\n * This property can be set dynamically (before or after initialization).\r\n *\r\n * @param {function} [options.connect]\r\n * Global event {@link event:connect connect} handler.\r\n *\r\n * This property can be set dynamically (before or after initialization).\r\n *\r\n * @param {function} [options.disconnect]\r\n * Global event {@link event:disconnect disconnect} handler.\r\n *\r\n * This property can be set dynamically (before or after initialization).\r\n *\r\n * @param {function} [options.query]\r\n * Global event {@link event:query query} handler.\r\n *\r\n * This property can be set dynamically (before or after initialization).\r\n *\r\n * @param {function} [options.receive]\r\n * Global event {@link event:receive receive} handler.\r\n *\r\n * @param {function} [options.task]\r\n * Global event {@link event:task task} handler.\r\n *\r\n * This property can be set dynamically (before or after initialization).\r\n *\r\n * @param {function} [options.transact]\r\n * Global event {@link event:transact transact} handler.\r\n *\r\n * This property can be set dynamically (before or after initialization).\r\n *\r\n * @param {function} [options.error]\r\n * Global event {@link event:error error} handler.\r\n *\r\n * This property can be set dynamically (before or after initialization).\r\n *\r\n * @param {function} [options.extend]\r\n * Global event {@link event:extend extend} handler.\r\n *\r\n * This property can be set dynamically (before or after initialization).\r\n *\r\n * @example\r\n *\r\n * var options = {\r\n *   // Initialization Options\r\n * };\r\n *\r\n * var pgp = require('pg-promise')(options);\r\n *\r\n */\r\nfunction $main(options) {\r\n\r\n    if ($npm.utils.isNull(options)) {\r\n        options = {};\r\n    } else {\r\n        if (typeof options !== 'object') {\r\n            throw new TypeError('Invalid initialization options.');\r\n        }\r\n\r\n        // list of supported initialization options:\r\n        var validOptions = ['pgFormatting', 'pgNative', 'promiseLib', 'noLocking', 'capSQL', 'noWarnings',\r\n            'connect', 'disconnect', 'query', 'receive', 'task', 'transact', 'error', 'extend'];\r\n\r\n        if (!options.noWarnings) {\r\n            for (var prop in options) {\r\n                if (validOptions.indexOf(prop) === -1) {\r\n                    $npm.con.warn('WARNING: Invalid property \\'%s\\' in initialization options.\\n%s\\n', prop, $npm.utils.getLocalStack(3));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    var pg = $npm.pg, p = $npm.promise(options.promiseLib);\r\n\r\n    var config = {\r\n        version: $npm.package.version,\r\n        promiseLib: p.promiseLib,\r\n        promise: p.promise,\r\n    };\r\n\r\n    $npm.utils.addReadProp(config, '$npm', {}, true);\r\n\r\n    // Locking properties that cannot be changed later:\r\n    $npm.utils.addReadProp(options, 'promiseLib', options.promiseLib);\r\n    $npm.utils.addReadProp(options, 'pgNative', !!options.pgNative);\r\n\r\n    config.options = options;\r\n\r\n    // istanbul ignore next:\r\n    // we do not cover code specific to Native Bindings\r\n    if (options.pgNative) {\r\n        pg = $npm.pg.native;\r\n        if ($npm.utils.isNull(pg)) {\r\n            throw new Error('Failed to initialize Native Bindings.');\r\n        }\r\n    }\r\n\r\n    var Database = require('./database')(config);\r\n\r\n    var inst = (cn, dc) => {\r\n        if ($npm.utils.isText(cn) || (cn && typeof cn === 'object')) {\r\n            return new Database(cn, dc, config);\r\n        }\r\n        throw new TypeError('Invalid connection details.');\r\n    };\r\n\r\n    $npm.utils.addReadProperties(inst, rootNameSpace);\r\n\r\n    /**\r\n     * @member {external:PG} pg\r\n     * @readonly\r\n     * @description\r\n     * Instance of the $[PG] library that's being used, depending on initialization option `pgNative`:\r\n     *  - regular `pg` module instance, without option `pgNative`, or equal to `false` (default)\r\n     *  - `pg` module instance with $[Native Bindings], if option `pgNative` was set.\r\n     *\r\n     * Available as `pgp.pg`, after initializing the library.\r\n     */\r\n    $npm.utils.addReadProp(inst, 'pg', pg);\r\n\r\n    /**\r\n     * @member {function} end\r\n     * @readonly\r\n     * @description\r\n     * Terminates pg library (call it when exiting the application).\r\n     *\r\n     * Available as `pgp.end`, after initializing the library.\r\n     */\r\n    $npm.utils.addReadProp(inst, 'end', () => {\r\n        pg.end();\r\n    });\r\n\r\n    /**\r\n     * @member {helpers} helpers\r\n     * @readonly\r\n     * @description\r\n     * Namespace for {@link helpers all query-formatting helper functions}.\r\n     *\r\n     * Available as `pgp.helpers`, after initializing the library.\r\n     *\r\n     * @see {@link helpers}.\r\n     */\r\n    $npm.utils.addReadProp(inst, 'helpers', $npm.helpers(config));\r\n\r\n    /**\r\n     * @member {external:spex} spex\r\n     * @readonly\r\n     * @description\r\n     * Initialized instance of the $[spex] module, used by the library within tasks and transactions.\r\n     *\r\n     * Available as `pgp.spex`, after initializing the library.\r\n     *\r\n     * @see\r\n     * {@link Task.batch},\r\n     * {@link Task.page},\r\n     * {@link Task.sequence}\r\n     */\r\n    $npm.utils.addReadProp(inst, 'spex', config.$npm.spex);\r\n\r\n    config.pgp = inst;\r\n    Object.freeze(config);\r\n\r\n    return inst;\r\n}\r\n\r\nvar rootNameSpace = {\r\n\r\n    /**\r\n     * @member {formatting} as\r\n     * @readonly\r\n     * @description\r\n     * Namespace for {@link formatting all query-formatting functions}.\r\n     *\r\n     * Available as `pgp.as`, before and after initializing the library.\r\n     *\r\n     * @see {@link formatting}.\r\n     */\r\n    as: $npm.formatting.as,\r\n\r\n    /**\r\n     * @member {external:pg-minify} minify\r\n     * @readonly\r\n     * @description\r\n     * Instance of the $[pg-minify] library that's used.\r\n     *\r\n     * Available as `pgp.minify`, before and after initializing the library.\r\n     */\r\n    minify: $npm.minify,\r\n\r\n    /**\r\n     * @member {queryResult} queryResult\r\n     * @readonly\r\n     * @description\r\n     * Query Result Mask enumerator.\r\n     *\r\n     * Available as `pgp.queryResult`, before and after initializing the library.\r\n     */\r\n    queryResult: $npm.result,\r\n\r\n    /**\r\n     * @member {PromiseAdapter} PromiseAdapter\r\n     * @readonly\r\n     * @description\r\n     * {@link PromiseAdapter} class.\r\n     *\r\n     * Available as `pgp.PromiseAdapter`, before and after initializing the library.\r\n     */\r\n    PromiseAdapter: $npm.adapter,\r\n\r\n    /**\r\n     * @member {ParameterizedQuery} ParameterizedQuery\r\n     * @readonly\r\n     * @description\r\n     * {@link ParameterizedQuery} class.\r\n     *\r\n     * Available as `pgp.ParameterizedQuery`, before and after initializing the library.\r\n     */\r\n    ParameterizedQuery: $npm.types.ParameterizedQuery,\r\n\r\n    /**\r\n     * @member {PreparedStatement} PreparedStatement\r\n     * @readonly\r\n     * @description\r\n     * {@link PreparedStatement} class.\r\n     *\r\n     * Available as `pgp.PreparedStatement`, before and after initializing the library.\r\n     */\r\n    PreparedStatement: $npm.types.PreparedStatement,\r\n\r\n    /**\r\n     * @member {QueryFile} QueryFile\r\n     * @readonly\r\n     * @description\r\n     * {@link QueryFile} class.\r\n     *\r\n     * Available as `pgp.QueryFile`, before and after initializing the library.\r\n     */\r\n    QueryFile: $npm.queryFile,\r\n\r\n\r\n    /**\r\n     * @member {errors} errors\r\n     * @readonly\r\n     * @description\r\n     * {@link errors} - namespace for all error types.\r\n     *\r\n     * Available as `pgp.errors`, before and after initializing the library.\r\n     */\r\n    errors: $npm.errors,\r\n\r\n    /**\r\n     * @member {utils} utils\r\n     * @readonly\r\n     * @description\r\n     * {@link utils} - namespace for utility functions.\r\n     *\r\n     * Available as `pgp.utils`, before and after initializing the library.\r\n     */\r\n    utils: $npm.pubUtils,\r\n\r\n    /**\r\n     * @member {txMode} txMode\r\n     * @readonly\r\n     * @description\r\n     * {@link txMode Transaction Mode} namespace.\r\n     *\r\n     * Available as `pgp.txMode`, before and after initializing the library.\r\n     */\r\n    txMode: $npm.mode\r\n};\r\n\r\n$npm.utils.addReadProperties($main, rootNameSpace);\r\n\r\nmodule.exports = $main;\r\n\r\n/**\r\n * @external Promise\r\n * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Promise\r\n */\r\n\r\n/**\r\n * @external PG\r\n * @see https://github.com/brianc/node-postgres/blob/master/lib/index.js#L17\r\n */\r\n\r\n/**\r\n * @external Client\r\n * @see https://github.com/brianc/node-postgres/blob/master/lib/client.js#L20\r\n */\r\n\r\n/**\r\n * @external pg-minify\r\n * @see https://github.com/vitaly-t/pg-minify\r\n */\r\n\r\n/**\r\n * @external spex\r\n * @see https://github.com/vitaly-t/spex\r\n */\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/lib/main.js\n// module id = 194\n// module chunks = 0","'use strict';\r\n\r\nvar PromiseAdapter = require('./adapter');\r\n\r\n//////////////////////////////////////////\r\n// Parses and validates a promise library;\r\nfunction parsePromiseLib(pl) {\r\n\r\n    var promise;\r\n    if (pl instanceof PromiseAdapter) {\r\n        promise = function (func) {\r\n            return pl.create(func);\r\n        };\r\n        promise.resolve = pl.resolve;\r\n        promise.reject = pl.reject;\r\n        return promise;\r\n    }\r\n    var t = typeof pl;\r\n    if (t === 'function' || t === 'object') {\r\n        var root = typeof pl.Promise === 'function' ? pl.Promise : pl;\r\n        promise = function (func) {\r\n            return new root(func);\r\n        };\r\n        promise.resolve = root.resolve;\r\n        promise.reject = root.reject;\r\n        if (typeof promise.resolve === 'function' && typeof promise.reject === 'function') {\r\n            return promise;\r\n        }\r\n    }\r\n\r\n    throw new TypeError('Invalid promise library specified.');\r\n}\r\n\r\nfunction init(promiseLib) {\r\n    var result = {\r\n        promiseLib: promiseLib\r\n    };\r\n    if (promiseLib) {\r\n        result.promise = parsePromiseLib(promiseLib);\r\n    } else {\r\n        result.promise = parsePromiseLib(Promise);\r\n        result.promiseLib = Promise;\r\n    }\r\n    return result;\r\n}\r\n\r\nmodule.exports = init;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/lib/promise.js\n// module id = 195\n// module chunks = 0","'use strict';\r\n\r\nvar $npm = {\r\n    events: require('./events'),\r\n    utils: require('./utils')\r\n};\r\n\r\n////////////////////////////////////////////\r\n// Streams query data into any destination,\r\n// with the help of pg-query-stream library.\r\nfunction $stream(ctx, qs, initCB, config) {\r\n\r\n    var $p = config.promise;\r\n\r\n    // istanbul ignore next:\r\n    // we do not provide code coverage for the Native Bindings specifics\r\n    if (ctx.options.pgNative) {\r\n        return $p.reject(new Error('Streaming doesn\\'t work with Native Bindings.'));\r\n    }\r\n    if (!$npm.utils.isObject(qs, ['state', '_reading'])) {\r\n        // stream object wasn't passed in correctly;\r\n        return $p.reject(new TypeError('Invalid or missing stream object.'));\r\n    }\r\n    if (qs._reading || qs.state !== 'initialized') {\r\n        // stream object is in the wrong state;\r\n        return $p.reject(new Error('Invalid stream state.'));\r\n    }\r\n    if (typeof initCB !== 'function') {\r\n        // parameter `initCB` must be passed as the initialization callback;\r\n        return $p.reject(new TypeError('Invalid or missing stream initialization callback.'));\r\n    }\r\n    var error = $npm.events.query(ctx.options, getContext());\r\n    if (error) {\r\n        error = getError(error);\r\n        $npm.events.error(ctx.options, error, getContext());\r\n        return $p.reject(error);\r\n    }\r\n    var stream, fetch, start, nRows = 0;\r\n    try {\r\n        stream = ctx.db.client.query(qs);\r\n        fetch = stream._fetch;\r\n        stream._fetch = (size, func) => {\r\n            fetch.call(stream, size, (err, rows) => {\r\n                if (!err && rows.length) {\r\n                    nRows += rows.length;\r\n                    var context = getContext();\r\n                    if (!error) {\r\n                        error = $npm.events.receive(ctx.options, rows, undefined, context);\r\n                    }\r\n                    if (error) {\r\n                        stream.close();\r\n                    }\r\n                }\r\n                return func(err, rows);\r\n            });\r\n        };\r\n        start = Date.now();\r\n        initCB.call(this, stream); // the stream must be initialized during the call;\r\n    } catch (err) {\r\n        error = err;\r\n    }\r\n    if (error) {\r\n        // error thrown by initCB();\r\n        stream._fetch = fetch;\r\n        error = getError(error);\r\n        $npm.events.error(ctx.options, error, getContext());\r\n        return $p.reject(error);\r\n    }\r\n    return $p((resolve, reject) => {\r\n        stream.once('end', () => {\r\n            stream._fetch = fetch;\r\n            if (error) {\r\n                onError(error);\r\n            } else {\r\n                resolve({\r\n                    processed: nRows, // total number of rows processed;\r\n                    duration: Date.now() - start // duration, in milliseconds;\r\n                });\r\n            }\r\n        });\r\n        stream.once('error', err => {\r\n            stream._fetch = fetch;\r\n            onError(err);\r\n        });\r\n        function onError(e) {\r\n            e = getError(e);\r\n            $npm.events.error(ctx.options, e, getContext());\r\n            reject(e);\r\n        }\r\n    });\r\n\r\n    function getError(e) {\r\n        return e instanceof $npm.utils.InternalError ? e.error : e;\r\n    }\r\n\r\n    function getContext() {\r\n        var client;\r\n        if (ctx.db) {\r\n            client = ctx.db.client;\r\n        } else {\r\n            error = new Error('Loose request outside an expired connection.');\r\n        }\r\n        return {\r\n            client: client,\r\n            dc: ctx.dc,\r\n            query: qs.text,\r\n            params: qs.values,\r\n            ctx: ctx.ctx\r\n        };\r\n    }\r\n\r\n}\r\n\r\nmodule.exports = $stream;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/lib/stream.js\n// module id = 196\n// module chunks = 0","'use strict';\r\n\r\nvar $npm = {\r\n    spex: require('spex'),\r\n    utils: require('./utils'),\r\n    mode: require('./txMode'),\r\n    events: require('./events'),\r\n    query: require('./query'),\r\n    async: require('./async')\r\n};\r\n\r\n/**\r\n * @interface Task\r\n * @extends Database\r\n * @description\r\n * Extends {@link Database} for an automatic connection session, with methods for executing multiple database queries.\r\n * The type isn't available directly, it can only be created via methods {@link Database.task} and {@link Database.tx}.\r\n *\r\n * When executing more than one request at a time, one should allocate and release the connection only once,\r\n * while executing all the required queries within the same connection session. More importantly, a transaction\r\n * can only work within a single connection.\r\n *\r\n * This is an interface for tasks/transactions to implement a connection session, during which you can\r\n * execute multiple queries against the same connection that's released automatically when the task/transaction is finished.\r\n *\r\n * @see\r\n * {@link Task.ctx ctx},\r\n * {@link Task.batch batch},\r\n * {@link Task.sequence sequence},\r\n * {@link Task.page page}\r\n *\r\n * @example\r\n * db.task(t => {\r\n *       // t = task protocol context;\r\n *       // t.ctx = task config + state context;\r\n *       return t.one(\"select * from users where id=$1\", 123)\r\n *           .then(user => {\r\n *               return t.any(\"select * from events where login=$1\", user.name);\r\n *           });\r\n *   })\r\n * .then(events => {\r\n *       // success;\r\n *   })\r\n * .catch(error => {\r\n *       // error;\r\n *   });\r\n *\r\n */\r\nfunction Task(ctx, tag, isTX, config) {\r\n\r\n    /**\r\n     * @member {object} Task.ctx\r\n     * @description\r\n     * Task/Transaction Context object - contains individual properties for each task/transaction.\r\n     *\r\n     * ```js\r\n     * db.task(t => {\r\n     *    // t.ctx = task context object\r\n     * });\r\n     * ```\r\n     *\r\n     * ```js\r\n     * db.tx(t => {\r\n     *    // t.ctx = transaction context object\r\n     * });\r\n     * ```\r\n     *\r\n     * Properties `context`, `dc`, `isTX`, `tag`, `start` and `isFresh` are set before the callback,\r\n     * while properties `finish`, `success` and `result` are set after the callback has returned.\r\n     *\r\n     * @property {object} context\r\n     * If the operation was invoked with an object context - `task.call(obj,...)` or\r\n     * `tx.call(obj,...)`, this property is set with the context object that was passed in.\r\n     *\r\n     * @property {} dc\r\n     * _Database Context_ that was used when creating the database object. See {@link Database}.\r\n     *\r\n     * @property {boolean} isTX\r\n     * Indicates whether this task represents a transaction.\r\n     *\r\n     * @property {} tag\r\n     * Tag value as it was passed into the task. See methods {@link Database.task task} and {@link Database.tx tx}.\r\n     *\r\n     * @property {date} start\r\n     * Date/Time of when this task or transaction started the execution.\r\n     *\r\n     * @property {boolean} isFresh\r\n     * Indicates when a fresh physical connection is being used.\r\n     *\r\n     * @property {date} finish\r\n     * Once the operation has finished, this property is set to the Data/Time of when it happened.\r\n     *\r\n     * @property {boolean} success\r\n     * Once the operation has finished, this property indicates whether it was successful.\r\n     *\r\n     * @property {} result\r\n     * Once the operation has finished, this property contains the result, depending on property `success`:\r\n     * - data resolved by the operation, if `success` = `true`\r\n     * - error / rejection reason, if `success` = `false`\r\n     *\r\n     * @see event {@link event:query query}\r\n     */\r\n    this.ctx = ctx.ctx = {}; // task context object;\r\n\r\n    $npm.utils.addReadProp(this.ctx, 'isTX', isTX);\r\n\r\n    if ('context' in ctx) {\r\n        $npm.utils.addReadProp(this.ctx, 'context', ctx.context);\r\n    }\r\n\r\n    $npm.utils.addReadProp(this.ctx, 'tag', tag);\r\n    $npm.utils.addReadProp(this.ctx, 'dc', ctx.dc);\r\n\r\n    // generic query method;\r\n    this.query = function (query, values, qrm) {\r\n        if (!ctx.db) {\r\n            throw new Error('Unexpected call outside of ' + (isTX ? 'transaction.' : 'task.'));\r\n        }\r\n        return config.$npm.query.call(this, ctx, query, values, qrm);\r\n    };\r\n\r\n    /**\r\n     * @method Task.batch\r\n     * @description\r\n     * **Alternative Syntax:** `batch(values, {cb})` &#8658; `Promise`\r\n     *\r\n     * Settles a predefined array of mixed values by redirecting to method $[spex.batch].\r\n     *\r\n     * For complete method documentation see $[spex.batch].\r\n     * @param {array} values\r\n     * @param {function} [cb]\r\n     * @returns {external:Promise}\r\n     */\r\n    this.batch = function (values, cb) {\r\n        return config.$npm.spex.batch.call(this, values, cb);\r\n    };\r\n\r\n    /**\r\n     * @method Task.page\r\n     * @description\r\n     * **Alternative Syntax:** `page(source, {dest, limit})` &#8658; `Promise`\r\n     *\r\n     * Resolves a dynamic sequence of arrays/pages with mixed values, by redirecting to method $[spex.page].\r\n     *\r\n     * For complete method documentation see $[spex.page].\r\n     * @param {function} source\r\n     * @param {function} [dest]\r\n     * @param {number} [limit=0]\r\n     * @returns {external:Promise}\r\n     */\r\n    this.page = function (source, dest, limit) {\r\n        return config.$npm.spex.page.call(this, source, dest, limit);\r\n    };\r\n\r\n    /**\r\n     * @method Task.sequence\r\n     * @description\r\n     * **Alternative Syntax:** `sequence(source, {dest, limit, track})` &#8658; `Promise`\r\n     *\r\n     * Resolves a dynamic sequence of mixed values by redirecting to method $[spex.sequence].\r\n     *\r\n     * For complete method documentation see $[spex.sequence].\r\n     * @param {function} source\r\n     * @param {function} [dest]\r\n     * @param {number} [limit=0]\r\n     * @param {boolean} [track=false]\r\n     * @returns {external:Promise}\r\n     */\r\n    this.sequence = function (source, dest, limit, track) {\r\n        return config.$npm.spex.sequence.call(this, source, dest, limit, track);\r\n    };\r\n\r\n}\r\n\r\n//////////////////////////\r\n// Executes a task;\r\nTask.exec = (ctx, obj, isTX, config) => {\r\n\r\n    var $p = config.promise;\r\n\r\n    // callback invocation helper;\r\n    function callback() {\r\n        var result, cb = ctx.cb;\r\n        if (cb.constructor.name === 'GeneratorFunction') {\r\n            cb = config.$npm.async(cb);\r\n        }\r\n        try {\r\n            result = cb.call(obj, obj); // invoking the callback function;\r\n        } catch (err) {\r\n            $npm.events.error(ctx.options, err, {\r\n                client: ctx.db.client,\r\n                dc: ctx.dc,\r\n                ctx: ctx.ctx\r\n            });\r\n            return $p.reject(err); // reject with the error;\r\n        }\r\n        if (result && typeof result.then === 'function') {\r\n            return result; // result is a valid promise object;\r\n        }\r\n        return $p.resolve(result);\r\n    }\r\n\r\n    // updates the task context and notifies the client;\r\n    function update(start, success, result) {\r\n        var c = ctx.ctx;\r\n        if (start) {\r\n            $npm.utils.addReadProp(c, 'start', new Date());\r\n        } else {\r\n            c.finish = new Date();\r\n            c.success = success;\r\n            c.result = result;\r\n            $npm.utils.lock(c, true);\r\n        }\r\n        (isTX ? $npm.events.transact : $npm.events.task)(ctx.options, {\r\n            client: ctx.db.client,\r\n            dc: ctx.dc,\r\n            ctx: c\r\n        });\r\n    }\r\n\r\n    var cbData, cbReason, success,\r\n        spName, // Save-Point Name;\r\n        capSQL = ctx.options.capSQL; // capitalize sql;\r\n\r\n    update(true);\r\n\r\n    if (isTX) {\r\n        // executing a transaction;\r\n        spName = 'level_' + ctx.txLevel;\r\n        return begin()\r\n            .then(() => {\r\n                    return callback()\r\n                        .then(data => {\r\n                            cbData = data; // save callback data;\r\n                            success = true;\r\n                            return commit();\r\n                        }, reason => {\r\n                            cbReason = reason; // save callback failure reason;\r\n                            return rollback();\r\n                        })\r\n                        .then(() => {\r\n                                if (success) {\r\n                                    update(false, true, cbData);\r\n                                    return cbData;\r\n                                } else {\r\n                                    update(false, false, cbReason);\r\n                                    return $p.reject(cbReason);\r\n                                }\r\n                            },\r\n                            // istanbul ignore next: either `commit` or `rollback` has failed, which is\r\n                            // impossible to replicate in a test environment, so skipping from the test;\r\n                            function (reason) {\r\n                                update(false, false, reason);\r\n                                return $p.reject(reason);\r\n                            });\r\n                },\r\n                // istanbul ignore next: `begin` has failed, which is impossible\r\n                // to replicate in a test environment, so skipping from the test;\r\n                function (reason) {\r\n                    update(false, false, reason);\r\n                    return $p.reject(reason);\r\n                });\r\n    }\r\n\r\n    function begin() {\r\n        if (!ctx.txLevel && ctx.cb.txMode instanceof $npm.mode.TransactionMode) {\r\n            return exec(ctx.cb.txMode.begin(capSQL), 'savepoint');\r\n        }\r\n        return exec('begin', 'savepoint');\r\n    }\r\n\r\n    function commit() {\r\n        return exec('commit', 'release savepoint');\r\n    }\r\n\r\n    function rollback() {\r\n        return exec('rollback', 'rollback to savepoint');\r\n    }\r\n\r\n    function exec(top, nested) {\r\n        if (ctx.txLevel) {\r\n            return obj.none((capSQL ? nested.toUpperCase() : nested) + ' ' + spName);\r\n        }\r\n        return obj.none(capSQL ? top.toUpperCase() : top);\r\n    }\r\n\r\n    // executing a task;\r\n    return callback()\r\n        .then(data => {\r\n            update(false, true, data);\r\n            return data;\r\n        })\r\n        .catch(error => {\r\n            update(false, false, error);\r\n            return $p.reject(error);\r\n        });\r\n\r\n};\r\n\r\nmodule.exports = config => {\r\n    var npm = config.$npm;\r\n\r\n    // istanbul ignore next:\r\n    // we keep 'npm.query' initialization here, even though it is always\r\n    // pre-initialized by the 'database' module, for integrity purpose. \r\n    npm.query = npm.query || $npm.query(config);\r\n\r\n    npm.async = npm.async || $npm.async(config);\r\n    npm.spex = npm.spex || $npm.spex(config.promiseLib);\r\n    return Task;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/lib/task.js\n// module id = 197\n// module chunks = 0","'use strict';\r\n\r\nvar $npm = {\r\n    os: require('os'),\r\n    utils: require('../utils'),\r\n    errors: require('../errors'),\r\n    QueryFile: require('../queryFile')\r\n};\r\n\r\n/**\r\n * @constructor ParameterizedQuery\r\n * @description\r\n * **Alternative Syntax:** `ParameterizedQuery({text, values, ...})` &#8658; {@link ParameterizedQuery}\r\n *\r\n * Constructs a new {@link ParameterizedQuery} object.\r\n *\r\n * The alternative syntax supports advanced properties {@link ParameterizedQuery#binary binary} and {@link ParameterizedQuery#rowMode rowMode},\r\n * which are passed into $[pg], but not used by the class.\r\n *\r\n * All properties can also be set after the object's construction.\r\n *\r\n * This type extends the basic `{text, values}` object, by replacing it, i.e. when the basic object is used\r\n * with a query method, a new {@link ParameterizedQuery} object is created implicitly in its place.\r\n *\r\n * The type can be used in place of the `query` parameter, with any query method directly. And it never throws any error,\r\n * leaving it for query methods to reject with {@link errors.ParameterizedQueryError ParameterizedQueryError}.\r\n *\r\n * The type is available from the library's root: `pgp.ParameterizedQuery`.\r\n *\r\n * @param {string|QueryFile} text\r\n * A non-empty query string or a {@link QueryFile} object.\r\n *\r\n * Only the basic variables (`$1`, `$2`, etc) can be used in the query, because _Parameterized Queries_ are formatted by the database server.\r\n *\r\n * @param {array} [values]\r\n * Query formatting values. When it is not an `Array` and not `null`/`undefined`, it is automatically wrapped into an array.\r\n *\r\n * @returns {ParameterizedQuery}\r\n *\r\n * @see\r\n * {@link errors.ParameterizedQueryError ParameterizedQueryError}\r\n *\r\n * @example\r\n *\r\n * var PQ = require('pg-promise').ParameterizedQuery;\r\n *\r\n * // Creating a complete Parameterized Query with parameters:\r\n * var findUser = new PQ('SELECT * FROM Users WHERE id = $1', [123]);\r\n *\r\n * db.one(findUser)\r\n *     .then(user=> {\r\n *         // user found;\r\n *     })\r\n *     .catch(error=> {\r\n *         // error;\r\n *     });\r\n *\r\n * @example\r\n *\r\n * var PQ = require('pg-promise').ParameterizedQuery;\r\n *\r\n * // Creating a reusable Parameterized Query without values:\r\n * var addUser = new PQ('INSERT INTO Users(name, age) VALUES($1, $2)');\r\n *\r\n * // setting values explicitly:\r\n * addUser.values = ['John', 30];\r\n *\r\n * db.none(addUser)\r\n *     .then(()=> {\r\n *         // user added;\r\n *     })\r\n *     .catch(error=> {\r\n *         // error;\r\n *     });\r\n *\r\n * // setting values implicitly, by passing them into the query method:\r\n * db.none(addUser, ['Mike', 25])\r\n *     .then(()=> {\r\n *         // user added;\r\n *     })\r\n *     .catch(error=> {\r\n *         // error;\r\n *     });\r\n *\r\n */\r\nfunction ParameterizedQuery(text, values) {\r\n    if (!(this instanceof ParameterizedQuery)) {\r\n        return new ParameterizedQuery(text, values);\r\n    }\r\n\r\n    var currentError, PQ = {}, changed = true, state = {\r\n        text: text,\r\n        binary: undefined,\r\n        rowMode: undefined\r\n    };\r\n\r\n    function setValues(v) {\r\n        if (Array.isArray(v)) {\r\n            if (v.length) {\r\n                PQ.values = v;\r\n            } else {\r\n                delete PQ.values;\r\n            }\r\n        } else {\r\n            if ($npm.utils.isNull(v)) {\r\n                delete PQ.values;\r\n            } else {\r\n                PQ.values = [v];\r\n            }\r\n        }\r\n    }\r\n\r\n    setValues(values);\r\n\r\n    /**\r\n     * @name ParameterizedQuery#text\r\n     * @type {string|QueryFile}\r\n     * @description\r\n     * A non-empty query string or a {@link QueryFile} object.\r\n     */\r\n    Object.defineProperty(this, 'text', {\r\n        get: () => state.text,\r\n        set: value => {\r\n            if (value !== state.text) {\r\n                state.text = value;\r\n                changed = true;\r\n            }\r\n        }\r\n    });\r\n\r\n    /**\r\n     * @name ParameterizedQuery#values\r\n     * @type {array}\r\n     * @description\r\n     * Query formatting parameters, depending on the type:\r\n     *\r\n     * - `null` / `undefined` means the query has no formatting parameters\r\n     * - `Array` - it is an array of formatting parameters\r\n     * - None of the above, means it is a single formatting value, which\r\n     *   is then automatically wrapped into an array\r\n     */\r\n    Object.defineProperty(this, 'values', {\r\n        get: () => PQ.values,\r\n        set: value => {\r\n            setValues(value);\r\n        }\r\n    });\r\n\r\n    /**\r\n     * @name ParameterizedQuery#binary\r\n     * @type {boolean}\r\n     * @default undefined\r\n     * @description\r\n     * Activates binary result mode. The default is the text mode.\r\n     *\r\n     * @see {@link http://www.postgresql.org/docs/devel/static/protocol-flow.html#PROTOCOL-FLOW-EXT-QUERY Extended Query}\r\n     */\r\n    Object.defineProperty(this, 'binary', {\r\n        get: () => state.binary,\r\n        set: value => {\r\n            if (value !== state.binary) {\r\n                state.binary = value;\r\n                changed = true;\r\n            }\r\n        }\r\n    });\r\n\r\n    /**\r\n     * @name ParameterizedQuery#rowMode\r\n     * @type {string}\r\n     * @default undefined\r\n     * @description\r\n     * Changes the way data arrives to the client, with only one value supported by $[pg]:\r\n     *  - `rowMode = 'array'` will make all data rows arrive as arrays of values.\r\n     *    By default, rows arrive as objects.\r\n     */\r\n    Object.defineProperty(this, 'rowMode', {\r\n        get: () => state.rowMode,\r\n        set: value => {\r\n            if (value !== state.rowMode) {\r\n                state.rowMode = value;\r\n                changed = true;\r\n            }\r\n        }\r\n    });\r\n\r\n    /**\r\n     * @name ParameterizedQuery#error\r\n     * @type {errors.ParameterizedQueryError}\r\n     * @default undefined\r\n     * @readonly\r\n     * @description\r\n     * When in an error state, it is set to a {@link errors.ParameterizedQueryError ParameterizedQueryError} object. Otherwise, it is `undefined`.\r\n     *\r\n     * This property is primarily for internal use by the library.\r\n     */\r\n    Object.defineProperty(this, 'error', {\r\n        get: () => currentError\r\n    });\r\n\r\n    if ($npm.utils.isObject(text, ['text'])) {\r\n        state.text = text.text;\r\n        state.binary = text.binary;\r\n        state.rowMode = text.rowMode;\r\n        setValues(text.values);\r\n    }\r\n\r\n    /**\r\n     * @method ParameterizedQuery.parse\r\n     * @description\r\n     * Parses the current object and returns a simple `{text, values}`, if successful,\r\n     * or else it returns a {@link errors.ParameterizedQueryError ParameterizedQueryError} object.\r\n     *\r\n     * This method is primarily for internal use by the library.\r\n     *\r\n     * @returns {{text, values}|errors.ParameterizedQueryError}\r\n     */\r\n    this.parse = () => {\r\n\r\n        var qf = state.text instanceof $npm.QueryFile ? state.text : null;\r\n\r\n        if (!changed && !qf) {\r\n            return PQ;\r\n        }\r\n\r\n        var errors = [], values = PQ.values;\r\n        PQ = {\r\n            name: state.name\r\n        };\r\n        changed = true;\r\n        currentError = undefined;\r\n\r\n        if (qf) {\r\n            qf.prepare();\r\n            if (qf.error) {\r\n                PQ.text = state.text;\r\n                errors.push(qf.error);\r\n            } else {\r\n                PQ.text = qf.query;\r\n            }\r\n        } else {\r\n            PQ.text = state.text;\r\n        }\r\n        if (!$npm.utils.isText(PQ.text)) {\r\n            errors.push('Property \\'text\\' must be a non-empty text string.');\r\n        }\r\n\r\n        if (!$npm.utils.isNull(values)) {\r\n            PQ.values = values;\r\n        }\r\n\r\n        if (state.binary !== undefined) {\r\n            PQ.binary = state.binary;\r\n        }\r\n\r\n        if (state.rowMode !== undefined) {\r\n            PQ.rowMode = state.rowMode;\r\n        }\r\n\r\n        if (errors.length) {\r\n            return currentError = new $npm.errors.ParameterizedQueryError(errors[0], PQ);\r\n        }\r\n\r\n        changed = false;\r\n\r\n        return PQ;\r\n    };\r\n}\r\n\r\n/**\r\n * @method ParameterizedQuery.toString\r\n * @description\r\n * Creates a well-formatted multi-line string that represents the object's current state.\r\n *\r\n * It is called automatically when writing the object into the console.\r\n *\r\n * @param {number} [level=0]\r\n * Nested output level, to provide visual offset.\r\n *\r\n * @returns {string}\r\n */\r\nParameterizedQuery.prototype.toString = function (level) {\r\n    level = level > 0 ? parseInt(level) : 0;\r\n    var gap = $npm.utils.messageGap(level + 1);\r\n    var pq = this.parse();\r\n    var lines = [\r\n        'ParameterizedQuery {'\r\n    ];\r\n    if ($npm.utils.isText(pq.text)) {\r\n        lines.push(gap + 'text: \"' + pq.text + '\"');\r\n    }\r\n    if (this.values !== undefined) {\r\n        lines.push(gap + 'values: ' + JSON.stringify(this.values));\r\n    }\r\n    if (this.binary !== undefined) {\r\n        lines.push(gap + 'binary: ' + JSON.stringify(this.binary));\r\n    }\r\n    if (this.rowMode !== undefined) {\r\n        lines.push(gap + 'rowMode: ' + JSON.stringify(this.rowMode));\r\n    }\r\n    if (this.error !== undefined) {\r\n        lines.push(gap + 'error: ' + this.error.toString(level + 1));\r\n    }\r\n    lines.push($npm.utils.messageGap(level) + '}');\r\n    return lines.join($npm.os.EOL);\r\n};\r\n\r\nmodule.exports = ParameterizedQuery;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/lib/types/parameterized.js\n// module id = 198\n// module chunks = 0","'use strict';\r\n\r\nvar $npm = {\r\n    os: require('os'),\r\n    utils: require('../utils'),\r\n    errors: require('../errors'),\r\n    QueryFile: require('../queryFile')\r\n};\r\n\r\n/**\r\n * @constructor PreparedStatement\r\n * @description\r\n * **Alternative Syntax:** `PreparedStatement({name, text, values, ...})` &#8658; {@link PreparedStatement}\r\n *\r\n * Constructs a new $[Prepared Statement] object.\r\n *\r\n * The alternative syntax supports advanced properties {@link PreparedStatement#binary binary}, {@link PreparedStatement#rowMode rowMode}\r\n * and {@link PreparedStatement#rows rows}, which are passed into $[pg], but not used by the class.\r\n *\r\n * All properties can also be set after the object's construction.\r\n *\r\n * This type extends the basic `{name, text, values}` object, by replacing it, i.e. when the basic object is used\r\n * with a query method, a new {@link PreparedStatement} object is created implicitly in its place.\r\n *\r\n * The type can be used in place of the `query` parameter, with any query method directly. And it never throws any error,\r\n * leaving it for query methods to reject with {@link errors.PreparedStatementError PreparedStatementError}.\r\n *\r\n * The type is available from the library's root: `pgp.PreparedStatement`.\r\n *\r\n * @param {string} name\r\n * An arbitrary name given to this particular prepared statement. It must be unique within a single session and is\r\n * subsequently used to execute or deallocate a previously prepared statement.\r\n *\r\n * @param {string|QueryFile} text\r\n * A non-empty query string or a {@link QueryFile} object.\r\n *\r\n * Only the basic variables (`$1`, `$2`, etc) can be used in the query, because $[Prepared Statements] are formatted by the database server.\r\n *\r\n * @param {array} [values]\r\n * Query formatting values. When it is not an `Array` and not `null`/`undefined`, it is automatically wrapped into an array.\r\n *\r\n * @returns {PreparedStatement}\r\n *\r\n * @see\r\n * {@link errors.PreparedStatementError PreparedStatementError},\r\n * {@link http://www.postgresql.org/docs/9.5/static/sql-prepare.html PostgreSQL Prepared Statements}\r\n *\r\n * @example\r\n *\r\n * var PS = require('pg-promise').PreparedStatement;\r\n *\r\n * // Creating a complete Prepared Statement with parameters:\r\n * var findUser = new PS('find-user', 'SELECT * FROM Users WHERE id = $1', [123]);\r\n *\r\n * db.one(findUser)\r\n *     .then(user=> {\r\n *         // user found;\r\n *     })\r\n *     .catch(error=> {\r\n *         // error;\r\n *     });\r\n *\r\n * @example\r\n *\r\n * var PS = require('pg-promise').PreparedStatement;\r\n *\r\n * // Creating a reusable Prepared Statement without values:\r\n * var addUser = new PS('add-user', 'INSERT INTO Users(name, age) VALUES($1, $2)');\r\n *\r\n * // setting values explicitly:\r\n * addUser.values = ['John', 30];\r\n *\r\n * db.none(addUser)\r\n *     .then(()=> {\r\n *         // user added;\r\n *     })\r\n *     .catch(error=> {\r\n *         // error;\r\n *     });\r\n *\r\n * // setting values implicitly, by passing them into the query method:\r\n * db.none(addUser, ['Mike', 25])\r\n *     .then(()=> {\r\n *         // user added;\r\n *     })\r\n *     .catch(error=> {\r\n *         // error;\r\n *     });\r\n */\r\nfunction PreparedStatement(name, text, values) {\r\n    if (!(this instanceof PreparedStatement)) {\r\n        return new PreparedStatement(name, text, values);\r\n    }\r\n\r\n    var currentError, PS = {}, changed = true, state = {\r\n        name: name,\r\n        text: text,\r\n        binary: undefined,\r\n        rowMode: undefined,\r\n        rows: undefined\r\n    };\r\n\r\n    function setValues(v) {\r\n        if (Array.isArray(v)) {\r\n            if (v.length) {\r\n                PS.values = v;\r\n            } else {\r\n                delete PS.values;\r\n            }\r\n        } else {\r\n            if ($npm.utils.isNull(v)) {\r\n                delete PS.values;\r\n            } else {\r\n                PS.values = [v];\r\n            }\r\n        }\r\n    }\r\n\r\n    setValues(values);\r\n\r\n    /**\r\n     * @name PreparedStatement#name\r\n     * @type {string}\r\n     * @description\r\n     * An arbitrary name given to this particular prepared statement. It must be unique within a single session and is\r\n     * subsequently used to execute or deallocate a previously prepared statement.\r\n     */\r\n    Object.defineProperty(this, 'name', {\r\n        get: () => state.name,\r\n        set: value => {\r\n            if (value !== state.name) {\r\n                state.name = value;\r\n                changed = true;\r\n            }\r\n        }\r\n    });\r\n\r\n    /**\r\n     * @name PreparedStatement#text\r\n     * @type {string|QueryFile}\r\n     * @description\r\n     * A non-empty query string or a {@link QueryFile} object.\r\n     *\r\n     * Changing this property for the same {@link PreparedStatement#name name} will have no effect, because queries\r\n     * for Prepared Statements are cached, with {@link PreparedStatement#name name} being the cache key.\r\n     */\r\n    Object.defineProperty(this, 'text', {\r\n        get: () => state.text,\r\n        set: value => {\r\n            if (value !== state.text) {\r\n                state.text = value;\r\n                changed = true;\r\n            }\r\n        }\r\n    });\r\n\r\n    /**\r\n     * @name PreparedStatement#values\r\n     * @type {array}\r\n     * @description\r\n     * Query formatting parameters, depending on the type:\r\n     *\r\n     * - `null` / `undefined` means the query has no formatting parameters\r\n     * - `Array` - it is an array of formatting parameters\r\n     * - None of the above, means it is a single formatting value, which\r\n     *   is then automatically wrapped into an array\r\n     */\r\n    Object.defineProperty(this, 'values', {\r\n        get: () => PS.values,\r\n        set: value => {\r\n            setValues(value);\r\n        }\r\n    });\r\n\r\n    /**\r\n     * @name PreparedStatement#binary\r\n     * @type {boolean}\r\n     * @default undefined\r\n     * @description\r\n     * Activates binary result mode. The default is the text mode.\r\n     *\r\n     * @see {@link http://www.postgresql.org/docs/devel/static/protocol-flow.html#PROTOCOL-FLOW-EXT-QUERY Extended Query}\r\n     */\r\n    Object.defineProperty(this, 'binary', {\r\n        get: () => state.binary,\r\n        set: value => {\r\n            if (value !== state.binary) {\r\n                state.binary = value;\r\n                changed = true;\r\n            }\r\n        }\r\n    });\r\n\r\n    /**\r\n     * @name PreparedStatement#rowMode\r\n     * @type {string}\r\n     * @default undefined\r\n     * @description\r\n     * Changes the way data arrives to the client, with only one value supported by $[pg]:\r\n     *  - `rowMode = 'array'` will make all data rows arrive as arrays of values.\r\n     *    By default, rows arrive as objects.\r\n     */\r\n    Object.defineProperty(this, 'rowMode', {\r\n        get: () => state.rowMode,\r\n        set: value => {\r\n            if (value !== state.rowMode) {\r\n                state.rowMode = value;\r\n                changed = true;\r\n            }\r\n        }\r\n    });\r\n\r\n    /**\r\n     * @name PreparedStatement#rows\r\n     * @type {number}\r\n     * @description\r\n     * Number of rows to return at a time from a Prepared Statement's portal.\r\n     * The default is 0, which means that all rows must be returned at once.\r\n     */\r\n    Object.defineProperty(this, 'rows', {\r\n        get: () => state.rows,\r\n        set: value => {\r\n            if (value !== state.rows) {\r\n                state.rows = value;\r\n                changed = true;\r\n            }\r\n        }\r\n    });\r\n\r\n    /**\r\n     * @name PreparedStatement#error\r\n     * @type {errors.PreparedStatementError}\r\n     * @default undefined\r\n     * @description\r\n     * When in an error state, it is set to a {@link errors.PreparedStatementError PreparedStatementError} object. Otherwise, it is `undefined`.\r\n     *\r\n     * This property is primarily for internal use by the library.\r\n     */\r\n    Object.defineProperty(this, 'error', {\r\n        get: () => currentError\r\n    });\r\n\r\n    if ($npm.utils.isObject(name, ['name'])) {\r\n        state.name = name.name;\r\n        state.text = name.text;\r\n        state.binary = name.binary;\r\n        state.rowMode = name.rowMode;\r\n        state.rows = name.rows;\r\n        setValues(name.values);\r\n    }\r\n\r\n    /**\r\n     * @method PreparedStatement.parse\r\n     * @description\r\n     * Parses the current object and returns a simple `{name, text, values}`, if successful,\r\n     * or else it returns a {@link errors.PreparedStatementError PreparedStatementError} object.\r\n     *\r\n     * This method is primarily for internal use by the library.\r\n     *\r\n     * @returns {{name, text, values}|errors.PreparedStatementError}\r\n     */\r\n    this.parse = () => {\r\n\r\n        var qf = state.text instanceof $npm.QueryFile ? state.text : null;\r\n\r\n        if (!changed && !qf) {\r\n            return PS;\r\n        }\r\n\r\n        var errors = [], values = PS.values;\r\n        PS = {\r\n            name: state.name\r\n        };\r\n        changed = true;\r\n        currentError = undefined;\r\n\r\n        if (!$npm.utils.isText(PS.name)) {\r\n            errors.push('Property \\'name\\' must be a non-empty text string.');\r\n        }\r\n\r\n        if (qf) {\r\n            qf.prepare();\r\n            if (qf.error) {\r\n                PS.text = state.text;\r\n                errors.push(qf.error);\r\n            } else {\r\n                PS.text = qf.query;\r\n            }\r\n        } else {\r\n            PS.text = state.text;\r\n        }\r\n        if (!$npm.utils.isText(PS.text)) {\r\n            errors.push('Property \\'text\\' must be a non-empty text string.');\r\n        }\r\n\r\n        if (!$npm.utils.isNull(values)) {\r\n            PS.values = values;\r\n        }\r\n\r\n        if (state.binary !== undefined) {\r\n            PS.binary = state.binary;\r\n        }\r\n\r\n        if (state.rowMode !== undefined) {\r\n            PS.rowMode = state.rowMode;\r\n        }\r\n\r\n        if (state.rows !== undefined) {\r\n            PS.rows = state.rows;\r\n        }\r\n\r\n        if (errors.length) {\r\n            return currentError = new $npm.errors.PreparedStatementError(errors[0], PS);\r\n        }\r\n\r\n        changed = false;\r\n\r\n        return PS;\r\n    };\r\n}\r\n\r\n/**\r\n * @method PreparedStatement.toString\r\n * @description\r\n * Creates a well-formatted multi-line string that represents the object's current state.\r\n *\r\n * It is called automatically when writing the object into the console.\r\n *\r\n * @param {number} [level=0]\r\n * Nested output level, to provide visual offset.\r\n *\r\n * @returns {string}\r\n */\r\nPreparedStatement.prototype.toString = function (level) {\r\n    level = level > 0 ? parseInt(level) : 0;\r\n    var gap = $npm.utils.messageGap(level + 1);\r\n    var ps = this.parse();\r\n    var lines = [\r\n        'PreparedStatement {',\r\n        gap + 'name: ' + JSON.stringify(this.name)\r\n    ];\r\n    if ($npm.utils.isText(ps.text)) {\r\n        lines.push(gap + 'text: \"' + ps.text + '\"');\r\n    }\r\n    if (this.values !== undefined) {\r\n        lines.push(gap + 'values: ' + JSON.stringify(this.values));\r\n    }\r\n    if (this.binary !== undefined) {\r\n        lines.push(gap + 'binary: ' + JSON.stringify(this.binary));\r\n    }\r\n    if (this.rowMode !== undefined) {\r\n        lines.push(gap + 'rowMode: ' + JSON.stringify(this.rowMode));\r\n    }\r\n    if (this.rows !== undefined) {\r\n        lines.push(gap + 'rows: ' + JSON.stringify(this.rows));\r\n    }\r\n    if (this.error) {\r\n        lines.push(gap + 'error: ' + this.error.toString(level + 1));\r\n    }\r\n    lines.push($npm.utils.messageGap(level) + '}');\r\n    return lines.join($npm.os.EOL);\r\n};\r\n\r\nmodule.exports = PreparedStatement;\r\n\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/lib/types/prepared.js\n// module id = 199\n// module chunks = 0","'use strict';\r\n\r\nvar $npm = {\r\n    fs: require('fs'),\r\n    path: require('path'),\r\n    utils: require('./'),\r\n    package: require('../../package.json')\r\n};\r\n\r\nvar EOL = require('os').EOL;\r\n\r\n/**\r\n * @method utils.camelize\r\n * @description\r\n * Camelizes a text string.\r\n *\r\n * Case-changing characters include:\r\n * - _hyphen_\r\n * - _underscore_\r\n * - _period_\r\n * - _space_\r\n *\r\n * @param {string} text\r\n * Input text string.\r\n *\r\n * @returns {string}\r\n * Camelized text string.\r\n *\r\n * @see\r\n * {@link utils.camelizeVar camelizeVar}\r\n *\r\n */\r\nfunction camelize(text) {\r\n    text = text.replace(/[\\-_\\s\\.]+(.)?/g, (match, chr) => {\r\n        return chr ? chr.toUpperCase() : '';\r\n    });\r\n    return text.substr(0, 1).toLowerCase() + text.substr(1);\r\n}\r\n\r\n/**\r\n * @method utils.camelizeVar\r\n * @description\r\n * Camelizes a text string, while making it compliant with JavaScript variable names:\r\n * - contains symbols `a-z`, `A-Z`, `0-9`, `_` and `$`\r\n * - cannot have leading digits\r\n *\r\n * First, it removes all symbols that do not meet the above criteria, except for _hyphen_, _period_ and _space_,\r\n * and then it forwards into {@link utils.camelize camelize}.\r\n *\r\n * @param {string} text\r\n * Input text string.\r\n *\r\n * If it doesn't contain any symbols to make up a valid variable name, the result will be an empty string.\r\n *\r\n * @returns {string}\r\n * Camelized text string that can be used as an open property name.\r\n *\r\n * @see\r\n * {@link utils.camelize camelize}\r\n *\r\n */\r\nfunction camelizeVar(text) {\r\n    text = text.replace(/[^a-zA-Z0-9\\$_\\-\\s\\.]/g, '').replace(/^[0-9_\\-\\s\\.]+/, '');\r\n    return camelize(text);\r\n}\r\n\r\nfunction _enumSql(dir, options, cb, namePath) {\r\n    var tree = {};\r\n    $npm.fs.readdirSync(dir).forEach(file => {\r\n        var stat, fullPath = $npm.path.join(dir, file);\r\n        try {\r\n            stat = $npm.fs.statSync(fullPath);\r\n        } catch (e) {\r\n            // while it is very easy to test manually, it is very difficult to test for\r\n            // access-denied errors automatically; therefore excluding from the coverage:\r\n            // istanbul ignore next\r\n            if (options.ignoreErrors) {\r\n                return; // on to the next file/folder;\r\n            } else {\r\n                throw e;\r\n            }\r\n        }\r\n        if (stat.isDirectory()) {\r\n            if (options.recursive) {\r\n                var dirName = camelizeVar(file);\r\n                var np = namePath ? (namePath + '.' + dirName) : dirName;\r\n                var t = _enumSql(fullPath, options, cb, np);\r\n                if (Object.keys(t).length) {\r\n                    if (!dirName.length || dirName in tree) {\r\n                        if (!options.ignoreErrors) {\r\n                            throw new Error('Empty or duplicate camelized folder name: ' + fullPath);\r\n                        }\r\n                    }\r\n                    tree[dirName] = t;\r\n                }\r\n            }\r\n        } else {\r\n            if ($npm.path.extname(file).toLowerCase() === '.sql') {\r\n                var name = camelizeVar(file.replace(/\\.[^/.]+$/, ''));\r\n                if (!name.length || name in tree) {\r\n                    if (!options.ignoreErrors) {\r\n                        throw new Error('Empty or duplicate camelized file name: ' + fullPath);\r\n                    }\r\n                }\r\n                tree[name] = fullPath;\r\n                if (cb) {\r\n                    var result = cb(fullPath, name, namePath ? (namePath + '.' + name) : name);\r\n                    if (result !== undefined) {\r\n                        tree[name] = result;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n    return tree;\r\n}\r\n\r\n/**\r\n * @method utils.enumSql\r\n * @description\r\n * Synchronously enumerates all SQL files (within a given directory) into a camelized SQL tree.\r\n *\r\n * All property names within the tree are camelized via {@link utils.camelizeVar camelizeVar},\r\n * so they can be used in the code directly, as open property names.\r\n *\r\n * @param {string} dir\r\n * Directory path where SQL files are located, either absolute or relative to the current directory.\r\n *\r\n * SQL files are identified by using `.sql` extension (case-insensitive).\r\n *\r\n * @param {object} [options]\r\n * Search options.\r\n *\r\n * @param {boolean} [options.recursive=false]\r\n * Include sub-directories into the search.\r\n *\r\n * Sub-directories without SQL files will be skipped from the result.\r\n *\r\n * @param {boolean} [options.ignoreErrors=false]\r\n * Ignore the following types of errors:\r\n * - access errors, when there is no read access to a file or folder\r\n * - empty or duplicate camelized property names\r\n *\r\n * This flag does not affect errors related to invalid input parameters, or if you pass in a\r\n * non-existing directory.\r\n *\r\n * @param {function} [cb]\r\n * A callback function that takes three arguments:\r\n * - `file` - SQL file path, relative or absolute, according to how you specified the search directory\r\n * - `name` - name of the property that represents the SQL file\r\n * - `path` - property resolution path (full property name)\r\n *\r\n * If the function returns anything other than `undefined`, it overrides the corresponding property value in the tree.\r\n *\r\n * @returns {object}\r\n * Camelized SQL tree object, with each value being an SQL file path (unless changed via the callback).\r\n *\r\n * @see\r\n * {@link utils.objectToCode objectToCode},\r\n * {@link utils.buildSqlModule buildSqlModule}\r\n *\r\n * @example\r\n *\r\n * // simple SQL tree generation for further processing:\r\n * var tree = pgp.utils.enumSql('../sql', {recursive: true});\r\n *\r\n * @example\r\n *\r\n * // generating an SQL tree for dynamic use of names:\r\n * var sql = pgp.utils.enumSql(__dirname, {recursive: true}, file=> {\r\n *     return new pgp.QueryFile(file, {minify: true});\r\n * });\r\n *\r\n * @example\r\n *\r\n * var path = require('path');\r\n *\r\n * // replacing each relative path in the tree with a full one:\r\n * var tree = pgp.utils.enumSql('../sql', {recursive: true}, file=> {\r\n *     return path.join(__dirname, file);\r\n * });\r\n *\r\n */\r\nfunction enumSql(dir, options, cb) {\r\n    if (!$npm.utils.isText(dir)) {\r\n        throw new TypeError('Parameter \\'dir\\' must be a non-empty text string.');\r\n    }\r\n    if (!options || typeof options !== 'object') {\r\n        options = {};\r\n    }\r\n    cb = (typeof cb === 'function') ? cb : null;\r\n    return _enumSql(dir, options, cb, '');\r\n}\r\n\r\n/**\r\n *\r\n * @method utils.objectToCode\r\n * @description\r\n * Translates an object tree into a well-formatted JSON code string.\r\n *\r\n * @param {object} obj\r\n * Source tree object.\r\n *\r\n * @param {function} [cb]\r\n * A callback function to override property values for the code.\r\n *\r\n * It takes three arguments:\r\n *\r\n * - `value` - property value\r\n * - `name` - property name\r\n * - `obj` - current object (which contains the property)\r\n *\r\n * The returned value is used as is for the property value in the generated code.\r\n *\r\n * @returns {string}\r\n *\r\n * @see\r\n * {@link utils.enumSql enumSql},\r\n * {@link utils.buildSqlModule buildSqlModule}\r\n *\r\n * @example\r\n *\r\n * // Generating code for a simple object\r\n *\r\n * var tree = {one: 1, two: {item: 'abc'}};\r\n *\r\n * var code = pgp.utils.objectToCode(tree);\r\n *\r\n * console.log(code);\r\n * //=>\r\n * // {\r\n * //     one: 1,\r\n * //     two: {\r\n * //         item: \"abc\"\r\n * //     }\r\n * // }\r\n *\r\n * @example\r\n *\r\n * // Generating a Node.js module with an SQL tree\r\n *\r\n * var fs = require('fs');\r\n * var EOL = require('os').EOL;\r\n *\r\n * // generating an SQL tree from the folder:\r\n * var tree = pgp.utils.enumSql('./sql', {recursive: true});\r\n *\r\n * // generating the module's code:\r\n * var code = \"var load = require('./loadSql');\" + EOL + EOL + \"module.exports = \" +\r\n *         pgp.utils.objectToCode(tree, value => {\r\n *             return 'load(' + JSON.stringify(value) + ')';\r\n *         }) + ';';\r\n *\r\n * // saving the module:\r\n * fs.writeFileSync('sql.js', code);\r\n *\r\n * @example\r\n *\r\n * // generated code example (file sql.js)\r\n *\r\n * var load = require('./loadSql');\r\n *\r\n * module.exports = {\r\n *     events: {\r\n *         add: load(\"../sql/events/add.sql\"),\r\n *         delete: load(\"../sql/events/delete.sql\"),\r\n *         find: load(\"../sql/events/find.sql\"),\r\n *         update: load(\"../sql/events/update.sql\")\r\n *     },\r\n *     products: {\r\n *         add: load(\"../sql/products/add.sql\"),\r\n *         delete: load(\"../sql/products/delete.sql\"),\r\n *         find: load(\"../sql/products/find.sql\"),\r\n *         update: load(\"../sql/products/update.sql\")\r\n *     },\r\n *     users: {\r\n *         add: load(\"../sql/users/add.sql\"),\r\n *         delete: load(\"../sql/users/delete.sql\"),\r\n *         find: load(\"../sql/users/find.sql\"),\r\n *         update: load(\"../sql/users/update.sql\")\r\n *     },\r\n *     create: load(\"../sql/create.sql\"),\r\n *     init: load(\"../sql/init.sql\"),\r\n *     drop: load(\"../sql/drop.sql\")\r\n *};\r\n *\r\n * @example\r\n *\r\n * // loadSql.js module example\r\n *\r\n * var QueryFile = require('pg-promise').QueryFile;\r\n *\r\n * module.exports = file => {\r\n *     return new QueryFile(file, {minify: true});\r\n * };\r\n *\r\n */\r\nfunction objectToCode(obj, cb) {\r\n\r\n    if (!obj || typeof obj !== 'object') {\r\n        throw new TypeError('Parameter \\'obj\\' must be a non-null object.');\r\n    }\r\n\r\n    cb = (typeof cb === 'function') ? cb : null;\r\n\r\n    return '{' + generate(obj, 1) + EOL + '}';\r\n\r\n    function generate(obj, level) {\r\n        var code = '', gap = $npm.utils.messageGap(level);\r\n        var idx = 0;\r\n        for (var prop in obj) {\r\n            var value = obj[prop];\r\n            if (idx) {\r\n                code += ',';\r\n            }\r\n            if (value && typeof value === 'object') {\r\n                code += EOL + gap + prop + ': {';\r\n                code += generate(value, level + 1);\r\n                code += EOL + gap + '}';\r\n            } else {\r\n                code += EOL + gap + prop + ': ';\r\n                if (cb) {\r\n                    code += cb(value, prop, obj);\r\n                } else {\r\n                    code += JSON.stringify(value);\r\n                }\r\n            }\r\n            idx++;\r\n        }\r\n        return code;\r\n    }\r\n}\r\n\r\n/**\r\n * @method utils.buildSqlModule\r\n * @description\r\n * Synchronously generates a Node.js module with a camelized SQL tree, based on a configuration object that has the format shown below.\r\n *\r\n * This method is normally to be used on a grunt/gulp watch that triggers when the file structure changes in your SQL directory,\r\n * although it can be invoked manually as well.\r\n *\r\n * ```js\r\n * {\r\n *    // Required Properties:\r\n *    \r\n *    \"dir\" // {string}: relative or absolute directory where SQL files are located (see API for method enumSql, parameter `dir`)\r\n *\r\n *    // Optional Properties:\r\n *    \r\n *    \"recursive\" // {boolean}: search for sql files recursively (see API for method enumSql, option `recursive`)\r\n *\r\n *    \"ignoreErrors\" // {boolean}: ignore common errors (see API for method enumSql, option `ignoreErrors`)\r\n *\r\n *    \"output\" // {string}: relative or absolute destination file path; when not specified, no file is created,\r\n *             // but you still can use the code string that's always returned by the method.\r\n *     \r\n *    \"module\": {\r\n *        \"path\" // {string}: relative path to a module exporting a function which takes a file path\r\n *               // and returns a proper value (typically, a new QueryFile object); by default, it uses `./loadSql`.\r\n *\r\n *        \"name\" // {string}: local variable name for the SQL-loading module; by default, it uses `load`.\r\n *    }\r\n * }\r\n * ```\r\n *\r\n * @param {object|string} [config]\r\n * Configuration parameter for generating the code.\r\n *\r\n * - When it is a non-null object, it is assumed to be a configuration object (see the format above).\r\n * - When it is a text string - it is the relative path to either a JSON file that contains the configuration object,\r\n *   or a Node.js module that exports one. The path is relative to the application's entry point file.\r\n * - When `config` isn't specified, the method will try to locate the default `sql-config.json` file in the directory of your\r\n *   application's entry point file, and if not found - throw {@link external:Error Error} = `Default SQL configuration file not found`.\r\n *\r\n * @returns {string}\r\n * Generated code.\r\n *\r\n * @see\r\n * {@link utils.enumSql enumSql},\r\n * {@link utils.objectToCode objectToCode}\r\n *\r\n * @example\r\n *\r\n * // generate SQL module automatically, from sql-config.json in the module's start-up folder:\r\n *\r\n * pgp.utils.buildSqlModule();\r\n *\r\n * // see generated file below:\r\n *\r\n * @example\r\n *\r\n * /////////////////////////////////////////////////////////////////////////\r\n * // This file was automatically generated by pg-promise v.4.3.8\r\n * //\r\n * // Generated on: 6/2/2016, at 2:15:23 PM\r\n * // Total files: 15\r\n * //\r\n * // API: http://vitaly-t.github.io/pg-promise/utils.html#.buildSqlModule\r\n * /////////////////////////////////////////////////////////////////////////\r\n *\r\n * var load = require('./loadSql');\r\n *\r\n * module.exports = {\r\n *     events: {\r\n *         add: load(\"../sql/events/add.sql\"),\r\n *         delete: load(\"../sql/events/delete.sql\"),\r\n *         find: load(\"../sql/events/find.sql\"),\r\n *         update: load(\"../sql/events/update.sql\")\r\n *     },\r\n *     products: {\r\n *         add: load(\"../sql/products/add.sql\"),\r\n *         delete: load(\"../sql/products/delete.sql\"),\r\n *         find: load(\"../sql/products/find.sql\"),\r\n *         update: load(\"../sql/products/update.sql\")\r\n *     },\r\n *     users: {\r\n *         add: load(\"../sql/users/add.sql\"),\r\n *         delete: load(\"../sql/users/delete.sql\"),\r\n *         find: load(\"../sql/users/find.sql\"),\r\n *         update: load(\"../sql/users/update.sql\")\r\n *     },\r\n *     create: load(\"../sql/create.sql\"),\r\n *     init: load(\"../sql/init.sql\"),\r\n *     drop: load(\"../sql/drop.sql\")\r\n *};\r\n *\r\n */\r\nfunction buildSqlModule(config) {\r\n\r\n    if ($npm.utils.isText(config)) {\r\n        var path = $npm.utils.isPathAbsolute(config) ? config : $npm.path.join($npm.utils.startDir, config);\r\n        config = require(path);\r\n    } else {\r\n        if ($npm.utils.isNull(config)) {\r\n            var defConfig = $npm.path.join($npm.utils.startDir, 'sql-config.json');\r\n            // istanbul ignore else;\r\n            if (!$npm.fs.existsSync(defConfig)) {\r\n                throw new Error('Default SQL configuration file not found: ' + defConfig);\r\n            }\r\n            // cannot test this automatically, because it requires that file 'sql-config.json'\r\n            // resides within the Jasmine folder, since it is the client during the test.\r\n            // istanbul ignore next;\r\n            config = require(defConfig);\r\n        } else {\r\n            if (!config || typeof config !== 'object') {\r\n                throw new TypeError('Invalid parameter \\'config\\' specified.');\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!$npm.utils.isText(config.dir)) {\r\n        throw new Error('Property \\'dir\\' must be a non-empty string.');\r\n    }\r\n\r\n    var total = 0;\r\n\r\n    var tree = enumSql(config.dir, {recursive: config.recursive, ignoreErrors: config.ignoreErrors}, () => {\r\n        total++;\r\n    });\r\n\r\n    var modulePath = './loadSql', moduleName = 'load';\r\n    if (config.module && typeof config.module === 'object') {\r\n        if ($npm.utils.isText(config.module.path)) {\r\n            modulePath = config.module.path;\r\n        }\r\n        if ($npm.utils.isText(config.module.name)) {\r\n            moduleName = config.module.name;\r\n        }\r\n    }\r\n\r\n    var d = new Date();\r\n\r\n    var header =\r\n        '/////////////////////////////////////////////////////////////////////////' + EOL +\r\n        '// This file was automatically generated by pg-promise v.' + $npm.package.version + EOL +\r\n        '//' + EOL +\r\n        '// Generated on: ' + d.toLocaleDateString() + ', at ' + d.toLocaleTimeString() + EOL +\r\n        '// Total files: ' + total + EOL +\r\n        '//' + EOL +\r\n        '// API: http://vitaly-t.github.io/pg-promise/utils.html#.buildSqlModule' + EOL +\r\n        '/////////////////////////////////////////////////////////////////////////' + EOL + EOL +\r\n        '\\'use strict\\';' + EOL + EOL +\r\n        'var ' + moduleName + ' = require(\\'' + modulePath + '\\');' + EOL + EOL +\r\n        'module.exports = ';\r\n\r\n    var code = header + objectToCode(tree, value => {\r\n            return moduleName + '(' + JSON.stringify(value) + ')';\r\n        }) + ';';\r\n\r\n    if ($npm.utils.isText(config.output)) {\r\n        var p = config.output;\r\n        if (!$npm.utils.isPathAbsolute(p)) {\r\n            p = $npm.path.join($npm.utils.startDir, p);\r\n        }\r\n        $npm.fs.writeFileSync(p, code);\r\n    }\r\n\r\n    return code;\r\n}\r\n\r\n\r\n/**\r\n * @namespace utils\r\n *\r\n * @description\r\n * Namespace for general-purpose static functions, available as `pgp.utils`, before and after initializing the library.\r\n *\r\n * Its main purpose is to simplify developing projects with either large or dynamic number of SQL files.\r\n *\r\n * See also:\r\n * - [Automatic SQL Trees](https://github.com/vitaly-t/pg-promise/issues/153)\r\n * - [SQL Files](https://github.com/vitaly-t/pg-promise/wiki/SQL-Files)\r\n *\r\n * @property {function} camelize\r\n * {@link utils.camelize camelize} - camelizes a text string\r\n *\r\n * @property {function} camelizeVar\r\n * {@link utils.camelizeVar camelizeVar} - camelizes a text string as a variable\r\n *\r\n * @property {function} enumSql\r\n * {@link utils.enumSql enumSql} - enumerates SQL files in a directory\r\n *\r\n * @property {function} objectToCode\r\n * {@link utils.objectToCode objectToCode} - generates code from an object\r\n *\r\n * @property {function} buildSqlModule\r\n * {@link utils.buildSqlModule buildSqlModule} - generates a complete Node.js module\r\n *\r\n */\r\nmodule.exports = {\r\n    camelize: camelize,\r\n    camelizeVar: camelizeVar,\r\n    enumSql: enumSql,\r\n    objectToCode: objectToCode,\r\n    buildSqlModule: buildSqlModule\r\n};\r\n\r\nObject.freeze(module.exports);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/lib/utils/public.js\n// module id = 200\n// module chunks = 0","var crypto = require('crypto');\nvar EventEmitter = require('events').EventEmitter;\nvar util = require('util');\nvar pgPass = require('pgpass');\nvar TypeOverrides = require('./type-overrides');\n\nvar ConnectionParameters = require('./connection-parameters');\nvar Query = require('./query');\nvar defaults = require('./defaults');\nvar Connection = require('./connection');\n\nvar Client = function(config) {\n  EventEmitter.call(this);\n\n  this.connectionParameters = new ConnectionParameters(config);\n  this.user = this.connectionParameters.user;\n  this.database = this.connectionParameters.database;\n  this.port = this.connectionParameters.port;\n  this.host = this.connectionParameters.host;\n  this.password = this.connectionParameters.password;\n\n  var c = config || {};\n\n  this._types = new TypeOverrides(c.types);\n\n  this.connection = c.connection || new Connection({\n    stream: c.stream,\n    ssl: this.connectionParameters.ssl\n  });\n  this.queryQueue = [];\n  this.binary = c.binary || defaults.binary;\n  this.encoding = 'utf8';\n  this.processID = null;\n  this.secretKey = null;\n  this.ssl = this.connectionParameters.ssl || false;\n};\n\nutil.inherits(Client, EventEmitter);\n\nClient.prototype.connect = function(callback) {\n  var self = this;\n  var con = this.connection;\n\n  if(this.host && this.host.indexOf('/') === 0) {\n    con.connect(this.host + '/.s.PGSQL.' + this.port);\n  } else {\n    con.connect(this.port, this.host);\n  }\n\n\n  //once connection is established send startup message\n  con.on('connect', function() {\n    if(self.ssl) {\n      con.requestSsl();\n    } else {\n      con.startup(self.getStartupConf());\n    }\n  });\n\n  con.on('sslconnect', function() {\n    con.startup(self.getStartupConf());\n  });\n\n  function checkPgPass(cb) {\n    return function(msg) {\n      if (null !== self.password) {\n        cb(msg);\n      } else {\n        pgPass(self.connectionParameters, function(pass){\n          if (undefined !== pass) {\n            self.connectionParameters.password = self.password = pass;\n          }\n          cb(msg);\n        });\n      }\n    };\n  }\n\n  //password request handling\n  con.on('authenticationCleartextPassword', checkPgPass(function() {\n    con.password(self.password);\n  }));\n\n  //password request handling\n  con.on('authenticationMD5Password', checkPgPass(function(msg) {\n    var inner = Client.md5(self.password + self.user);\n    var outer = Client.md5(Buffer.concat([new Buffer(inner), msg.salt]));\n    var md5password = \"md5\" + outer;\n    con.password(md5password);\n  }));\n\n  con.once('backendKeyData', function(msg) {\n    self.processID = msg.processID;\n    self.secretKey = msg.secretKey;\n  });\n\n  //hook up query handling events to connection\n  //after the connection initially becomes ready for queries\n  con.once('readyForQuery', function() {\n\n    //delegate rowDescription to active query\n    con.on('rowDescription', function(msg) {\n      self.activeQuery.handleRowDescription(msg);\n    });\n\n    //delegate dataRow to active query\n    con.on('dataRow', function(msg) {\n      self.activeQuery.handleDataRow(msg);\n    });\n\n    //delegate portalSuspended to active query\n    con.on('portalSuspended', function(msg) {\n      self.activeQuery.handlePortalSuspended(con);\n    });\n\n    //deletagate emptyQuery to active query\n    con.on('emptyQuery', function(msg) {\n      self.activeQuery.handleEmptyQuery(con);\n    });\n\n    //delegate commandComplete to active query\n    con.on('commandComplete', function(msg) {\n      self.activeQuery.handleCommandComplete(msg, con);\n    });\n\n    //if a prepared statement has a name and properly parses\n    //we track that its already been executed so we don't parse\n    //it again on the same client\n    con.on('parseComplete', function(msg) {\n      if(self.activeQuery.name) {\n        con.parsedStatements[self.activeQuery.name] = true;\n      }\n    });\n\n    con.on('copyInResponse', function(msg) {\n      self.activeQuery.handleCopyInResponse(self.connection);\n    });\n\n    con.on('copyData', function (msg) {\n      self.activeQuery.handleCopyData(msg, self.connection);\n    });\n\n    con.on('notification', function(msg) {\n      self.emit('notification', msg);\n    });\n\n    //process possible callback argument to Client#connect\n    if (callback) {\n      callback(null, self);\n      //remove callback for proper error handling\n      //after the connect event\n      callback = null;\n    }\n    self.emit('connect');\n  });\n\n  con.on('readyForQuery', function() {\n    var activeQuery = self.activeQuery;\n    self.activeQuery = null;\n    self.readyForQuery = true;\n    self._pulseQueryQueue();\n    if(activeQuery) {\n      activeQuery.handleReadyForQuery();\n    }\n  });\n\n  con.on('error', function(error) {\n    if(self.activeQuery) {\n      var activeQuery = self.activeQuery;\n      self.activeQuery = null;\n      return activeQuery.handleError(error, con);\n    }\n    if(!callback) {\n      return self.emit('error', error);\n    }\n    callback(error);\n    callback = null;\n  });\n\n  con.once('end', function() {\n    if ( callback ) {\n      // haven't received a connection message yet !\n      var err = new Error('Connection terminated');\n      callback(err);\n      callback = null;\n      return;\n    }\n    if(self.activeQuery) {\n      var disconnectError = new Error('Connection terminated');\n      self.activeQuery.handleError(disconnectError, con);\n      self.activeQuery = null;\n    }\n    self.emit('end');\n  });\n\n\n  con.on('notice', function(msg) {\n    self.emit('notice', msg);\n  });\n\n};\n\nClient.prototype.getStartupConf = function() {\n  var params = this.connectionParameters;\n\n  var data = {\n    user: params.user,\n    database: params.database\n  };\n\n  var appName = params.application_name || params.fallback_application_name;\n  if (appName) {\n    data.application_name = appName;\n  }\n\n  return data;\n};\n\nClient.prototype.cancel = function(client, query) {\n  if(client.activeQuery == query) {\n    var con = this.connection;\n\n    if(this.host && this.host.indexOf('/') === 0) {\n      con.connect(this.host + '/.s.PGSQL.' + this.port);\n    } else {\n      con.connect(this.port, this.host);\n    }\n\n    //once connection is established send cancel message\n    con.on('connect', function() {\n      con.cancel(client.processID, client.secretKey);\n    });\n  } else if(client.queryQueue.indexOf(query) != -1) {\n    client.queryQueue.splice(client.queryQueue.indexOf(query), 1);\n  }\n};\n\nClient.prototype.setTypeParser = function(oid, format, parseFn) {\n  return this._types.setTypeParser(oid, format, parseFn);\n};\n\nClient.prototype.getTypeParser = function(oid, format) {\n  return this._types.getTypeParser(oid, format);\n};\n\n// Ported from PostgreSQL 9.2.4 source code in src/interfaces/libpq/fe-exec.c\nClient.prototype.escapeIdentifier = function(str) {\n\n  var escaped = '\"';\n\n  for(var i = 0; i < str.length; i++) {\n    var c = str[i];\n    if(c === '\"') {\n      escaped += c + c;\n    } else {\n      escaped += c;\n    }\n  }\n\n  escaped += '\"';\n\n  return escaped;\n};\n\n// Ported from PostgreSQL 9.2.4 source code in src/interfaces/libpq/fe-exec.c\nClient.prototype.escapeLiteral = function(str) {\n\n  var hasBackslash = false;\n  var escaped = '\\'';\n\n  for(var i = 0; i < str.length; i++) {\n    var c = str[i];\n    if(c === '\\'') {\n      escaped += c + c;\n    } else if (c === '\\\\') {\n      escaped += c + c;\n      hasBackslash = true;\n    } else {\n      escaped += c;\n    }\n  }\n\n  escaped += '\\'';\n\n  if(hasBackslash === true) {\n    escaped = ' E' + escaped;\n  }\n\n  return escaped;\n};\n\nClient.prototype._pulseQueryQueue = function() {\n  if(this.readyForQuery===true) {\n    this.activeQuery = this.queryQueue.shift();\n    if(this.activeQuery) {\n      this.readyForQuery = false;\n      this.hasExecuted = true;\n      this.activeQuery.submit(this.connection);\n    } else if(this.hasExecuted) {\n      this.activeQuery = null;\n      this.emit('drain');\n    }\n  }\n};\n\nClient.prototype.copyFrom = function (text) {\n  throw new Error(\"For PostgreSQL COPY TO/COPY FROM support npm install pg-copy-streams\");\n};\n\nClient.prototype.copyTo = function (text) {\n  throw new Error(\"For PostgreSQL COPY TO/COPY FROM support npm install pg-copy-streams\");\n};\n\nClient.prototype.query = function(config, values, callback) {\n  //can take in strings, config object or query object\n  var query = (typeof config.submit == 'function') ? config :\n     new Query(config, values, callback);\n  if(this.binary && !query.binary) {\n    query.binary = true;\n  }\n  if(query._result) {\n    query._result._getTypeParser = this._types.getTypeParser.bind(this._types);\n  }\n\n  this.queryQueue.push(query);\n  this._pulseQueryQueue();\n  return query;\n};\n\nClient.prototype.end = function() {\n  this.connection.end();\n};\n\nClient.md5 = function(string) {\n  return crypto.createHash('md5').update(string).digest('hex');\n};\n\n// expose a Query constructor\nClient.Query = Query;\n\nmodule.exports = Client;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/~/pg/lib/client.js\n// module id = 201\n// module chunks = 0","var EventEmitter = require('events').EventEmitter;\nvar util = require('util');\nvar Client = require('./client');\nvar defaults =  require('./defaults');\nvar pool = require('./pool');\nvar Connection = require('./connection');\n\nvar PG = function(clientConstructor) {\n  EventEmitter.call(this);\n  this.defaults = defaults;\n  this.Client = clientConstructor;\n  this.Query = this.Client.Query;\n  this.pools = pool(clientConstructor);\n  this.Connection = Connection;\n  this.types = require('pg-types');\n};\n\nutil.inherits(PG, EventEmitter);\n\nPG.prototype.end = function() {\n  var self = this;\n  var keys = Object.keys(self.pools.all);\n  var count = keys.length;\n  if(count === 0) {\n    self.emit('end');\n  } else {\n    keys.forEach(function(key) {\n      var pool = self.pools.all[key];\n      delete self.pools.all[key];\n      pool.drain(function() {\n        pool.destroyAllNow(function() {\n          count--;\n          if(count === 0) {\n            self.emit('end');\n          }\n        });\n      });\n    });\n  }\n};\n\n\nPG.prototype.connect = function(config, callback) {\n  if(typeof config == \"function\") {\n    callback = config;\n    config = null;\n  }\n  var pool = this.pools.getOrCreate(config);\n  pool.connect(callback);\n  if(!pool.listeners('error').length) {\n    //propagate errors up to pg object\n    pool.on('error', this.emit.bind(this, 'error'));\n  }\n};\n\n// cancel the query runned by the given client\nPG.prototype.cancel = function(config, client, query) {\n  if(client.native) {\n    return client.cancel(query);\n  }\n  var c = config;\n  //allow for no config to be passed\n  if(typeof c === 'function') {\n    c = defaults;\n  }\n  var cancellingClient = new this.Client(c);\n  cancellingClient.cancel(client, query);\n};\n\nif(typeof process.env.NODE_PG_FORCE_NATIVE != 'undefined') {\n  module.exports = new PG(require('./native'));\n} else {\n  module.exports = new PG(Client);\n\n  //lazy require native module...the native module may not have installed\n  module.exports.__defineGetter__(\"native\", function() {\n    delete module.exports.native;\n    var native = null;\n    try {\n      native = new PG(require('./native'));\n    } catch (err) {\n      if (err.code !== 'MODULE_NOT_FOUND') {\n        throw err;\n      }\n      console.error(err.message);\n    }\n    module.exports.native = native;\n    return native;\n  });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/~/pg/lib/index.js\n// module id = 202\n// module chunks = 0","var EventEmitter = require('events').EventEmitter;\nvar util = require('util');\nvar utils = require('../utils');\nvar NativeResult = require('./result');\n\nvar NativeQuery = module.exports = function(native) {\n  EventEmitter.call(this);\n  this.native = native;\n  this.text = null;\n  this.values = null;\n  this.name = null;\n  this.callback = null;\n  this.state = 'new';\n  this._arrayMode = false;\n\n  //if the 'row' event is listened for\n  //then emit them as they come in\n  //without setting singleRowMode to true\n  //this has almost no meaning because libpq\n  //reads all rows into memory befor returning any\n  this._emitRowEvents = false;\n  this.on('newListener', function(event) {\n    if(event === 'row') this._emitRowEvents = true;\n  }.bind(this));\n};\n\nutil.inherits(NativeQuery, EventEmitter);\n\nNativeQuery.prototype.then = function(callback) {\n  return this.promise().then(callback);\n};\n\nNativeQuery.prototype.catch = function(callback) {\n  return this.promise().catch(callback);\n};\n\nNativeQuery.prototype.promise = function() {\n  if (this._promise) return this._promise;\n  this._promise = new Promise(function(resolve, reject) {\n    this.once('end', resolve);\n    this.once('error', reject);\n  }.bind(this));\n  return this._promise;\n};\n\nNativeQuery.prototype.handleError = function(err) {\n  var self = this;\n  //copy pq error fields into the error object\n  var fields = self.native.pq.resultErrorFields();\n  if(fields) {\n    for(var key in fields) {\n      err[key] = fields[key];\n    }\n  }\n  if(self.callback) {\n    self.callback(err);\n  } else {\n    self.emit('error', err);\n  }\n  self.state = 'error';\n};\n\nNativeQuery.prototype.submit = function(client) {\n  this.state = 'running';\n  var self = this;\n  client.native.arrayMode = this._arrayMode;\n\n  var after = function(err, rows) {\n    client.native.arrayMode = false;\n    setImmediate(function() {\n      self.emit('_done');\n    });\n\n    //handle possible query error\n    if(err) {\n      return self.handleError(err);\n    }\n\n    var result = new NativeResult();\n    result.addCommandComplete(self.native.pq);\n    result.rows = rows;\n\n    //emit row events for each row in the result\n    if(self._emitRowEvents) {\n      rows.forEach(function(row) {\n        self.emit('row', row, result);\n      });\n    }\n\n\n    //handle successful result\n    self.state = 'end';\n    self.emit('end', result);\n    if(self.callback) {\n      self.callback(null, result);\n    }\n  };\n\n  if(process.domain) {\n    after = process.domain.bind(after);\n  }\n\n  //named query\n  if(this.name) {\n    if (this.name.length > 63) {\n      console.error('Warning! Postgres only supports 63 characters for query names.');\n      console.error('You supplied', this.name, '(', this.name.length, ')');\n      console.error('This can cause conflicts and silent errors executing queries');\n    }\n    var values = (this.values||[]).map(utils.prepareValue);\n\n    //check if the client has already executed this named query\n    //if so...just execute it again - skip the planning phase\n    if(client.namedQueries[this.name]) {\n      return this.native.execute(this.name, values, after);\n    }\n    //plan the named query the first time, then execute it\n    return this.native.prepare(this.name, this.text, values.length, function(err) {\n      if(err) return after(err);\n      client.namedQueries[self.name] = true;\n      return self.native.execute(self.name, values, after);\n    });\n  }\n  else if(this.values) {\n    var vals = this.values.map(utils.prepareValue);\n    this.native.query(this.text, vals, after);\n  } else {\n    this.native.query(this.text, after);\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/~/pg/lib/native/query.js\n// module id = 203\n// module chunks = 0","var NativeResult = module.exports = function(pq) {\n  this.command = null;\n  this.rowCount = 0;\n  this.rows = null;\n  this.fields = null;\n};\n\nNativeResult.prototype.addCommandComplete = function(pq) {\n  this.command = pq.cmdStatus().split(' ')[0];\n  this.rowCount = parseInt(pq.cmdTuples(), 10);\n  var nfields = pq.nfields();\n  if(nfields < 1) return;\n\n  this.fields = [];\n  for(var i = 0; i < nfields; i++) {\n    this.fields.push({\n      name: pq.fname(i),\n      dataTypeID: pq.ftype(i)\n    });\n  }\n};\n\nNativeResult.prototype.addRow = function(row) {\n  // This is empty to ensure pg code doesn't break when switching to pg-native\n  // pg-native loads all rows into the final result object by default.\n  // This is because libpg loads all rows into memory before passing the result\n  // to pg-native.\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/~/pg/lib/native/result.js\n// module id = 204\n// module chunks = 0","var EventEmitter = require('events').EventEmitter;\n\nvar defaults = require('./defaults');\nvar genericPool = require('generic-pool');\n\n\nmodule.exports = function(Client) {\n  var pools = {\n    Client: Client,\n    //dictionary of all key:pool pairs\n    all: {},\n    //reference to the client constructor - can override in tests or for require('pg').native\n    getOrCreate: function(clientConfig) {\n      clientConfig = clientConfig || {};\n      var name = JSON.stringify(clientConfig);\n      var pool = pools.all[name];\n      if(pool) {\n        return pool;\n      }\n      pool = genericPool.Pool({\n        name: name,\n        max: clientConfig.poolSize || defaults.poolSize,\n        idleTimeoutMillis: clientConfig.poolIdleTimeout || defaults.poolIdleTimeout,\n        reapIntervalMillis: clientConfig.reapIntervalMillis || defaults.reapIntervalMillis,\n        returnToHead: clientConfig.returnToHead || defaults.returnToHead,\n        log: clientConfig.poolLog || defaults.poolLog,\n        create: function(cb) {\n          var client = new pools.Client(clientConfig);\n          // Ignore errors on pooled clients until they are connected.\n          client.on('error', Function.prototype);\n          client.connect(function(err) {\n            if(err) return cb(err, null);\n\n            // Remove the noop error handler after a connection has been established.\n            client.removeListener('error', Function.prototype);\n\n            //handle connected client background errors by emitting event\n            //via the pg object and then removing errored client from the pool\n            client.on('error', function(e) {\n              pool.emit('error', e, client);\n\n              // If the client is already being destroyed, the error\n              // occurred during stream ending. Do not attempt to destroy\n              // the client again.\n              if (!client._destroying) {\n                pool.destroy(client);\n              }\n            });\n\n            // Remove connection from pool on disconnect\n            client.on('end', function(e) {\n              // Do not enter infinite loop between pool.destroy\n              // and client 'end' event...\n              if ( ! client._destroying ) {\n                pool.destroy(client);\n              }\n            });\n            client.poolCount = 0;\n            return cb(null, client);\n          });\n        },\n        destroy: function(client) {\n          client._destroying = true;\n          client.poolCount = undefined;\n          client.end();\n        }\n      });\n      pools.all[name] = pool;\n      //mixin EventEmitter to pool\n      EventEmitter.call(pool);\n      for(var key in EventEmitter.prototype) {\n        if(EventEmitter.prototype.hasOwnProperty(key)) {\n          pool[key] = EventEmitter.prototype[key];\n        }\n      }\n      //monkey-patch with connect method\n      pool.connect = function(cb) {\n        var domain = process.domain;\n        pool.acquire(function(err, client) {\n          if(domain) {\n            cb = domain.bind(cb);\n          }\n          if(err)  return cb(err, null, function() {/*NOOP*/});\n          client.poolCount++;\n          cb(null, client, function(err) {\n            if(err) {\n              pool.destroy(client);\n            } else {\n              pool.release(client);\n            }\n          });\n        });\n      };\n      return pool;\n    }\n  };\n\n  return pools;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/~/pg/lib/pool.js\n// module id = 205\n// module chunks = 0","var EventEmitter = require('events').EventEmitter;\nvar util = require('util');\n\nvar Result = require('./result');\nvar utils = require('./utils');\n\nvar Query = function(config, values, callback) {\n  // use of \"new\" optional\n  if(!(this instanceof Query)) { return new Query(config, values, callback); }\n\n  config = utils.normalizeQueryConfig(config, values, callback);\n\n  this.text = config.text;\n  this.values = config.values;\n  this.rows = config.rows;\n  this.types = config.types;\n  this.name = config.name;\n  this.binary = config.binary;\n  this.stream = config.stream;\n  //use unique portal name each time\n  this.portal = config.portal || \"\";\n  this.callback = config.callback;\n  if(process.domain && config.callback) {\n    this.callback = process.domain.bind(config.callback);\n  }\n  this._result = new Result(config.rowMode, config.types);\n  this.isPreparedStatement = false;\n  this._canceledDueToError = false;\n  this._promise = null;\n  EventEmitter.call(this);\n};\n\nutil.inherits(Query, EventEmitter);\n\nQuery.prototype.then = function(callback) {\n  return this.promise().then(callback);\n};\n\nQuery.prototype.catch = function(callback) {\n  return this.promise().catch(callback);\n};\n\nQuery.prototype.promise = function() {\n  if (this._promise) return this._promise;\n  this._promise = new Promise(function(resolve, reject) {\n    this.once('end', resolve);\n    this.once('error', reject);\n  }.bind(this));\n  return this._promise;\n};\n\nQuery.prototype.requiresPreparation = function() {\n  //named queries must always be prepared\n  if(this.name) { return true; }\n  //always prepare if there are max number of rows expected per\n  //portal execution\n  if(this.rows) { return true; }\n  //don't prepare empty text queries\n  if(!this.text) { return false; }\n  //binary should be prepared to specify results should be in binary\n  //unless there are no parameters\n  if(this.binary && !this.values) { return false; }\n  //prepare if there are values\n  return (this.values || 0).length > 0;\n};\n\n\n//associates row metadata from the supplied\n//message with this query object\n//metadata used when parsing row results\nQuery.prototype.handleRowDescription = function(msg) {\n  this._result.addFields(msg.fields);\n  this._accumulateRows = this.callback || !this.listeners('row').length;\n};\n\nQuery.prototype.handleDataRow = function(msg) {\n  var row = this._result.parseRow(msg.fields);\n  this.emit('row', row, this._result);\n  if (this._accumulateRows) {\n    this._result.addRow(row);\n  }\n};\n\nQuery.prototype.handleCommandComplete = function(msg, con) {\n  this._result.addCommandComplete(msg);\n  //need to sync after each command complete of a prepared statement\n  if(this.isPreparedStatement) {\n    con.sync();\n  }\n};\n\n//if a named prepared statement is created with empty query text\n//the backend will send an emptyQuery message but *not* a command complete message\n//execution on the connection will hang until the backend receives a sync message\nQuery.prototype.handleEmptyQuery = function(con) {\n  if (this.isPreparedStatement) {\n    con.sync();\n  }\n};\n\nQuery.prototype.handleReadyForQuery = function() {\n  if(this._canceledDueToError) {\n    return this.handleError(this._canceledDueToError);\n  }\n  if(this.callback) {\n    this.callback(null, this._result);\n  }\n  this.emit('end', this._result);\n};\n\nQuery.prototype.handleError = function(err, connection) {\n  //need to sync after error during a prepared statement\n  if(this.isPreparedStatement) {\n    connection.sync();\n  }\n  if(this._canceledDueToError) {\n    err = this._canceledDueToError;\n    this._canceledDueToError = false;\n  }\n  //if callback supplied do not emit error event as uncaught error\n  //events will bubble up to node process\n  if(this.callback) {\n    return this.callback(err);\n  }\n  this.emit('error', err);\n};\n\nQuery.prototype.submit = function(connection) {\n  if(this.requiresPreparation()) {\n    this.prepare(connection);\n  } else {\n    connection.query(this.text);\n  }\n};\n\nQuery.prototype.hasBeenParsed = function(connection) {\n  return this.name && connection.parsedStatements[this.name];\n};\n\nQuery.prototype.handlePortalSuspended = function(connection) {\n  this._getRows(connection, this.rows);\n};\n\nQuery.prototype._getRows = function(connection, rows) {\n  connection.execute({\n    portal: this.portalName,\n    rows: rows\n  }, true);\n  connection.flush();\n};\n\nQuery.prototype.prepare = function(connection) {\n  var self = this;\n  //prepared statements need sync to be called after each command\n  //complete or when an error is encountered\n  this.isPreparedStatement = true;\n  //TODO refactor this poor encapsulation\n  if(!this.hasBeenParsed(connection)) {\n    connection.parse({\n      text: self.text,\n      name: self.name,\n      types: self.types\n    }, true);\n  }\n\n  if(self.values) {\n    self.values = self.values.map(utils.prepareValue);\n  }\n\n  //http://developer.postgresql.org/pgdocs/postgres/protocol-flow.html#PROTOCOL-FLOW-EXT-QUERY\n  connection.bind({\n    portal: self.portalName,\n    statement: self.name,\n    values: self.values,\n    binary: self.binary\n  }, true);\n\n  connection.describe({\n    type: 'P',\n    name: self.portalName || \"\"\n  }, true);\n\n  this._getRows(connection, this.rows);\n};\n\nQuery.prototype.handleCopyInResponse = function (connection) {\n  if(this.stream) this.stream.startStreamingToConnection(connection);\n  else connection.sendCopyFail('No source stream defined');\n};\n\nQuery.prototype.handleCopyData = function (msg, connection) {\n  var chunk = msg.chunk;\n  if(this.stream) {\n    this.stream.handleChunk(chunk);\n  }\n  //if there are no stream (for example when copy to query was sent by\n  //query method instead of copyTo) error will be handled\n  //on copyOutResponse event, so silently ignore this error here\n};\nmodule.exports = Query;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/~/pg/lib/query.js\n// module id = 206\n// module chunks = 0","var types = require('pg-types');\n\n//result object returned from query\n//in the 'end' event and also\n//passed as second argument to provided callback\nvar Result = function(rowMode) {\n  this.command = null;\n  this.rowCount = null;\n  this.oid = null;\n  this.rows = [];\n  this.fields = [];\n  this._parsers = [];\n  this.RowCtor = null;\n  this.rowAsArray = rowMode == \"array\";\n  if(this.rowAsArray) {\n    this.parseRow = this._parseRowAsArray;\n  }\n};\n\nvar matchRegexp = /([A-Za-z]+) ?(\\d+ )?(\\d+)?/;\n\n//adds a command complete message\nResult.prototype.addCommandComplete = function(msg) {\n  var match;\n  if(msg.text) {\n    //pure javascript\n    match = matchRegexp.exec(msg.text);\n  } else {\n    //native bindings\n    match = matchRegexp.exec(msg.command);\n  }\n  if(match) {\n    this.command = match[1];\n    //match 3 will only be existing on insert commands\n    if(match[3]) {\n      //msg.value is from native bindings\n      this.rowCount = parseInt(match[3] || msg.value, 10);\n      this.oid = parseInt(match[2], 10);\n    } else {\n      this.rowCount = parseInt(match[2], 10);\n    }\n  }\n};\n\nResult.prototype._parseRowAsArray = function(rowData) {\n  var row = [];\n  for(var i = 0, len = rowData.length; i < len; i++) {\n    var rawValue = rowData[i];\n    if(rawValue !== null) {\n      row.push(this._parsers[i](rawValue));\n    } else {\n      row.push(null);\n    }\n  }\n  return row;\n};\n\n//rowData is an array of text or binary values\n//this turns the row into a JavaScript object\nResult.prototype.parseRow = function(rowData) {\n  return new this.RowCtor(this._parsers, rowData);\n};\n\nResult.prototype.addRow = function(row) {\n  this.rows.push(row);\n};\n\nvar inlineParser = function(fieldName, i) {\n  return \"\\nthis['\" +\n    //fields containing single quotes will break\n    //the evaluated javascript unless they are escaped\n    //see https://github.com/brianc/node-postgres/issues/507\n    //Addendum: However, we need to make sure to replace all\n    //occurences of apostrophes, not just the first one.\n    //See https://github.com/brianc/node-postgres/issues/934\n    fieldName.replace(/'/g, \"\\\\'\") +\n    \"'] = \" +\n    \"rowData[\" + i + \"] == null ? null : parsers[\" + i + \"](rowData[\" + i + \"]);\";\n};\n\nResult.prototype.addFields = function(fieldDescriptions) {\n  //clears field definitions\n  //multiple query statements in 1 action can result in multiple sets\n  //of rowDescriptions...eg: 'select NOW(); select 1::int;'\n  //you need to reset the fields\n  if(this.fields.length) {\n    this.fields = [];\n    this._parsers = [];\n  }\n  var ctorBody = \"\";\n  for(var i = 0; i < fieldDescriptions.length; i++) {\n    var desc = fieldDescriptions[i];\n    this.fields.push(desc);\n    var parser = this._getTypeParser(desc.dataTypeID, desc.format || 'text');\n    this._parsers.push(parser);\n    //this is some craziness to compile the row result parsing\n    //results in ~60% speedup on large query result sets\n    ctorBody += inlineParser(desc.name, i);\n  }\n  if(!this.rowAsArray) {\n    this.RowCtor = Function(\"parsers\", \"rowData\", ctorBody);\n  }\n};\n\nResult.prototype._getTypeParser = types.getTypeParser;\n\nmodule.exports = Result;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/~/pg/lib/result.js\n// module id = 207\n// module chunks = 0","module.exports = {\n\t\"_args\": [\n\t\t[\n\t\t\t{\n\t\t\t\t\"raw\": \"pg@5.1\",\n\t\t\t\t\"scope\": null,\n\t\t\t\t\"escapedName\": \"pg\",\n\t\t\t\t\"name\": \"pg\",\n\t\t\t\t\"rawSpec\": \"5.1\",\n\t\t\t\t\"spec\": \">=5.1.0 <5.2.0\",\n\t\t\t\t\"type\": \"range\"\n\t\t\t},\n\t\t\t\"/home/neil/DevGit/zf2dbmodelgen/modgen/node_modules/pg-promise\"\n\t\t]\n\t],\n\t\"_from\": \"pg@>=5.1.0 <5.2.0\",\n\t\"_id\": \"pg@5.1.0\",\n\t\"_inCache\": true,\n\t\"_location\": \"/pg-promise/pg\",\n\t\"_nodeVersion\": \"6.1.0\",\n\t\"_npmOperationalInternal\": {\n\t\t\"host\": \"packages-16-east.internal.npmjs.com\",\n\t\t\"tmp\": \"tmp/pg-5.1.0.tgz_1465597295940_0.7661049372982234\"\n\t},\n\t\"_npmUser\": {\n\t\t\"name\": \"brianc\",\n\t\t\"email\": \"brian.m.carlson@gmail.com\"\n\t},\n\t\"_npmVersion\": \"3.8.6\",\n\t\"_phantomChildren\": {},\n\t\"_requested\": {\n\t\t\"raw\": \"pg@5.1\",\n\t\t\"scope\": null,\n\t\t\"escapedName\": \"pg\",\n\t\t\"name\": \"pg\",\n\t\t\"rawSpec\": \"5.1\",\n\t\t\"spec\": \">=5.1.0 <5.2.0\",\n\t\t\"type\": \"range\"\n\t},\n\t\"_requiredBy\": [\n\t\t\"/pg-promise\"\n\t],\n\t\"_resolved\": \"https://registry.npmjs.org/pg/-/pg-5.1.0.tgz\",\n\t\"_shasum\": \"073b9b36763ad8a5478dbb85effef45e739ba9d8\",\n\t\"_shrinkwrap\": null,\n\t\"_spec\": \"pg@5.1\",\n\t\"_where\": \"/home/neil/DevGit/zf2dbmodelgen/modgen/node_modules/pg-promise\",\n\t\"author\": {\n\t\t\"name\": \"Brian Carlson\",\n\t\t\"email\": \"brian.m.carlson@gmail.com\"\n\t},\n\t\"bugs\": {\n\t\t\"url\": \"https://github.com/brianc/node-postgres/issues\"\n\t},\n\t\"dependencies\": {\n\t\t\"buffer-writer\": \"1.0.1\",\n\t\t\"generic-pool\": \"2.4.2\",\n\t\t\"packet-reader\": \"0.2.0\",\n\t\t\"pg-connection-string\": \"0.1.3\",\n\t\t\"pg-types\": \"1.*\",\n\t\t\"pgpass\": \"0.0.6\",\n\t\t\"semver\": \"4.3.2\"\n\t},\n\t\"description\": \"PostgreSQL client - pure javascript & libpq with the same API\",\n\t\"devDependencies\": {\n\t\t\"async\": \"0.9.0\",\n\t\t\"jshint\": \"2.5.2\",\n\t\t\"pg-copy-streams\": \"0.3.0\"\n\t},\n\t\"directories\": {},\n\t\"dist\": {\n\t\t\"shasum\": \"073b9b36763ad8a5478dbb85effef45e739ba9d8\",\n\t\t\"tarball\": \"https://registry.npmjs.org/pg/-/pg-5.1.0.tgz\"\n\t},\n\t\"engines\": {\n\t\t\"node\": \">= 0.8.0\"\n\t},\n\t\"gitHead\": \"d1c5fc694be8dfab19b844e149141d4785ad7152\",\n\t\"homepage\": \"http://github.com/brianc/node-postgres\",\n\t\"keywords\": [\n\t\t\"postgres\",\n\t\t\"pg\",\n\t\t\"libpq\",\n\t\t\"postgre\",\n\t\t\"database\",\n\t\t\"rdbms\"\n\t],\n\t\"license\": \"MIT\",\n\t\"main\": \"./lib\",\n\t\"maintainers\": [\n\t\t{\n\t\t\t\"name\": \"brianc\",\n\t\t\t\"email\": \"brian.m.carlson@gmail.com\"\n\t\t}\n\t],\n\t\"minNativeVersion\": \"1.7.0\",\n\t\"name\": \"pg\",\n\t\"optionalDependencies\": {},\n\t\"readme\": \"ERROR: No README data found!\",\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"git://github.com/brianc/node-postgres.git\"\n\t},\n\t\"scripts\": {\n\t\t\"changelog\": \"npm i github-changes && ./node_modules/.bin/github-changes -o brianc -r node-postgres -d pulls -a -v\",\n\t\t\"test\": \"make test-all connectionString=postgres://postgres@localhost:5432/postgres\"\n\t},\n\t\"version\": \"5.1.0\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/~/pg/package.json\n// module id = 208\n// module chunks = 0","'use strict';\n\nvar path = require('path')\n  , Stream = require('stream').Stream\n  , Split = require('split')\n  , util = require('util')\n  , defaultPort = 5432\n  , isWin = (process.platform === 'win32')\n  , warnStream = process.stderr\n;\n\n\nvar S_IRWXG = 56     //    00070(8)\n  , S_IRWXO = 7      //    00007(8)\n  , S_IFMT  = 61440  // 00170000(8)\n  , S_IFREG = 32768  //  0100000(8)\n;\nfunction isRegFile(mode) {\n    return ((mode & S_IFMT) == S_IFREG);\n}\n\nvar fieldNames = [ 'host', 'port', 'database', 'user', 'password' ];\nvar nrOfFields = fieldNames.length;\nvar passKey = fieldNames[ nrOfFields -1 ];\n\n\nfunction warn() {\n    var isWritable = (\n        warnStream instanceof Stream &&\n          true === warnStream.writable\n    );\n\n    if (isWritable) {\n        var args = Array.prototype.slice.call(arguments).concat(\"\\n\");\n        warnStream.write( util.format.apply(util, args) );\n    }\n}\n\n\nObject.defineProperty(module.exports, 'isWin', {\n    get : function() {\n        return isWin;\n    } ,\n    set : function(val) {\n        isWin = val;\n    }\n});\n\n\nmodule.exports.warnTo = function(stream) {\n    var old = warnStream;\n    warnStream = stream;\n    return old;\n};\n\nmodule.exports.getFileName = function(env){\n    env = env || process.env;\n    var file = env.PGPASSFILE || (\n        isWin ?\n          path.join( env.APPDATA , 'postgresql', 'pgpass.conf' ) :\n          path.join( env.HOME, '.pgpass' )\n    );\n    return file;\n};\n\nmodule.exports.usePgPass = function(stats, fname) {\n    if (Object.prototype.hasOwnProperty.call(process.env, 'PGPASSWORD')) {\n        return false;\n    }\n\n    if (isWin) {\n        return true;\n    }\n\n    fname = fname || '<unkn>';\n\n    if (! isRegFile(stats.mode)) {\n        warn('WARNING: password file \"%s\" is not a plain file', fname);\n        return false;\n    }\n\n    if (stats.mode & (S_IRWXG | S_IRWXO)) {\n        /* If password file is insecure, alert the user and ignore it. */\n        warn('WARNING: password file \"%s\" has group or world access; permissions should be u=rw (0600) or less', fname);\n        return false;\n    }\n\n    return true;\n};\n\n\nvar matcher = module.exports.match = function(connInfo, entry) {\n    return fieldNames.slice(0, -1).reduce(function(prev, field, idx){\n        if (idx == 1) {\n            // the port\n            if ( Number( connInfo[field] || defaultPort ) === Number( entry[field] ) ) {\n                return prev && true;\n            }\n        }\n        return prev && (\n            entry[field] === '*' ||\n              entry[field] === connInfo[field]\n        );\n    }, true);\n};\n\n\nmodule.exports.getPassword = function(connInfo, stream, cb) {\n    var pass;\n    var lineStream = stream.pipe(new Split());\n\n    function onLine(line) {\n        var entry = parseLine(line);\n        if (entry && isValidEntry(entry) && matcher(connInfo, entry)) {\n            pass = entry[passKey];\n            lineStream.end(); // -> calls onEnd(), but pass is set now\n        }\n    }\n\n    var onEnd = function() {\n        cb(pass);\n    };\n\n    var onErr = function(err) {\n        warn('WARNING: error on reading file: %s', err);\n        cb(undefined);\n    };\n\n    stream.on('error', onErr);\n    lineStream\n        .on('data', onLine)\n        .on('end', onEnd)\n        .on('error', onErr)\n    ;\n\n};\n\n\nvar parseLine = module.exports.parseLine = function(line) {\n    if (line.length < 11 || line.match(/^\\s+#/)) {\n        return null;\n    }\n\n    var curChar = '';\n    var prevChar = '';\n    var fieldIdx = 0;\n    var startIdx = 0;\n    var endIdx = 0;\n    var obj = {};\n    var isLastField = false;\n    var addToObj = function(idx, i0, i1) {\n        var field = line.substring(i0, i1);\n\n        if (! Object.hasOwnProperty.call(process.env, 'PGPASS_NO_DEESCAPE')) {\n            field = field.replace(/\\\\([:\\\\])/g, '$1');\n        }\n\n        obj[ fieldNames[idx] ] = field;\n    };\n\n    for (var i = 0 ; i < line.length-1 ; i += 1) {\n        curChar = line.charAt(i+1);\n        prevChar = line.charAt(i);\n\n        isLastField = (fieldIdx == nrOfFields-1);\n\n        if (isLastField) {\n            addToObj(fieldIdx, startIdx);\n            break;\n        }\n\n        if (i >= 0 && curChar == ':' && prevChar !== '\\\\') {\n            addToObj(fieldIdx, startIdx, i+1);\n\n            startIdx = i+2;\n            fieldIdx += 1;\n        }\n    }\n\n    obj = ( Object.keys(obj).length === nrOfFields ) ? obj : null;\n\n    return obj;\n};\n\n\nvar isValidEntry = module.exports.isValidEntry = function(entry){\n    var rules = {\n        // host\n        0 : function(x){\n            return x.length > 0;\n        } ,\n        // port\n        1 : function(x){\n            if (x === '*') {\n                return true;\n            }\n            x = Number(x);\n            return (\n                isFinite(x) &&\n                  x > 0 &&\n                  x < 9007199254740992 &&\n                  Math.floor(x) === x\n            );\n        } ,\n        // database\n        2 : function(x){\n            return x.length > 0;\n        } ,\n        // username\n        3 : function(x){\n            return x.length > 0;\n        } ,\n        // password\n        4 : function(x){\n            return x.length > 0;\n        }\n    };\n\n    for (var idx = 0 ; idx < fieldNames.length ; idx += 1) {\n        var rule = rules[idx];\n        var value = entry[ fieldNames[idx] ] || '';\n\n        var res = rule(value);\n        if (!res) {\n            return false;\n        }\n    }\n\n    return true;\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/~/pgpass/lib/helper.js\n// module id = 209\n// module chunks = 0","'use strict';\n\nvar path = require('path')\n  , fs = require('fs')\n  , helper = require('./helper.js')\n;\n\n\nmodule.exports.warnTo = helper.warnTo;\n\nmodule.exports = function(connInfo, cb) {\n    var file = helper.getFileName();\n    \n    fs.stat(file, function(err, stat){\n        if (err || !helper.usePgPass(stat, file)) {\n            return cb(undefined);\n        }\n\n        var st = fs.createReadStream(file);\n\n        helper.getPassword(connInfo, st, cb);\n    });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/~/pgpass/lib/index.js\n// module id = 210\n// module chunks = 0","// export the class if we are in a Node-like system.\nif (typeof module === 'object' && module.exports === exports)\n  exports = module.exports = SemVer;\n\n// The debug function is excluded entirely from the minified version.\n/* nomin */ var debug;\n/* nomin */ if (typeof process === 'object' &&\n    /* nomin */ process.env &&\n    /* nomin */ process.env.NODE_DEBUG &&\n    /* nomin */ /\\bsemver\\b/i.test(process.env.NODE_DEBUG))\n  /* nomin */ debug = function() {\n    /* nomin */ var args = Array.prototype.slice.call(arguments, 0);\n    /* nomin */ args.unshift('SEMVER');\n    /* nomin */ console.log.apply(console, args);\n    /* nomin */ };\n/* nomin */ else\n  /* nomin */ debug = function() {};\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0';\n\nvar MAX_LENGTH = 256;\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\n// The actual regexps go on exports.re\nvar re = exports.re = [];\nvar src = exports.src = [];\nvar R = 0;\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\nvar NUMERICIDENTIFIER = R++;\nsrc[NUMERICIDENTIFIER] = '0|[1-9]\\\\d*';\nvar NUMERICIDENTIFIERLOOSE = R++;\nsrc[NUMERICIDENTIFIERLOOSE] = '[0-9]+';\n\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\nvar NONNUMERICIDENTIFIER = R++;\nsrc[NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*';\n\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\nvar MAINVERSION = R++;\nsrc[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')';\n\nvar MAINVERSIONLOOSE = R++;\nsrc[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')';\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\nvar PRERELEASEIDENTIFIER = R++;\nsrc[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] +\n                            '|' + src[NONNUMERICIDENTIFIER] + ')';\n\nvar PRERELEASEIDENTIFIERLOOSE = R++;\nsrc[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] +\n                                 '|' + src[NONNUMERICIDENTIFIER] + ')';\n\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\nvar PRERELEASE = R++;\nsrc[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] +\n                  '(?:\\\\.' + src[PRERELEASEIDENTIFIER] + ')*))';\n\nvar PRERELEASELOOSE = R++;\nsrc[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] +\n                       '(?:\\\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))';\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\nvar BUILDIDENTIFIER = R++;\nsrc[BUILDIDENTIFIER] = '[0-9A-Za-z-]+';\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\nvar BUILD = R++;\nsrc[BUILD] = '(?:\\\\+(' + src[BUILDIDENTIFIER] +\n             '(?:\\\\.' + src[BUILDIDENTIFIER] + ')*))';\n\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\nvar FULL = R++;\nvar FULLPLAIN = 'v?' + src[MAINVERSION] +\n                src[PRERELEASE] + '?' +\n                src[BUILD] + '?';\n\nsrc[FULL] = '^' + FULLPLAIN + '$';\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\nvar LOOSEPLAIN = '[v=\\\\s]*' + src[MAINVERSIONLOOSE] +\n                 src[PRERELEASELOOSE] + '?' +\n                 src[BUILD] + '?';\n\nvar LOOSE = R++;\nsrc[LOOSE] = '^' + LOOSEPLAIN + '$';\n\nvar GTLT = R++;\nsrc[GTLT] = '((?:<|>)?=?)';\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\nvar XRANGEIDENTIFIERLOOSE = R++;\nsrc[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*';\nvar XRANGEIDENTIFIER = R++;\nsrc[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\\\*';\n\nvar XRANGEPLAIN = R++;\nsrc[XRANGEPLAIN] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:' + src[PRERELEASE] + ')?' +\n                   src[BUILD] + '?' +\n                   ')?)?';\n\nvar XRANGEPLAINLOOSE = R++;\nsrc[XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:' + src[PRERELEASELOOSE] + ')?' +\n                        src[BUILD] + '?' +\n                        ')?)?';\n\nvar XRANGE = R++;\nsrc[XRANGE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAIN] + '$';\nvar XRANGELOOSE = R++;\nsrc[XRANGELOOSE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAINLOOSE] + '$';\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\nvar LONETILDE = R++;\nsrc[LONETILDE] = '(?:~>?)';\n\nvar TILDETRIM = R++;\nsrc[TILDETRIM] = '(\\\\s*)' + src[LONETILDE] + '\\\\s+';\nre[TILDETRIM] = new RegExp(src[TILDETRIM], 'g');\nvar tildeTrimReplace = '$1~';\n\nvar TILDE = R++;\nsrc[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$';\nvar TILDELOOSE = R++;\nsrc[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$';\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\nvar LONECARET = R++;\nsrc[LONECARET] = '(?:\\\\^)';\n\nvar CARETTRIM = R++;\nsrc[CARETTRIM] = '(\\\\s*)' + src[LONECARET] + '\\\\s+';\nre[CARETTRIM] = new RegExp(src[CARETTRIM], 'g');\nvar caretTrimReplace = '$1^';\n\nvar CARET = R++;\nsrc[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$';\nvar CARETLOOSE = R++;\nsrc[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$';\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\nvar COMPARATORLOOSE = R++;\nsrc[COMPARATORLOOSE] = '^' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + ')$|^$';\nvar COMPARATOR = R++;\nsrc[COMPARATOR] = '^' + src[GTLT] + '\\\\s*(' + FULLPLAIN + ')$|^$';\n\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\nvar COMPARATORTRIM = R++;\nsrc[COMPARATORTRIM] = '(\\\\s*)' + src[GTLT] +\n                      '\\\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')';\n\n// this one has to use the /g flag\nre[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g');\nvar comparatorTrimReplace = '$1$2$3';\n\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\nvar HYPHENRANGE = R++;\nsrc[HYPHENRANGE] = '^\\\\s*(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s+-\\\\s+' +\n                   '(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s*$';\n\nvar HYPHENRANGELOOSE = R++;\nsrc[HYPHENRANGELOOSE] = '^\\\\s*(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s+-\\\\s+' +\n                        '(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s*$';\n\n// Star ranges basically just allow anything at all.\nvar STAR = R++;\nsrc[STAR] = '(<|>)?=?\\\\s*\\\\*';\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i]);\n  if (!re[i])\n    re[i] = new RegExp(src[i]);\n}\n\nexports.parse = parse;\nfunction parse(version, loose) {\n  if (version.length > MAX_LENGTH)\n    return null;\n\n  var r = loose ? re[LOOSE] : re[FULL];\n  if (!r.test(version))\n    return null;\n\n  try {\n    return new SemVer(version, loose);\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.valid = valid;\nfunction valid(version, loose) {\n  var v = parse(version, loose);\n  return v ? v.version : null;\n}\n\n\nexports.clean = clean;\nfunction clean(version, loose) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), loose);\n  return s ? s.version : null;\n}\n\nexports.SemVer = SemVer;\n\nfunction SemVer(version, loose) {\n  if (version instanceof SemVer) {\n    if (version.loose === loose)\n      return version;\n    else\n      version = version.version;\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version);\n  }\n\n  if (version.length > MAX_LENGTH)\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\n\n  if (!(this instanceof SemVer))\n    return new SemVer(version, loose);\n\n  debug('SemVer', version, loose);\n  this.loose = loose;\n  var m = version.trim().match(loose ? re[LOOSE] : re[FULL]);\n\n  if (!m)\n    throw new TypeError('Invalid Version: ' + version);\n\n  this.raw = version;\n\n  // these are actually numbers\n  this.major = +m[1];\n  this.minor = +m[2];\n  this.patch = +m[3];\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0)\n    throw new TypeError('Invalid major version')\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0)\n    throw new TypeError('Invalid minor version')\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0)\n    throw new TypeError('Invalid patch version')\n\n  // numberify any prerelease numeric ids\n  if (!m[4])\n    this.prerelease = [];\n  else\n    this.prerelease = m[4].split('.').map(function(id) {\n      return (/^[0-9]+$/.test(id)) ? +id : id;\n    });\n\n  this.build = m[5] ? m[5].split('.') : [];\n  this.format();\n}\n\nSemVer.prototype.format = function() {\n  this.version = this.major + '.' + this.minor + '.' + this.patch;\n  if (this.prerelease.length)\n    this.version += '-' + this.prerelease.join('.');\n  return this.version;\n};\n\nSemVer.prototype.inspect = function() {\n  return '<SemVer \"' + this + '\">';\n};\n\nSemVer.prototype.toString = function() {\n  return this.version;\n};\n\nSemVer.prototype.compare = function(other) {\n  debug('SemVer.compare', this.version, this.loose, other);\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  return this.compareMain(other) || this.comparePre(other);\n};\n\nSemVer.prototype.compareMain = function(other) {\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  return compareIdentifiers(this.major, other.major) ||\n         compareIdentifiers(this.minor, other.minor) ||\n         compareIdentifiers(this.patch, other.patch);\n};\n\nSemVer.prototype.comparePre = function(other) {\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length)\n    return -1;\n  else if (!this.prerelease.length && other.prerelease.length)\n    return 1;\n  else if (!this.prerelease.length && !other.prerelease.length)\n    return 0;\n\n  var i = 0;\n  do {\n    var a = this.prerelease[i];\n    var b = other.prerelease[i];\n    debug('prerelease compare', i, a, b);\n    if (a === undefined && b === undefined)\n      return 0;\n    else if (b === undefined)\n      return 1;\n    else if (a === undefined)\n      return -1;\n    else if (a === b)\n      continue;\n    else\n      return compareIdentifiers(a, b);\n  } while (++i);\n};\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function(release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor = 0;\n      this.major++;\n      this.inc('pre', identifier);\n      break;\n    case 'preminor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor++;\n      this.inc('pre', identifier);\n      break;\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0;\n      this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0)\n        this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0)\n        this.major++;\n      this.minor = 0;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0)\n        this.minor++;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0)\n        this.patch++;\n      this.prerelease = [];\n      break;\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0)\n        this.prerelease = [0];\n      else {\n        var i = this.prerelease.length;\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++;\n            i = -2;\n          }\n        }\n        if (i === -1) // didn't increment anything\n          this.prerelease.push(0);\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1]))\n            this.prerelease = [identifier, 0];\n        } else\n          this.prerelease = [identifier, 0];\n      }\n      break;\n\n    default:\n      throw new Error('invalid increment argument: ' + release);\n  }\n  this.format();\n  return this;\n};\n\nexports.inc = inc;\nfunction inc(version, release, loose, identifier) {\n  if (typeof(loose) === 'string') {\n    identifier = loose;\n    loose = undefined;\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version;\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.diff = diff;\nfunction diff(version1, version2) {\n  if (eq(version1, version2)) {\n    return null;\n  } else {\n    var v1 = parse(version1);\n    var v2 = parse(version2);\n    if (v1.prerelease.length || v2.prerelease.length) {\n      for (var key in v1) {\n        if (key === 'major' || key === 'minor' || key === 'patch') {\n          if (v1[key] !== v2[key]) {\n            return 'pre'+key;\n          }\n        }\n      }\n      return 'prerelease';\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return key;\n        }\n      }\n    }\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers;\n\nvar numeric = /^[0-9]+$/;\nfunction compareIdentifiers(a, b) {\n  var anum = numeric.test(a);\n  var bnum = numeric.test(b);\n\n  if (anum && bnum) {\n    a = +a;\n    b = +b;\n  }\n\n  return (anum && !bnum) ? -1 :\n         (bnum && !anum) ? 1 :\n         a < b ? -1 :\n         a > b ? 1 :\n         0;\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers;\nfunction rcompareIdentifiers(a, b) {\n  return compareIdentifiers(b, a);\n}\n\nexports.major = major;\nfunction major(a, loose) {\n  return new SemVer(a, loose).major;\n}\n\nexports.minor = minor;\nfunction minor(a, loose) {\n  return new SemVer(a, loose).minor;\n}\n\nexports.patch = patch;\nfunction patch(a, loose) {\n  return new SemVer(a, loose).patch;\n}\n\nexports.compare = compare;\nfunction compare(a, b, loose) {\n  return new SemVer(a, loose).compare(b);\n}\n\nexports.compareLoose = compareLoose;\nfunction compareLoose(a, b) {\n  return compare(a, b, true);\n}\n\nexports.rcompare = rcompare;\nfunction rcompare(a, b, loose) {\n  return compare(b, a, loose);\n}\n\nexports.sort = sort;\nfunction sort(list, loose) {\n  return list.sort(function(a, b) {\n    return exports.compare(a, b, loose);\n  });\n}\n\nexports.rsort = rsort;\nfunction rsort(list, loose) {\n  return list.sort(function(a, b) {\n    return exports.rcompare(a, b, loose);\n  });\n}\n\nexports.gt = gt;\nfunction gt(a, b, loose) {\n  return compare(a, b, loose) > 0;\n}\n\nexports.lt = lt;\nfunction lt(a, b, loose) {\n  return compare(a, b, loose) < 0;\n}\n\nexports.eq = eq;\nfunction eq(a, b, loose) {\n  return compare(a, b, loose) === 0;\n}\n\nexports.neq = neq;\nfunction neq(a, b, loose) {\n  return compare(a, b, loose) !== 0;\n}\n\nexports.gte = gte;\nfunction gte(a, b, loose) {\n  return compare(a, b, loose) >= 0;\n}\n\nexports.lte = lte;\nfunction lte(a, b, loose) {\n  return compare(a, b, loose) <= 0;\n}\n\nexports.cmp = cmp;\nfunction cmp(a, op, b, loose) {\n  var ret;\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a === b;\n      break;\n    case '!==':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a !== b;\n      break;\n    case '': case '=': case '==': ret = eq(a, b, loose); break;\n    case '!=': ret = neq(a, b, loose); break;\n    case '>': ret = gt(a, b, loose); break;\n    case '>=': ret = gte(a, b, loose); break;\n    case '<': ret = lt(a, b, loose); break;\n    case '<=': ret = lte(a, b, loose); break;\n    default: throw new TypeError('Invalid operator: ' + op);\n  }\n  return ret;\n}\n\nexports.Comparator = Comparator;\nfunction Comparator(comp, loose) {\n  if (comp instanceof Comparator) {\n    if (comp.loose === loose)\n      return comp;\n    else\n      comp = comp.value;\n  }\n\n  if (!(this instanceof Comparator))\n    return new Comparator(comp, loose);\n\n  debug('comparator', comp, loose);\n  this.loose = loose;\n  this.parse(comp);\n\n  if (this.semver === ANY)\n    this.value = '';\n  else\n    this.value = this.operator + this.semver.version;\n\n  debug('comp', this);\n}\n\nvar ANY = {};\nComparator.prototype.parse = function(comp) {\n  var r = this.loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var m = comp.match(r);\n\n  if (!m)\n    throw new TypeError('Invalid comparator: ' + comp);\n\n  this.operator = m[1];\n  if (this.operator === '=')\n    this.operator = '';\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2])\n    this.semver = ANY;\n  else\n    this.semver = new SemVer(m[2], this.loose);\n};\n\nComparator.prototype.inspect = function() {\n  return '<SemVer Comparator \"' + this + '\">';\n};\n\nComparator.prototype.toString = function() {\n  return this.value;\n};\n\nComparator.prototype.test = function(version) {\n  debug('Comparator.test', version, this.loose);\n\n  if (this.semver === ANY)\n    return true;\n\n  if (typeof version === 'string')\n    version = new SemVer(version, this.loose);\n\n  return cmp(version, this.operator, this.semver, this.loose);\n};\n\n\nexports.Range = Range;\nfunction Range(range, loose) {\n  if ((range instanceof Range) && range.loose === loose)\n    return range;\n\n  if (!(this instanceof Range))\n    return new Range(range, loose);\n\n  this.loose = loose;\n\n  // First, split based on boolean or ||\n  this.raw = range;\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function(range) {\n    return this.parseRange(range.trim());\n  }, this).filter(function(c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length;\n  });\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + range);\n  }\n\n  this.format();\n}\n\nRange.prototype.inspect = function() {\n  return '<SemVer Range \"' + this.range + '\">';\n};\n\nRange.prototype.format = function() {\n  this.range = this.set.map(function(comps) {\n    return comps.join(' ').trim();\n  }).join('||').trim();\n  return this.range;\n};\n\nRange.prototype.toString = function() {\n  return this.range;\n};\n\nRange.prototype.parseRange = function(range) {\n  var loose = this.loose;\n  range = range.trim();\n  debug('range', range, loose);\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE];\n  range = range.replace(hr, hyphenReplace);\n  debug('hyphen replace', range);\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace);\n  debug('comparator trim', range, re[COMPARATORTRIM]);\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(re[TILDETRIM], tildeTrimReplace);\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(re[CARETTRIM], caretTrimReplace);\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ');\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var set = range.split(' ').map(function(comp) {\n    return parseComparator(comp, loose);\n  }).join(' ').split(/\\s+/);\n  if (this.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function(comp) {\n      return !!comp.match(compRe);\n    });\n  }\n  set = set.map(function(comp) {\n    return new Comparator(comp, loose);\n  });\n\n  return set;\n};\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators;\nfunction toComparators(range, loose) {\n  return new Range(range, loose).set.map(function(comp) {\n    return comp.map(function(c) {\n      return c.value;\n    }).join(' ').trim().split(' ');\n  });\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator(comp, loose) {\n  debug('comp', comp);\n  comp = replaceCarets(comp, loose);\n  debug('caret', comp);\n  comp = replaceTildes(comp, loose);\n  debug('tildes', comp);\n  comp = replaceXRanges(comp, loose);\n  debug('xrange', comp);\n  comp = replaceStars(comp, loose);\n  debug('stars', comp);\n  return comp;\n}\n\nfunction isX(id) {\n  return !id || id.toLowerCase() === 'x' || id === '*';\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes(comp, loose) {\n  return comp.trim().split(/\\s+/).map(function(comp) {\n    return replaceTilde(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceTilde(comp, loose) {\n  var r = loose ? re[TILDELOOSE] : re[TILDE];\n  return comp.replace(r, function(_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M))\n      ret = '';\n    else if (isX(m))\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    else if (isX(p))\n      // ~1.2 == >=1.2.0- <1.3.0-\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    else if (pr) {\n      debug('replaceTilde pr', pr);\n      if (pr.charAt(0) !== '-')\n        pr = '-' + pr;\n      ret = '>=' + M + '.' + m + '.' + p + pr +\n            ' <' + M + '.' + (+m + 1) + '.0';\n    } else\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p +\n            ' <' + M + '.' + (+m + 1) + '.0';\n\n    debug('tilde return', ret);\n    return ret;\n  });\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets(comp, loose) {\n  return comp.trim().split(/\\s+/).map(function(comp) {\n    return replaceCaret(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceCaret(comp, loose) {\n  debug('caret', comp, loose);\n  var r = loose ? re[CARETLOOSE] : re[CARET];\n  return comp.replace(r, function(_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M))\n      ret = '';\n    else if (isX(m))\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    else if (isX(p)) {\n      if (M === '0')\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n      else\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0';\n    } else if (pr) {\n      debug('replaceCaret pr', pr);\n      if (pr.charAt(0) !== '-')\n        pr = '-' + pr;\n      if (M === '0') {\n        if (m === '0')\n          ret = '>=' + M + '.' + m + '.' + p + pr +\n                ' <' + M + '.' + m + '.' + (+p + 1);\n        else\n          ret = '>=' + M + '.' + m + '.' + p + pr +\n                ' <' + M + '.' + (+m + 1) + '.0';\n      } else\n        ret = '>=' + M + '.' + m + '.' + p + pr +\n              ' <' + (+M + 1) + '.0.0';\n    } else {\n      debug('no pr');\n      if (M === '0') {\n        if (m === '0')\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + m + '.' + (+p + 1);\n        else\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + (+m + 1) + '.0';\n      } else\n        ret = '>=' + M + '.' + m + '.' + p +\n              ' <' + (+M + 1) + '.0.0';\n    }\n\n    debug('caret return', ret);\n    return ret;\n  });\n}\n\nfunction replaceXRanges(comp, loose) {\n  debug('replaceXRanges', comp, loose);\n  return comp.split(/\\s+/).map(function(comp) {\n    return replaceXRange(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceXRange(comp, loose) {\n  comp = comp.trim();\n  var r = loose ? re[XRANGELOOSE] : re[XRANGE];\n  return comp.replace(r, function(ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr);\n    var xM = isX(M);\n    var xm = xM || isX(m);\n    var xp = xm || isX(p);\n    var anyX = xp;\n\n    if (gtlt === '=' && anyX)\n      gtlt = '';\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0';\n      } else {\n        // nothing is forbidden\n        ret = '*';\n      }\n    } else if (gtlt && anyX) {\n      // replace X with 0\n      if (xm)\n        m = 0;\n      if (xp)\n        p = 0;\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>=';\n        if (xm) {\n          M = +M + 1;\n          m = 0;\n          p = 0;\n        } else if (xp) {\n          m = +m + 1;\n          p = 0;\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm)\n          M = +M + 1\n        else\n          m = +m + 1\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p;\n    } else if (xm) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    }\n\n    debug('xRange return', ret);\n\n    return ret;\n  });\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars(comp, loose) {\n  debug('replaceStars', comp, loose);\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[STAR], '');\n}\n\n// This function is passed to string.replace(re[HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace($0,\n                       from, fM, fm, fp, fpr, fb,\n                       to, tM, tm, tp, tpr, tb) {\n\n  if (isX(fM))\n    from = '';\n  else if (isX(fm))\n    from = '>=' + fM + '.0.0';\n  else if (isX(fp))\n    from = '>=' + fM + '.' + fm + '.0';\n  else\n    from = '>=' + from;\n\n  if (isX(tM))\n    to = '';\n  else if (isX(tm))\n    to = '<' + (+tM + 1) + '.0.0';\n  else if (isX(tp))\n    to = '<' + tM + '.' + (+tm + 1) + '.0';\n  else if (tpr)\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr;\n  else\n    to = '<=' + to;\n\n  return (from + ' ' + to).trim();\n}\n\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function(version) {\n  if (!version)\n    return false;\n\n  if (typeof version === 'string')\n    version = new SemVer(version, this.loose);\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version))\n      return true;\n  }\n  return false;\n};\n\nfunction testSet(set, version) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version))\n      return false;\n  }\n\n  if (version.prerelease.length) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (var i = 0; i < set.length; i++) {\n      debug(set[i].semver);\n      if (set[i].semver === ANY)\n        return true;\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver;\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch)\n          return true;\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false;\n  }\n\n  return true;\n}\n\nexports.satisfies = satisfies;\nfunction satisfies(version, range, loose) {\n  try {\n    range = new Range(range, loose);\n  } catch (er) {\n    return false;\n  }\n  return range.test(version);\n}\n\nexports.maxSatisfying = maxSatisfying;\nfunction maxSatisfying(versions, range, loose) {\n  return versions.filter(function(version) {\n    return satisfies(version, range, loose);\n  }).sort(function(a, b) {\n    return rcompare(a, b, loose);\n  })[0] || null;\n}\n\nexports.validRange = validRange;\nfunction validRange(range, loose) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, loose).range || '*';\n  } catch (er) {\n    return null;\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr;\nfunction ltr(version, range, loose) {\n  return outside(version, range, '<', loose);\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr;\nfunction gtr(version, range, loose) {\n  return outside(version, range, '>', loose);\n}\n\nexports.outside = outside;\nfunction outside(version, range, hilo, loose) {\n  version = new SemVer(version, loose);\n  range = new Range(range, loose);\n\n  var gtfn, ltefn, ltfn, comp, ecomp;\n  switch (hilo) {\n    case '>':\n      gtfn = gt;\n      ltefn = lte;\n      ltfn = lt;\n      comp = '>';\n      ecomp = '>=';\n      break;\n    case '<':\n      gtfn = lt;\n      ltefn = gte;\n      ltfn = gt;\n      comp = '<';\n      ecomp = '<=';\n      break;\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"');\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, loose)) {\n    return false;\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i];\n\n    var high = null;\n    var low = null;\n\n    comparators.forEach(function(comparator) {\n      high = high || comparator;\n      low = low || comparator;\n      if (gtfn(comparator.semver, high.semver, loose)) {\n        high = comparator;\n      } else if (ltfn(comparator.semver, low.semver, loose)) {\n        low = comparator;\n      }\n    });\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false;\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false;\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Use the define() function if we're in AMD land\nif (typeof define === 'function' && define.amd)\n  define(exports);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-promise/~/semver/semver.js\n// module id = 211\n// module chunks = 0","var parseBits = function(data, bits, offset, invert, callback) {\n  offset = offset || 0;\n  invert = invert || false;\n  callback = callback || function(lastValue, newValue, bits) { return (lastValue * Math.pow(2, bits)) + newValue; };\n  var offsetBytes = offset >> 3;\n\n  var inv = function(value) {\n    if (invert) {\n      return ~value & 0xff;\n    }\n\n    return value;\n  };\n\n  // read first (maybe partial) byte\n  var mask = 0xff;\n  var firstBits = 8 - (offset % 8);\n  if (bits < firstBits) {\n    mask = (0xff << (8 - bits)) & 0xff;\n    firstBits = bits;\n  }\n\n  if (offset) {\n    mask = mask >> (offset % 8);\n  }\n\n  var result = 0;\n  if ((offset % 8) + bits >= 8) {\n    result = callback(0, inv(data[offsetBytes]) & mask, firstBits);\n  }\n\n  // read bytes\n  var bytes = (bits + offset) >> 3;\n  for (var i = offsetBytes + 1; i < bytes; i++) {\n    result = callback(result, inv(data[i]), 8);\n  }\n\n  // bits to read, that are not a complete byte\n  var lastBits = (bits + offset) % 8;\n  if (lastBits > 0) {\n    result = callback(result, inv(data[bytes]) >> (8 - lastBits), lastBits);\n  }\n\n  return result;\n};\n\nvar parseFloatFromBits = function(data, precisionBits, exponentBits) {\n  var bias = Math.pow(2, exponentBits - 1) - 1;\n  var sign = parseBits(data, 1);\n  var exponent = parseBits(data, exponentBits, 1);\n\n  if (exponent === 0) {\n    return 0;\n  }\n\n  // parse mantissa\n  var precisionBitsCounter = 1;\n  var parsePrecisionBits = function(lastValue, newValue, bits) {\n    if (lastValue === 0) {\n      lastValue = 1;\n    }\n\n    for (var i = 1; i <= bits; i++) {\n      precisionBitsCounter /= 2;\n      if ((newValue & (0x1 << (bits - i))) > 0) {\n        lastValue += precisionBitsCounter;\n      }\n    }\n\n    return lastValue;\n  };\n\n  var mantissa = parseBits(data, precisionBits, exponentBits + 1, false, parsePrecisionBits);\n\n  // special cases\n  if (exponent == (Math.pow(2, exponentBits + 1) - 1)) {\n    if (mantissa === 0) {\n      return (sign === 0) ? Infinity : -Infinity;\n    }\n\n    return NaN;\n  }\n\n  // normale number\n  return ((sign === 0) ? 1 : -1) * Math.pow(2, exponent - bias) * mantissa;\n};\n\nvar parseInt16 = function(value) {\n  if (parseBits(value, 1) == 1) {\n    return -1 * (parseBits(value, 15, 1, true) + 1);\n  }\n\n  return parseBits(value, 15, 1);\n};\n\nvar parseInt32 = function(value) {\n  if (parseBits(value, 1) == 1) {\n    return -1 * (parseBits(value, 31, 1, true) + 1);\n  }\n\n  return parseBits(value, 31, 1);\n};\n\nvar parseFloat32 = function(value) {\n  return parseFloatFromBits(value, 23, 8);\n};\n\nvar parseFloat64 = function(value) {\n  return parseFloatFromBits(value, 52, 11);\n};\n\nvar parseNumeric = function(value) {\n  var sign = parseBits(value, 16, 32);\n  if (sign == 0xc000) {\n    return NaN;\n  }\n\n  var weight = Math.pow(10000, parseBits(value, 16, 16));\n  var result = 0;\n\n  var digits = [];\n  var ndigits = parseBits(value, 16);\n  for (var i = 0; i < ndigits; i++) {\n    result += parseBits(value, 16, 64 + (16 * i)) * weight;\n    weight /= 10000;\n  }\n\n  var scale = Math.pow(10, parseBits(value, 16, 48));\n  return ((sign === 0) ? 1 : -1) * Math.round(result * scale) / scale;\n};\n\nvar parseDate = function(isUTC, value) {\n  var sign = parseBits(value, 1);\n  var rawValue = parseBits(value, 63, 1);\n\n  // discard usecs and shift from 2000 to 1970\n  var result = new Date((((sign === 0) ? 1 : -1) * rawValue / 1000) + 946684800000);\n\n  if (!isUTC) {\n    result.setTime(result.getTime() + result.getTimezoneOffset() * 60000);\n  }\n\n  // add microseconds to the date\n  result.usec = rawValue % 1000;\n  result.getMicroSeconds = function() {\n    return this.usec;\n  };\n  result.setMicroSeconds = function(value) {\n    this.usec = value;\n  };\n  result.getUTCMicroSeconds = function() {\n    return this.usec;\n  };\n\n  return result;\n};\n\nvar parseArray = function(value) {\n  var dim = parseBits(value, 32);\n\n  var flags = parseBits(value, 32, 32);\n  var elementType = parseBits(value, 32, 64);\n\n  var offset = 96;\n  var dims = [];\n  for (var i = 0; i < dim; i++) {\n    // parse dimension\n    dims[i] = parseBits(value, 32, offset);\n    offset += 32;\n\n    // ignore lower bounds\n    offset += 32;\n  }\n\n  var parseElement = function(elementType) {\n    // parse content length\n    var length = parseBits(value, 32, offset);\n    offset += 32;\n\n    // parse null values\n    if (length == 0xffffffff) {\n      return null;\n    }\n\n    var result;\n    if ((elementType == 0x17) || (elementType == 0x14)) {\n      // int/bigint\n      result = parseBits(value, length * 8, offset);\n      offset += length * 8;\n      return result;\n    }\n    else if (elementType == 0x19) {\n      // string\n      result = value.toString(this.encoding, offset >> 3, (offset += (length << 3)) >> 3);\n      return result;\n    }\n    else {\n      console.log(\"ERROR: ElementType not implemented: \" + elementType);\n    }\n  };\n\n  var parse = function(dimension, elementType) {\n    var array = [];\n    var i;\n\n    if (dimension.length > 1) {\n      var count = dimension.shift();\n      for (i = 0; i < count; i++) {\n        array[i] = parse(dimension, elementType);\n      }\n      dimension.unshift(count);\n    }\n    else {\n      for (i = 0; i < dimension[0]; i++) {\n        array[i] = parseElement(elementType);\n      }\n    }\n\n    return array;\n  };\n\n  return parse(dims, elementType);\n};\n\nvar parseText = function(value) {\n  return value.toString('utf8');\n};\n\nvar parseBool = function(value) {\n  if(value === null) return null;\n  return (parseBits(value, 8) > 0);\n};\n\nvar init = function(register) {\n  register(21, parseInt16);\n  register(23, parseInt32);\n  register(26, parseInt32);\n  register(1700, parseNumeric);\n  register(700, parseFloat32);\n  register(701, parseFloat64);\n  register(16, parseBool);\n  register(1114, parseDate.bind(null, false));\n  register(1184, parseDate.bind(null, true));\n  register(1000, parseArray);\n  register(1007, parseArray);\n  register(1016, parseArray);\n  register(1008, parseArray);\n  register(1009, parseArray);\n  register(25, parseText);\n};\n\nmodule.exports = {\n  init: init\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-types/lib/binaryParsers.js\n// module id = 212\n// module chunks = 0","var array = require('postgres-array')\nvar ap = require('ap')\nvar arrayParser = require('./arrayParser');\nvar parseDate = require('postgres-date');\nvar parseInterval = require('postgres-interval');\nvar parseByteA = require('postgres-bytea');\n\nfunction allowNull (fn) {\n  return function nullAllowed (value) {\n    if (value === null) return value\n    return fn(value)\n  }\n}\n\nfunction parseBool (value) {\n  if (value === null) return value\n  return value === 't';\n}\n\nfunction parseBoolArray (value) {\n  if (!value) return null\n  return array.parse(value, parseBool)\n}\n\nfunction parseIntegerArray (value) {\n  if (!value) return null\n  return array.parse(value, allowNull(ap.partialRight(parseInt, 10)))\n}\n\nfunction parseBigIntegerArray (value) {\n  if (!value) return null\n  return array.parse(value, allowNull(function (entry) {\n    return parseBigInteger(entry).trim()\n  }))\n}\n\nvar parseFloatArray = function(value) {\n  if(!value) { return null; }\n  var p = arrayParser.create(value, function(entry) {\n    if(entry !== null) {\n      entry = parseFloat(entry);\n    }\n    return entry;\n  });\n\n  return p.parse();\n};\n\nvar parseStringArray = function(value) {\n  if(!value) { return null; }\n\n  var p = arrayParser.create(value);\n  return p.parse();\n};\n\nvar parseDateArray = function(value) {\n  if (!value) { return null; }\n\n  var p = arrayParser.create(value, function(entry) {\n    if (entry !== null) {\n      entry = parseDate(entry);\n    }\n    return entry;\n  });\n\n  return p.parse();\n};\n\nvar parseByteAArray = function(value) {\n  var arr = parseStringArray(value);\n  if (!arr) return arr;\n\n  return arr.map(function(element) {\n    return parseByteA(element);\n  });\n};\n\nvar parseInteger = function(value) {\n  return parseInt(value, 10);\n};\n\nvar parseBigInteger = function(value) {\n  var valStr = String(value);\n  if (/^\\d+$/.test(valStr)) { return valStr; }\n  return value;\n};\n\nvar parseJsonArray = function(value) {\n  var arr = parseStringArray(value);\n\n  if (!arr) {\n    return arr;\n  }\n\n  return arr.map(function(el) { return JSON.parse(el); });\n};\n\nvar parsePoint = function(value) {\n  if (value[0] !== '(') { return null; }\n\n  value = value.substring( 1, value.length - 1 ).split(',');\n\n  return {\n    x: parseFloat(value[0])\n  , y: parseFloat(value[1])\n  };\n};\n\nvar parseCircle = function(value) {\n  if (value[0] !== '<' && value[1] !== '(') { return null; }\n\n  var point = '(';\n  var radius = '';\n  var pointParsed = false;\n  for (var i = 2; i < value.length - 1; i++){\n    if (!pointParsed) {\n      point += value[i];\n    }\n\n    if (value[i] === ')') {\n      pointParsed = true;\n      continue;\n    } else if (!pointParsed) {\n      continue;\n    }\n\n    if (value[i] === ','){\n      continue;\n    }\n\n    radius += value[i];\n  }\n  var result = parsePoint(point);\n  result.radius = parseFloat(radius);\n\n  return result;\n};\n\nvar init = function(register) {\n  register(20, parseBigInteger); // int8\n  register(21, parseInteger); // int2\n  register(23, parseInteger); // int4\n  register(26, parseInteger); // oid\n  register(700, parseFloat); // float4/real\n  register(701, parseFloat); // float8/double\n  register(16, parseBool);\n  register(1082, parseDate); // date\n  register(1114, parseDate); // timestamp without timezone\n  register(1184, parseDate); // timestamp\n  register(600, parsePoint); // point\n  register(718, parseCircle); // circle\n  register(1000, parseBoolArray);\n  register(1001, parseByteAArray);\n  register(1005, parseIntegerArray); // _int2\n  register(1007, parseIntegerArray); // _int4\n  register(1028, parseIntegerArray); // oid[]\n  register(1016, parseBigIntegerArray); // _int8\n  register(1021, parseFloatArray); // _float4\n  register(1022, parseFloatArray); // _float8\n  register(1231, parseFloatArray); // _numeric\n  register(1014, parseStringArray); //char\n  register(1015, parseStringArray); //varchar\n  register(1008, parseStringArray);\n  register(1009, parseStringArray);\n  register(1115, parseDateArray); // timestamp without time zone[]\n  register(1182, parseDateArray); // _date\n  register(1185, parseDateArray); // timestamp with time zone[]\n  register(1186, parseInterval);\n  register(17, parseByteA);\n  register(114, JSON.parse.bind(JSON)); // json\n  register(3802, JSON.parse.bind(JSON)); // jsonb\n  register(199, parseJsonArray); // json[]\n  register(3807, parseJsonArray); // jsonb[]\n  register(2951, parseStringArray); // uuid[]\n  register(791, parseStringArray); // money[]\n  register(1183, parseStringArray); // time[]\n};\n\nmodule.exports = {\n  init: init\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-types/lib/textParsers.js\n// module id = 213\n// module chunks = 0","'use strict'\n\nmodule.exports = function parseBytea (input) {\n  if (/^\\\\x/.test(input)) {\n    // new 'hex' style response (pg >9.0)\n    return new Buffer(input.substr(2), 'hex')\n  }\n  var output = ''\n  var i = 0\n  while (i < input.length) {\n    if (input[i] !== '\\\\') {\n      output += input[i]\n      ++i\n    } else {\n      if (/[0-7]{3}/.test(input.substr(i + 1, 3))) {\n        output += String.fromCharCode(parseInt(input.substr(i + 1, 3), 8))\n        i += 4\n      } else {\n        var backslashes = 1\n        while (i + backslashes < input.length && input[i + backslashes] === '\\\\') {\n          backslashes++\n        }\n        for (var k = 0; k < Math.floor(backslashes / 2); ++k) {\n          output += '\\\\'\n        }\n        i += Math.floor(backslashes / 2) * 2\n      }\n    }\n  }\n  return new Buffer(output, 'binary')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/postgres-bytea/index.js\n// module id = 214\n// module chunks = 0","'use strict'\n\nvar DATE_TIME = /(\\d{1,})-(\\d{2})-(\\d{2}) (\\d{2}):(\\d{2}):(\\d{2})(\\.\\d{1,})?/\nvar DATE = /^(\\d{1,})-(\\d{2})-(\\d{2})$/\nvar TIME_ZONE = /([Z+-])(\\d{2})?:?(\\d{2})?:?(\\d{2})?/\nvar BC = /BC$/\nvar INFINITY = /^-?infinity$/\n\nmodule.exports = function parseDate (isoDate) {\n  if (INFINITY.test(isoDate)) {\n    // Capitalize to Infinity before passing to Number\n    return Number(isoDate.replace('i', 'I'))\n  }\n  var matches = DATE_TIME.exec(isoDate)\n\n  if (!matches) {\n    // Force YYYY-MM-DD dates to be parsed as local time\n    return DATE.test(isoDate) ?\n      getDate(isoDate) :\n      null\n  }\n\n  var isBC = BC.test(isoDate)\n  var year = parseInt(matches[1], 10)\n  var isFirstCentury = year > 0 && year < 100\n  year = (isBC ? '-' : '') + year\n\n  var month = parseInt(matches[2], 10) - 1\n  var day = matches[3]\n  var hour = parseInt(matches[4], 10)\n  var minute = parseInt(matches[5], 10)\n  var second = parseInt(matches[6], 10)\n\n  var ms = matches[7]\n  ms = ms ? 1000 * parseFloat(ms) : 0\n\n  var date\n  var offset = timeZoneOffset(isoDate)\n  if (offset != null) {\n    var utc = Date.UTC(year, month, day, hour, minute, second, ms)\n    date = new Date(utc - offset)\n  } else {\n    date = new Date(year, month, day, hour, minute, second, ms)\n  }\n\n  if (isFirstCentury) {\n    date.setUTCFullYear(year)\n  }\n\n  return date\n}\n\nfunction getDate (isoDate) {\n  var matches = DATE.exec(isoDate)\n  var year = parseInt(matches[1], 10)\n  var month = parseInt(matches[2], 10) - 1\n  var day = matches[3]\n  // YYYY-MM-DD will be parsed as local time\n  var date = new Date(year, month, day)\n  date.setFullYear(year)\n  return date\n}\n\n// match timezones:\n// Z (UTC)\n// -05\n// +06:30\nfunction timeZoneOffset (isoDate) {\n  var zone = TIME_ZONE.exec(isoDate.split(' ')[1])\n  if (!zone) return\n  var type = zone[1]\n\n  if (type === 'Z') {\n    return 0\n  }\n  var sign = type === '-' ? -1 : 1\n  var offset = parseInt(zone[2], 10) * 3600 +\n    parseInt(zone[3] || 0, 10) * 60 +\n    parseInt(zone[4] || 0, 10)\n\n  return offset * sign * 1000\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/postgres-date/index.js\n// module id = 215\n// module chunks = 0","'use strict'\n\nvar extend = require('xtend/mutable')\n\nmodule.exports = PostgresInterval\n\nfunction PostgresInterval (raw) {\n  if (!(this instanceof PostgresInterval)) {\n    return new PostgresInterval(raw)\n  }\n  extend(this, parse(raw))\n}\nvar properties = ['seconds', 'minutes', 'hours', 'days', 'months', 'years']\nPostgresInterval.prototype.toPostgres = function () {\n  var filtered = properties.filter(this.hasOwnProperty, this)\n  if (filtered.length === 0) return '0'\n  return filtered\n    .map(function (property) {\n      return this[property] + ' ' + property\n    }, this)\n    .join(' ')\n}\n\nvar NUMBER = '([+-]?\\\\d+)'\nvar YEAR = NUMBER + '\\\\s+years?'\nvar MONTH = NUMBER + '\\\\s+mons?'\nvar DAY = NUMBER + '\\\\s+days?'\nvar TIME = '([+-])?([\\\\d]*):(\\\\d\\\\d):(\\\\d\\\\d):?(\\\\d\\\\d\\\\d)?'\nvar INTERVAL = new RegExp([YEAR, MONTH, DAY, TIME].map(function (regexString) {\n  return '(' + regexString + ')?'\n})\n.join('\\\\s*'))\n\n// Positions of values in regex match\nvar positions = {\n  years: 2,\n  months: 4,\n  days: 6,\n  hours: 9,\n  minutes: 10,\n  seconds: 11,\n  milliseconds: 12\n}\n// We can use negative time\nvar negatives = ['hours', 'minutes', 'seconds']\n\nfunction parse (interval) {\n  if (!interval) return {}\n  var matches = INTERVAL.exec(interval)\n  var isNegative = matches[8] === '-'\n  return Object.keys(positions)\n    .reduce(function (parsed, property) {\n      var position = positions[property]\n      var value = matches[position]\n      // no empty string\n      if (!value) return parsed\n      value = parseInt(value, 10)\n      // no zeros\n      if (!value) return parsed\n      if (isNegative && ~negatives.indexOf(property)) {\n        value *= -1\n      }\n      parsed[property] = value\n      return parsed\n    }, {})\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/postgres-interval/index.js\n// module id = 216\n// module chunks = 0","'use strict';\r\n\r\n/**\r\n * @class PromiseAdapter\r\n * @description\r\n * Adapter for the primary promise operations.\r\n * \r\n * Provides compatibility with promise libraries that cannot be recognized automatically,\r\n * via functions that implement the primary operations with promises:\r\n *\r\n *  - construct a new promise with a callback function\r\n *  - resolve a promise with some result data\r\n *  - reject a promise with a reason\r\n *\r\n * #### Example\r\n *\r\n * Below is an example of setting up a [client-side]{@tutorial client} adapter for AngularJS $q.\r\n *\r\n * ```js\r\n * var spexLib = require('spex'); // or include client-side spex.js\r\n *\r\n * var adapter = new spexLib.PromiseAdapter(\r\n *    function (cb) {\r\n *        return $q(cb); // creating a new promise;\r\n *    }, function (data) {\r\n *        return $q.when(data); // resolving a promise;\r\n *    }, function (reason) {\r\n *        return $q.reject(reason); // rejecting a promise;\r\n *    });\r\n *\r\n * var spex = spexLib(adapter);\r\n * ```\r\n * Please note that AngularJS 1.4.1 or later no longer requires a promise adapter.\r\n *\r\n * @param {Function} create\r\n * A function that takes a callback parameter and returns a new promise object.\r\n * The callback parameter is expected to be `function(resolve, reject)`.\r\n *\r\n * Passing in anything other than a function will throw `Adapter requires a function to create a promise.`\r\n *\r\n * @param {Function} resolve\r\n * A function that takes an optional data parameter and resolves a promise with it.\r\n *\r\n * Passing in anything other than a function will throw `Adapter requires a function to resolve a promise.`\r\n *\r\n * @param {Function} reject\r\n * A function that takes an optional error parameter and rejects a promise with it.\r\n *\r\n * Passing in anything other than a function will throw `Adapter requires a function to reject a promise.`\r\n *\r\n * @see {@tutorial client}\r\n * \r\n * @returns {PromiseAdapter}\r\n */\r\nfunction PromiseAdapter(create, resolve, reject) {\r\n\r\n    if (!(this instanceof PromiseAdapter)) {\r\n        return new PromiseAdapter(create, resolve, reject);\r\n    }\r\n\r\n    this.create = create;\r\n    this.resolve = resolve;\r\n    this.reject = reject;\r\n\r\n    if (typeof create !== 'function') {\r\n        throw new TypeError('Adapter requires a function to create a promise.');\r\n    }\r\n\r\n    if (typeof resolve !== 'function') {\r\n        throw new TypeError('Adapter requires a function to resolve a promise.');\r\n    }\r\n\r\n    if (typeof reject !== 'function') {\r\n        throw new TypeError('Adapter requires a function to reject a promise.');\r\n    }\r\n}\r\n\r\nmodule.exports = PromiseAdapter;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/spex/lib/adapter.js\n// module id = 217\n// module chunks = 0","'use strict';\r\n\r\nvar $npm = {\r\n    BatchError: require('./batch'),\r\n    PageError: require('./page'),\r\n    SequenceError: require('./sequence')\r\n};\r\n\r\n/**\r\n * @namespace errors\r\n * @description\r\n * Namespace for all custom error types supported by the library.\r\n *\r\n * In addition to the custom error type used by each method (regular error), they can also reject with\r\n * {@link external:TypeError TypeError} when receiving invalid input parameters.\r\n *\r\n * @property {function} BatchError\r\n * {@link errors.BatchError BatchError} interface.\r\n *\r\n * Represents regular errors that can be reported by method {@link batch}.\r\n *\r\n * @property {function} PageError\r\n * {@link errors.PageError PageError} interface.\r\n *\r\n * Represents regular errors that can be reported by method {@link page}.\r\n *\r\n * @property {function} SequenceError\r\n * {@link errors.SequenceError SequenceError} interface.\r\n *\r\n * Represents regular errors that can be reported by method {@link sequence}.\r\n *\r\n */\r\nmodule.exports = {\r\n    BatchError: $npm.BatchError,\r\n    PageError: $npm.PageError,\r\n    SequenceError: $npm.SequenceError\r\n};\r\n\r\nObject.freeze(module.exports);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/spex/lib/errors/index.js\n// module id = 218\n// module chunks = 0","'use strict';\r\n\r\nvar BatchError = require('../errors/batch');\r\n\r\n/**\r\n * @method batch\r\n * @description\r\n * **Alternative Syntax:**\r\n * `batch(values, {cb})` &#8658; `Promise`\r\n *\r\n * Settles (resolves or rejects) every [mixed value]{@tutorial mixed} in the input array.\r\n *\r\n * The method resolves with an array of results, the same as the standard $[promise.all],\r\n * while providing comprehensive error details in case of a reject, in the form of\r\n * type {@link errors.BatchError BatchError}.\r\n *\r\n * @param {Array} values\r\n * Array of [mixed values]{@tutorial mixed} (it can be empty), to be resolved asynchronously, in no particular order.\r\n *\r\n * Passing in anything other than an array will reject with {@link external:TypeError TypeError} =\r\n * `Method 'batch' requires an array of values.`\r\n *\r\n * @param {Function|generator} [cb]\r\n * Optional callback (or generator) to receive the result for each settled value.\r\n *\r\n * Callback Parameters:\r\n *  - `index` = index of the value in the source array\r\n *  - `success` - indicates whether the value was resolved (`true`), or rejected (`false`)\r\n *  - `result` = resolved data, if `success`=`true`, or else the rejection reason\r\n *  - `delay` = number of milliseconds since the last call (`undefined` when `index=0`)\r\n *\r\n * The function inherits `this` context from the calling method.\r\n *\r\n * It can optionally return a promise to indicate that notifications are handled asynchronously.\r\n * And if the returned promise resolves, it signals a successful handling, while any resolved\r\n * data is ignored.\r\n *\r\n * If the function returns a rejected promise or throws an error, the entire method rejects\r\n * with {@link errors.BatchError BatchError} where the corresponding value in property `data`\r\n * is set to `{success, result, origin}`:\r\n *  - `success` = `false`\r\n *  - `result` = the rejection reason or the error thrown by the notification callback\r\n *  - `origin` = the original data passed into the callback as object `{success, result}`\r\n *\r\n * @returns {external:Promise}\r\n *\r\n * The method resolves with an array of individual resolved results, the same as the standard $[promise.all].\r\n * In addition, the array is extended with a hidden read-only property `duration` - number of milliseconds\r\n * spent resolving all the data.\r\n *\r\n * The method rejects with {@link errors.BatchError BatchError} when any of the following occurs:\r\n *  - one or more values rejected or threw an error while being resolved as a [mixed value]{@tutorial mixed}\r\n *  - notification callback `cb` returned a rejected promise or threw an error\r\n *\r\n */\r\nfunction batch(values, cb, config) {\r\n\r\n    var $p = config.promise, $utils = config.utils;\r\n\r\n    if (!Array.isArray(values)) {\r\n        return $p.reject(new TypeError(\"Method 'batch' requires an array of values.\"));\r\n    }\r\n\r\n    if (!values.length) {\r\n        var empty = [];\r\n        $utils.extend(empty, 'duration', 0);\r\n        return $p.resolve(empty);\r\n    }\r\n\r\n    cb = $utils.wrap(cb);\r\n    var self = this, start = Date.now();\r\n    return $p(function (resolve, reject) {\r\n        var cbTime, errors = [], remaining = values.length,\r\n            result = new Array(remaining);\r\n        values.forEach(function (item, i) {\r\n            $utils.resolve.call(self, item, null, function (data) {\r\n                result[i] = data;\r\n                step(i, true, data);\r\n            }, function (reason) {\r\n                result[i] = {success: false, result: reason};\r\n                errors.push(i);\r\n                step(i, false, reason);\r\n            });\r\n        });\r\n        function step(idx, pass, data) {\r\n            if (cb) {\r\n                var cbResult, cbNow = Date.now(),\r\n                    cbDelay = idx ? (cbNow - cbTime) : undefined;\r\n                cbTime = cbNow;\r\n                try {\r\n                    cbResult = cb.call(self, idx, pass, data, cbDelay);\r\n                } catch (e) {\r\n                    setError(e);\r\n                }\r\n                if ($utils.isPromise(cbResult)) {\r\n                    cbResult\r\n                        .then(check)\r\n                        .catch(function (error) {\r\n                            setError(error);\r\n                            check();\r\n                        });\r\n                } else {\r\n                    check();\r\n                }\r\n            } else {\r\n                check();\r\n            }\r\n\r\n            function setError(e) {\r\n                var r = pass ? {success: false} : result[idx];\r\n                if (pass) {\r\n                    result[idx] = r;\r\n                    errors.push(idx);\r\n                }\r\n                r.result = e;\r\n                r.origin = {success: pass, result: data}\r\n            }\r\n\r\n            function check() {\r\n                if (!--remaining) {\r\n                    if (errors.length) {\r\n                        errors.sort();\r\n                        if (errors.length < result.length) {\r\n                            for (var i = 0, k = 0; i < result.length; i++) {\r\n                                if (i === errors[k]) {\r\n                                    k++;\r\n                                } else {\r\n                                    result[i] = {success: true, result: result[i]};\r\n                                }\r\n                            }\r\n                        }\r\n                        reject(new BatchError(result, errors, Date.now() - start));\r\n                    } else {\r\n                        $utils.extend(result, 'duration', Date.now() - start);\r\n                        resolve(result);\r\n                    }\r\n                }\r\n                return null; // this dummy return is just to prevent Bluebird warnings;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nmodule.exports = function (config) {\r\n    return function (values, cb) {\r\n        if (cb && typeof cb === 'object') {\r\n            return batch.call(this, values, cb.cb, config);\r\n        } else {\r\n            return batch.call(this, values, cb, config);\r\n        }\r\n    };\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/spex/lib/ext/batch.js\n// module id = 219\n// module chunks = 0","'use strict';\r\n\r\nvar PageError = require('../errors/page');\r\n\r\n/**\r\n * @method page\r\n * @description\r\n * **Alternative Syntax:**\r\n * `page(source, {dest, limit})` &#8658; `Promise`\r\n *\r\n * Resolves a dynamic sequence of pages/arrays with [mixed values]{@tutorial mixed}.\r\n *\r\n * The method acquires pages (arrays of [mixed values]{@tutorial mixed}) from the `source` function, one by one,\r\n * and resolves each page as a {@link batch}, till no more pages left or an error/reject occurs.\r\n *\r\n * @param {Function|generator} source\r\n * Expected to return a [mixed value]{@tutorial mixed} that resolves with the next page of data (array of [mixed values]{@tutorial mixed}).\r\n * Returning or resolving with `undefined` ends the sequence, and the method resolves.\r\n *\r\n * The function inherits `this` context from the calling method.\r\n *\r\n * Parameters:\r\n *  - `index` = index of the page being requested\r\n *  - `data` = previously returned page, resolved as a {@link batch} (`undefined` when `index=0`)\r\n *  - `delay` = number of milliseconds since the last call (`undefined` when `index=0`)\r\n *\r\n * If the function throws an error or returns a rejected promise, the method rejects with\r\n * {@link errors.PageError PageError}, which will have property `source` set.\r\n *\r\n * And if the function returns or resolves with anything other than an array or `undefined`,\r\n * the method rejects with the same {@link errors.PageError PageError}, but with `error` set to\r\n * `Unexpected data returned from the source.`\r\n *\r\n * Passing in anything other than a function will reject with {@link external:TypeError TypeError} = `Parameter 'source' must be a function.`\r\n *\r\n * @param {Function|generator} [dest]\r\n * Optional destination function (or generator), to receive a resolved {@link batch} of data\r\n * for each page, process it and respond as required.\r\n *\r\n * Parameters:\r\n *  - `index` = page index in the sequence\r\n *  - `data` = page data resolved as a {@link batch}\r\n *  - `delay` = number of milliseconds since the last call (`undefined` when `index=0`)\r\n *\r\n * The function inherits `this` context from the calling method.\r\n *\r\n * It can optionally return a promise object, if notifications are handled asynchronously.\r\n * And if a promise is returned, the method will not request another page from the `source`\r\n * function until the promise has been resolved.\r\n *\r\n * If the function throws an error or returns a rejected promise, the sequence terminates,\r\n * and the method rejects with {@link errors.PageError PageError}, which will have property `dest` set.\r\n *\r\n * @param {Number} [limit=0]\r\n * Limits the maximum number of pages to be requested from the `source`. If the value is greater\r\n * than 0, the method will successfully resolve once the specified limit has been reached.\r\n *\r\n * When `limit` isn't specified (default), the sequence is unlimited, and it will continue\r\n * till one of the following occurs:\r\n *  - `source` returns or resolves with `undefined` or an invalid value (non-array)\r\n *  - either `source` or `dest` functions throw an error or return a rejected promise\r\n *\r\n * @returns {external:Promise}\r\n *\r\n * When successful, the method resolves with object `{pages, total, duration}`:\r\n *  - `pages` = number of pages resolved\r\n *  - `total` = the sum of all page sizes (total number of values resolved)\r\n *  - `duration` = number of milliseconds consumed by the method\r\n *\r\n * When the method fails, it rejects with {@link errors.PageError PageError}.\r\n *\r\n */\r\nfunction page(source, dest, limit, config) {\r\n\r\n    var $p = config.promise, $spex = config.spex, $utils = config.utils;\r\n\r\n    if (typeof source !== 'function') {\r\n        return $p.reject(new TypeError(\"Parameter 'source' must be a function.\"));\r\n    }\r\n\r\n    limit = (limit > 0) ? parseInt(limit) : 0;\r\n    source = $utils.wrap(source);\r\n    dest = $utils.wrap(dest);\r\n\r\n    var self = this, request, srcTime, destTime, start = Date.now(), total = 0;\r\n\r\n    return $p(function (resolve, reject) {\r\n\r\n        function loop(idx) {\r\n            var srcNow = Date.now(),\r\n                srcDelay = idx ? (srcNow - srcTime) : undefined;\r\n            srcTime = srcNow;\r\n            $utils.resolve.call(self, source, [idx, request, srcDelay], function (value) {\r\n                if (value === undefined) {\r\n                    success();\r\n                } else {\r\n                    if (value instanceof Array) {\r\n                        $spex.batch(value)\r\n                            .then(function (data) {\r\n                                request = data;\r\n                                total += data.length;\r\n                                if (dest) {\r\n                                    var destResult, destNow = Date.now(),\r\n                                        destDelay = idx ? (destNow - destTime) : undefined;\r\n                                    destTime = destNow;\r\n                                    try {\r\n                                        destResult = dest.call(self, idx, data, destDelay);\r\n                                    } catch (err) {\r\n                                        fail({\r\n                                            error: err,\r\n                                            dest: data\r\n                                        }, 4, dest.name);\r\n                                        return;\r\n                                    }\r\n                                    if ($utils.isPromise(destResult)) {\r\n                                        destResult\r\n                                            .then(next)\r\n                                            .catch(function (error) {\r\n                                                fail({\r\n                                                    error: error,\r\n                                                    dest: data\r\n                                                }, 3, dest.name);\r\n                                            });\r\n                                    } else {\r\n                                        next();\r\n                                    }\r\n                                } else {\r\n                                    next();\r\n                                }\r\n                                return null; // this dummy return is just to prevent Bluebird warnings;\r\n                            })\r\n                            .catch(function (error) {\r\n                                fail({\r\n                                    error: error\r\n                                }, 0);\r\n                            });\r\n                    } else {\r\n                        fail({\r\n                            error: new Error(\"Unexpected data returned from the source.\"),\r\n                            source: request\r\n                        }, 5, source.name);\r\n                    }\r\n                }\r\n            }, function (reason, isRej) {\r\n                fail({\r\n                    error: reason,\r\n                    source: request\r\n                }, isRej ? 1 : 2, source.name);\r\n            });\r\n\r\n            function next() {\r\n                if (limit === ++idx) {\r\n                    success();\r\n                } else {\r\n                    loop(idx);\r\n                }\r\n                return null; // this dummy return is just to prevent Bluebird warnings;\r\n            }\r\n\r\n            function success() {\r\n                resolve({\r\n                    pages: idx,\r\n                    total: total,\r\n                    duration: Date.now() - start\r\n                });\r\n            }\r\n\r\n            function fail(reason, code, cbName) {\r\n                reason.index = idx;\r\n                reject(new PageError(reason, code, cbName, Date.now() - start));\r\n            }\r\n        }\r\n\r\n        loop(0);\r\n    });\r\n}\r\n\r\nmodule.exports = function (config) {\r\n    return function (source, dest, limit) {\r\n        if (dest && typeof dest === 'object') {\r\n            return page.call(this, source, dest.dest, dest.limit, config);\r\n        } else {\r\n            return page.call(this, source, dest, limit, config);\r\n        }\r\n    };\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/spex/lib/ext/page.js\n// module id = 220\n// module chunks = 0","'use strict';\r\n\r\nvar SequenceError = require('../errors/sequence');\r\n\r\n/**\r\n * @method sequence\r\n * @description\r\n * **Alternative Syntax:**\r\n * `sequence(source, {dest, limit, track})` &#8658; `Promise`\r\n *\r\n * Resolves a dynamic sequence of [mixed values]{@tutorial mixed}.\r\n *\r\n * The method acquires [mixed values]{@tutorial mixed} from the `source` function, one at a time, and resolves them,\r\n * till either no more values left in the sequence or an error/reject occurs.\r\n *\r\n * It supports both [linked and detached sequencing]{@tutorial sequencing}.\r\n *\r\n * @param {Function|generator} source\r\n * Expected to return the next [mixed value]{@tutorial mixed} to be resolved. Returning or resolving\r\n * with `undefined` ends the sequence, and the method resolves.\r\n *\r\n * Parameters:\r\n *  - `index` = current request index in the sequence\r\n *  - `data` = resolved data from the previous call (`undefined` when `index=0`)\r\n *  - `delay` = number of milliseconds since the last call (`undefined` when `index=0`)\r\n *\r\n * The function inherits `this` context from the calling method.\r\n *\r\n * If the function throws an error or returns a rejected promise, the sequence terminates,\r\n * and the method rejects with {@link errors.SequenceError SequenceError}, which will have property `source` set.\r\n *\r\n * Passing in anything other than a function will reject with {@link external:TypeError TypeError} = `Parameter 'source' must be a function.`\r\n *\r\n * @param {Function|generator} [dest]\r\n * Optional destination function (or generator), to receive resolved data for each index,\r\n * process it and respond as required.\r\n *\r\n * Parameters:\r\n *  - `index` = index of the resolved data in the sequence\r\n *  - `data` = the data resolved\r\n *  - `delay` = number of milliseconds since the last call (`undefined` when `index=0`)\r\n *\r\n * The function inherits `this` context from the calling method.\r\n *\r\n * It can optionally return a promise object, if data processing is done asynchronously.\r\n * If a promise is returned, the method will not request another value from the `source` function,\r\n * until the promise has been resolved (the resolved value is ignored).\r\n *\r\n * If the function throws an error or returns a rejected promise, the sequence terminates,\r\n * and the method rejects with {@link errors.SequenceError SequenceError}, which will have property `dest` set.\r\n *\r\n * @param {Number} [limit=0]\r\n * Limits the maximum size of the sequence. If the value is greater than 0, the method will\r\n * successfully resolve once the specified limit has been reached.\r\n *\r\n * When `limit` isn't specified (default), the sequence is unlimited, and it will continue\r\n * till one of the following occurs:\r\n *  - `source` either returns or resolves with `undefined`\r\n *  - either `source` or `dest` functions throw an error or return a rejected promise\r\n *\r\n * @param {Boolean} [track=false]\r\n * Changes the type of data to be resolved by this method. By default, it is `false`\r\n * (see the return result). When set to be `true`, the method tracks/collects all resolved data\r\n * into an array internally, and resolves with that array once the method has finished successfully.\r\n *\r\n * It must be used with caution, as to the size of the sequence, because accumulating data for\r\n * a very large sequence can result in consuming too much memory.\r\n *\r\n * @returns {external:Promise}\r\n *\r\n * When successful, the resolved data depends on parameter `track`. When `track` is `false`\r\n * (default), the method resolves with object `{total, duration}`:\r\n *  - `total` = number of values resolved by the sequence\r\n *  - `duration` = number of milliseconds consumed by the method\r\n *\r\n * When `track` is `true`, the method resolves with an array of all the data that has been resolved,\r\n * the same way that the standard $[promise.all] resolves. In addition, the array comes extended with\r\n * a hidden read-only property `duration` - number of milliseconds consumed by the method.\r\n *\r\n * When the method fails, it rejects with {@link errors.SequenceError SequenceError}.\r\n */\r\nfunction sequence(source, dest, limit, track, config) {\r\n\r\n    var $p = config.promise, $utils = config.utils;\r\n\r\n    if (typeof source !== 'function') {\r\n        return $p.reject(new TypeError(\"Parameter 'source' must be a function.\"));\r\n    }\r\n\r\n    limit = (limit > 0) ? parseInt(limit) : 0;\r\n    source = $utils.wrap(source);\r\n    dest = $utils.wrap(dest);\r\n\r\n    var self = this, data, srcTime, destTime, result = [], start = Date.now();\r\n\r\n    return $p(function (resolve, reject) {\r\n\r\n        function loop(idx) {\r\n            var srcNow = Date.now(),\r\n                srcDelay = idx ? (srcNow - srcTime) : undefined;\r\n            srcTime = srcNow;\r\n            $utils.resolve.call(self, source, [idx, data, srcDelay], function (value, delayed) {\r\n                data = value;\r\n                if (data === undefined) {\r\n                    success();\r\n                } else {\r\n                    if (track) {\r\n                        result.push(data);\r\n                    }\r\n                    if (dest) {\r\n                        var destResult, destNow = Date.now(),\r\n                            destDelay = idx ? (destNow - destTime) : undefined;\r\n                        destTime = destNow;\r\n                        try {\r\n                            destResult = dest.call(self, idx, data, destDelay);\r\n                        } catch (e) {\r\n                            fail({\r\n                                error: e,\r\n                                dest: data\r\n                            }, 3, dest.name);\r\n                            return;\r\n                        }\r\n                        if ($utils.isPromise(destResult)) {\r\n                            destResult\r\n                                .then(function () {\r\n                                    next(true);\r\n                                    return null; // this dummy return is just to prevent Bluebird warnings;\r\n                                })\r\n                                .catch(function (error) {\r\n                                    fail({\r\n                                        error: error,\r\n                                        dest: data\r\n                                    }, 2, dest.name);\r\n                                });\r\n                        } else {\r\n                            next(delayed);\r\n                        }\r\n                    } else {\r\n                        next(delayed);\r\n                    }\r\n                }\r\n            }, function (reason, isRej) {\r\n                fail({\r\n                    error: reason,\r\n                    source: data\r\n                }, isRej ? 0 : 1, source.name);\r\n            });\r\n\r\n            function next(delayed) {\r\n                if (limit === ++idx) {\r\n                    success();\r\n                } else {\r\n                    if (delayed) {\r\n                        loop(idx);\r\n                    } else {\r\n                        $p.resolve()\r\n                            .then(function () {\r\n                                loop(idx);\r\n                                return null; // this dummy return is just to prevent Bluebird warnings;\r\n                            });\r\n                    }\r\n                }\r\n            }\r\n\r\n            function success() {\r\n                var length = Date.now() - start;\r\n                if (track) {\r\n                    $utils.extend(result, 'duration', length);\r\n                } else {\r\n                    result = {\r\n                        total: idx,\r\n                        duration: length\r\n                    }\r\n                }\r\n                resolve(result);\r\n            }\r\n\r\n            function fail(reason, code, cbName) {\r\n                reason.index = idx;\r\n                reject(new SequenceError(reason, code, cbName, Date.now() - start));\r\n            }\r\n        }\r\n\r\n        loop(0);\r\n    });\r\n}\r\n\r\nmodule.exports = function (config) {\r\n    return function (source, dest, limit, track) {\r\n        if (dest && typeof dest === 'object') {\r\n            return sequence.call(this, source, dest.dest, dest.limit, dest.track, config);\r\n        } else {\r\n            return sequence.call(this, source, dest, limit, track, config);\r\n        }\r\n    };\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/spex/lib/ext/sequence.js\n// module id = 221\n// module chunks = 0","'use strict';\r\n\r\nvar $npm = {\r\n    read: require('./read')\r\n};\r\n\r\n/**\r\n * @namespace stream\r\n * @description\r\n * Namespace with methods that implement stream operations, and {@link stream.read read} is the only method currently supported.\r\n *\r\n * **Synchronous Stream Processing**\r\n *\r\n * ```javascript\r\n * var stream = require('spex')(Promise).stream;\r\n * var fs = require('fs');\r\n *\r\n * var rs = fs.createReadStream('values.txt');\r\n *\r\n * function receiver(index, data, delay) {\r\n *    console.log(\"RECEIVED:\", index, data, delay);\r\n * }\r\n *\r\n * stream.read(rs, receiver)\r\n * .then(function (data) {\r\n *        console.log(\"DATA:\", data);\r\n *    })\r\n * .catch(function (error) {\r\n *        console.log(\"ERROR:\", error);\r\n *    });\r\n * ```\r\n *\r\n * **Asynchronous Stream Processing**\r\n *\r\n * ```javascript\r\n * var stream = require('spex')(Promise).stream;\r\n * var fs = require('fs');\r\n *\r\n * var rs = fs.createReadStream('values.txt');\r\n *\r\n * function receiver(index, data, delay) {\r\n *    return new Promise(function (resolve) {\r\n *        console.log(\"RECEIVED:\", index, data, delay);\r\n *        resolve();\r\n *    });\r\n * }\r\n *\r\n * stream.read(rs, receiver)\r\n * .then(function (data) {\r\n *        console.log(\"DATA:\", data);\r\n *    })\r\n * .catch(function (error) {\r\n *        console.log(\"ERROR:\", error);\r\n *    });\r\n * ```\r\n *\r\n * @property {function} stream.read\r\n * Consumes and processes data from a $[Readable] stream.\r\n *\r\n */\r\nmodule.exports = function (config) {\r\n    var res = {\r\n        read: $npm.read(config)\r\n    };\r\n    Object.freeze(res);\r\n    return res;\r\n};\r\n\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/spex/lib/ext/stream/index.js\n// module id = 222\n// module chunks = 0","'use strict';\r\n\r\n/**\r\n * @method stream.read\r\n * @description\r\n * **Alternative Syntax:**\r\n * `read(stream, receiver, {closable, readSize})` &#8658; `Promise`\r\n *\r\n * Consumes and processes data from a $[Readable] stream.\r\n *\r\n * It reads the entire stream, using **paused mode**, with support for both synchronous\r\n * and asynchronous data processing.\r\n *\r\n * **NOTE:** Once the method has finished, the onus is on the caller to release the stream\r\n * according to its protocol.\r\n *\r\n * @param {Object} stream\r\n * $[Readable] stream object.\r\n *\r\n * Passing in anything else will throw `Readable stream is required.`\r\n *\r\n * @param {Function|generator} receiver\r\n * Data processing callback (or generator).\r\n *\r\n * Passing in anything else will throw `Invalid stream receiver.`\r\n *\r\n * Parameters:\r\n *  - `index` = index of the call made to the function\r\n *  - `data` = array of all data reads from the stream's buffer\r\n *  - `delay` = number of milliseconds since the last call (`undefined` when `index=0`)\r\n *\r\n * The function is called with the same `this` context as the calling method.\r\n *\r\n * It can optionally return a promise object, if data processing is asynchronous.\r\n * And if a promise is returned, the method will not read data from the stream again,\r\n * until the promise has been resolved.\r\n *\r\n * If the function throws an error or returns a rejected promise, the method rejects\r\n * with the same error / rejection reason.\r\n *\r\n * @param {Boolean} [closable=false]\r\n * Instructs the method to resolve on event `close` supported by the stream,\r\n * as opposed to event `end` that's used by default.\r\n *\r\n * @param {Number} [readSize]\r\n *\r\n * When the value is greater than 0, it sets the read size from the stream's buffer\r\n * when the next data is available. By default, the method uses as few reads as possible\r\n * to get all the data currently available in the buffer.\r\n *\r\n * @returns {external:Promise}\r\n *\r\n * When finished successfully, resolves with object `{calls, reads, length, duration}`:\r\n *  - `calls` = number of calls made into the `receiver`\r\n *  - `reads` = number of successful reads from the stream\r\n *  - `length` = total length for all the data reads from the stream\r\n *  - `duration` = number of milliseconds consumed by the method\r\n *\r\n * When it fails, the method rejects with the error/reject specified,\r\n * which can happen as a result of:\r\n *  - event `error` emitted by the stream\r\n *  - receiver throws an error or returns a rejected promise\r\n */\r\nfunction read(stream, receiver, closable, readSize, config) {\r\n\r\n    var $p = config.promise, $utils = config.utils;\r\n\r\n    if (!$utils.isReadableStream(stream)) {\r\n        return $p.reject(new TypeError(\"Readable stream is required.\"));\r\n    }\r\n\r\n    if (typeof receiver !== 'function') {\r\n        return $p.reject(new TypeError(\"Invalid stream receiver.\"));\r\n    }\r\n\r\n    readSize = (readSize > 0) ? parseInt(readSize) : null;\r\n    receiver = $utils.wrap(receiver);\r\n\r\n    var self = this, reads = 0, length = 0, start = Date.now(),\r\n        index = 0, cbTime, ready, waiting, stop;\r\n\r\n    return $p(function (resolve, reject) {\r\n\r\n        function onReadable() {\r\n            ready = true;\r\n            process();\r\n        }\r\n\r\n        function onEnd() {\r\n            if (!closable) {\r\n                success();\r\n            }\r\n        }\r\n\r\n        function onClose() {\r\n            success();\r\n        }\r\n\r\n        function onError(error) {\r\n            fail(error);\r\n        }\r\n\r\n        stream.on('readable', onReadable);\r\n        stream.on('end', onEnd);\r\n        stream.on('close', onClose);\r\n        stream.on('error', onError);\r\n\r\n        function process() {\r\n            if (!ready || stop || waiting) {\r\n                return;\r\n            }\r\n            ready = false;\r\n            waiting = true;\r\n            var page, data = [];\r\n            do {\r\n                page = stream.read(readSize);\r\n                if (page) {\r\n                    data.push(page);\r\n                    // istanbul ignore next: requires a unique stream that\r\n                    // creates objects without property `length` defined.\r\n                    length += page.length || 0;\r\n                    reads++;\r\n                }\r\n            } while (page);\r\n\r\n            if (!data.length) {\r\n                waiting = false;\r\n                return;\r\n            }\r\n\r\n            var result, cbNow = Date.now(),\r\n                cbDelay = index ? (cbNow - cbTime) : undefined;\r\n            cbTime = cbNow;\r\n            try {\r\n                result = receiver.call(self, index++, data, cbDelay);\r\n            } catch (e) {\r\n                fail(e);\r\n                return;\r\n            }\r\n\r\n            if ($utils.isPromise(result)) {\r\n                result\r\n                    .then(function () {\r\n                        waiting = false;\r\n                        process();\r\n                        return null; // this dummy return is just to prevent Bluebird warnings;\r\n                    })\r\n                    .catch(function (error) {\r\n                        fail(error);\r\n                    });\r\n            } else {\r\n                waiting = false;\r\n                process();\r\n            }\r\n        }\r\n\r\n        function success() {\r\n            cleanup();\r\n            resolve({\r\n                calls: index,\r\n                reads: reads,\r\n                length: length,\r\n                duration: Date.now() - start\r\n            });\r\n        }\r\n\r\n        function fail(error) {\r\n            stop = true;\r\n            cleanup();\r\n            reject(error);\r\n        }\r\n\r\n        function cleanup() {\r\n            stream.removeListener('readable', onReadable);\r\n            stream.removeListener('close', onClose);\r\n            stream.removeListener('error', onError);\r\n            stream.removeListener('end', onEnd);\r\n        }\r\n    });\r\n}\r\n\r\nmodule.exports = function (config) {\r\n    return function (stream, receiver, closable, readSize) {\r\n        if (closable && typeof closable === 'object') {\r\n            return read.call(this, stream, receiver, closable.closable, closable.readSize, config);\r\n        } else {\r\n            return read.call(this, stream, receiver, closable, readSize, config);\r\n        }\r\n    };\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/spex/lib/ext/stream/read.js\n// module id = 223\n// module chunks = 0","'use strict';\r\n\r\nvar $npm = {\r\n    utils: require('./utils'),\r\n    batch: require('./ext/batch'),\r\n    page: require('./ext/page'),\r\n    sequence: require('./ext/sequence'),\r\n    stream: require('./ext/stream'),\r\n    errors: require('./errors')\r\n};\r\n\r\n/**\r\n * @module spex\r\n * @summary Specialized Promise Extensions\r\n * @author Vitaly Tomilov\r\n *\r\n * @description\r\n * Attaches to an external promise library and provides additional methods built solely\r\n * on the basic promise operations:\r\n *  - construct a new promise with a callback function\r\n *  - resolve a promise with some result data\r\n *  - reject a promise with a reason\r\n *\r\n * ### usage\r\n * For any third-party promise library:\r\n * ```js\r\n * var promise = require('bluebird');\r\n * var spex = require('spex')(promise);\r\n * ```\r\n * For ES6 promises:\r\n * ```js\r\n * var spex = require('spex')(Promise);\r\n * ```\r\n *\r\n * @param {Object|Function} promiseLib\r\n * Instance of a promise library to be used by this module.\r\n *\r\n * Some implementations use `Promise` constructor to create a new promise, while\r\n * others use the module's function for it. Both types are supported the same.\r\n *\r\n * Alternatively, an object of type {@link PromiseAdapter} can be passed in, which provides\r\n * compatibility with any promise library outside of the standard.\r\n *\r\n * Passing in a promise library that cannot be recognized will throw\r\n * `Invalid promise library specified.`\r\n *\r\n * @returns {Object}\r\n * Namespace with all supported methods.\r\n *\r\n * @see {@link PromiseAdapter}, {@link batch}, {@link page}, {@link sequence}, {@link stream}\r\n */\r\nfunction main(promiseLib) {\r\n\r\n    var spex = {}, // library instance;\r\n        promise = parsePromiseLib(promiseLib); // promise library parsing;\r\n\r\n    var config = {\r\n        spex: spex,\r\n        promise: promise,\r\n        utils: $npm.utils(promise)\r\n    };\r\n\r\n    spex.errors = $npm.errors;\r\n    spex.batch = $npm.batch(config);\r\n    spex.page = $npm.page(config);\r\n    spex.sequence = $npm.sequence(config);\r\n    spex.stream = $npm.stream(config);\r\n\r\n    config.utils.extend(spex, '$p', promise);\r\n\r\n    Object.freeze(spex);\r\n\r\n    return spex;\r\n}\r\n\r\n//////////////////////////////////////////\r\n// Parses and validates a promise library;\r\nfunction parsePromiseLib(lib) {\r\n    if (lib) {\r\n        var promise;\r\n        if (lib instanceof main.PromiseAdapter) {\r\n            promise = function (func) {\r\n                return lib.create(func);\r\n            };\r\n            promise.resolve = lib.resolve;\r\n            promise.reject = lib.reject;\r\n            return promise;\r\n        }\r\n        var t = typeof lib;\r\n        if (t === 'function' || t === 'object') {\r\n            var root = typeof lib.Promise === 'function' ? lib.Promise : lib;\r\n            promise = function (func) {\r\n                return new root(func);\r\n            };\r\n            promise.resolve = root.resolve;\r\n            promise.reject = root.reject;\r\n            if (typeof promise.resolve === 'function' && typeof promise.reject === 'function') {\r\n                return promise;\r\n            }\r\n        }\r\n    }\r\n    throw new TypeError(\"Invalid promise library specified.\");\r\n}\r\n\r\nmain.PromiseAdapter = require('./adapter');\r\nObject.freeze(main);\r\n\r\nmodule.exports = main;\r\n\r\n/**\r\n * @external Error\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error\r\n */\r\n\r\n/**\r\n * @external TypeError\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError\r\n */\r\n\r\n/**\r\n * @external Promise\r\n * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Promise\r\n */\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/spex/lib/index.js\n// module id = 224\n// module chunks = 0","'use strict';\r\n\r\nvar stat = require('./static');\r\n\r\nmodule.exports = function ($p) {\r\n\r\n    var exp = {\r\n        formatError: stat.formatError,\r\n        isPromise: stat.isPromise,\r\n        isReadableStream: stat.isReadableStream,\r\n        messageGap: stat.messageGap,\r\n        extend: stat.extend,\r\n        resolve: resolve,\r\n        wrap: wrap\r\n    };\r\n\r\n    return exp;\r\n\r\n    //////////////////////////////////////////\r\n    // Checks if the function is a generator,\r\n    // and if so - wraps it up into a promise;\r\n    function wrap(func) {\r\n        if (typeof func === 'function') {\r\n            if (func.constructor.name === 'GeneratorFunction') {\r\n                return asyncAdapter(func);\r\n            }\r\n            return func;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /////////////////////////////////////////////////////\r\n    // Resolves a mixed value into the actual value,\r\n    // consistent with the way mixed values are defined:\r\n    // https://github.com/vitaly-t/spex/wiki/Mixed-Values\r\n    function resolve(value, params, onSuccess, onError) {\r\n\r\n        var self = this,\r\n            delayed = false;\r\n\r\n        function loop() {\r\n            while (typeof value === 'function') {\r\n                if (value.constructor.name === 'GeneratorFunction') {\r\n                    value = asyncAdapter(value);\r\n                }\r\n                try {\r\n                    value = params ? value.apply(self, params) : value.call(self);\r\n                } catch (e) {\r\n                    onError(e, false); // false means 'threw an error'\r\n                    return;\r\n                }\r\n            }\r\n            if (exp.isPromise(value)) {\r\n                value\r\n                    .then(function (data) {\r\n                        delayed = true;\r\n                        value = data;\r\n                        loop();\r\n                        return null; // this dummy return is just to prevent Bluebird warnings;\r\n                    })\r\n                    .catch(function (error) {\r\n                        onError(error, true); // true means 'rejected'\r\n                    });\r\n            } else {\r\n                onSuccess(value, delayed);\r\n            }\r\n        }\r\n\r\n        loop();\r\n    }\r\n\r\n    // Generator-to-Promise adapter;\r\n    // Based on: https://www.promisejs.org/generators/#both\r\n    function asyncAdapter(generator) {\r\n        return function () {\r\n            var g = generator.apply(this, arguments);\r\n\r\n            function handle(result) {\r\n                if (result.done) {\r\n                    return $p.resolve(result.value);\r\n                }\r\n                return $p.resolve(result.value)\r\n                    .then(function (res) {\r\n                        return handle(g.next(res));\r\n                    }, function (err) {\r\n                        return handle(g.throw(err));\r\n                    });\r\n            }\r\n\r\n            return handle(g.next());\r\n        }\r\n    }\r\n\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/spex/lib/utils/index.js\n// module id = 225\n// module chunks = 0","//filter will reemit the data if cb(err,pass) pass is truthy\n\n// reduce is more tricky\n// maybe we want to group the reductions or emit progress updates occasionally\n// the most basic reduce just emits one 'data' event after it has recieved 'end'\n\n\nvar through = require('through')\nvar Decoder = require('string_decoder').StringDecoder\n\nmodule.exports = split\n\n//TODO pass in a function to map across the lines.\n\nfunction split (matcher, mapper, options) {\n  var decoder = new Decoder()\n  var soFar = ''\n  var maxLength = options && options.maxLength;\n  var trailing = options && options.trailing === false ? false : true\n  if('function' === typeof matcher)\n    mapper = matcher, matcher = null\n  if (!matcher)\n    matcher = /\\r?\\n/\n\n  function emit(stream, piece) {\n    if(mapper) {\n      try {\n        piece = mapper(piece)\n      }\n      catch (err) {\n        return stream.emit('error', err)\n      }\n      if('undefined' !== typeof piece)\n        stream.queue(piece)\n    }\n    else\n      stream.queue(piece)\n  }\n\n  function next (stream, buffer) {\n    var pieces = ((soFar != null ? soFar : '') + buffer).split(matcher)\n    soFar = pieces.pop()\n\n    if (maxLength && soFar.length > maxLength)\n      stream.emit('error', new Error('maximum buffer reached'))\n\n    for (var i = 0; i < pieces.length; i++) {\n      var piece = pieces[i]\n      emit(stream, piece)\n    }\n  }\n\n  return through(function (b) {\n    next(this, decoder.write(b))\n  },\n  function () {\n    if(decoder.end)\n      next(this, decoder.end())\n    if(trailing && soFar != null)\n      emit(this, soFar)\n    this.queue(null)\n  })\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/split/index.js\n// module id = 226\n// module chunks = 0","module.exports = require('./lib/SqlString');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/sqlstring/index.js\n// module id = 227\n// module chunks = 0","var SqlString  = exports;\nvar charsRegex = /[\\0\\b\\t\\n\\r\\x1a\\\"\\'\\\\]/g; // eslint-disable-line no-control-regex\nvar charsMap   = {\n  '\\0': '\\\\0',\n  '\\b': '\\\\b',\n  '\\t': '\\\\t',\n  '\\n': '\\\\n',\n  '\\r': '\\\\r',\n  '\\x1a': '\\\\Z',\n  '\"': '\\\\\"',\n  '\\'': '\\\\\\'',\n  '\\\\': '\\\\\\\\'\n};\n\nSqlString.escapeId = function escapeId(val, forbidQualified) {\n  if (Array.isArray(val)) {\n    var sql = '';\n\n    for (var i = 0; i < val.length; i++) {\n      sql += (i === 0 ? '' : ', ') + SqlString.escapeId(val[i], forbidQualified);\n    }\n\n    return sql;\n  }\n\n  if (forbidQualified) {\n    return '`' + String(val).replace(/`/g, '``') + '`';\n  }\n\n  return '`' + String(val).replace(/`/g, '``').replace(/\\./g, '`.`') + '`';\n};\n\nSqlString.escape = function escape(val, stringifyObjects, timeZone) {\n  if (val === undefined || val === null) {\n    return 'NULL';\n  }\n\n  switch (typeof val) {\n    case 'boolean': return (val) ? 'true' : 'false';\n    case 'number': return val+'';\n    case 'object':\n      if (val instanceof Date) {\n        return SqlString.dateToString(val, timeZone || 'local');\n      } else if (Array.isArray(val)) {\n        return SqlString.arrayToList(val, timeZone);\n      } else if (Buffer.isBuffer(val)) {\n        return SqlString.bufferToString(val);\n      } else if (stringifyObjects) {\n        return escapeString(val.toString());\n      } else {\n        return SqlString.objectToValues(val, timeZone);\n      }\n    default: return escapeString(val);\n  }\n};\n\nSqlString.arrayToList = function arrayToList(array, timeZone) {\n  var sql = '';\n\n  for (var i = 0; i < array.length; i++) {\n    var val = array[i];\n\n    if (Array.isArray(val)) {\n      sql += (i === 0 ? '' : ', ') + '(' + SqlString.arrayToList(val, timeZone) + ')';\n    } else {\n      sql += (i === 0 ? '' : ', ') + SqlString.escape(val, true, timeZone);\n    }\n  }\n\n  return sql;\n};\n\nSqlString.format = function format(sql, values, stringifyObjects, timeZone) {\n  if (values == null) {\n    return sql;\n  }\n\n  if (!(values instanceof Array || Array.isArray(values))) {\n    values = [values];\n  }\n\n  var chunkIndex        = 0;\n  var placeholdersRegex = /\\?\\??/g;\n  var result            = '';\n  var valuesIndex       = 0;\n  var match;\n\n  while (valuesIndex < values.length && (match = placeholdersRegex.exec(sql))) {\n    var value = match[0] === '??'\n        ? SqlString.escapeId(values[valuesIndex])\n        : SqlString.escape(values[valuesIndex], stringifyObjects, timeZone);\n\n    result += sql.slice(chunkIndex, match.index) + value;\n    chunkIndex = placeholdersRegex.lastIndex;\n    valuesIndex++;\n  }\n\n  if (chunkIndex === 0) {\n    // Nothing was replaced\n    return sql;\n  }\n\n  if (chunkIndex < sql.length) {\n    return result + sql.slice(chunkIndex);\n  }\n\n  return result;\n};\n\nSqlString.dateToString = function dateToString(date, timeZone) {\n  var dt = new Date(date);\n\n  if (isNaN(dt.getTime())) {\n    return 'NULL';\n  }\n\n  var year;\n  var month;\n  var day;\n  var hour;\n  var minute;\n  var second;\n  var millisecond;\n\n  if (timeZone === 'local') {\n    year        = dt.getFullYear();\n    month       = dt.getMonth() + 1;\n    day         = dt.getDate();\n    hour        = dt.getHours();\n    minute      = dt.getMinutes();\n    second      = dt.getSeconds();\n    millisecond = dt.getMilliseconds();\n  } else {\n    var tz = convertTimezone(timeZone);\n\n    if (tz !== false && tz !== 0) {\n      dt.setTime(dt.getTime() + (tz * 60000));\n    }\n\n    year       = dt.getUTCFullYear();\n    month       = dt.getUTCMonth() + 1;\n    day         = dt.getUTCDate();\n    hour        = dt.getUTCHours();\n    minute      = dt.getUTCMinutes();\n    second      = dt.getUTCSeconds();\n    millisecond = dt.getUTCMilliseconds();\n  }\n\n  // YYYY-MM-DD HH:mm:ss.mmm\n  var str = zeroPad(year, 4) + '-' + zeroPad(month, 2) + '-' + zeroPad(day, 2) + ' ' +\n    zeroPad(hour, 2) + ':' + zeroPad(minute, 2) + ':' + zeroPad(second, 2) + '.' +\n    zeroPad(millisecond, 3);\n\n  return escapeString(str);\n};\n\nSqlString.bufferToString = function bufferToString(buffer) {\n  return \"X\" + escapeString(buffer.toString('hex'));\n};\n\nSqlString.objectToValues = function objectToValues(object, timeZone) {\n  var sql = '';\n\n  for (var key in object) {\n    var val = object[key];\n\n    if (typeof val === 'function') {\n      continue;\n    }\n\n    sql += (sql.length === 0 ? '' : ', ') + SqlString.escapeId(key) + ' = ' + SqlString.escape(val, true, timeZone);\n  }\n\n  return sql;\n};\n\nfunction escapeString(val) {\n  var chunkIndex = charsRegex.lastIndex = 0;\n  var escapedVal = '';\n  var match;\n\n  while ((match = charsRegex.exec(val))) {\n    escapedVal += val.slice(chunkIndex, match.index) + charsMap[match[0]];\n    chunkIndex = charsRegex.lastIndex;\n  }\n\n  if (chunkIndex === 0) {\n    // Nothing was escaped\n    return \"'\" + val + \"'\";\n  }\n\n  if (chunkIndex < val.length) {\n    return \"'\" + escapedVal + val.slice(chunkIndex) + \"'\";\n  }\n\n  return \"'\" + escapedVal + \"'\";\n}\n\nfunction zeroPad(number, length) {\n  number = number.toString();\n  while (number.length < length) {\n    number = '0' + number;\n  }\n\n  return number;\n}\n\nfunction convertTimezone(tz) {\n  if (tz === 'Z') {\n    return 0;\n  }\n\n  var m = tz.match(/([\\+\\-\\s])(\\d\\d):?(\\d\\d)?/);\n  if (m) {\n    return (m[1] == '-' ? -1 : 1) * (parseInt(m[2], 10) + ((m[3] ? parseInt(m[3], 10) : 0) / 60)) * 60;\n  }\n  return false;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/sqlstring/lib/SqlString.js\n// module id = 228\n// module chunks = 0","var Stream = require('stream')\n\n// through\n//\n// a stream that does nothing but re-emit the input.\n// useful for aggregating a series of changing but not ending streams into one stream)\n\nexports = module.exports = through\nthrough.through = through\n\n//create a readable writable stream.\n\nfunction through (write, end, opts) {\n  write = write || function (data) { this.queue(data) }\n  end = end || function () { this.queue(null) }\n\n  var ended = false, destroyed = false, buffer = [], _ended = false\n  var stream = new Stream()\n  stream.readable = stream.writable = true\n  stream.paused = false\n\n//  stream.autoPause   = !(opts && opts.autoPause   === false)\n  stream.autoDestroy = !(opts && opts.autoDestroy === false)\n\n  stream.write = function (data) {\n    write.call(this, data)\n    return !stream.paused\n  }\n\n  function drain() {\n    while(buffer.length && !stream.paused) {\n      var data = buffer.shift()\n      if(null === data)\n        return stream.emit('end')\n      else\n        stream.emit('data', data)\n    }\n  }\n\n  stream.queue = stream.push = function (data) {\n//    console.error(ended)\n    if(_ended) return stream\n    if(data === null) _ended = true\n    buffer.push(data)\n    drain()\n    return stream\n  }\n\n  //this will be registered as the first 'end' listener\n  //must call destroy next tick, to make sure we're after any\n  //stream piped from here.\n  //this is only a problem if end is not emitted synchronously.\n  //a nicer way to do this is to make sure this is the last listener for 'end'\n\n  stream.on('end', function () {\n    stream.readable = false\n    if(!stream.writable && stream.autoDestroy)\n      process.nextTick(function () {\n        stream.destroy()\n      })\n  })\n\n  function _end () {\n    stream.writable = false\n    end.call(stream)\n    if(!stream.readable && stream.autoDestroy)\n      stream.destroy()\n  }\n\n  stream.end = function (data) {\n    if(ended) return\n    ended = true\n    if(arguments.length) stream.write(data)\n    _end() // will emit or queue\n    return stream\n  }\n\n  stream.destroy = function () {\n    if(destroyed) return\n    destroyed = true\n    ended = true\n    buffer.length = 0\n    stream.writable = stream.readable = false\n    stream.emit('close')\n    return stream\n  }\n\n  stream.pause = function () {\n    if(stream.paused) return\n    stream.paused = true\n    return stream\n  }\n\n  stream.resume = function () {\n    if(stream.paused) {\n      stream.paused = false\n      stream.emit('resume')\n    }\n    drain()\n    //may have become paused again,\n    //as drain emits 'data'.\n    if(!stream.paused)\n      stream.emit('drain')\n    return stream\n  }\n  return stream\n}\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/through/index.js\n// module id = 229\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 230\n// module chunks = 0","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend(target) {\n    for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/xtend/mutable.js\n// module id = 231\n// module chunks = 0","module.exports = require(\"child_process\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"child_process\"\n// module id = 232\n// module chunks = 0","module.exports = require(\"dns\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"dns\"\n// module id = 233\n// module chunks = 0","module.exports = require(\"string_decoder\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"string_decoder\"\n// module id = 234\n// module chunks = 0","module.exports = require(\"timers\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"timers\"\n// module id = 235\n// module chunks = 0","import { configService } from './configService';\nimport { Cycle } from './cycle';\n\nvar program = require('commander');\nprogram\n  .option('-c, --connection <Connection>', 'The connection specified in the dbconfig.json file.')\n  .option('-t, --tablename <Table Name>', 'Name of the table or view to model')\n  .option('-n, --namespace <Namespace>', 'The namespace for your table\\'s class')\n  .option('-a, --tablealias <Alias>', 'Alias a table; i.e. User instead of t_user')\n  .option('-u, --author <Author>', 'Software author. Can be defaulted in dbconfig.json')\n.parse(process.argv);\n\nprogram.datecreated = new Date().toLocaleString();\n\nlet c = new Cycle(new configService(program));\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts"],"sourceRoot":""}